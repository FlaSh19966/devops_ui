{"remainingRequest":"/home/vimalesh/Elixir/chatbot-portal/node_modules/babel-loader/lib/index.js!/home/vimalesh/Elixir/chatbot-portal/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/vimalesh/Elixir/chatbot-portal/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/vimalesh/Elixir/chatbot-portal/src/portal/analytics/tags_input/VoerroTagsInput.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/vimalesh/Elixir/chatbot-portal/src/portal/analytics/tags_input/VoerroTagsInput.vue","mtime":1643027096188},{"path":"/home/vimalesh/Elixir/chatbot-portal/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vimalesh/Elixir/chatbot-portal/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/vimalesh/Elixir/chatbot-portal/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vimalesh/Elixir/chatbot-portal/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc2xpY2UiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5zcGxpY2UiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5udW1iZXIuY29uc3RydWN0b3IiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMucmVnZXhwLmV4ZWMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAudG8tc3RyaW5nIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLmVuZHMtd2l0aCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5yZXBsYWNlIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnNlYXJjaCI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy50cmltIjsKaW1wb3J0IF9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyIGZyb20gIi9ob21lL3ZpbWFsZXNoL0VsaXhpci9jaGF0Ym90LXBvcnRhbC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY3JlYXRlRm9yT2ZJdGVyYXRvckhlbHBlciI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCB7IHZvaWNlcmVjb3JkZXIsIHN0YXJ0X3ZvaWNlX2NvbW11bmljYXRpb24sIGZvcmVpZ254Y2hhbmdlX2N1c3RvbSwgZ2VuZXJhdGVfdGltZSB9IGZyb20gJ0AvcG9ydGFsL21peGlucyc7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiVm9lcnJvVGFnc0lucHV0IiwKICBwcm9wczogewogICAgZWxlbWVudElkOiBTdHJpbmcsCiAgICBleGlzdGluZ1RhZ3M6IHsKICAgICAgdHlwZTogQXJyYXksCiAgICAgIGRlZmF1bHQ6IGZ1bmN0aW9uIF9kZWZhdWx0KCkgewogICAgICAgIHJldHVybiBbXTsKICAgICAgfQogICAgfSwKICAgIHZhbHVlOiB7CiAgICAgIHR5cGU6IEFycmF5LAogICAgICBkZWZhdWx0OiBmdW5jdGlvbiBfZGVmYXVsdCgpIHsKICAgICAgICByZXR1cm4gW107CiAgICAgIH0KICAgIH0sCiAgICB0eXBlYWhlYWQ6IHsKICAgICAgdHlwZTogQm9vbGVhbiwKICAgICAgZGVmYXVsdDogZmFsc2UKICAgIH0sCiAgICB0eXBlYWhlYWRTdHlsZTogewogICAgICB0eXBlOiBTdHJpbmcsCiAgICAgIGRlZmF1bHQ6ICdiYWRnZXMnCiAgICB9LAogICAgdHlwZWFoZWFkQWN0aXZhdGlvblRocmVzaG9sZDogewogICAgICB0eXBlOiBOdW1iZXIsCiAgICAgIGRlZmF1bHQ6IDEKICAgIH0sCiAgICB0eXBlYWhlYWRNYXhSZXN1bHRzOiB7CiAgICAgIHR5cGU6IE51bWJlciwKICAgICAgZGVmYXVsdDogMAogICAgfSwKICAgIHR5cGVhaGVhZEFsd2F5c1Nob3c6IHsKICAgICAgdHlwZTogQm9vbGVhbiwKICAgICAgZGVmYXVsdDogZmFsc2UKICAgIH0sCiAgICB0eXBlYWhlYWRTaG93T25Gb2N1czogewogICAgICB0eXBlOiBCb29sZWFuLAogICAgICBkZWZhdWx0OiB0cnVlCiAgICB9LAogICAgdHlwZWFoZWFkSGlkZURpc2NhcmQ6IHsKICAgICAgdHlwZTogQm9vbGVhbiwKICAgICAgZGVmYXVsdDogZmFsc2UKICAgIH0sCiAgICB0eXBlYWhlYWRVcmw6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICBkZWZhdWx0OiAnJwogICAgfSwKICAgIHBsYWNlaG9sZGVyOiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgZGVmYXVsdDogJycKICAgIH0sCiAgICAvLyBkaXNjYXJkU2VhcmNoVGV4dDogewogICAgLy8gICAgIHR5cGU6IFN0cmluZywKICAgIC8vICAgICBkZWZhdWx0OiB0aGlzLm1ldHJpY3Nfc3ZnICsgYCB0byBuYXZpZ2F0ZSAgIGAgKyB0aGlzLm1ldHJpY3Nfc3ZnICsgYCB0byBzZWxlY3QgYCArIHRoaXMubWV0cmljc19zdmcgKyBgdG8gZGlzbWlzc2AKICAgIC8vIH0sCiAgICBsaW1pdDogewogICAgICB0eXBlOiBOdW1iZXIsCiAgICAgIGRlZmF1bHQ6IDAKICAgIH0sCiAgICBoaWRlSW5wdXRPbkxpbWl0OiB7CiAgICAgIHR5cGU6IEJvb2xlYW4sCiAgICAgIGRlZmF1bHQ6IGZhbHNlCiAgICB9LAogICAgb25seUV4aXN0aW5nVGFnczogewogICAgICB0eXBlOiBCb29sZWFuLAogICAgICBkZWZhdWx0OiBmYWxzZQogICAgfSwKICAgIGRlbGV0ZU9uQmFja3NwYWNlOiB7CiAgICAgIHR5cGU6IEJvb2xlYW4sCiAgICAgIGRlZmF1bHQ6IHRydWUKICAgIH0sCiAgICBhbGxvd0R1cGxpY2F0ZXM6IHsKICAgICAgdHlwZTogQm9vbGVhbiwKICAgICAgZGVmYXVsdDogdHJ1ZQogICAgfSwKICAgIHZhbGlkYXRlOiB7CiAgICAgIHR5cGU6IEZ1bmN0aW9uLAogICAgICBkZWZhdWx0OiBmdW5jdGlvbiBfZGVmYXVsdCgpIHsKICAgICAgICByZXR1cm4gdHJ1ZTsKICAgICAgfQogICAgfSwKICAgIGFkZFRhZ3NPbkNvbW1hOiB7CiAgICAgIHR5cGU6IEJvb2xlYW4sCiAgICAgIGRlZmF1bHQ6IGZhbHNlCiAgICB9LAogICAgYWRkVGFnc09uU3BhY2U6IHsKICAgICAgdHlwZTogQm9vbGVhbiwKICAgICAgZGVmYXVsdDogZmFsc2UKICAgIH0sCiAgICBhZGRUYWdzT25CbHVyOiB7CiAgICAgIHR5cGU6IEJvb2xlYW4sCiAgICAgIGRlZmF1bHQ6IGZhbHNlCiAgICB9LAogICAgd3JhcHBlckNsYXNzOiB7CiAgICAgIHR5cGU6IFN0cmluZywKICAgICAgZGVmYXVsdDogJ3RhZ3MtaW5wdXQtd3JhcHBlci1kZWZhdWx0JwogICAgfSwKICAgIHNvcnRTZWFyY2hSZXN1bHRzOiB7CiAgICAgIHR5cGU6IEJvb2xlYW4sCiAgICAgIGRlZmF1bHQ6IGZhbHNlCiAgICB9LAogICAgY2FzZVNlbnNpdGl2ZVRhZ3M6IHsKICAgICAgdHlwZTogQm9vbGVhbiwKICAgICAgZGVmYXVsdDogZmFsc2UKICAgIH0sCiAgICBiZWZvcmVBZGRpbmdUYWc6IHsKICAgICAgdHlwZTogRnVuY3Rpb24sCiAgICAgIGRlZmF1bHQ6IGZ1bmN0aW9uIF9kZWZhdWx0KCkgewogICAgICAgIHJldHVybiB0cnVlOwogICAgICB9CiAgICB9LAogICAgYmVmb3JlUmVtb3ZpbmdUYWc6IHsKICAgICAgdHlwZTogRnVuY3Rpb24sCiAgICAgIGRlZmF1bHQ6IGZ1bmN0aW9uIF9kZWZhdWx0KCkgewogICAgICAgIHJldHVybiB0cnVlOwogICAgICB9CiAgICB9CiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgYmFkZ2VJZDogMCwKICAgICAgdGFnczogW10sCiAgICAgIGlucHV0OiAnJywKICAgICAgb2xkSW5wdXQ6ICcnLAogICAgICBoaWRkZW5JbnB1dDogJycsCiAgICAgIHNlYXJjaFJlc3VsdHM6IFtdLAogICAgICBzZWFyY2hTZWxlY3Rpb246IDAsCiAgICAgIHNlbGVjdGVkVGFnOiAtMSwKICAgICAgaXNBY3RpdmU6IGZhbHNlLAogICAgICBhdHRyaWJ1dGVfc3ZnOiAnPHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIxMC40IiBoZWlnaHQ9IjEwLjgiIHZpZXdCb3g9IjAgMCAxMjQwLjAwMDAwMCAxMjgwLjAwMDAwMCIgcHJlc2VydmVBc3BlY3RSYXRpbz0ieE1pZFlNaWQgbWVldCIgaWQ9InN2Z2NvbnRlbnQiIG92ZXJmbG93PSJ2aXNpYmxlIiB4PSI2MzIuMzk5OTk5OTk5OTk5OSIgeT0iNjUyLjgiPjxtZXRhZGF0YT5DcmVhdGVkIGJ5IHBvdHJhY2UgMS4xNSwgd3JpdHRlbiBieSBQZXRlciBTZWxpbmdlciAyMDAxLTIwMTc8L21ldGFkYXRhPjxnIGNsYXNzPSJsYXllciIgc3R5bGU9InBvaW50ZXItZXZlbnRzOmFsbCI+PHRpdGxlIHN0eWxlPSJwb2ludGVyLWV2ZW50czppbmhlcml0Ij5MYXllciAxPC90aXRsZT48ZyB0cmFuc2Zvcm09InRyYW5zbGF0ZSgwIDEyODApIHNjYWxlKDAuMSAtMC4xKSIgZmlsbD0iI2U5MWU2MyIgc3Ryb2tlPSJub25lIiBpZD0ic3ZnXzEiIGZpbGwtb3BhY2l0eT0iMSI+PHBhdGggZD0iTTU3MzYsMTIxMzJDNTU1MCwxMTc2NSA0OTMzLDEwNTU0IDQzNjUsOTQ0MEMzNzk3LDgzMjYgMjkwOCw2NTgzIDIzOTAsNTU2NUMxODcxLDQ1NDggMTEyMSwzMDc2IDcyMywyMjk2TDAsODc3TDAsNzc5QzAsNjk1IDIsNjgxIDE4LDY3NkMyNyw2NzMgMjUzLDYyMiA1MjAsNTYxQzc4Nyw1MDEgMTM4MywzNjUgMTg0NSwyNjBDMjMwNywxNTUgMjc1Myw1MyAyODM3LDM0QzI5MzYsMTIgMzAxNSwwIDMwNjIsMEwzMTM1LDBMMzY2NCwxMjY1TDQxOTMsMjUzMEw2MTM1LDI1MzBMODA3NywyNTMwTDg2MTUsMTQwOEM4OTExLDc5MCA5MTg0LDIyMSA5MjIxLDE0M0w5Mjg5LDJMOTMyNywxMEM5MzYxLDE4IDExNTA4LDQ4NSAxMjE1MCw2MjRMMTIzOTUsNjc3TDEyMzk4LDc3NkwxMjQwMSw4NzZMMTIxMDIsMTQ2MEMxMTkzNywxNzgyIDExNTI5LDI1ODAgMTExOTUsMzIzNUMxMDg2MSwzODkwIDEwMzI1LDQ5MzggMTAwMDUsNTU2NUM5MjIyLDcwOTcgNzg4OSw5NzA3IDcxNzMsMTExMTBDNjg1MSwxMTc0MCA2NTI1LDEyMzc4IDY0NDgsMTI1MjhMNjMwOSwxMjgwMEw2MTkyLDEyODAwTDYwNzUsMTI3OTlMNTczNiwxMjEzMnpNNjUzMCw2MTIwQzY3NDYsNTY0NCA2OTI1LDUyNDkgNjkyNyw1MjQzQzY5MzEsNTIzMyA2NzY3LDUyMzAgNjEyNiw1MjMwQzU2ODMsNTIzMCA1MzIwLDUyMzQgNTMyMCw1MjM4QzUzMjAsNTI0MiA1MzQzLDUyOTcgNTM3MSw1MzYwQzUzOTksNTQyMyA1NTcyLDU4MTcgNTc1Nyw2MjM1QzU5NDEsNjY1MyA2MDk3LDcwMDQgNjEwMiw3MDE0QzYxMTIsNzAzMyA2MTEzLDcwMzIgNjEyNSw3MDA5QzYxMzIsNjk5NiA2MzE0LDY1OTYgNjUzMCw2MTIweiIgaWQ9InN2Z18yIiBmaWxsPSIjY2NjY2NjIj48L3BhdGg+PC9nPjwvZz48L3N2Zz4nLAogICAgICB2YWx1ZV9zdmc6ICc8c3ZnIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgd2lkdGg9IjEwLjQiIGhlaWdodD0iMTAuOCIgdmlld0JveD0iMCAwIDEyODAuMDAwMDAwIDEyODAuMDAwMDAwIiBwcmVzZXJ2ZUFzcGVjdFJhdGlvPSJ4TWlkWU1pZCBtZWV0IiBpZD0ic3ZnY29udGVudCIgb3ZlcmZsb3c9InZpc2libGUiIHg9IjY1Mi44IiB5PSI2NTIuOCI+PG1ldGFkYXRhPkNyZWF0ZWQgYnkgcG90cmFjZSAxLjE1LCB3cml0dGVuIGJ5IFBldGVyIFNlbGluZ2VyIDIwMDEtMjAxNzwvbWV0YWRhdGE+PGcgY2xhc3M9ImxheWVyIiBzdHlsZT0icG9pbnRlci1ldmVudHM6YWxsIj48dGl0bGUgc3R5bGU9InBvaW50ZXItZXZlbnRzOmluaGVyaXQiPkxheWVyIDE8L3RpdGxlPjxnIHRyYW5zZm9ybT0idHJhbnNsYXRlKDAgMTI4MCkgc2NhbGUoMC4xIC0wLjEpIiBmaWxsPSIjZTkxZTYzIiBzdHJva2U9Im5vbmUiIGlkPSJzdmdfMSIgZmlsbC1vcGFjaXR5PSIxIj48cGF0aCBkPSJNMTA3NSwxMjc5M0M5NDEsMTI3NzYgNzY1LDEyNzIwIDY1MSwxMjY1OUMzMjYsMTI0ODQgMTEwLDEyMTk3IDI0LDExODI1QzYsMTE3NDggNSwxMTY1OCA1LDk3NDVDNSw3ODMyIDYsNzc0MiAyNCw3NjY1QzgyLDc0MTMgMTg2LDcyMjMgMzYwLDcwNTBDNTQ4LDY4NjMgNzYzLDY3NTIgMTAyOCw2NzA2QzExMTAsNjY5MiAxMzI5LDY2OTAgMzA1NSw2NjkwQzUxNjksNjY5MCA1MDY1LDY2ODcgNTI1NSw2NzQ3QzU2OTQsNjg4NiA2MDE2LDcyNTggNjA5NCw3NzE4QzYxMDgsNzc5OSA2MTEwLDgwMzAgNjExMCw5NzQ1QzYxMTAsMTE0NzEgNjEwOCwxMTY5MCA2MDk0LDExNzcyQzYwNDgsMTIwMzcgNTkzNywxMjI1NCA1NzUwLDEyNDQwQzU1ODIsMTI2MDkgNTQxMiwxMjcwNSA1MTYwLDEyNzcyTDUwNzUsMTI3OTVMMzA5MCwxMjc5NkMxOTk4LDEyNzk3IDEwOTIsMTI3OTUgMTA3NSwxMjc5M3oiIGlkPSJzdmdfMiIgZmlsbD0iI2NjY2NjYyI+PC9wYXRoPjxwYXRoIGQ9Ik03NzM1LDEyNzg1QzczNDIsMTI3MjQgNzAwMywxMjQ4MSA2ODI5LDEyMTM4QzY3NTgsMTE5OTYgNjcyMSwxMTg3OCA2NzAwLDExNzE3QzY2OTQsMTE2NjYgNjY5MCwxMDk3NyA2NjkwLDk3NDVDNjY5MCw4NTEzIDY2OTQsNzgyNCA2NzAwLDc3NzNDNjc3MSw3MjM1IDcxNDcsNjgyNyA3NjgwLDY3MTNDNzc2MSw2Njk2IDc4NjgsNjY5NSA5NzQ1LDY2OTVDMTE2MjIsNjY5NSAxMTcyOSw2Njk2IDExODEwLDY3MTNDMTIwNjAsNjc2NyAxMjI3Miw2ODgxIDEyNDQ0LDcwNTRDMTI2MjksNzI0MiAxMjc0NCw3NDcyIDEyNzg1LDc3NDBDMTI4MDcsNzg4MiAxMjgwNywxMTYwOCAxMjc4NSwxMTc1MEMxMjc1NiwxMTk0NCAxMjcwMCwxMjA4OSAxMjU5MywxMjI1MkMxMjQzOCwxMjQ5MCAxMjE4NywxMjY3NSAxMTkxOSwxMjc1MEMxMTczNiwxMjgwMSAxMTc5NywxMjgwMCA5NzM1LDEyNzk5QzgyNDYsMTI3OTggNzc5NywxMjc5NSA3NzM1LDEyNzg1eiIgaWQ9InN2Z18zIiBmaWxsPSIjY2NjY2NjIj48L3BhdGg+PHBhdGggZD0iTTEwNzAsNjA5OUM3OTksNjA2NCA1NDgsNTk0MCAzNTYsNTc0NkMxNzEsNTU1OCA1Niw1MzI4IDE1LDUwNjBDLTcsNDkxOCAtNywxMTkyIDE1LDEwNTBDNDQsODU2IDEwMCw3MTEgMjA3LDU0OEMzOTcsMjU3IDY5NCw2OSAxMDUwLDE1QzExOTIsLTcgNDkxOCwtNyA1MDYwLDE1QzUxOTYsMzYgNTI5MCw2NCA1NDA3LDEyMEM1NzU4LDI4NyA1OTkyLDU4MiA2MDg2LDk4MEM2MTAzLDEwNTAgNjEwNCwxMTczIDYxMDgsMjk5MEM2MTExLDUwMDIgNjExMSw1MDI3IDYwNjksNTE5MEM1OTY5LDU1ODQgNTY2Nyw1OTExIDUyODAsNjA0M0M1MDg2LDYxMDkgNTI2MCw2MTA0IDMwOTUsNjEwNkMyMDE3LDYxMDcgMTEwNiw2MTA0IDEwNzAsNjA5OXoiIGlkPSJzdmdfNCIgZmlsbD0iI2NjY2NjYyI+PC9wYXRoPjxwYXRoIGQ9Ik03NzYwLDYwOTlDNzMxMCw2MDQxIDY5MjYsNTczNSA2NzY3LDUzMDhDNjczNyw1MjMwIDY3MTQsNTEyOSA2NzAwLDUwMjdDNjY5NCw0OTc2IDY2OTAsNDI4NyA2NjkwLDMwNTVDNjY5MCwxODIzIDY2OTQsMTEzNCA2NzAwLDEwODNDNjczOCw3OTQgNjg1NSw1NTMgNzA1NCwzNTZDNzI0MiwxNzEgNzQ3Miw1NiA3NzQwLDE1Qzc4ODIsLTcgMTE2MDgsLTcgMTE3NTAsMTVDMTIxMDYsNjkgMTI0MDMsMjU3IDEyNTkzLDU0OEMxMjcwMCw3MTEgMTI3NTYsODU2IDEyNzg1LDEwNTBDMTI4MDcsMTE5MiAxMjgwNyw0OTE4IDEyNzg1LDUwNjBDMTI3NjQsNTE5NiAxMjczNiw1MjkwIDEyNjgwLDU0MDdDMTI1MTMsNTc1OCAxMjIxOCw1OTkyIDExODIwLDYwODZDMTE3NDksNjEwMyAxMTYzMCw2MTA0IDk3ODUsNjEwNkM4NzA3LDYxMDcgNzc5Niw2MTA0IDc3NjAsNjA5OXoiIGlkPSJzdmdfNSIgZmlsbD0iI2NjY2NjYyI+PC9wYXRoPjwvZz48L2c+PC9zdmc+JywKICAgICAgbWV0cmljc19zdmc6ICc8c3ZnIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgd2lkdGg9IjEwLjQiIGhlaWdodD0iMTAuNCIgdmlld0JveD0iMCAwIDEyODAuMDAwMDAwIDEyODAuMDAwMDAwIiBwcmVzZXJ2ZUFzcGVjdFJhdGlvPSJ4TWlkWU1pZCBtZWV0IiBpZD0ic3ZnY29udGVudCIgb3ZlcmZsb3c9InZpc2libGUiIHg9IjEyODAiIHk9IjEyODAiPjxtZXRhZGF0YT5DcmVhdGVkIGJ5IHBvdHJhY2UgMS4xNSwgd3JpdHRlbiBieSBQZXRlciBTZWxpbmdlciAyMDAxLTIwMTc8L21ldGFkYXRhPjxnIGNsYXNzPSJsYXllciIgc3R5bGU9InBvaW50ZXItZXZlbnRzOmFsbCI+PHRpdGxlIHN0eWxlPSJwb2ludGVyLWV2ZW50czppbmhlcml0Ij5MYXllciAxPC90aXRsZT48ZyB0cmFuc2Zvcm09InRyYW5zbGF0ZSgwIDEyODApIHNjYWxlKDAuMSAtMC4xKSIgZmlsbD0iI2U5MWU2MyIgc3Ryb2tlPSJub25lIiBpZD0ic3ZnXzEiIGZpbGwtb3BhY2l0eT0iMSI+PHBhdGggZD0iTTUxODYsMTIwODNDNTE4MywxMjA3MyA1MTA4LDExNzA1IDUwMjAsMTEyNjVDNDY0OSw5NDE4IDQ1NDAsODg3NiA0NTQwLDg4NzNDNDU0MCw4ODcxIDQwMjcsODg3MCAzNDAwLDg4NzBMMjI2MCw4ODcwTDIyNjAsODI3MUMyMjYwLDc4MDQgMjI2Myw3NjcwIDIyNzMsNzY2M0MyMjc5LDc2NTggMjMzMSw3NjQxIDIzODcsNzYyN0wyNDg5LDc2MDBMMzM4NCw3NjAwQzQwOTQsNzYwMCA0MjgwLDc1OTcgNDI4MCw3NTg4QzQyNzksNzU4MSA0MTY4LDcwMjQgNDAzMSw2MzUwTDM3ODQsNTEyNUwzMTE0LDUxMjBMMjQ0NSw1MTE0TDIzNzYsNTA4N0MyMzM5LDUwNzIgMjI5OSw1MDU1IDIyODksNTA0OUMyMjcxLDUwNDAgMjI3MCw1MDE4IDIyNzAsNDQ0MEwyMjcwLDM4NDBMMjg5NSwzODQwQzMzODgsMzg0MCAzNTIwLDM4MzcgMzUyMCwzODI4QzM1MjAsMzgxNSAzMzcyLDMwNzkgMzA2MSwxNTUwQzI5NjMsMTA2OSAyODg2LDY3MiAyODkwLDY2N0MyODkzLDY2MyAzMTY2LDY2MSAzNDk2LDY2Mkw0MDk1LDY2NUw0MTUyLDgwNUM0MjIwLDk3MiA0MjA1LDkxMiA0MzM1LDE1NTVDNDcwMSwzMzU0IDQ3ODEsMzc1MCA0NzkxLDM3OTNMNDgwMiwzODQwTDU4NjYsMzg0MEw2OTMwLDM4NDBMNjkyNSwzODE4QzY5MjIsMzgwNSA2NzkxLDMxNjIgNjYzNSwyMzg3TDYzNTAsOTgwTDYzNTAsODIwTDYzNTAsNjYwTDY5NTUsNjYwQzcyODgsNjYwIDc1NjAsNjYyIDc1NjAsNjY0Qzc1NjAsNjY4IDc5NjMsMjYyOCA4MTI1LDM0MTVDODE3MiwzNjQwIDgyMTAsMzgyOCA4MjEwLDM4MzJDODIxMCwzODM2IDg3MjksMzg0MCA5MzY0LDM4NDBMMTA1MTgsMzg0MEwxMDUyNSw0NDIzQzEwNTI5LDQ3NDMgMTA1MzEsNTAxNCAxMDUyOSw1MDI1QzEwNTI2LDUwNDAgMTA1MDAsNTA1NCAxMDQyNSw1MDgyTDEwMzI1LDUxMTlMOTQwMyw1MTIwQzg1NjIsNTEyMCA4NDgwLDUxMjEgODQ4MCw1MTM2Qzg0ODAsNTE1MSA4OTc1LDc1NDUgODk4Niw3NTgzQzg5OTEsNzU5OSA5MDMxLDc2MDAgOTY0OCw3NjAwTDEwMzA1LDc2MDBMMTA0MTMsNzYyOUMxMDQ3Myw3NjQ1IDEwNTIzLDc2NjAgMTA1MjYsNzY2MkMxMDUyOCw3NjY1IDEwNTMzLDc5MzcgMTA1MzcsODI2OEwxMDU0Myw4ODcwTDk4OTcsODg3MEM5NTQxLDg4NzAgOTI1MCw4ODcyIDkyNTAsODg3NUM5MjUwLDg4NzggOTM1OCw5NDExIDk0OTEsMTAwNThDOTYyMywxMDcwNSA5NzcxLDExNDMwIDk4MTksMTE2NjhMOTkwOCwxMjEwMEw5Mjk0LDEyMTAwTDg2ODEsMTIxMDBMODY2NiwxMjA3M0M4NjU4LDEyMDU3IDg2MzEsMTE5OTMgODYwNiwxMTkzMEM4NTU1LDExODA0IDg1NzgsMTE5MTEgODE3NCw5OTI1QzgwNzgsOTQ1MiA3OTkxLDkwMjMgNzk4MCw4OTczQzc5NjksODkyMiA3OTYwLDg4NzggNzk2MCw4ODc1Qzc5NjAsODg3MiA3NDc5LDg4NzAgNjg5MCw4ODcwQzYyOTgsODg3MCA1ODIwLDg4NzQgNTgyMCw4ODc5QzU4MjAsODg4NyA2MjYzLDExMDg1IDYzNjUsMTE1ODNDNjQwNywxMTc4NCA2NDEwLDExODEzIDY0MTAsMTE5NTBMNjQxMCwxMjEwMEw1ODAxLDEyMTAwQzUyMjksMTIxMDAgNTE5MSwxMjA5OSA1MTg2LDEyMDgzek03NzAwLDc1OTVDNzcwMCw3NTkyIDc1ODUsNzAzNiA3NDQ1LDYzNTlDNzMwNSw1NjgzIDcxOTAsNTEyNyA3MTkwLDUxMjVDNzE5MCw1MTIyIDY3MTEsNTEyMCA2MTI1LDUxMjBDNTUzOSw1MTIwIDUwNjAsNTEyMyA1MDYwLDUxMjZDNTA2MCw1MTI5IDUxNzMsNTY4NSA1MzEwLDYzNjJDNTQ0OCw3MDM4IDU1NjAsNzU5NCA1NTYwLDc1OTZDNTU2MCw3NTk4IDYwNDIsNzYwMCA2NjMwLDc2MDBDNzIxOSw3NjAwIDc3MDAsNzU5OCA3NzAwLDc1OTV6IiBpZD0ic3ZnXzIiIGZpbGw9IiNjY2NjY2MiPjwvcGF0aD48L2c+PC9nPjwvc3ZnPicsCiAgICAgIGtleXdvcmRfc3ZnOiAnPHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIxMC40IiBoZWlnaHQ9IjEwLjQiIHZpZXdCb3g9IjAgMCAxMTYzLjAwMDAwMCAxMjgwLjAwMDAwMCIgcHJlc2VydmVBc3BlY3RSYXRpbz0ieE1pZFlNaWQgbWVldCIgaWQ9InN2Z2NvbnRlbnQiIG92ZXJmbG93PSJ2aXNpYmxlIiB4PSIxMTYzIiB5PSIxMjgwIj48bWV0YWRhdGE+Q3JlYXRlZCBieSBwb3RyYWNlIDEuMTUsIHdyaXR0ZW4gYnkgUGV0ZXIgU2VsaW5nZXIgMjAwMS0yMDE3PC9tZXRhZGF0YT48ZyBjbGFzcz0ibGF5ZXIiIHN0eWxlPSJwb2ludGVyLWV2ZW50czphbGwiPjx0aXRsZSBzdHlsZT0icG9pbnRlci1ldmVudHM6aW5oZXJpdCI+TGF5ZXIgMTwvdGl0bGU+PGcgdHJhbnNmb3JtPSJ0cmFuc2xhdGUoMCAxMjgwKSBzY2FsZSgwLjEgLTAuMSkiIGZpbGw9IiNlOTFlNjMiIHN0cm9rZT0ibm9uZSIgaWQ9InN2Z18xIiBmaWxsLW9wYWNpdHk9IjEiPjxwYXRoIGQ9Ik01Mjk1LDEyNzk0QzMxMzEsMTI3MjQgMTQzOCwxMjM5MyA2MDAsMTE4NzRDMzAxLDExNjkwIDEwMywxMTQ2MyA0NSwxMTIzOUMyNiwxMTE2OSA2LDEwOTY2IDcsMTA4NTVDNywxMDczMiAyNSwxMDcwNiAzMjUsMTAzOTZDNDY5LDEwMjQ3IDE1MjgsOTE1MyAyNjc5LDc5NjVMNDc3MCw1ODA1TDQ3NzAsMzA4NUM0NzcwLDEyNjMgNDc3NCwzNDQgNDc4MCwzMDFDNDgwNiwxNDcgNDkxMiwzNyA1MDY1LDlDNTA5NywzIDUzODcsMSA1ODAxLDJMNjQ4NSw1TDY1NTIsMzhDNjYzMiw3NyA2NjkwLDEzOSA2NzIyLDIxOUw2NzQ1LDI3NUw2NzUwLDMwMjZMNjc1NSw1Nzc2TDgyNTEsNzMwMUMxMTY5NCwxMDgxMSAxMTU0OSwxMDY2MSAxMTU3NywxMDcxN0MxMTU5MSwxMDc0NiAxMTYwOSwxMDc3MCAxMTYxNiwxMDc3MEMxMTYyOCwxMDc3MCAxMTYzMCwxMDgyMCAxMTYzMCwxMTA2MEwxMTYzMCwxMTM1MEwxMTU5OCwxMTM1MEMxMTU2OCwxMTM1MCAxMTU2MiwxMTM1NSAxMTUzMiwxMTQxNEMxMTQyOSwxMTYxMyAxMTE3NywxMTgyMiAxMDgzMSwxMTk5NUM5OTg1LDEyNDE4IDg1OTcsMTI2ODQgNjczNSwxMjc4MEM2NTQwLDEyNzkxIDU0OTQsMTI4MDAgNTI5NSwxMjc5NHoiIGlkPSJzdmdfMiIgZmlsbD0iI2NjY2NjYyI+PC9wYXRoPjwvZz48L2c+PC9zdmc+JywKICAgICAgZGlzY2FyZFNlYXJjaFRleHQ6ICcnLAogICAgICBhcnJvd3Nfc3ZnOiAnPHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIxMC40IiBoZWlnaHQ9IjEwLjgiIHZpZXdCb3g9IjAgMCAxMjExLjAwMDAwMCAxMjgwLjAwMDAwMCIgcHJlc2VydmVBc3BlY3RSYXRpbz0ieE1pZFlNaWQgbWVldCIgaWQ9InN2Z2NvbnRlbnQiIG92ZXJmbG93PSJ2aXNpYmxlIiB4PSIxMjExIiB5PSIxMjgwIj48bWV0YWRhdGE+Q3JlYXRlZCBieSBwb3RyYWNlIDEuMTUsIHdyaXR0ZW4gYnkgUGV0ZXIgU2VsaW5nZXIgMjAwMS0yMDE3PC9tZXRhZGF0YT48ZyBjbGFzcz0ibGF5ZXIiIHN0eWxlPSJwb2ludGVyLWV2ZW50czphbGwiPjx0aXRsZSBzdHlsZT0icG9pbnRlci1ldmVudHM6aW5oZXJpdCI+TGF5ZXIgMTwvdGl0bGU+PGcgdHJhbnNmb3JtPSJ0cmFuc2xhdGUoMCAxMjgwKSBzY2FsZSgwLjEgLTAuMSkiIGZpbGw9IiNlOTFlNjMiIHN0cm9rZT0ibm9uZSIgaWQ9InN2Z18xIiBmaWxsLW9wYWNpdHk9IjEiPjxwYXRoIGQ9Ik0zOTU0LDEyNzIzQzM5MzcsMTI3MjAgMzkzMCwxMjcwNyAzOTIxLDEyNjU3QzM3NDksMTE3NzMgMzMxOSwxMDgyNSAyNTk5LDk3NTBDMTk5OSw4ODUzIDEzMDgsODAyNCA0MjMsNzE0M0wwLDY3MjFMMCw2NjQwTDAsNjU1OEwzMiw2NTY1QzUwLDY1NjkgMTI4LDY1ODcgMjA1LDY2MDVDNTQ3LDY2ODggODE0LDY3MzEgMTE2Miw2NzYxQzEzNjcsNjc3OSAyNTg3LDY3NTYgMjU4Myw2NzM1QzI1ODIsNjcyOSAyNTc3LDY2NzUgMjU3MSw2NjE1QzI1NjUsNjU1NCAyNTU2LDY0NjUgMjU1MCw2NDE1QzI1NDQsNjM2NiAyNTM1LDYyODIgMjUzMCw2MjMwQzI1MjUsNjE3OCAyNTE2LDYwOTUgMjUxMCw2MDQ1QzI1MDQsNTk5NiAyNDk1LDU5MTIgMjQ5MCw1ODYwQzI0ODUsNTgwOCAyNDc2LDU3MjUgMjQ3MCw1Njc1QzI0NjQsNTYyNiAyNDU1LDU1NDIgMjQ1MCw1NDkwQzI0NDUsNTQzOCAyNDM2LDUzNTUgMjQzMCw1MzA1QzI0MjQsNTI1NiAyNDE1LDUxNzIgMjQxMCw1MTIwQzI0MDUsNTA2OCAyMzk2LDQ5ODUgMjM5MCw0OTM1QzIzODQsNDg4NiAyMzc1LDQ4MDIgMjM3MCw0NzUwQzIzNjUsNDY5OCAyMzU2LDQ2MTUgMjM1MCw0NTY1QzIzNDQsNDUxNiAyMzM1LDQ0MzIgMjMzMCw0MzgwQzIzMjUsNDMyOCAyMzE2LDQyNDUgMjMxMCw0MTk1QzIzMDQsNDE0NiAyMjk1LDQwNjIgMjI5MCw0MDEwQzIyODUsMzk1OCAyMjc2LDM4NzUgMjI3MCwzODI1QzIyNjQsMzc3NiAyMjU1LDM2OTIgMjI1MCwzNjQwQzIyNDUsMzU4OCAyMjM2LDM1MDUgMjIzMCwzNDU1QzIyMjQsMzQwNiAyMjE1LDMzMjIgMjIxMCwzMjcwQzIyMDUsMzIxOCAyMTk2LDMxMzUgMjE5MCwzMDg1QzIxODAsMjk5OCAyMTY3LDI4NzAgMjE1NCwyNzQzTDIxNDcsMjY4MEw0MDA3LDI2ODBMNTg2NywyNjgwTDU4NTksMjcyOEM1ODU1LDI3NTQgNTg0OSwyODAwIDU4NDUsMjgzMEM1ODQxLDI4NjAgNTgzMiwyOTM1IDU4MjQsMjk5NUM1ODE2LDMwNTYgNTgwNSwzMTM5IDU4MDAsMzE4MEM1Nzk0LDMyMjEgNTc4OCwzMjcxIDU3ODUsMzI5MEM1NzgzLDMzMDkgNTc3MywzMzgxIDU3NjUsMzQ1MEM1NzU2LDM1MTkgNTc0NywzNTg2IDU3NDUsMzYwMEM1NzQzLDM2MTQgNTczOSwzNjQ4IDU3MzUsMzY3NUM1NzMyLDM3MDMgNTcyNywzNzM5IDU3MjUsMzc1NUM1NzE5LDM3OTggNTY5MCw0MDI4IDU2ODQsNDA3NUM1NjgxLDQwOTcgNTY3Nyw0MTI2IDU2NzQsNDE0MEM1NjY3LDQxNzMgNTY2OSw0MTcxIDU3ODcsNDAxMEM2NjkxLDI3ODMgNzY0MywxMDk1IDc5NDQsMTgyTDc5ODIsNzBMODA1MCw3MEM4MTcxLDcwIDgxNzYsNzMgODE5MCwxNDRDODM2MCwxMDI3IDg3OTIsMTk3NSA5NTExLDMwNTBDMTAxMTEsMzk0NyAxMDgwMiw0Nzc2IDExNjg3LDU2NTdMMTIxMTAsNjA3OUwxMjExMCw2MTYwTDEyMTEwLDYyNDJMMTIwNzgsNjIzNUMxMjA2MCw2MjMxIDExOTgyLDYyMTMgMTE5MDUsNjE5NUMxMTU2Myw2MTEyIDExMjk2LDYwNjkgMTA5NDgsNjAzOUMxMDc0Myw2MDIxIDk1MjMsNjA0NCA5NTI3LDYwNjVDOTUyOCw2MDcxIDk1MzMsNjEyNSA5NTM5LDYxODVDOTU0NSw2MjQ2IDk1NTQsNjMzNiA5NTYwLDYzODVDOTU2Niw2NDM1IDk1NzUsNjUxOCA5NTgwLDY1NzBDOTU4NSw2NjIyIDk1OTQsNjcwNiA5NjAwLDY3NTVDOTYwNiw2ODA1IDk2MTUsNjg4OCA5NjIwLDY5NDBDOTYyNSw2OTkyIDk2MzQsNzA3NiA5NjQwLDcxMjVDOTY0Niw3MTc1IDk2NTUsNzI1OCA5NjYwLDczMTBDOTY2NSw3MzYyIDk2NzQsNzQ0NiA5NjgwLDc0OTVDOTY4Niw3NTQ1IDk2OTUsNzYyOCA5NzAwLDc2ODBDOTcwNSw3NzMyIDk3MTQsNzgxNiA5NzIwLDc4NjVDOTcyNiw3OTE1IDk3MzUsNzk5OCA5NzQwLDgwNTBDOTc0NSw4MTAyIDk3NTQsODE4NiA5NzYwLDgyMzVDOTc2Niw4Mjg1IDk3NzUsODM2OCA5NzgwLDg0MjBDOTc4NSw4NDcyIDk3OTQsODU1NiA5ODAwLDg2MDVDOTgwNiw4NjU1IDk4MTUsODczOCA5ODIwLDg3OTBDOTgyNSw4ODQyIDk4MzQsODkyNiA5ODQwLDg5NzVDOTg0Niw5MDI1IDk4NTUsOTEwOCA5ODYwLDkxNjBDOTg2NSw5MjEyIDk4NzQsOTI5NiA5ODgwLDkzNDVDOTg4Niw5Mzk1IDk4OTUsOTQ3OCA5OTAwLDk1MzBDOTkwNSw5NTgyIDk5MTQsOTY2NiA5OTIwLDk3MTVDOTkzMCw5ODAyIDk5NDMsOTkzMCA5OTU2LDEwMDU4TDk5NjMsMTAxMjBMODEwMywxMDEyMEw2MjQzLDEwMTIwTDYyNTEsMTAwNzJDNjI1NSwxMDA0NiA2MjYxLDEwMDAwIDYyNjUsOTk3MEM2MjY5LDk5NDAgNjI3OCw5ODY2IDYyODYsOTgwNUM2Mjk0LDk3NDUgNjMwNSw5NjYxIDYzMTAsOTYyMEM2MzE2LDk1NzkgNjMyMiw5NTI5IDYzMjUsOTUxMEM2MzI3LDk0OTEgNjMzNyw5NDE5IDYzNDUsOTM1MEM2MzYwLDkyMzIgNjM2NCw5MjAzIDYzNzUsOTEyMEM2Mzc4LDkxMDEgNjM4Miw5MDY5IDYzODUsOTA1MEM2MzkxLDkwMDIgNjQyMCw4Nzc0IDY0MjYsODcyNUM2NDI5LDg3MDMgNjQzMyw4Njc0IDY0MzYsODY2MEM2NDQzLDg2MjcgNjQ0MSw4NjI5IDYzMjMsODc5MEM1NDE5LDEwMDE3IDQ0NjcsMTE3MDUgNDE2NiwxMjYxOEw0MTI4LDEyNzMwTDQwNTIsMTI3MjlDNDAxMCwxMjcyOCAzOTY1LDEyNzI1IDM5NTQsMTI3MjN6TTY0MzYsNjgxM0w2Njc2LDY4MDdMNjcyNCw2NDM2QzY3NTAsNjIzMiA2Nzc0LDYwNTMgNjc3Nyw2MDM5TDY3ODIsNjAxNEw2NTYzLDYwMDJDNjE2Niw1OTgwIDYwNDAsNTk3OCA1NzM2LDU5ODVMNTQzNCw1OTkzTDUzODYsNjM2NEM1MzYwLDY1NjggNTMzNiw2NzQ3IDUzMzMsNjc2MUw1MzI4LDY3ODZMNTU1Miw2Nzk5QzU5MzEsNjgyMCA2MTA2LDY4MjIgNjQzNiw2ODEzeiIgaWQ9InN2Z18yIiBmaWxsPSIjZTVlNWU1Ij48L3BhdGg+PHBhdGggZD0iTTYyMzAsMTAzMzRDNjIzMCwxMDMyMyA2MjMzLDEwMjk4IDYyMzYsMTAyNzhDNjI0MiwxMDI0MiA2MjQ0LDEwMjQwIDYyODIsMTAyNDBMNjMyMSwxMDI0MEw2Mjg5LDEwMjg1QzYyNDYsMTAzNDUgNjIzMCwxMDM1OCA2MjMwLDEwMzM0eiIgaWQ9InN2Z18zIiBmaWxsPSIjZTVlNWU1Ij48L3BhdGg+PC9nPjwvZz48L3N2Zz4nLAogICAgICBlbnRlcl9zdmc6ICc8c3ZnIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgd2lkdGg9IjEwLjQiIGhlaWdodD0iMTAuOCIgdmlld0JveD0iMCAwIDEyODAuMDAwMDAwIDExMjQuMDAwMDAwIiBwcmVzZXJ2ZUFzcGVjdFJhdGlvPSJ4TWlkWU1pZCBtZWV0IiBpZD0ic3ZnY29udGVudCIgb3ZlcmZsb3c9InZpc2libGUiIHg9IjEyODAiIHk9IjExMjQiPjxtZXRhZGF0YT5DcmVhdGVkIGJ5IHBvdHJhY2UgMS4xNSwgd3JpdHRlbiBieSBQZXRlciBTZWxpbmdlciAyMDAxLTIwMTc8L21ldGFkYXRhPjxnIGNsYXNzPSJsYXllciIgc3R5bGU9InBvaW50ZXItZXZlbnRzOmFsbCI+PHRpdGxlIHN0eWxlPSJwb2ludGVyLWV2ZW50czppbmhlcml0Ij5MYXllciAxPC90aXRsZT48ZyB0cmFuc2Zvcm09InRyYW5zbGF0ZSgwIDExMjQpIHNjYWxlKDAuMSAtMC4xKSIgZmlsbD0iI2U5MWU2MyIgc3Ryb2tlPSJub25lIiBpZD0ic3ZnXzEiIGZpbGwtb3BhY2l0eT0iMSI+PHBhdGggZD0iTTk0NzAsMTEyMjlDOTQ1NiwxMTIyMyA5NDM0LDExMjA5IDk0MjIsMTExOTdDOTM2NiwxMTE0NSA5MzcwLDExMzcxIDkzNzAsODA2MEw5MzcwLDUwMDBMNjQwMCw1MDAwTDM0MzAsNTAwMEwzNDMwLDU3MjRMMzQzMCw2NDQ3TDM0MDcsNjQ4MEMzMzYyLDY1NDcgMzI3Miw2NTcyIDMyMDQsNjUzN0MzMTg4LDY1MjggMjQ2NSw1ODExIDE1OTgsNDk0M0MtMTEyLDMyMzEgLTEzLDMzMzcgNCwzMjQzQzExLDMyMDkgMTY0LDMwNTMgMTU5OCwxNjE3QzI0NzEsNzQ0IDMxOTksMjMgMzIxNiwxNUMzMjYxLC02IDMzMDAsLTQgMzM1MCwyM0MzNDM1LDY4IDM0MzAsMTkgMzQzMCw4MzdMMzQzMCwxNTYwTDgwNDgsMTU2MEwxMjY2NiwxNTYwTDEyNzEwLDE1ODNDMTI3MzQsMTU5NSAxMjc2MywxNjE4IDEyNzc0LDE2MzNMMTI3OTUsMTY2MUwxMjc5NSw2NDAwTDEyNzk1LDExMTM5TDEyNzc0LDExMTY2QzEyNzYzLDExMTgxIDEyNzQxLDExMjAzIDEyNzI2LDExMjE0QzEyNjk5LDExMjM1IDEyNjk3LDExMjM1IDExMDk3LDExMjM3QzEwMDQ2LDExMjM4IDk0ODYsMTEyMzUgOTQ3MCwxMTIyOXoiIGlkPSJzdmdfMiIgZmlsbD0iI2U1ZTVlNSI+PC9wYXRoPjwvZz48L2c+PC9zdmc+JywKICAgICAgZW50ZXJfc3ZnX2FsdDogJzxzdmcgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiBoZWlnaHQ9IjEwLjQiIHZpZXdCb3g9IjAgMCAyNCAyNCIgd2lkdGg9IjEwLjQiPjxwYXRoIGQ9Ik0wIDBoMjR2MjRIMFYweiIgZmlsbD0ibm9uZSIvPjxwYXRoIGQ9Ik0xMSA5bDEuNDIgMS40Mkw4LjgzIDE0SDE4VjRoMnYxMkg4LjgzbDMuNTkgMy41OEwxMSAyMWwtNi02IDYtNnoiLz48L3N2Zz4nLAogICAgICAvLyBlc2NhcGVfc3ZnOic8c3ZnIHN0eWxlPSJ2ZWN0b3ItZWZmZWN0OiBub24tc2NhbGluZy1zdHJva2U7IiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIxMSIgaGVpZ2h0PSIyOCIgdmlld0JveD0iMCAwIDEyODAuMDAwMDAwIDExMzEuMDAwMDAwIiBwcmVzZXJ2ZUFzcGVjdFJhdGlvPSJ4TWlkWU1pZCBtZWV0IiBpZD0ic3ZnY29udGVudCIgb3ZlcmZsb3c9InZpc2libGUiIHg9IjY0MCIgeT0iNTY1LjUiPjxtZXRhZGF0YSBzdHlsZT0idmVjdG9yLWVmZmVjdDogbm9uLXNjYWxpbmctc3Ryb2tlOyI+Q3JlYXRlZCBieSBwb3RyYWNlIDEuMTUsIHdyaXR0ZW4gYnkgUGV0ZXIgU2VsaW5nZXIgMjAwMS0yMDE3PC9tZXRhZGF0YT48ZyBjbGFzcz0ibGF5ZXIiIHN0eWxlPSJwb2ludGVyLWV2ZW50czogYWxsOyB2ZWN0b3ItZWZmZWN0OiBub24tc2NhbGluZy1zdHJva2U7Ij48dGl0bGUgc3R5bGU9InBvaW50ZXItZXZlbnRzOiBpbmhlcml0OyB2ZWN0b3ItZWZmZWN0OiBub24tc2NhbGluZy1zdHJva2U7Ij5MYXllciAxPC90aXRsZT48dGV4dCBmaWxsPSIjY2NjY2NjIiBzdHJva2Utd2lkdGg9IjAiIHg9IjI3NC41MTU1OTc0NDcyODgxIiB5PSI0MjYuNTE1NTg5NzU4Mjg5MjUiIGlkPSJzdmdfMTQiIGZvbnQtc2l6ZT0iMjQiIGZvbnQtZmFtaWx5PSJTYW5zLXNlcmlmIiB0ZXh0LWFuY2hvcj0ibWlkZGxlIiB4bWw6c3BhY2U9InByZXNlcnZlIiBmaWxsLW9wYWNpdHk9IjEiIHN0cm9rZS1vcGFjaXR5PSIxIiB0cmFuc2Zvcm09Im1hdHJpeCgyNS41MTU5IDAgMCAzNS4zOTMxIC02MzYzLjI2IC0xNDI0Mi4yKSIgc3Ryb2tlPSIjZTVlNWU1IiBmb250LXdlaWdodD0iYm9sZCIgZm9udC1zdHlsZT0ibm9ybWFsIj5FU0M8L3RleHQ+PC9nPjwvc3ZnPicsCiAgICAgIC8vIGVzY2FwZV9zdmc6Jzxzdmcgc3R5bGU9InZlY3Rvci1lZmZlY3Q6IG5vbi1zY2FsaW5nLXN0cm9rZSAhaW1wb3J0YW50OyIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB3aWR0aD0iMTEiIGhlaWdodD0iMjgiIHZpZXdCb3g9IjAgMCAxMjgwLjAwMDAwMCAxMTMxLjAwMDAwMCIgcHJlc2VydmVBc3BlY3RSYXRpbz0ieE1pZFlNaWQgbWVldCIgaWQ9InN2Z2NvbnRlbnQiIG92ZXJmbG93PSJ2aXNpYmxlIiB4PSI2NDAiIHk9IjU2NS41Ij48ZyBjbGFzcz0ibGF5ZXIiIHN0eWxlPSJwb2ludGVyLWV2ZW50czogYWxsOyB2ZWN0b3ItZWZmZWN0OiBub24tc2NhbGluZy1zdHJva2U7Ij48dGl0bGUgc3R5bGU9InBvaW50ZXItZXZlbnRzOiBpbmhlcml0OyB2ZWN0b3ItZWZmZWN0OiBub24tc2NhbGluZy1zdHJva2U7Ij5MYXllciAxPC90aXRsZT48dGV4dCBmaWxsPSIjY2NjY2NjIiBzdHJva2Utd2lkdGg9IjAiIHg9IjI3NC41MTU1OTc0NDcyODgxIiB5PSI0MjYuNTE1NTg5NzU4Mjg5MjUiIGlkPSJzdmdfMTQiIGZvbnQtc2l6ZT0iMjQiIGZvbnQtZmFtaWx5PSJTYW5zLXNlcmlmIiB0ZXh0LWFuY2hvcj0ibWlkZGxlIiB4bWw6c3BhY2U9InByZXNlcnZlIiBmaWxsLW9wYWNpdHk9IjEiIHN0cm9rZS1vcGFjaXR5PSIxIiB0cmFuc2Zvcm09Im1hdHJpeCgyNS41MTU5IDAgMCAzNS4zOTMxIC02MzYzLjI2IC0xNDI0Mi4yKSIgc3Ryb2tlPSIjZTVlNWU1IiBmb250LXdlaWdodD0iYm9sZCIgZm9udC1zdHlsZT0ibm9ybWFsIj5FU0M8L3RleHQ+PC9nPjwvc3ZnPicsCiAgICAgIGVzY2FwZV9zdmc6ICc8c3ZnIHN0eWxlPSJ2ZWN0b3ItZWZmZWN0OiBub24tc2NhbGluZy1zdHJva2UgIWltcG9ydGFudDsiIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgd2lkdGg9IjExIiBoZWlnaHQ9IjI4IiB2aWV3Qm94PSIwIDAgMTI4MC4wMDAwMDAgMTEzMS4wMDAwMDAiIHByZXNlcnZlQXNwZWN0UmF0aW89InhNaWRZTWlkIG1lZXQiIGlkPSJzdmdjb250ZW50IiBvdmVyZmxvdz0idmlzaWJsZSIgeD0iNjQwIiB5PSI1NjUuNSI+PGcgY2xhc3M9ImxheWVyX2VzY2FwZSIgc3R5bGU9InBvaW50ZXItZXZlbnRzOiBhbGw7IHZlY3Rvci1lZmZlY3Q6IG5vbi1zY2FsaW5nLXN0cm9rZSAhaW1wb3J0YW50OyI+PHRleHQgZmlsbD0iI2NjY2NjYyIgc3Ryb2tlLXdpZHRoPSIwIiB4PSIyNzQuNTE1NTk3NDQ3Mjg4MSIgeT0iNDI2LjUxNTU4OTc1ODI4OTI1IiBpZD0ic3ZnX2VzY2FwZSIgZm9udC1zaXplPSIyNCIgZm9udC1mYW1pbHk9IlNhbnMtc2VyaWYiIHRleHQtYW5jaG9yPSJtaWRkbGUiIHhtbDpzcGFjZT0icHJlc2VydmUiIGZpbGwtb3BhY2l0eT0iMSIgc3Ryb2tlLW9wYWNpdHk9IjEiIHRyYW5zZm9ybT0ibWF0cml4KDI1LjUxNTkgMCAwIDM1LjM5MzEgLTYzNjMuMjYgLTE0MjQyLjIpIiBzdHJva2U9IiNlNWU1ZTUiIGZvbnQtd2VpZ2h0PSJib2xkIiBmb250LXN0eWxlPSJub3JtYWwiPkVTQzwvdGV4dD48L2c+PC9zdmc+JywKICAgICAgYXJyb3dzX3N2Z19hbHQ6ICc8c3ZnIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgdmVyc2lvbj0iMS4wIiB3aWR0aD0iMTUiIGhlaWdodD0iMTUiIHZpZXdCb3g9IjAgMCA4MjAuMDAwMDAwIDEwNjAuMDAwMDAwIiBwcmVzZXJ2ZUFzcGVjdFJhdGlvPSJ4TWlkWU1pZCBtZWV0Ij48ZyB0cmFuc2Zvcm09InRyYW5zbGF0ZSgwLjAwMDAwMCwxMDYwLjAwMDAwMCkgc2NhbGUoMC4xMDAwMDAsLTAuMTAwMDAwKSIgZmlsbD0iI2NjY2NjYyIgc3Ryb2tlPSJub25lIj48cGF0aCBkPSJNMTQ4OCA4MzU3IGMtNzU3IC0xMDA3IC0xMzc0IC0xODM0IC0xMzcxIC0xODM3IDIgLTMgNDE5IC03IDkyNiAtMTAgbDkyMiAtNSAzIC05MTkgMiAtOTE5IDkwNyA2IGM0OTggNCA5MDkgOSA5MTIgMTMgMyAzIDggNDE0IDExIDkxMiBsNSA5MDcgOTA3IDUgYzQ5OCAzIDkwOSA4IDkxMyAxMiA3IDcgLTI3MzQgMzY1OSAtMjc1MCAzNjY1IC02IDEgLTYyOSAtODIyIC0xMzg3IC0xODMweiIvPjxwYXRoIGQ9Ik00NDE4IDUwMjMgbC0zIC05MjggLTkyMyAtMyBjLTU2NyAtMSAtOTIyIC02IC05MjAgLTExIDIgLTYgNjIzIC04MzYgMTM4MiAtMTg0NiBsMTM3OCAtMTgzNSAxMzczIDE4MzIgYzc1NSAxMDA4IDEzNzMgMTgzOCAxMzc0IDE4NDMgMSA3IC0zMTIgMTIgLTkxMSAxNSBsLTkxMyA1IC0zIDkyOCAtMiA5MjcgLTkxNSAwIC05MTUgMCAtMiAtOTI3eiIvPjwvZz48L3N2Zz4nLAogICAgICBzZWFyY2hfaWNvbl9zdmc6ICc8c3ZnIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgd2lkdGg9IjE0IiBoZWlnaHQ9IjE0IiB2aWV3Qm94PSIwIDAgMTIzNS4wMDAwMDAgMTI4MC4wMDAwMDAiIHByZXNlcnZlQXNwZWN0UmF0aW89InhNaWRZTWlkIG1lZXQiIGlkPSJzdmdjb250ZW50IiBvdmVyZmxvdz0idmlzaWJsZSIgeD0iMTIzNSIgeT0iMTI4MCI+PG1ldGFkYXRhPkNyZWF0ZWQgYnkgcG90cmFjZSAxLjE1LCB3cml0dGVuIGJ5IFBldGVyIFNlbGluZ2VyIDIwMDEtMjAxNzwvbWV0YWRhdGE+PGcgY2xhc3M9ImxheWVyIiBzdHlsZT0icG9pbnRlci1ldmVudHM6YWxsIj48dGl0bGUgc3R5bGU9InBvaW50ZXItZXZlbnRzOmluaGVyaXQiPkxheWVyIDE8L3RpdGxlPjxnIHRyYW5zZm9ybT0idHJhbnNsYXRlKDAgMTI4MCkgc2NhbGUoMC4xIC0wLjEpIiBmaWxsPSIjZTkxZTYzIiBzdHJva2U9Im5vbmUiIGlkPSJzdmdfMSIgZmlsbC1vcGFjaXR5PSIxIj48cGF0aCBkPSJNNDE2NSwxMjc5NEMzNTY4LDEyNzUwIDMwOTcsMTI2MjcgMjYwNSwxMjM4NUMyMzA5LDEyMjM5IDIwMzcsMTIwNjMgMTgwMCwxMTg2MUMxNjYzLDExNzQ1IDEyMzYsMTEzNDQgMTExMywxMTIxNkM1NzgsMTA2NTkgMjE0LDk5NDYgNzEsOTE3NUMtNiw4NzU4IC0xNyw4Mjk2IDQwLDc4NzBDMjA1LDY2MzIgOTA5LDU1MjIgMTk3MCw0ODI3QzIxODQsNDY4NyAyNDcxLDQ1MzcgMjcwNSw0NDQyQzM2MDYsNDA3NyA0NjI0LDQwMzcgNTUzMCw0MzMxQzU4NjUsNDQ0MCA2MTg5LDQ1OTUgNjQ4MSw0Nzg1TDY1NzcsNDg0OEw3Mzc2LDQwMzZDMTEwMTQsMzQyIDExMjUwLDEwNCAxMTMwMSw3M0MxMTM5MiwxOSAxMTQzNSw3IDExNTQ1LDdDMTE2MzksNiAxMTY1MCw5IDExNzIwLDQyQzExNzk4LDc4IDExODA3LDg1IDEyMDcxLDMzMUMxMjI0Nyw0OTQgMTIyNjgsNTE3IDEyMjk5LDU3OEMxMjM3Myw3MjMgMTIzNjIsOTAyIDEyMjcyLDEwMzhDMTIyNTYsMTA2MSAxMTMxMCwyMDI4IDEwMTY5LDMxODdDOTAyOCw0MzQ1IDc5ODgsNTQwMyA3ODU3LDU1MzZMNzYxOCw1Nzc5TDc2ODcsNTg1N0M4MDcwLDYyOTMgODM2OCw2ODU0IDg1MjYsNzQzM0M4NzMzLDgxOTcgODcxMiw5MDMxIDg0NjgsOTc5MEM4MTA4LDEwOTEwIDczMDcsMTE4NDEgNjI1NSwxMjM2MEM1Nzk4LDEyNTg1IDUzNTIsMTI3MTYgNDgzMCwxMjc3NkM0NzEwLDEyNzkwIDQyNjksMTI4MDIgNDE2NSwxMjc5NHpNNDI4NywxMTU2MEM0OTQyLDExNTA2IDU1MjksMTEyODUgNjA0NCwxMDg5OUM2ODYyLDEwMjg0IDczNTksOTM2MiA3NDA4LDgzNzBDNzQ0Niw3NjAwIDcyMzAsNjg4MyA2NzgwLDYyODJDNjY0Miw2MDk3IDY1NTIsNjAxMSA2Mzc3LDU4OTVDNTk1MSw1NjE0IDU0NzMsNTQ0MSA0OTY2LDUzODVDNDcwNyw1MzU2IDQzMjMsNTM2OSA0MDU1LDU0MTVDMjcyNCw1NjQ1IDE2MzIsNjY5MiAxMzM1LDgwMjRDMTI3Niw4MjkyIDEyNjYsODM4OCAxMjY2LDg3MzVDMTI2Niw5MDE3IDEyNjksOTA3MiAxMjg4LDkxOTdDMTM3OCw5NzcwIDE1ODYsMTAyNjQgMTkxOCwxMDY4OEMyMDQ1LDEwODUxIDIwOTEsMTA4OTggMjIwNSwxMDk3OUMyODA2LDExNDA5IDM1NTksMTE2MTkgNDI4NywxMTU2MHoiIGlkPSJzdmdfMiIgZmlsbD0iIzk5OTk5OSI+PC9wYXRoPjwvZz48L2c+PC9zdmc+JywKICAgICAgbmxwX3NlYXJjaDogdHJ1ZSwKICAgICAgc3VnZ2VzdGlvbnNfc2VhcmNoOiBmYWxzZSwKICAgICAgaXNfZGF0YXNldF9zZWxlY3RlZDogZmFsc2UsCiAgICAgIHJlY2VudF9zdmc6ICc8P3htbCB2ZXJzaW9uPSIxLjAiIGVuY29kaW5nPSJpc28tODg1OS0xIj8+PHN2ZyB2ZXJzaW9uPSIxLjEiIGlkPSJDYXBhXzEiIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgeG1sbnM6eGxpbms9Imh0dHA6Ly93d3cudzMub3JnLzE5OTkveGxpbmsiIHg9IjBweCIgeT0iMHB4IiBoZWlnaHQ9IjE1cHgiIHdpZHRoPSIxNXB4Igkgdmlld0JveD0iMCAwIDQ3Ny44NjcgNDc3Ljg2NyIgc3R5bGU9ImVuYWJsZS1iYWNrZ3JvdW5kOm5ldyAwIDAgNDc3Ljg2NyA0NzcuODY3OyIgeG1sOnNwYWNlPSJwcmVzZXJ2ZSI+PHN0eWxlPiAucmVjZW50IHsgZmlsbDogI0U1RTVFNSB9IDwvc3R5bGU+PGc+CTxnPgkJPHBhdGggY2xhc3M9InJlY2VudCIgZD0iTTIzOC45MzMsMEMxMDYuOTc0LDAsMCwxMDYuOTc0LDAsMjM4LjkzM3MxMDYuOTc0LDIzOC45MzMsMjM4LjkzMywyMzguOTMzczIzOC45MzMtMTA2Ljk3NCwyMzguOTMzLTIzOC45MzMJCQlDNDc3LjcyNiwxMDcuMDMzLDM3MC44MzQsMC4xNDEsMjM4LjkzMywweiBNMjM4LjkzMyw0NDMuNzMzYy0xMTMuMTA4LDAtMjA0LjgtOTEuNjkyLTIwNC44LTIwNC44czkxLjY5Mi0yMDQuOCwyMDQuOC0yMDQuOAkJCXMyMDQuOCw5MS42OTIsMjA0LjgsMjA0LjhDNDQzLjYxMSwzNTEuOTkxLDM1MS45OTEsNDQzLjYxMSwyMzguOTMzLDQ0My43MzN6Ii8+CTwvZz48L2c+PGc+CTxnPgkJPHBhdGggY2xhc3M9InJlY2VudCIgZD0iTTIzOC45MzMsODUuMzMzYy05LjQyNiwwLTE3LjA2Nyw3LjY0MS0xNy4wNjcsMTcuMDY3djExOS40NjdIMTAyLjRjLTkuNDI2LDAtMTcuMDY3LDcuNjQxLTE3LjA2NywxNy4wNjcJCQlTOTIuOTc0LDI1NiwxMDIuNCwyNTZoMTM2LjUzM2M5LjQyNiwwLDE3LjA2Ny03LjY0MSwxNy4wNjctMTcuMDY3VjEwMi40QzI1Niw5Mi45NzQsMjQ4LjM1OSw4NS4zMzMsMjM4LjkzMyw4NS4zMzN6Ii8+CTwvZz48L2c+PGc+PC9nPjxnPjwvZz48Zz48L2c+PGc+PC9nPjxnPjwvZz48Zz48L2c+PGc+PC9nPjxnPjwvZz48Zz48L2c+PGc+PC9nPjxnPjwvZz48Zz48L2c+PGc+PC9nPjxnPjwvZz48Zz48L2c+PC9zdmc+JwogICAgfTsKICB9LAogIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7CiAgICB0aGlzLnRhZ3NGcm9tVmFsdWUoKTsKCiAgICBpZiAodGhpcy50eXBlYWhlYWRBbHdheXNTaG93KSB7CiAgICAgIHRoaXMuc2VhcmNoVGFnKGZhbHNlKTsKICAgIH0KICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgIC8vIEVtaXQgYW4gZXZlbnQKICAgIHRoaXMuZGlzY2FyZFNlYXJjaFRleHQgPSB0aGlzLmFycm93c19zdmdfYWx0ICsgJyZuYnNwOyB0byBuYXZpZ2F0ZSAgICAgJyArIHRoaXMuZW50ZXJfc3ZnICsgJyZuYnNwOyB0byBzZWxlY3QgJyArIHRoaXMuZXNjYXBlX3N2ZyArICcmbmJzcDsgdG8gZGlzbWlzcyc7CiAgICB0aGlzLiRlbWl0KCdpbml0aWFsaXplZCcpOwogICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBmdW5jdGlvbiAoZSkgewogICAgICBpZiAoZS50YXJnZXQgIT09IF90aGlzLiRyZWZzWyd0YWdpbnB1dCddKSB7CiAgICAgICAgX3RoaXMuY2xlYXJTZWFyY2hSZXN1bHRzKCk7CiAgICAgIH0KICAgIH0pOwogICAgdGhpcy4kb24oJ2FuYWx5dGljc19zZWFyY2hfYmFyX3ZvaWNlX3Jlc3VsdCcsIGZ1bmN0aW9uIChkYXRhKSB7CiAgICAgIF90aGlzLmlucHV0ID0gZGF0YTsKICAgIH0pOwogICAgdGhpcy4kcm9vdC4kb24oJ2RhdGFzZXRfc2VsZWN0ZWQnLCBmdW5jdGlvbiAoZGF0YSkgewogICAgICBfdGhpcy5pc19kYXRhc2V0X3NlbGVjdGVkID0gdHJ1ZTsKICAgIH0pOwogICAgdGhpcy4kcm9vdC4kb24oJ2NsZWFyX2FuYWx5dGljc19zZWFyY2hfYmFyJywgZnVuY3Rpb24gKGRhdGEpIHsKICAgICAgX3RoaXMuaW5wdXQgPSAiIjsKICAgIH0pOwogICAgdGhpcy4kcm9vdC4kb24oJ2FkZF90ZXh0X3RvX3NlYXJjaF9iYXInLCBmdW5jdGlvbiAoZGF0YSkgewogICAgICBfdGhpcy5pbnB1dCA9IGRhdGE7CiAgICB9KTsKICB9LAogIGNvbXB1dGVkOiB7CiAgICBoaWRlSW5wdXRGaWVsZDogZnVuY3Rpb24gaGlkZUlucHV0RmllbGQoKSB7CiAgICAgIHJldHVybiB0aGlzLmhpZGVJbnB1dE9uTGltaXQgJiYgdGhpcy5saW1pdCA+IDAgJiYgdGhpcy50YWdzLmxlbmd0aCA+PSB0aGlzLmxpbWl0OwogICAgfQogIH0sCiAgd2F0Y2g6IHsKICAgIGlucHV0OiBmdW5jdGlvbiBpbnB1dChuZXdWYWwsIG9sZFZhbCkgewogICAgICB0aGlzLnNlYXJjaFRhZyhmYWxzZSk7CgogICAgICBpZiAobmV3VmFsLmxlbmd0aCAmJiBuZXdWYWwgIT0gb2xkVmFsKSB7CiAgICAgICAgdmFyIGRpZmYgPSBuZXdWYWwuc3Vic3RyaW5nKG9sZFZhbC5sZW5ndGgsIG5ld1ZhbC5sZW5ndGgpOwoKICAgICAgICBpZiAodGhpcy5hZGRUYWdzT25TcGFjZSkgewogICAgICAgICAgaWYgKG5ld1ZhbC5lbmRzV2l0aCgnICcpKSB7CiAgICAgICAgICAgIC8vIFRoZSBzcGFjZSBzaG91bGRuJ3QgYWN0dWFsbHkgYmUgaW5zZXJ0ZWQKICAgICAgICAgICAgdGhpcy5pbnB1dCA9IG5ld1ZhbC50cmltKCk7IC8vIEFkZCB0aGUgaW5wdXRlZCB0YWcKCiAgICAgICAgICAgIHRoaXMudGFnRnJvbUlucHV0KHRydWUpOwogICAgICAgICAgfQogICAgICAgIH0KCiAgICAgICAgaWYgKHRoaXMuYWRkVGFnc09uQ29tbWEpIHsKICAgICAgICAgIG5ld1ZhbCA9IG5ld1ZhbC50cmltKCk7CgogICAgICAgICAgaWYgKG5ld1ZhbC5lbmRzV2l0aCgnLCcpKSB7CiAgICAgICAgICAgIC8vIFRoZSBjb21tYSBzaG91bGRuJ3QgYWN0dWFsbHkgYmUgaW5zZXJ0ZWQKICAgICAgICAgICAgdGhpcy5pbnB1dCA9IG5ld1ZhbC5zdWJzdHJpbmcoMCwgbmV3VmFsLmxlbmd0aCAtIDEpOyAvLyBBZGQgdGhlIGlucHV0ZWQgdGFnCgogICAgICAgICAgICB0aGlzLnRhZ0Zyb21JbnB1dCh0cnVlKTsKICAgICAgICAgIH0KICAgICAgICB9CgogICAgICAgIHRoaXMuJGVtaXQoJ2NoYW5nZScsIG5ld1ZhbCk7CiAgICAgIH0KICAgIH0sCiAgICB0YWdzOiBmdW5jdGlvbiB0YWdzKCkgewogICAgICAvLyBVcGRhdGluZyB0aGUgaGlkZGVuIGlucHV0CiAgICAgIHRoaXMuaGlkZGVuSW5wdXQgPSBKU09OLnN0cmluZ2lmeSh0aGlzLnRhZ3MpOyAvLyBVcGRhdGUgdGhlIGJvdW5kIHYtbW9kZWwgdmFsdWUKCiAgICAgIHRoaXMuJGVtaXQoJ2lucHV0JywgdGhpcy50YWdzKTsKICAgIH0sCiAgICB2YWx1ZTogZnVuY3Rpb24gdmFsdWUoKSB7CiAgICAgIHRoaXMudGFnc0Zyb21WYWx1ZSgpOwogICAgfSwKICAgIHR5cGVhaGVhZEFsd2F5c1Nob3c6IGZ1bmN0aW9uIHR5cGVhaGVhZEFsd2F5c1Nob3cobmV3VmFsdWUpIHsKICAgICAgaWYgKG5ld1ZhbHVlKSB7CiAgICAgICAgdGhpcy5zZWFyY2hUYWcoZmFsc2UpOwogICAgICB9IGVsc2UgewogICAgICAgIHRoaXMuY2xlYXJTZWFyY2hSZXN1bHRzKCk7CiAgICAgIH0KICAgIH0sCiAgICBubHBfc2VhcmNoOiBmdW5jdGlvbiBubHBfc2VhcmNoKG5ld1ZhbCwgb2xkVmFsKSB7CiAgICAgIGlmIChuZXdWYWwgPT09IHRydWUpIHsKICAgICAgICB0aGlzLiRyb290LiRlbWl0KCdubHBfc2VhcmNoJywgdHJ1ZSk7CiAgICAgIH0KCiAgICAgIGlmIChuZXdWYWwgPT09IGZhbHNlKSB7CiAgICAgICAgdGhpcy4kcm9vdC4kZW1pdCgnbmxwX3NlYXJjaCcsIGZhbHNlKTsKICAgICAgfSAvLyBjb25zb2xlLmxvZyhuZXdWYWwsb2xkVmFsKTsKICAgICAgLy8gdGhpcy5zZWFyY2hfZGF0YSA9IFtdOwogICAgICAvLyBpZihuZXdWYWwgPT09IGZhbHNlKXsKICAgICAgLy8gICAgIHRoaXMuZGF0YXNldF9pY29uX3RvX2JlX3Nob3dlZCA9IHRoaXMuZGF0YXNldF9pY29uX3N2ZzsKICAgICAgLy8gICAgIHRoaXMuZGF0YXNldF9uYW1lID0gbnVsbDsKICAgICAgLy8gfQoKICAgIH0sCiAgICBzdWdnZXN0aW9uc19zZWFyY2g6IGZ1bmN0aW9uIHN1Z2dlc3Rpb25zX3NlYXJjaChuZXdWYWwsIG9sZFZhbCkgewogICAgICBpZiAobmV3VmFsID09PSB0cnVlKSB7CiAgICAgICAgdGhpcy4kcm9vdC4kZW1pdCgnbmxwX3NlYXJjaCcsIGZhbHNlKTsKICAgICAgfQoKICAgICAgaWYgKG5ld1ZhbCA9PT0gZmFsc2UpIHsKICAgICAgICB0aGlzLiRyb290LiRlbWl0KCdubHBfc2VhcmNoJywgdHJ1ZSk7CiAgICAgIH0KICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIC8qKgogICAgICogUmVtb3ZlIHJlc2VydmVkIHJlZ2V4IGNoYXJhY3RlcnMgZnJvbSBhIHN0cmluZyBzbyB0aGF0IHRoZXkgZG9uJ3QKICAgICAqIGFmZmVjdCBzZWFyY2ggcmVzdWx0cwogICAgICogCiAgICAgKiBAcGFyYW0gc3RyaW5nCiAgICAgKiBAcmV0dXJucyBTdHJpbmcKICAgICAqLwogICAgZXNjYXBlUmVnRXhwOiBmdW5jdGlvbiBlc2NhcGVSZWdFeHAoc3RyaW5nKSB7CiAgICAgIHJldHVybiBzdHJpbmcucmVwbGFjZSgvWy4qKz9eJHt9KCl8W1xdXFxdL2csICdcXCQmJyk7CiAgICB9LAoKICAgIC8qKgogICAgICogQWRkIGEgdGFnIHdoZXRoZXIgZnJvbSB1c2VyIGlucHV0IG9yIGZyb20gc2VhcmNoIHJlc3VsdHMgKHR5cGVhaGVhZCkKICAgICAqIAogICAgICogQHBhcmFtIGlnbm9yZVNlYXJjaFJlc3VsdHMKICAgICAqIEByZXR1cm5zIHZvaWQKICAgICAqLwogICAgdGFnRnJvbUlucHV0OiBmdW5jdGlvbiB0YWdGcm9tSW5wdXQoKSB7CiAgICAgIHZhciBpZ25vcmVTZWFyY2hSZXN1bHRzID0gYXJndW1lbnRzLmxlbmd0aCA+IDAgJiYgYXJndW1lbnRzWzBdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMF0gOiBmYWxzZTsKCiAgICAgIC8vIElmIHdlJ3JlIGNob29zaW5nIGEgdGFnIGZyb20gdGhlIHNlYXJjaCByZXN1bHRzCiAgICAgIGlmICh0aGlzLnNlYXJjaFJlc3VsdHMubGVuZ3RoICYmIHRoaXMuc2VhcmNoU2VsZWN0aW9uID49IDAgJiYgIWlnbm9yZVNlYXJjaFJlc3VsdHMpIHsKICAgICAgICB0aGlzLnRhZ0Zyb21TZWFyY2godGhpcy5zZWFyY2hSZXN1bHRzW3RoaXMuc2VhcmNoU2VsZWN0aW9uXSk7CiAgICAgICAgdGhpcy5pbnB1dCA9ICcnOwogICAgICB9IGVsc2UgewogICAgICAgIC8vIElmIHdlJ3JlIGFkZGluZyBhbiB1bmV4aXN0aW5nIHRhZwogICAgICAgIHZhciB0ZXh0ID0gdGhpcy5pbnB1dC50cmltKCk7IC8vIElmIHRoZSBuZXcgdGFnIGlzIG5vdCBhbiBlbXB0eSBzdHJpbmcgYW5kIHBhc3NlcyB2YWxpZGF0aW9uCgogICAgICAgIGlmICghdGhpcy5vbmx5RXhpc3RpbmdUYWdzICYmIHRleHQubGVuZ3RoICYmIHRoaXMudmFsaWRhdGUodGV4dCkpIHsKICAgICAgICAgIHRoaXMuaW5wdXQgPSAnJzsgLy8gRGV0ZXJtaW5lIGlmIHRoZSBpbnB1dHRlZCB0YWcgZXhpc3RzIGluIHRoZSBleGlzdGluZ1RhZ3MKICAgICAgICAgIC8vIGFycmF5CgogICAgICAgICAgdmFyIG5ld1RhZyA9IHsKICAgICAgICAgICAga2V5OiBudWxsLAogICAgICAgICAgICB2YWx1ZTogdGV4dCwKICAgICAgICAgICAgdmFsdWVfdG9fZGlzcGxheTogdGV4dAogICAgICAgICAgfTsgLy8gY29uc29sZS5sb2cobmV3VGFnLnZhbHVlLCB0eXBlb2YobmV3VGFnLnZhbHVlKSk7CiAgICAgICAgICAvLyBjb25zdCBzZWFyY2hRdWVyeSA9IHRoaXMuZXNjYXBlUmVnRXhwKAogICAgICAgICAgLy8gICAgIHRoaXMuY2FzZVNlbnNpdGl2ZVRhZ3MKICAgICAgICAgIC8vICAgICAgICAgPyBuZXdUYWcudmFsdWUKICAgICAgICAgIC8vICAgICAgICAgOiBuZXdUYWcudmFsdWUudG9Mb3dlckNhc2UoKQogICAgICAgICAgLy8gKTsKICAgICAgICAgIC8vIGZvciAobGV0IHRhZyBvZiB0aGlzLmV4aXN0aW5nVGFncykgewogICAgICAgICAgLy8gICAgIGNvbnN0IGNvbXBhcmVhYmxlID0gdGhpcy5jYXNlU2Vuc2l0aXZlVGFncwogICAgICAgICAgLy8gICAgICAgICA/IHRhZy52YWx1ZQogICAgICAgICAgLy8gICAgICAgICA6IHRhZy52YWx1ZS50b0xvd2VyQ2FzZSgpOwogICAgICAgICAgLy8gICAgIGlmIChzZWFyY2hRdWVyeSA9PT0gY29tcGFyZWFibGUpIHsKICAgICAgICAgIC8vICAgICAgICAgbmV3VGFnID0gT2JqZWN0LmFzc2lnbih7fSwgdGFnKTsKICAgICAgICAgIC8vICAgICAgICAgYnJlYWs7CiAgICAgICAgICAvLyAgICAgfQogICAgICAgICAgLy8gfQoKICAgICAgICAgIHRoaXMuYWRkVGFnKG5ld1RhZyk7CiAgICAgICAgfQogICAgICB9CiAgICB9LAoKICAgIC8qKgogICAgICogQWRkIGEgdGFnIGZyb20gc2VhcmNoIHJlc3VsdHMgd2hlbiBhIHVzZXIgY2xpY2tzIG9uIGl0CiAgICAgKiAKICAgICAqIEBwYXJhbSB0YWcKICAgICAqIEByZXR1cm5zIHZvaWQKICAgICAqLwogICAgdGFnRnJvbVNlYXJjaE9uQ2xpY2s6IGZ1bmN0aW9uIHRhZ0Zyb21TZWFyY2hPbkNsaWNrKHRhZykgewogICAgICB0aGlzLnRhZ0Zyb21TZWFyY2godGFnKTsKICAgICAgdGhpcy4kcmVmc1sndGFnaW5wdXQnXS5ibHVyKCk7CiAgICB9LAoKICAgIC8qKgogICAgICogQWRkIHRoZSBzZWxlY3RlZCB0YWcgZnJvbSB0aGUgc2VhcmNoIHJlc3VsdHMuCiAgICAgKiBDbGVhciBzZWFyY2ggcmVzdWx0cy4KICAgICAqIENsZWFyIHVzZXIgaW5wdXQuCiAgICAgKiAKICAgICAqIEBwYXJhbSB0YWcKICAgICAqIEByZXR1cm4gdm9pZAogICAgICovCiAgICB0YWdGcm9tU2VhcmNoOiBmdW5jdGlvbiB0YWdGcm9tU2VhcmNoKHRhZykgewogICAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICAgIHRoaXMuY2xlYXJTZWFyY2hSZXN1bHRzKCk7CiAgICAgIHRoaXMuYWRkVGFnKHRhZyk7CiAgICAgIHRoaXMuJG5leHRUaWNrKGZ1bmN0aW9uICgpIHsKICAgICAgICBfdGhpczIuaW5wdXQgPSAnJzsKICAgICAgICBfdGhpczIub2xkSW5wdXQgPSAnJzsKICAgICAgfSk7CiAgICB9LAoKICAgIC8qKgogICAgICogQWRkL1NlbGVjdCBhIHRhZwogICAgICogCiAgICAgKiBAcGFyYW0gdGFnCiAgICAgKiBAcmV0dXJucyB2b2lkIHwgQm9vbGVhbgogICAgICovCiAgICBhZGRUYWc6IGZ1bmN0aW9uIGFkZFRhZyh0YWcpIHsKICAgICAgdmFyIF90aGlzMyA9IHRoaXM7CgogICAgICBpZiAoIXRoaXMuYmVmb3JlQWRkaW5nVGFnKHRhZykpIHsKICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgIH0gLy8gQ2hlY2sgaWYgdGhlIGxpbWl0IGhhcyBiZWVuIHJlYWNoZWQKCgogICAgICBpZiAodGhpcy5saW1pdCA+IDAgJiYgdGhpcy50YWdzLmxlbmd0aCA+PSB0aGlzLmxpbWl0KSB7CiAgICAgICAgdGhpcy4kZW1pdCgnbGltaXQtcmVhY2hlZCcpOwogICAgICAgIHJldHVybiBmYWxzZTsKICAgICAgfSAvLyBBdHRhY2ggdGhlIHRhZyBpZiBpdCBoYXNuJ3QgYmVlbiBhdHRhY2hlZCB5ZXQKCgogICAgICBpZiAoIXRoaXMudGFnU2VsZWN0ZWQodGFnKSkgewogICAgICAgIHRoaXMudGFncy5wdXNoKHRhZyk7IC8vIEVtaXQgZXZlbnRzCgogICAgICAgIHRoaXMuJG5leHRUaWNrKGZ1bmN0aW9uICgpIHsKICAgICAgICAgIF90aGlzMy4kZW1pdCgndGFnLWFkZGVkJywgdGFnKTsKCiAgICAgICAgICBfdGhpczMuJGVtaXQoJ3RhZ3MtdXBkYXRlZCcpOwogICAgICAgIH0pOwogICAgICB9CiAgICB9LAoKICAgIC8qKgogICAgICogUmVtb3ZlIHRoZSBsYXN0IHRhZyBpbiB0aGUgdGFncyBhcnJheS4KICAgICAqIAogICAgICogQHJldHVybnMgdm9pZAogICAgICovCiAgICByZW1vdmVMYXN0VGFnOiBmdW5jdGlvbiByZW1vdmVMYXN0VGFnKCkgewogICAgICBpZiAoIXRoaXMuaW5wdXQubGVuZ3RoICYmIHRoaXMuZGVsZXRlT25CYWNrc3BhY2UgJiYgdGhpcy50YWdzLmxlbmd0aCkgewogICAgICAgIHRoaXMucmVtb3ZlVGFnKHRoaXMudGFncy5sZW5ndGggLSAxKTsKICAgICAgfQogICAgfSwKCiAgICAvKioKICAgICAqIFJlbW92ZSB0aGUgc2VsZWN0ZWQgdGFnIGF0IHRoZSBzcGVjaWZpZWQgaW5kZXguCiAgICAgKiAKICAgICAqIEBwYXJhbSBpbmRleAogICAgICogQHJldHVybnMgdm9pZAogICAgICovCiAgICByZW1vdmVUYWc6IGZ1bmN0aW9uIHJlbW92ZVRhZyhpbmRleCkgewogICAgICB2YXIgX3RoaXM0ID0gdGhpczsKCiAgICAgIHZhciB0YWcgPSB0aGlzLnRhZ3NbaW5kZXhdOwoKICAgICAgaWYgKCF0aGlzLmJlZm9yZVJlbW92aW5nVGFnKHRhZykpIHsKICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgIH0KCiAgICAgIHRoaXMudGFncy5zcGxpY2UoaW5kZXgsIDEpOyAvLyBFbWl0IGV2ZW50cwoKICAgICAgdGhpcy4kbmV4dFRpY2soZnVuY3Rpb24gKCkgewogICAgICAgIF90aGlzNC4kZW1pdCgndGFnLXJlbW92ZWQnLCB0YWcpOwoKICAgICAgICBfdGhpczQuJGVtaXQoJ3RhZ3MtdXBkYXRlZCcpOwoKICAgICAgICBpZiAoX3RoaXM0LnR5cGVhaGVhZEFsd2F5c1Nob3cpIHsKICAgICAgICAgIF90aGlzNC5zZWFyY2hUYWcoKTsKICAgICAgICB9CiAgICAgIH0pOwogICAgfSwKCiAgICAvKioKICAgICAqIFNlYXJjaCB0aGUgY3VycmVudGx5IGVudGVyZWQgdGV4dCBpbiB0aGUgbGlzdCBvZiBleGlzdGluZyB0YWdzCiAgICAgKiAKICAgICAqIEByZXR1cm5zIHZvaWQgfCBCb29sZWFuCiAgICAgKi8KICAgIHNlYXJjaFRhZzogZnVuY3Rpb24gc2VhcmNoVGFnKCkgewogICAgICBpZiAodGhpcy50eXBlYWhlYWQgIT09IHRydWUpIHsKICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgIH0KCiAgICAgIGlmICh0aGlzLm9sZElucHV0ICE9IHRoaXMuaW5wdXQgfHwgIXRoaXMuc2VhcmNoUmVzdWx0cy5sZW5ndGggJiYgdGhpcy50eXBlYWhlYWRBY3RpdmF0aW9uVGhyZXNob2xkID09IDAgfHwgdGhpcy50eXBlYWhlYWRBbHdheXNTaG93IHx8IHRoaXMudHlwZWFoZWFkU2hvd09uRm9jdXMpIHsKICAgICAgICB0aGlzLnNlYXJjaFJlc3VsdHMgPSBbXTsKICAgICAgICB0aGlzLnNlYXJjaFNlbGVjdGlvbiA9IDA7CiAgICAgICAgdmFyIGlucHV0ID0gdGhpcy5pbnB1dC50cmltKCk7CgogICAgICAgIGlmIChpbnB1dC5sZW5ndGggJiYgaW5wdXQubGVuZ3RoID49IHRoaXMudHlwZWFoZWFkQWN0aXZhdGlvblRocmVzaG9sZCB8fCB0aGlzLnR5cGVhaGVhZEFjdGl2YXRpb25UaHJlc2hvbGQgPT0gMCB8fCB0aGlzLnR5cGVhaGVhZEFsd2F5c1Nob3cpIHsKICAgICAgICAgIC8vIEZpbmQgYWxsIHRoZSBleGlzdGluZyB0YWdzIHdoaWNoIGluY2x1ZGUgdGhlIHNlYXJjaCB0ZXh0CiAgICAgICAgICB2YXIgc2VhcmNoUXVlcnkgPSB0aGlzLmVzY2FwZVJlZ0V4cCh0aGlzLmNhc2VTZW5zaXRpdmVUYWdzID8gaW5wdXQgOiBpbnB1dC50b0xvd2VyQ2FzZSgpKTsgLy8gQUpBWCBzZWFyY2gKCiAgICAgICAgICBpZiAodGhpcy50eXBlYWhlYWRVcmwubGVuZ3RoID4gMCkgewogICAgICAgICAgICB0aGlzLmV4aXN0aW5nVGFncy5zcGxpY2UoKTsKICAgICAgICAgICAgdmFyIHhodHRwID0gbmV3IFhNTEh0dHBSZXF1ZXN0KCk7CiAgICAgICAgICAgIHZhciB0aGF0ID0gdGhpczsKCiAgICAgICAgICAgIHhodHRwLm9ucmVhZHlzdGF0ZWNoYW5nZSA9IGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgICBpZiAodGhpcy5yZWFkeVN0YXRlID09IDQgJiYgdGhpcy5zdGF0dXMgPT0gMjAwKSB7CiAgICAgICAgICAgICAgICB0aGF0LmV4aXN0aW5nVGFncyA9IEpTT04ucGFyc2UoeGh0dHAucmVzcG9uc2VUZXh0KTsKICAgICAgICAgICAgICAgIHRoYXQuZG9TZWFyY2goc2VhcmNoUXVlcnkpOwogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfTsKCiAgICAgICAgICAgIHZhciBlbmRwb2ludCA9IHRoaXMudHlwZWFoZWFkVXJsLnJlcGxhY2UoJzpzZWFyY2gnLCBzZWFyY2hRdWVyeSk7CiAgICAgICAgICAgIHhodHRwLm9wZW4oJ0dFVCcsIGVuZHBvaW50LCB0cnVlKTsKICAgICAgICAgICAgeGh0dHAuc2VuZCgpOwogICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgLy8gU2VhcmNoIHRoZSBleGlzdGluZyBjb2xsZWN0aW9uCiAgICAgICAgICAgIHRoaXMuZG9TZWFyY2goc2VhcmNoUXVlcnkpOwogICAgICAgICAgfQogICAgICAgIH0KCiAgICAgICAgdGhpcy5vbGRJbnB1dCA9IHRoaXMuaW5wdXQ7CiAgICAgIH0KICAgIH0sCgogICAgLyoqCiAgICAgKiBQZXJmb3JtIHRoZSBhY3R1YWwgc2VhcmNoCiAgICAgKiAKICAgICAqIEBwYXJhbSBzdHJpbmcgc2VhcmNoUXVlcnkKICAgICAqIEByZXR1cm4gdm9pZAogICAgICovCiAgICBkb1NlYXJjaDogZnVuY3Rpb24gZG9TZWFyY2goc2VhcmNoUXVlcnkpIHsKICAgICAgLy8gY29uc29sZS5sb2coc2VhcmNoUXVlcnksdHlwZW9mKHNlYXJjaFF1ZXJ5KSk7CiAgICAgIC8vIGRlYnVnZ2VyOwogICAgICB2YXIgX2l0ZXJhdG9yID0gX2NyZWF0ZUZvck9mSXRlcmF0b3JIZWxwZXIodGhpcy5leGlzdGluZ1RhZ3MpLAogICAgICAgICAgX3N0ZXA7CgogICAgICB0cnkgewogICAgICAgIGZvciAoX2l0ZXJhdG9yLnMoKTsgIShfc3RlcCA9IF9pdGVyYXRvci5uKCkpLmRvbmU7KSB7CiAgICAgICAgICB2YXIgdGFnID0gX3N0ZXAudmFsdWU7CiAgICAgICAgICB2YXIgY29tcGFyZWFibGUgPSB0aGlzLmNhc2VTZW5zaXRpdmVUYWdzID8gdGFnLnZhbHVlIDogdGFnLnZhbHVlLnRvU3RyaW5nKCkudG9Mb3dlckNhc2UoKTsgLy8gY29uc3QgY29tcGFyZWFibGUgPSB0YWcudmFsdWU7CgogICAgICAgICAgaWYgKGNvbXBhcmVhYmxlLnNlYXJjaChzZWFyY2hRdWVyeSkgPiAtMSAmJiAhdGhpcy50YWdTZWxlY3RlZCh0YWcpKSB7CiAgICAgICAgICAgIHRoaXMuc2VhcmNoUmVzdWx0cy5wdXNoKHRhZyk7CiAgICAgICAgICB9CiAgICAgICAgfSAvLyBTb3J0IHRoZSBzZWFyY2ggcmVzdWx0cyBhbHBoYWJldGljYWxseQoKICAgICAgfSBjYXRjaCAoZXJyKSB7CiAgICAgICAgX2l0ZXJhdG9yLmUoZXJyKTsKICAgICAgfSBmaW5hbGx5IHsKICAgICAgICBfaXRlcmF0b3IuZigpOwogICAgICB9CgogICAgICBpZiAodGhpcy5zb3J0U2VhcmNoUmVzdWx0cykgewogICAgICAgIHRoaXMuc2VhcmNoUmVzdWx0cy5zb3J0KGZ1bmN0aW9uIChhLCBiKSB7CiAgICAgICAgICBpZiAoYS52YWx1ZSA8IGIudmFsdWUpIHJldHVybiAtMTsKICAgICAgICAgIGlmIChhLnZhbHVlID4gYi52YWx1ZSkgcmV0dXJuIDE7CiAgICAgICAgICByZXR1cm4gMDsKICAgICAgICB9KTsKICAgICAgfSAvLyBTaG9ydGVuIFNlYXJjaCByZXN1bHRzIHRvIGRlc2lyZWQgbGVuZ3RoCgoKICAgICAgaWYgKHRoaXMudHlwZWFoZWFkTWF4UmVzdWx0cyA+IDApIHsKICAgICAgICB0aGlzLnNlYXJjaFJlc3VsdHMgPSB0aGlzLnNlYXJjaFJlc3VsdHMuc2xpY2UoMCwgdGhpcy50eXBlYWhlYWRNYXhSZXN1bHRzKTsKICAgICAgfQogICAgfSwKCiAgICAvKioKICAgICAqIEhpZGUgdGhlIHR5cGVhaGVhZCBpZiB0aGVyZSdzIG5vdGhpbmcgaW50ZXJlZCBpbnRvIHRoZSBpbnB1dCBmaWVsZC4KICAgICAqIAogICAgICogQHJldHVybnMgdm9pZAogICAgICovCiAgICBoaWRlVHlwZWFoZWFkOiBmdW5jdGlvbiBoaWRlVHlwZWFoZWFkKCkgewogICAgICB2YXIgX3RoaXM1ID0gdGhpczsKCiAgICAgIGlmICghdGhpcy5pbnB1dC5sZW5ndGgpIHsKICAgICAgICB0aGlzLiRuZXh0VGljayhmdW5jdGlvbiAoKSB7CiAgICAgICAgICBfdGhpczUuY2xlYXJTZWFyY2hSZXN1bHRzKCk7CiAgICAgICAgfSk7CiAgICAgIH0KICAgIH0sCgogICAgLyoqCiAgICAgKiBTZWxlY3QgdGhlIG5leHQgc2VhcmNoIHJlc3VsdCBpbiB0eXBlYWhlYWQuCiAgICAgKiAKICAgICAqIEByZXR1cm5zIHZvaWQKICAgICAqLwogICAgbmV4dFNlYXJjaFJlc3VsdDogZnVuY3Rpb24gbmV4dFNlYXJjaFJlc3VsdCgpIHsKICAgICAgaWYgKHRoaXMuc2VhcmNoU2VsZWN0aW9uICsgMSA8PSB0aGlzLnNlYXJjaFJlc3VsdHMubGVuZ3RoIC0gMSkgewogICAgICAgIHRoaXMuc2VhcmNoU2VsZWN0aW9uKys7CiAgICAgIH0KICAgIH0sCgogICAgLyoqCiAgICAgKiBTZWxlY3QgdGhlIHByZXZpb3VzIHNlYXJjaCByZXN1bHQgaW4gdHlwZWFoZWFkLgogICAgICogCiAgICAgKiBAcmV0dXJucyB2b2lkCiAgICAgKi8KICAgIHByZXZTZWFyY2hSZXN1bHQ6IGZ1bmN0aW9uIHByZXZTZWFyY2hSZXN1bHQoKSB7CiAgICAgIGlmICh0aGlzLnNlYXJjaFNlbGVjdGlvbiA+IDApIHsKICAgICAgICB0aGlzLnNlYXJjaFNlbGVjdGlvbi0tOwogICAgICB9CiAgICB9LAoKICAgIC8qKgogICAgICogQ2xlYXIvRW1wdHkgdGhlIHNlYXJjaCByZXN1bHRzLgogICAgICogCiAgICAgKiBAcmV1dHJucyB2b2lkCiAgICAgKi8KICAgIGNsZWFyU2VhcmNoUmVzdWx0czogZnVuY3Rpb24gY2xlYXJTZWFyY2hSZXN1bHRzKCkgewogICAgICB2YXIgX3RoaXM2ID0gdGhpczsKCiAgICAgIHZhciByZXR1cm5Gb2N1cyA9IGFyZ3VtZW50cy5sZW5ndGggPiAwICYmIGFyZ3VtZW50c1swXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzBdIDogZmFsc2U7CiAgICAgIHRoaXMuc2VhcmNoUmVzdWx0cyA9IFtdOwogICAgICB0aGlzLnNlYXJjaFNlbGVjdGlvbiA9IDA7CgogICAgICBpZiAodGhpcy50eXBlYWhlYWRBbHdheXNTaG93KSB7CiAgICAgICAgdGhpcy4kbmV4dFRpY2soZnVuY3Rpb24gKCkgewogICAgICAgICAgX3RoaXM2LnNlYXJjaFRhZygpOwogICAgICAgIH0pOwogICAgICB9CgogICAgICBpZiAocmV0dXJuRm9jdXMpIHsKICAgICAgICB0aGlzLiRyZWZzWyd0YWdpbnB1dCddLmZvY3VzKCk7CiAgICAgIH0KICAgIH0sCgogICAgLyoqCiAgICAgKiBDbGVhciB0aGUgbGlzdCBvZiBzZWxlY3RlZCB0YWdzLgogICAgICogCiAgICAgKiBAcmV0dXJucyB2b2lkCiAgICAgKi8KICAgIGNsZWFyVGFnczogZnVuY3Rpb24gY2xlYXJUYWdzKCkgewogICAgICB0aGlzLnRhZ3Muc3BsaWNlKDAsIHRoaXMudGFncy5sZW5ndGgpOwogICAgfSwKCiAgICAvKioKICAgICAqIFJlcGxhY2UgdGhlIGN1cnJlbnRseSBzZWxlY3RlZCB0YWdzIHdpdGggdGhlIHRhZ3MgZnJvbSB0aGUgdmFsdWUuCiAgICAgKiAKICAgICAqIEByZXR1cm5zIHZvaWQKICAgICAqLwogICAgdGFnc0Zyb21WYWx1ZTogZnVuY3Rpb24gdGFnc0Zyb21WYWx1ZSgpIHsKICAgICAgaWYgKHRoaXMudmFsdWUgJiYgdGhpcy52YWx1ZS5sZW5ndGgpIHsKICAgICAgICBpZiAoIUFycmF5LmlzQXJyYXkodGhpcy52YWx1ZSkpIHsKICAgICAgICAgIGNvbnNvbGUuZXJyb3IoJ1ZvZXJybyBUYWdzIElucHV0OiB0aGUgdi1tb2RlbCB2YWx1ZSBtdXN0IGJlIGFuIGFycmF5IScpOwogICAgICAgICAgcmV0dXJuOwogICAgICAgIH0KCiAgICAgICAgdmFyIHRhZ3MgPSB0aGlzLnZhbHVlOyAvLyBEb24ndCB1cGRhdGUgaWYgbm90aGluZyBoYXMgY2hhbmdlZAoKICAgICAgICBpZiAodGhpcy50YWdzID09IHRhZ3MpIHsKICAgICAgICAgIHJldHVybjsKICAgICAgICB9CgogICAgICAgIHRoaXMuY2xlYXJUYWdzKCk7CgogICAgICAgIHZhciBfaXRlcmF0b3IyID0gX2NyZWF0ZUZvck9mSXRlcmF0b3JIZWxwZXIodGFncyksCiAgICAgICAgICAgIF9zdGVwMjsKCiAgICAgICAgdHJ5IHsKICAgICAgICAgIGZvciAoX2l0ZXJhdG9yMi5zKCk7ICEoX3N0ZXAyID0gX2l0ZXJhdG9yMi5uKCkpLmRvbmU7KSB7CiAgICAgICAgICAgIHZhciB0YWcgPSBfc3RlcDIudmFsdWU7CiAgICAgICAgICAgIHRoaXMuYWRkVGFnKHRhZyk7CiAgICAgICAgICB9CiAgICAgICAgfSBjYXRjaCAoZXJyKSB7CiAgICAgICAgICBfaXRlcmF0b3IyLmUoZXJyKTsKICAgICAgICB9IGZpbmFsbHkgewogICAgICAgICAgX2l0ZXJhdG9yMi5mKCk7CiAgICAgICAgfQogICAgICB9IGVsc2UgewogICAgICAgIGlmICh0aGlzLnRhZ3MubGVuZ3RoID09IDApIHsKICAgICAgICAgIHJldHVybjsKICAgICAgICB9CgogICAgICAgIHRoaXMuY2xlYXJUYWdzKCk7CiAgICAgIH0KICAgIH0sCgogICAgLyoqCiAgICAgKiBDaGVjayBpZiBhIHRhZyBpcyBhbHJlYWR5IHNlbGVjdGVkLgogICAgICogCiAgICAgKiBAcGFyYW0gdGFnCiAgICAgKiBAcmV0dXJucyBCb29sZWFuCiAgICAgKi8KICAgIHRhZ1NlbGVjdGVkOiBmdW5jdGlvbiB0YWdTZWxlY3RlZCh0YWcpIHsKICAgICAgaWYgKHRoaXMuYWxsb3dEdXBsaWNhdGVzKSB7CiAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICB9CgogICAgICBpZiAoIXRhZykgewogICAgICAgIHJldHVybiBmYWxzZTsKICAgICAgfQoKICAgICAgdmFyIHNlYXJjaFF1ZXJ5ID0gdGhpcy5lc2NhcGVSZWdFeHAodGhpcy5jYXNlU2Vuc2l0aXZlVGFncyA/IHRhZy52YWx1ZSA6IHRhZy52YWx1ZS50b1N0cmluZygpLnRvTG93ZXJDYXNlKCkpOwoKICAgICAgdmFyIF9pdGVyYXRvcjMgPSBfY3JlYXRlRm9yT2ZJdGVyYXRvckhlbHBlcih0aGlzLnRhZ3MpLAogICAgICAgICAgX3N0ZXAzOwoKICAgICAgdHJ5IHsKICAgICAgICBmb3IgKF9pdGVyYXRvcjMucygpOyAhKF9zdGVwMyA9IF9pdGVyYXRvcjMubigpKS5kb25lOykgewogICAgICAgICAgdmFyIHNlbGVjdGVkVGFnID0gX3N0ZXAzLnZhbHVlOwogICAgICAgICAgdmFyIGNvbXBhcmVhYmxlID0gdGhpcy5jYXNlU2Vuc2l0aXZlVGFncyA/IHNlbGVjdGVkVGFnLnZhbHVlIDogc2VsZWN0ZWRUYWcudmFsdWUudG9TdHJpbmcoKS50b0xvd2VyQ2FzZSgpOwoKICAgICAgICAgIGlmIChzZWxlY3RlZFRhZy5rZXkgPT09IHRhZy5rZXkgJiYgdGhpcy5lc2NhcGVSZWdFeHAoY29tcGFyZWFibGUpLmxlbmd0aCA9PSBzZWFyY2hRdWVyeS5sZW5ndGggJiYgY29tcGFyZWFibGUuc2VhcmNoKHNlYXJjaFF1ZXJ5KSA+IC0xKSB7CiAgICAgICAgICAgIHJldHVybiB0cnVlOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfSBjYXRjaCAoZXJyKSB7CiAgICAgICAgX2l0ZXJhdG9yMy5lKGVycik7CiAgICAgIH0gZmluYWxseSB7CiAgICAgICAgX2l0ZXJhdG9yMy5mKCk7CiAgICAgIH0KCiAgICAgIHJldHVybiBmYWxzZTsKICAgIH0sCgogICAgLyoqCiAgICAgKiBDbGVhciB0aGUgaW5wdXQuCiAgICAgKiAKICAgICAqIEByZXR1cm5zIHZvaWQKICAgICAqLwogICAgY2xlYXJJbnB1dDogZnVuY3Rpb24gY2xlYXJJbnB1dCgpIHsKICAgICAgdGhpcy5pbnB1dCA9ICcnOwogICAgfSwKCiAgICAvKioKICAgICAqIFByb2Nlc3MgYWxsIHRoZSBrZXl1cCBldmVudHMuCiAgICAgKiAKICAgICAqIEBwYXJhbSBlCiAgICAgKiBAcmV0dXJucyB2b2lkCiAgICAgKi8KICAgIG9uS2V5VXA6IGZ1bmN0aW9uIG9uS2V5VXAoZSkgewogICAgICB0aGlzLiRlbWl0KCdrZXl1cCcsIGUpOwogICAgfSwKCiAgICAvKioKICAgICAqIFByb2Nlc3MgYWxsIHRoZSBrZXlkb3duIGV2ZW50cy4KICAgICAqIAogICAgICogQHBhcmFtIGUKICAgICAqIEByZXR1cm5zIHZvaWQKICAgICAqLwogICAgb25LZXlEb3duOiBmdW5jdGlvbiBvbktleURvd24oZSkgewogICAgICB0aGlzLiRlbWl0KCdrZXlkb3duJywgZSk7CiAgICB9LAoKICAgIC8qKgogICAgICogUHJvY2VzcyB0aGUgb25mb2N1cyBldmVudC4KICAgICAqIAogICAgICogQHBhcmFtIGUKICAgICAqIEByZXR1cm5zIHZvaWQKICAgICAqLwogICAgb25Gb2N1czogZnVuY3Rpb24gb25Gb2N1cyhlKSB7CiAgICAgIHRoaXMuJGVtaXQoJ2ZvY3VzJywgZSk7CiAgICAgIHRoaXMuaXNBY3RpdmUgPSB0cnVlOwogICAgfSwKCiAgICAvKioKICAgICAqIFByb2Nlc3MgdGhlIG9uQ2xpY2sgZXZlbnQuCiAgICAgKiAKICAgICAqIEBwYXJhbSBlCiAgICAgKiBAcmV0dXJucyB2b2lkCiAgICAgKi8KICAgIG9uQ2xpY2s6IGZ1bmN0aW9uIG9uQ2xpY2soZSkgewogICAgICB0aGlzLiRlbWl0KCdjbGljaycsIGUpOwogICAgICB0aGlzLmlzQWN0aXZlID0gdHJ1ZTsKICAgICAgdGhpcy5zZWFyY2hUYWcoKTsKICAgIH0sCgogICAgLyoqCiAgICAgKiBQcm9jZXNzIHRoZSBvbmJsdXIgZXZlbnQuCiAgICAgKiAKICAgICAqIEBwYXJhbSBlCiAgICAgKiBAcmV0dXJucyB2b2lkCiAgICAgKi8KICAgIG9uQmx1cjogZnVuY3Rpb24gb25CbHVyKGUpIHsKICAgICAgdGhpcy4kZW1pdCgnYmx1cicsIGUpOwoKICAgICAgaWYgKHRoaXMuYWRkVGFnc09uQmx1cikgewogICAgICAgIC8vIEFkZCB0aGUgaW5wdXRlZCB0YWcKICAgICAgICB0aGlzLnRhZ0Zyb21JbnB1dCh0cnVlKTsKICAgICAgfQoKICAgICAgaWYgKCF0aGlzLnR5cGVhaGVhZEFsd2F5c1Nob3cpIHsKICAgICAgICB0aGlzLmhpZGVUeXBlYWhlYWQoKTsKICAgICAgfSBlbHNlIHsKICAgICAgICB0aGlzLnNlYXJjaFRhZygpOwogICAgICB9CgogICAgICB0aGlzLmlzQWN0aXZlID0gZmFsc2U7CiAgICB9CiAgfSwKICBtaXhpbnM6IFt2b2ljZXJlY29yZGVyLCBzdGFydF92b2ljZV9jb21tdW5pY2F0aW9uLCBmb3JlaWdueGNoYW5nZV9jdXN0b20sIGdlbmVyYXRlX3RpbWVdCn07"},{"version":3,"sources":["VoerroTagsInput.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n    <div class=\"tags-input-root\" style=\"position: relative;width:100%\">\n        <div :class=\"{\n            [wrapperClass + ' tags-input']: true,\n            'active': isActive,\n        }\">\n             <!-- <i class=\"fa fa-search\" style=\" padding: 4px;\"></i>  -->\n             <span style=\"padding-left: 3px\" v-html=\"search_icon_svg\"></span>\n             <!-- {{search_icon_svg}} -->\n            <span \n                v-for=\"(tag, index) in tags\"\n                :key=\"index\"\n                style=\"line-height: 0.70;\"\n            >\n                <span class=\"tags-input-badge tags-input-badge-pill tags-input-badge-selected-attribute\" v-html=\"tag.value_to_display\"></span>\n\n                <!-- <span v-if=\"tag.type === `attribute`\" class=\"tags-input-badge tags-input-badge-pill tags-input-badge-selected-attribute\" v-html=\"tag.value_to_display\"></span>\n                <span v-else-if=\"tag.type === `metric`\" class=\"tags-input-badge tags-input-badge-pill tags-input-badge-selected-metric\" v-html=\"tag.value_to_display\"></span>\n                <span v-else class=\"tags-input-badge tags-input-badge-pill tags-input-badge-selected-metric\" v-html=\"tag.value_to_display\"></span> -->\n\n                <!-- <a href=\"#\"\n                    class=\"tags-input-remove\"\n                    @click.prevent=\"removeTag(index)\"></a> -->\n            </span>\n            \n            <input type=\"text\"\n                id=\"searchbar\"\n                ref=\"taginput\"\n                :placeholder=\"placeholder\"\n                v-model=\"input\"\n                v-show=\"!hideInputField\"\n                @keydown.enter.prevent=\"tagFromInput(false)\"\n                @keydown.8=\"removeLastTag\"\n                @keydown.down=\"nextSearchResult\"\n                @keydown.up=\"prevSearchResult\"\n                @keydown=\"onKeyDown\"\n                @keyup=\"onKeyUp\"\n                @keyup.esc=\"clearSearchResults\"\n                @focus=\"onFocus\"\n                @click=\"onClick\"\n                @blur=\"onBlur\"\n                @value=\"tags\"\n                autocomplete=\"off\">\n            <!-- <div class=\"input-group-append\"> -->\n                <button\n                class=\"btn voice-button\"\n                type=\"button\"\n                @click=\"voice_communication\"\n                v-if=\"is_dataset_selected && suggestions_search\"\n                style=\"background-color:inherit;padding-bottom:0;padding-top:0\"\n                title=\"Search Using Voice\"\n                >\n                <i\n                    class=\"fa fa-microphone\"\n                    id=\"microphone\"\n                ></i>\n                </button>\n            <!-- </div> -->\n            <label style=\"margin:0\">Suggestions &nbsp;</label>\n            <label class=\"switch\" style=\"margin-bottom:0\">\n                <!-- <input type=\"checkbox\" v-model=\"nlp_search\" id=\"nlp_search\"> -->\n                <input type=\"checkbox\" v-model=\"suggestions_search\" id=\"nlp_search\">\n                <span class=\"slider round\" style=\"border-radius: 50px;\"></span>\n            </label>  \n            <input type=\"hidden\" v-if=\"elementId\"\n                :name=\"elementId\"\n                :id=\"elementId\"\n                v-model=\"hiddenInput\">\n        </div>\n\n        <!-- Typeahead/Autocomplete -->\n        <div v-show=\"searchResults.length\">\n            <p v-if=\"typeaheadStyle === 'badges'\" :class=\"`typeahead-${typeaheadStyle}`\">\n                <span v-if=\"!typeaheadHideDiscard\" class=\"tags-input-badge typeahead-hide-btn tags-input-typeahead-item-default\"\n                    @click.prevent=\"clearSearchResults(true)\"\n                    v-html=\"discardSearchText\"></span>\n\n                <span v-for=\"(tag, index) in searchResults\"\n                    :key=\"index\"\n                    v-html=\"tag.value\"\n                    @mouseover=\"searchSelection = index\"\n                    @mousedown.prevent=\"tagFromSearchOnClick(tag)\"\n                    class=\"tags-input-badge\"\n                    v-bind:class=\"{\n                        'tags-input-typeahead-item-default': index != searchSelection,\n                        'tags-input-typeahead-item-highlighted-default': index == searchSelection\n                    }\"></span>\n            </p>\n\n            <ul v-else-if=\"typeaheadStyle === 'dropdown'\" :class=\"`typeahead-${typeaheadStyle}`\">\n                <!-- <li v-if=\"!typeaheadHideDiscard\" class=\"tags-input-typeahead-item-default typeahead-hide-btn\"\n                    @click.prevent=\"clearSearchResults(true)\"\n                    v-html=\"discardSearchText\"></li> -->\n                <div v-for=\"(tag, index) in searchResults\"\n                :key=\"index\">\n                    <li v-if=\"tag.type === `attribute`\"\n                v-html=\"attribute_svg + ` ` + tag.value + ` -  in ` + `<em>` + tag.column + `</em> ( ` + tag.dataset + ')'\"\n                @mouseover=\"searchSelection = index\"\n                @mousedown.prevent=\"tagFromSearchOnClick(tag)\"\n                v-bind:class=\"{\n                    'tags-input-typeahead-item-default': index != searchSelection,\n                    'tags-input-typeahead-item-highlighted-default': index == searchSelection\n                }\"></li>\n                 <li v-else-if=\"tag.type === `metric`\"\n                v-html=\"metrics_svg + ` ` + tag.value + ` -  in ` + `<em>` + tag.column + `</em> ( ` + tag.dataset + ')'\"\n                @mouseover=\"searchSelection = index\"\n                @mousedown.prevent=\"tagFromSearchOnClick(tag)\"\n                v-bind:class=\"{\n                    'tags-input-typeahead-item-default': index != searchSelection,\n                    'tags-input-typeahead-item-highlighted-default': index == searchSelection\n                }\"></li>\n                 <li v-else-if=\"tag.type === `value`\"\n                v-html=\"value_svg + ` ` + tag.value + ` -   in ` + `<em>` + tag.column + `</em> ( ` + tag.dataset + ')'\"\n                @mouseover=\"searchSelection = index\"\n                @mousedown.prevent=\"tagFromSearchOnClick(tag)\"\n                v-bind:class=\"{\n                    'tags-input-typeahead-item-default': index != searchSelection,\n                    'tags-input-typeahead-item-highlighted-default': index == searchSelection\n                }\"></li>\n                 <li v-else-if=\"tag.type === `keyword` && tag.keyword_type === `date`\"\n                v-html=\"keyword_svg + ` ` + tag.value+ ` -    in ` + `<em>` + tag.column + `</em> ( ` + tag.dataset + ')'\"\n                @mouseover=\"searchSelection = index\"\n                @mousedown.prevent=\"tagFromSearchOnClick(tag)\"\n                v-bind:class=\"{\n                    'tags-input-typeahead-item-default': index != searchSelection,\n                    'tags-input-typeahead-item-highlighted-default': index == searchSelection\n                }\"></li>\n                <li v-else-if=\"tag.type === `keyword`\"\n                v-html=\"keyword_svg + ` ` + tag.value\"\n                @mouseover=\"searchSelection = index\"\n                @mousedown.prevent=\"tagFromSearchOnClick(tag)\"\n                v-bind:class=\"{\n                    'tags-input-typeahead-item-default': index != searchSelection,\n                    'tags-input-typeahead-item-highlighted-default': index == searchSelection\n                }\"></li>\n                <li v-else-if=\"tag.type === `recent`\"\n                v-html=\"recent_svg + ` ` + tag.value\"\n                @mouseover=\"searchSelection = index\"\n                @mousedown.prevent=\"tagFromSearchOnClick(tag)\"\n                v-bind:class=\"{\n                    'tags-input-typeahead-item-default': index != searchSelection,\n                    'tags-input-typeahead-item-highlighted-default': index == searchSelection\n                }\"></li>\n                <li v-else\n                v-html=\"metrics_svg + ` ` + tag.value + ` -  in ` + `<em>` + tag.column + `</em>`\"\n                @mouseover=\"searchSelection = index\"\n                @mousedown.prevent=\"tagFromSearchOnClick(tag)\"\n                v-bind:class=\"{\n                    'tags-input-typeahead-item-default': index != searchSelection,\n                    'tags-input-typeahead-item-highlighted-default': index == searchSelection\n                }\"></li>\n                </div>\n              <li v-if=\"!typeaheadHideDiscard\" class=\"tags-input-typeahead-item-default typeahead-hide-btn\"\n                  style=\"cursor: not-allowed;\"  @click.prevent=\"clearSearchResults(true)\"\n                    v-html=\"discardSearchText\"></li>\n            </ul>\n        </div>\n    </div>\n</template>\n\n<script>\nimport { voicerecorder, start_voice_communication, foreignxchange_custom, generate_time } from '@/portal/mixins';\nexport default {\n    name: \"VoerroTagsInput\",\n    props: {\n        elementId: String,\n\n        existingTags: {\n            type: Array,\n            default: () => {\n                return [];\n            }\n        },\n\n        value: {\n            type: Array,\n            default: () => {\n                return [];\n            }\n        },\n\n        typeahead: {\n            type: Boolean,\n            default: false\n        },\n\n        typeaheadStyle: {\n            type: String,\n            default: 'badges'\n        },\n\n        typeaheadActivationThreshold: {\n            type: Number,\n            default: 1\n        },\n\n        typeaheadMaxResults: {\n            type: Number,\n            default: 0\n        },\n\n        typeaheadAlwaysShow: {\n            type: Boolean,\n            default: false\n        },\n\n        typeaheadShowOnFocus: {\n            type: Boolean,\n            default: true\n        },\n\n        typeaheadHideDiscard: {\n            type: Boolean,\n            default: false\n        },\n\n        typeaheadUrl: {\n            type: String,\n            default: ''\n        },\n\n        placeholder: {\n            type: String,\n            default: ''\n        },\n        \n        // discardSearchText: {\n        //     type: String,\n        //     default: this.metrics_svg + ` to navigate   ` + this.metrics_svg + ` to select ` + this.metrics_svg + `to dismiss`\n        // },\n\n        limit: {\n            type: Number,\n            default: 0\n        },\n\n        hideInputOnLimit: {\n            type: Boolean,\n            default: false\n        },\n\n        onlyExistingTags: {\n            type: Boolean,\n            default: false\n        },\n\n        deleteOnBackspace: {\n            type: Boolean,\n            default: true\n        },\n\n        allowDuplicates: {\n            type: Boolean,\n            default: true\n        },\n        \n        validate: {\n            type: Function,\n            default: () => true\n        },\n\n        addTagsOnComma: {\n            type: Boolean,\n            default: false\n        },\n\n        addTagsOnSpace: {\n            type: Boolean,\n            default: false\n        },\n\n        addTagsOnBlur: {\n            type: Boolean,\n            default: false\n        },\n\n        wrapperClass: {\n            type: String,\n            default: 'tags-input-wrapper-default'\n        },\n\n        sortSearchResults: {\n            type: Boolean,\n            default: false\n        },\n\n        caseSensitiveTags: {\n            type: Boolean,\n            default: false\n        },\n\n        beforeAddingTag: {\n            type: Function,\n            default: () => true\n        },\n\n        beforeRemovingTag: {\n            type: Function,\n            default: () => true\n        },\n    },\n\n    data() {\n        return {\n            badgeId: 0,\n            tags: [],\n\n            input: '',\n            oldInput: '',\n            hiddenInput: '',\n\n            searchResults: [],\n            searchSelection: 0,\n\n            selectedTag: -1,\n\n            isActive: false,\n            attribute_svg:\n                '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"10.4\" height=\"10.8\" viewBox=\"0 0 1240.000000 1280.000000\" preserveAspectRatio=\"xMidYMid meet\" id=\"svgcontent\" overflow=\"visible\" x=\"632.3999999999999\" y=\"652.8\"><metadata>Created by potrace 1.15, written by Peter Selinger 2001-2017</metadata><g class=\"layer\" style=\"pointer-events:all\"><title style=\"pointer-events:inherit\">Layer 1</title><g transform=\"translate(0 1280) scale(0.1 -0.1)\" fill=\"#e91e63\" stroke=\"none\" id=\"svg_1\" fill-opacity=\"1\"><path d=\"M5736,12132C5550,11765 4933,10554 4365,9440C3797,8326 2908,6583 2390,5565C1871,4548 1121,3076 723,2296L0,877L0,779C0,695 2,681 18,676C27,673 253,622 520,561C787,501 1383,365 1845,260C2307,155 2753,53 2837,34C2936,12 3015,0 3062,0L3135,0L3664,1265L4193,2530L6135,2530L8077,2530L8615,1408C8911,790 9184,221 9221,143L9289,2L9327,10C9361,18 11508,485 12150,624L12395,677L12398,776L12401,876L12102,1460C11937,1782 11529,2580 11195,3235C10861,3890 10325,4938 10005,5565C9222,7097 7889,9707 7173,11110C6851,11740 6525,12378 6448,12528L6309,12800L6192,12800L6075,12799L5736,12132zM6530,6120C6746,5644 6925,5249 6927,5243C6931,5233 6767,5230 6126,5230C5683,5230 5320,5234 5320,5238C5320,5242 5343,5297 5371,5360C5399,5423 5572,5817 5757,6235C5941,6653 6097,7004 6102,7014C6112,7033 6113,7032 6125,7009C6132,6996 6314,6596 6530,6120z\" id=\"svg_2\" fill=\"#cccccc\"></path></g></g></svg>',\n            value_svg:\n                '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"10.4\" height=\"10.8\" viewBox=\"0 0 1280.000000 1280.000000\" preserveAspectRatio=\"xMidYMid meet\" id=\"svgcontent\" overflow=\"visible\" x=\"652.8\" y=\"652.8\"><metadata>Created by potrace 1.15, written by Peter Selinger 2001-2017</metadata><g class=\"layer\" style=\"pointer-events:all\"><title style=\"pointer-events:inherit\">Layer 1</title><g transform=\"translate(0 1280) scale(0.1 -0.1)\" fill=\"#e91e63\" stroke=\"none\" id=\"svg_1\" fill-opacity=\"1\"><path d=\"M1075,12793C941,12776 765,12720 651,12659C326,12484 110,12197 24,11825C6,11748 5,11658 5,9745C5,7832 6,7742 24,7665C82,7413 186,7223 360,7050C548,6863 763,6752 1028,6706C1110,6692 1329,6690 3055,6690C5169,6690 5065,6687 5255,6747C5694,6886 6016,7258 6094,7718C6108,7799 6110,8030 6110,9745C6110,11471 6108,11690 6094,11772C6048,12037 5937,12254 5750,12440C5582,12609 5412,12705 5160,12772L5075,12795L3090,12796C1998,12797 1092,12795 1075,12793z\" id=\"svg_2\" fill=\"#cccccc\"></path><path d=\"M7735,12785C7342,12724 7003,12481 6829,12138C6758,11996 6721,11878 6700,11717C6694,11666 6690,10977 6690,9745C6690,8513 6694,7824 6700,7773C6771,7235 7147,6827 7680,6713C7761,6696 7868,6695 9745,6695C11622,6695 11729,6696 11810,6713C12060,6767 12272,6881 12444,7054C12629,7242 12744,7472 12785,7740C12807,7882 12807,11608 12785,11750C12756,11944 12700,12089 12593,12252C12438,12490 12187,12675 11919,12750C11736,12801 11797,12800 9735,12799C8246,12798 7797,12795 7735,12785z\" id=\"svg_3\" fill=\"#cccccc\"></path><path d=\"M1070,6099C799,6064 548,5940 356,5746C171,5558 56,5328 15,5060C-7,4918 -7,1192 15,1050C44,856 100,711 207,548C397,257 694,69 1050,15C1192,-7 4918,-7 5060,15C5196,36 5290,64 5407,120C5758,287 5992,582 6086,980C6103,1050 6104,1173 6108,2990C6111,5002 6111,5027 6069,5190C5969,5584 5667,5911 5280,6043C5086,6109 5260,6104 3095,6106C2017,6107 1106,6104 1070,6099z\" id=\"svg_4\" fill=\"#cccccc\"></path><path d=\"M7760,6099C7310,6041 6926,5735 6767,5308C6737,5230 6714,5129 6700,5027C6694,4976 6690,4287 6690,3055C6690,1823 6694,1134 6700,1083C6738,794 6855,553 7054,356C7242,171 7472,56 7740,15C7882,-7 11608,-7 11750,15C12106,69 12403,257 12593,548C12700,711 12756,856 12785,1050C12807,1192 12807,4918 12785,5060C12764,5196 12736,5290 12680,5407C12513,5758 12218,5992 11820,6086C11749,6103 11630,6104 9785,6106C8707,6107 7796,6104 7760,6099z\" id=\"svg_5\" fill=\"#cccccc\"></path></g></g></svg>',\n            metrics_svg:\n                '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"10.4\" height=\"10.4\" viewBox=\"0 0 1280.000000 1280.000000\" preserveAspectRatio=\"xMidYMid meet\" id=\"svgcontent\" overflow=\"visible\" x=\"1280\" y=\"1280\"><metadata>Created by potrace 1.15, written by Peter Selinger 2001-2017</metadata><g class=\"layer\" style=\"pointer-events:all\"><title style=\"pointer-events:inherit\">Layer 1</title><g transform=\"translate(0 1280) scale(0.1 -0.1)\" fill=\"#e91e63\" stroke=\"none\" id=\"svg_1\" fill-opacity=\"1\"><path d=\"M5186,12083C5183,12073 5108,11705 5020,11265C4649,9418 4540,8876 4540,8873C4540,8871 4027,8870 3400,8870L2260,8870L2260,8271C2260,7804 2263,7670 2273,7663C2279,7658 2331,7641 2387,7627L2489,7600L3384,7600C4094,7600 4280,7597 4280,7588C4279,7581 4168,7024 4031,6350L3784,5125L3114,5120L2445,5114L2376,5087C2339,5072 2299,5055 2289,5049C2271,5040 2270,5018 2270,4440L2270,3840L2895,3840C3388,3840 3520,3837 3520,3828C3520,3815 3372,3079 3061,1550C2963,1069 2886,672 2890,667C2893,663 3166,661 3496,662L4095,665L4152,805C4220,972 4205,912 4335,1555C4701,3354 4781,3750 4791,3793L4802,3840L5866,3840L6930,3840L6925,3818C6922,3805 6791,3162 6635,2387L6350,980L6350,820L6350,660L6955,660C7288,660 7560,662 7560,664C7560,668 7963,2628 8125,3415C8172,3640 8210,3828 8210,3832C8210,3836 8729,3840 9364,3840L10518,3840L10525,4423C10529,4743 10531,5014 10529,5025C10526,5040 10500,5054 10425,5082L10325,5119L9403,5120C8562,5120 8480,5121 8480,5136C8480,5151 8975,7545 8986,7583C8991,7599 9031,7600 9648,7600L10305,7600L10413,7629C10473,7645 10523,7660 10526,7662C10528,7665 10533,7937 10537,8268L10543,8870L9897,8870C9541,8870 9250,8872 9250,8875C9250,8878 9358,9411 9491,10058C9623,10705 9771,11430 9819,11668L9908,12100L9294,12100L8681,12100L8666,12073C8658,12057 8631,11993 8606,11930C8555,11804 8578,11911 8174,9925C8078,9452 7991,9023 7980,8973C7969,8922 7960,8878 7960,8875C7960,8872 7479,8870 6890,8870C6298,8870 5820,8874 5820,8879C5820,8887 6263,11085 6365,11583C6407,11784 6410,11813 6410,11950L6410,12100L5801,12100C5229,12100 5191,12099 5186,12083zM7700,7595C7700,7592 7585,7036 7445,6359C7305,5683 7190,5127 7190,5125C7190,5122 6711,5120 6125,5120C5539,5120 5060,5123 5060,5126C5060,5129 5173,5685 5310,6362C5448,7038 5560,7594 5560,7596C5560,7598 6042,7600 6630,7600C7219,7600 7700,7598 7700,7595z\" id=\"svg_2\" fill=\"#cccccc\"></path></g></g></svg>',\n            keyword_svg: '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"10.4\" height=\"10.4\" viewBox=\"0 0 1163.000000 1280.000000\" preserveAspectRatio=\"xMidYMid meet\" id=\"svgcontent\" overflow=\"visible\" x=\"1163\" y=\"1280\"><metadata>Created by potrace 1.15, written by Peter Selinger 2001-2017</metadata><g class=\"layer\" style=\"pointer-events:all\"><title style=\"pointer-events:inherit\">Layer 1</title><g transform=\"translate(0 1280) scale(0.1 -0.1)\" fill=\"#e91e63\" stroke=\"none\" id=\"svg_1\" fill-opacity=\"1\"><path d=\"M5295,12794C3131,12724 1438,12393 600,11874C301,11690 103,11463 45,11239C26,11169 6,10966 7,10855C7,10732 25,10706 325,10396C469,10247 1528,9153 2679,7965L4770,5805L4770,3085C4770,1263 4774,344 4780,301C4806,147 4912,37 5065,9C5097,3 5387,1 5801,2L6485,5L6552,38C6632,77 6690,139 6722,219L6745,275L6750,3026L6755,5776L8251,7301C11694,10811 11549,10661 11577,10717C11591,10746 11609,10770 11616,10770C11628,10770 11630,10820 11630,11060L11630,11350L11598,11350C11568,11350 11562,11355 11532,11414C11429,11613 11177,11822 10831,11995C9985,12418 8597,12684 6735,12780C6540,12791 5494,12800 5295,12794z\" id=\"svg_2\" fill=\"#cccccc\"></path></g></g></svg>',\n            discardSearchText: '',\n            arrows_svg: '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"10.4\" height=\"10.8\" viewBox=\"0 0 1211.000000 1280.000000\" preserveAspectRatio=\"xMidYMid meet\" id=\"svgcontent\" overflow=\"visible\" x=\"1211\" y=\"1280\"><metadata>Created by potrace 1.15, written by Peter Selinger 2001-2017</metadata><g class=\"layer\" style=\"pointer-events:all\"><title style=\"pointer-events:inherit\">Layer 1</title><g transform=\"translate(0 1280) scale(0.1 -0.1)\" fill=\"#e91e63\" stroke=\"none\" id=\"svg_1\" fill-opacity=\"1\"><path d=\"M3954,12723C3937,12720 3930,12707 3921,12657C3749,11773 3319,10825 2599,9750C1999,8853 1308,8024 423,7143L0,6721L0,6640L0,6558L32,6565C50,6569 128,6587 205,6605C547,6688 814,6731 1162,6761C1367,6779 2587,6756 2583,6735C2582,6729 2577,6675 2571,6615C2565,6554 2556,6465 2550,6415C2544,6366 2535,6282 2530,6230C2525,6178 2516,6095 2510,6045C2504,5996 2495,5912 2490,5860C2485,5808 2476,5725 2470,5675C2464,5626 2455,5542 2450,5490C2445,5438 2436,5355 2430,5305C2424,5256 2415,5172 2410,5120C2405,5068 2396,4985 2390,4935C2384,4886 2375,4802 2370,4750C2365,4698 2356,4615 2350,4565C2344,4516 2335,4432 2330,4380C2325,4328 2316,4245 2310,4195C2304,4146 2295,4062 2290,4010C2285,3958 2276,3875 2270,3825C2264,3776 2255,3692 2250,3640C2245,3588 2236,3505 2230,3455C2224,3406 2215,3322 2210,3270C2205,3218 2196,3135 2190,3085C2180,2998 2167,2870 2154,2743L2147,2680L4007,2680L5867,2680L5859,2728C5855,2754 5849,2800 5845,2830C5841,2860 5832,2935 5824,2995C5816,3056 5805,3139 5800,3180C5794,3221 5788,3271 5785,3290C5783,3309 5773,3381 5765,3450C5756,3519 5747,3586 5745,3600C5743,3614 5739,3648 5735,3675C5732,3703 5727,3739 5725,3755C5719,3798 5690,4028 5684,4075C5681,4097 5677,4126 5674,4140C5667,4173 5669,4171 5787,4010C6691,2783 7643,1095 7944,182L7982,70L8050,70C8171,70 8176,73 8190,144C8360,1027 8792,1975 9511,3050C10111,3947 10802,4776 11687,5657L12110,6079L12110,6160L12110,6242L12078,6235C12060,6231 11982,6213 11905,6195C11563,6112 11296,6069 10948,6039C10743,6021 9523,6044 9527,6065C9528,6071 9533,6125 9539,6185C9545,6246 9554,6336 9560,6385C9566,6435 9575,6518 9580,6570C9585,6622 9594,6706 9600,6755C9606,6805 9615,6888 9620,6940C9625,6992 9634,7076 9640,7125C9646,7175 9655,7258 9660,7310C9665,7362 9674,7446 9680,7495C9686,7545 9695,7628 9700,7680C9705,7732 9714,7816 9720,7865C9726,7915 9735,7998 9740,8050C9745,8102 9754,8186 9760,8235C9766,8285 9775,8368 9780,8420C9785,8472 9794,8556 9800,8605C9806,8655 9815,8738 9820,8790C9825,8842 9834,8926 9840,8975C9846,9025 9855,9108 9860,9160C9865,9212 9874,9296 9880,9345C9886,9395 9895,9478 9900,9530C9905,9582 9914,9666 9920,9715C9930,9802 9943,9930 9956,10058L9963,10120L8103,10120L6243,10120L6251,10072C6255,10046 6261,10000 6265,9970C6269,9940 6278,9866 6286,9805C6294,9745 6305,9661 6310,9620C6316,9579 6322,9529 6325,9510C6327,9491 6337,9419 6345,9350C6360,9232 6364,9203 6375,9120C6378,9101 6382,9069 6385,9050C6391,9002 6420,8774 6426,8725C6429,8703 6433,8674 6436,8660C6443,8627 6441,8629 6323,8790C5419,10017 4467,11705 4166,12618L4128,12730L4052,12729C4010,12728 3965,12725 3954,12723zM6436,6813L6676,6807L6724,6436C6750,6232 6774,6053 6777,6039L6782,6014L6563,6002C6166,5980 6040,5978 5736,5985L5434,5993L5386,6364C5360,6568 5336,6747 5333,6761L5328,6786L5552,6799C5931,6820 6106,6822 6436,6813z\" id=\"svg_2\" fill=\"#e5e5e5\"></path><path d=\"M6230,10334C6230,10323 6233,10298 6236,10278C6242,10242 6244,10240 6282,10240L6321,10240L6289,10285C6246,10345 6230,10358 6230,10334z\" id=\"svg_3\" fill=\"#e5e5e5\"></path></g></g></svg>',\n            enter_svg: '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"10.4\" height=\"10.8\" viewBox=\"0 0 1280.000000 1124.000000\" preserveAspectRatio=\"xMidYMid meet\" id=\"svgcontent\" overflow=\"visible\" x=\"1280\" y=\"1124\"><metadata>Created by potrace 1.15, written by Peter Selinger 2001-2017</metadata><g class=\"layer\" style=\"pointer-events:all\"><title style=\"pointer-events:inherit\">Layer 1</title><g transform=\"translate(0 1124) scale(0.1 -0.1)\" fill=\"#e91e63\" stroke=\"none\" id=\"svg_1\" fill-opacity=\"1\"><path d=\"M9470,11229C9456,11223 9434,11209 9422,11197C9366,11145 9370,11371 9370,8060L9370,5000L6400,5000L3430,5000L3430,5724L3430,6447L3407,6480C3362,6547 3272,6572 3204,6537C3188,6528 2465,5811 1598,4943C-112,3231 -13,3337 4,3243C11,3209 164,3053 1598,1617C2471,744 3199,23 3216,15C3261,-6 3300,-4 3350,23C3435,68 3430,19 3430,837L3430,1560L8048,1560L12666,1560L12710,1583C12734,1595 12763,1618 12774,1633L12795,1661L12795,6400L12795,11139L12774,11166C12763,11181 12741,11203 12726,11214C12699,11235 12697,11235 11097,11237C10046,11238 9486,11235 9470,11229z\" id=\"svg_2\" fill=\"#e5e5e5\"></path></g></g></svg>',\n            enter_svg_alt: '<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"10.4\" viewBox=\"0 0 24 24\" width=\"10.4\"><path d=\"M0 0h24v24H0V0z\" fill=\"none\"/><path d=\"M11 9l1.42 1.42L8.83 14H18V4h2v12H8.83l3.59 3.58L11 21l-6-6 6-6z\"/></svg>',\n            // escape_svg:'<svg style=\"vector-effect: non-scaling-stroke;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"11\" height=\"28\" viewBox=\"0 0 1280.000000 1131.000000\" preserveAspectRatio=\"xMidYMid meet\" id=\"svgcontent\" overflow=\"visible\" x=\"640\" y=\"565.5\"><metadata style=\"vector-effect: non-scaling-stroke;\">Created by potrace 1.15, written by Peter Selinger 2001-2017</metadata><g class=\"layer\" style=\"pointer-events: all; vector-effect: non-scaling-stroke;\"><title style=\"pointer-events: inherit; vector-effect: non-scaling-stroke;\">Layer 1</title><text fill=\"#cccccc\" stroke-width=\"0\" x=\"274.5155974472881\" y=\"426.51558975828925\" id=\"svg_14\" font-size=\"24\" font-family=\"Sans-serif\" text-anchor=\"middle\" xml:space=\"preserve\" fill-opacity=\"1\" stroke-opacity=\"1\" transform=\"matrix(25.5159 0 0 35.3931 -6363.26 -14242.2)\" stroke=\"#e5e5e5\" font-weight=\"bold\" font-style=\"normal\">ESC</text></g></svg>',\n            // escape_svg:'<svg style=\"vector-effect: non-scaling-stroke !important;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"11\" height=\"28\" viewBox=\"0 0 1280.000000 1131.000000\" preserveAspectRatio=\"xMidYMid meet\" id=\"svgcontent\" overflow=\"visible\" x=\"640\" y=\"565.5\"><g class=\"layer\" style=\"pointer-events: all; vector-effect: non-scaling-stroke;\"><title style=\"pointer-events: inherit; vector-effect: non-scaling-stroke;\">Layer 1</title><text fill=\"#cccccc\" stroke-width=\"0\" x=\"274.5155974472881\" y=\"426.51558975828925\" id=\"svg_14\" font-size=\"24\" font-family=\"Sans-serif\" text-anchor=\"middle\" xml:space=\"preserve\" fill-opacity=\"1\" stroke-opacity=\"1\" transform=\"matrix(25.5159 0 0 35.3931 -6363.26 -14242.2)\" stroke=\"#e5e5e5\" font-weight=\"bold\" font-style=\"normal\">ESC</text></g></svg>',\n            escape_svg: '<svg style=\"vector-effect: non-scaling-stroke !important;\" xmlns=\"http://www.w3.org/2000/svg\" width=\"11\" height=\"28\" viewBox=\"0 0 1280.000000 1131.000000\" preserveAspectRatio=\"xMidYMid meet\" id=\"svgcontent\" overflow=\"visible\" x=\"640\" y=\"565.5\"><g class=\"layer_escape\" style=\"pointer-events: all; vector-effect: non-scaling-stroke !important;\"><text fill=\"#cccccc\" stroke-width=\"0\" x=\"274.5155974472881\" y=\"426.51558975828925\" id=\"svg_escape\" font-size=\"24\" font-family=\"Sans-serif\" text-anchor=\"middle\" xml:space=\"preserve\" fill-opacity=\"1\" stroke-opacity=\"1\" transform=\"matrix(25.5159 0 0 35.3931 -6363.26 -14242.2)\" stroke=\"#e5e5e5\" font-weight=\"bold\" font-style=\"normal\">ESC</text></g></svg>',\n            arrows_svg_alt: '<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.0\" width=\"15\" height=\"15\" viewBox=\"0 0 820.000000 1060.000000\" preserveAspectRatio=\"xMidYMid meet\"><g transform=\"translate(0.000000,1060.000000) scale(0.100000,-0.100000)\" fill=\"#cccccc\" stroke=\"none\"><path d=\"M1488 8357 c-757 -1007 -1374 -1834 -1371 -1837 2 -3 419 -7 926 -10 l922 -5 3 -919 2 -919 907 6 c498 4 909 9 912 13 3 3 8 414 11 912 l5 907 907 5 c498 3 909 8 913 12 7 7 -2734 3659 -2750 3665 -6 1 -629 -822 -1387 -1830z\"/><path d=\"M4418 5023 l-3 -928 -923 -3 c-567 -1 -922 -6 -920 -11 2 -6 623 -836 1382 -1846 l1378 -1835 1373 1832 c755 1008 1373 1838 1374 1843 1 7 -312 12 -911 15 l-913 5 -3 928 -2 927 -915 0 -915 0 -2 -927z\"/></g></svg>',\n            search_icon_svg: '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"14\" height=\"14\" viewBox=\"0 0 1235.000000 1280.000000\" preserveAspectRatio=\"xMidYMid meet\" id=\"svgcontent\" overflow=\"visible\" x=\"1235\" y=\"1280\"><metadata>Created by potrace 1.15, written by Peter Selinger 2001-2017</metadata><g class=\"layer\" style=\"pointer-events:all\"><title style=\"pointer-events:inherit\">Layer 1</title><g transform=\"translate(0 1280) scale(0.1 -0.1)\" fill=\"#e91e63\" stroke=\"none\" id=\"svg_1\" fill-opacity=\"1\"><path d=\"M4165,12794C3568,12750 3097,12627 2605,12385C2309,12239 2037,12063 1800,11861C1663,11745 1236,11344 1113,11216C578,10659 214,9946 71,9175C-6,8758 -17,8296 40,7870C205,6632 909,5522 1970,4827C2184,4687 2471,4537 2705,4442C3606,4077 4624,4037 5530,4331C5865,4440 6189,4595 6481,4785L6577,4848L7376,4036C11014,342 11250,104 11301,73C11392,19 11435,7 11545,7C11639,6 11650,9 11720,42C11798,78 11807,85 12071,331C12247,494 12268,517 12299,578C12373,723 12362,902 12272,1038C12256,1061 11310,2028 10169,3187C9028,4345 7988,5403 7857,5536L7618,5779L7687,5857C8070,6293 8368,6854 8526,7433C8733,8197 8712,9031 8468,9790C8108,10910 7307,11841 6255,12360C5798,12585 5352,12716 4830,12776C4710,12790 4269,12802 4165,12794zM4287,11560C4942,11506 5529,11285 6044,10899C6862,10284 7359,9362 7408,8370C7446,7600 7230,6883 6780,6282C6642,6097 6552,6011 6377,5895C5951,5614 5473,5441 4966,5385C4707,5356 4323,5369 4055,5415C2724,5645 1632,6692 1335,8024C1276,8292 1266,8388 1266,8735C1266,9017 1269,9072 1288,9197C1378,9770 1586,10264 1918,10688C2045,10851 2091,10898 2205,10979C2806,11409 3559,11619 4287,11560z\" id=\"svg_2\" fill=\"#999999\"></path></g></g></svg>',\n            nlp_search: true,\n            suggestions_search: false,\n            is_dataset_selected: false,\n            recent_svg: '<?xml version=\"1.0\" encoding=\"iso-8859-1\"?><svg version=\"1.1\" id=\"Capa_1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" x=\"0px\" y=\"0px\" height=\"15px\" width=\"15px\"\t viewBox=\"0 0 477.867 477.867\" style=\"enable-background:new 0 0 477.867 477.867;\" xml:space=\"preserve\"><style> .recent { fill: #E5E5E5 } </style><g>\t<g>\t\t<path class=\"recent\" d=\"M238.933,0C106.974,0,0,106.974,0,238.933s106.974,238.933,238.933,238.933s238.933-106.974,238.933-238.933\t\t\tC477.726,107.033,370.834,0.141,238.933,0z M238.933,443.733c-113.108,0-204.8-91.692-204.8-204.8s91.692-204.8,204.8-204.8\t\t\ts204.8,91.692,204.8,204.8C443.611,351.991,351.991,443.611,238.933,443.733z\"/>\t</g></g><g>\t<g>\t\t<path class=\"recent\" d=\"M238.933,85.333c-9.426,0-17.067,7.641-17.067,17.067v119.467H102.4c-9.426,0-17.067,7.641-17.067,17.067\t\t\tS92.974,256,102.4,256h136.533c9.426,0,17.067-7.641,17.067-17.067V102.4C256,92.974,248.359,85.333,238.933,85.333z\"/>\t</g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g><g></g></svg>'\n        };\n    },\n\n    created () {\n        this.tagsFromValue();\n\n        if (this.typeaheadAlwaysShow) {\n            this.searchTag(false);\n        }\n    },\n\n    mounted () {\n        // Emit an event\n        this.discardSearchText = this.arrows_svg_alt + '&nbsp; to navigate     ' + this.enter_svg + '&nbsp; to select ' + this.escape_svg + '&nbsp; to dismiss';\n        this.$emit('initialized');\n        \n        document.addEventListener('click', (e) => {\n            if (e.target !== this.$refs['taginput']) {\n                this.clearSearchResults();\n            }\n        });\n\n        this.$on('analytics_search_bar_voice_result',(data) => {\n            this.input = data;\n        });\n\n        this.$root.$on('dataset_selected',(data) => {\n            this.is_dataset_selected = true;\n        })\n        this.$root.$on('clear_analytics_search_bar', (data) => {\n          this.input = \"\";\n        });\n        this.$root.$on('add_text_to_search_bar', (data) => {\n          this.input = data;\n        });\n    },\n\n    computed: {\n        hideInputField() {\n            return (this.hideInputOnLimit && this.limit > 0 && this.tags.length >= this.limit);\n        }\n    },\n\n    watch: {\n        input(newVal, oldVal) {\n            this.searchTag(false);\n\n            if (newVal.length && newVal != oldVal) {\n                const diff = newVal.substring(oldVal.length, newVal.length);\n\n                if (this.addTagsOnSpace) {\n                    if (newVal.endsWith(' ')) {\n                        // The space shouldn't actually be inserted\n                        this.input = newVal.trim();\n\n                        // Add the inputed tag\n                        this.tagFromInput(true);\n                    }\n                }\n\n                if (this.addTagsOnComma) {\n                    newVal = newVal.trim();\n\n                    if (newVal.endsWith(',')) {\n                        // The comma shouldn't actually be inserted\n                        this.input = newVal.substring(0, newVal.length - 1);\n\n                        // Add the inputed tag\n                        this.tagFromInput(true);\n                    }\n                }\n\n                this.$emit('change', newVal);\n            }\n        },\n\n        tags() {\n            // Updating the hidden input\n            this.hiddenInput = JSON.stringify(this.tags);\n\n            // Update the bound v-model value\n            this.$emit('input', this.tags);\n        },\n\n        value() {\n            this.tagsFromValue();\n        },\n\n        typeaheadAlwaysShow(newValue) {\n            if (newValue) {\n                this.searchTag(false);\n            } else {\n                this.clearSearchResults();\n            }\n        },\n        nlp_search(newVal,oldVal){\n            if(newVal === true){\n                this.$root.$emit('nlp_search', true);\n            }\n            if(newVal === false){\n                this.$root.$emit('nlp_search', false);\n            }\n            // console.log(newVal,oldVal);\n\n            // this.search_data = [];\n            // if(newVal === false){\n            //     this.dataset_icon_to_be_showed = this.dataset_icon_svg;\n            //     this.dataset_name = null;\n            // }\n        },\n        suggestions_search(newVal, oldVal){\n            if(newVal === true){\n                this.$root.$emit('nlp_search', false);\n            }\n            if(newVal === false){\n                this.$root.$emit('nlp_search', true);\n            }\n        }\n\n    },\n\n    methods: {\n        /**\n         * Remove reserved regex characters from a string so that they don't\n         * affect search results\n         * \n         * @param string\n         * @returns String\n         */\n        escapeRegExp(string) {\n            return string.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&');\n        },\n\n        /**\n         * Add a tag whether from user input or from search results (typeahead)\n         * \n         * @param ignoreSearchResults\n         * @returns void\n         */\n        tagFromInput(ignoreSearchResults = false) {\n            // If we're choosing a tag from the search results\n            if (this.searchResults.length && this.searchSelection >= 0 && !ignoreSearchResults) {\n                this.tagFromSearch(this.searchResults[this.searchSelection]);\n\n                this.input = '';\n            } else {\n                // If we're adding an unexisting tag\n                let text = this.input.trim();\n\n                // If the new tag is not an empty string and passes validation\n                if (!this.onlyExistingTags && text.length && this.validate(text)) {\n                    this.input = '';\n\n                    // Determine if the inputted tag exists in the existingTags\n                    // array\n                    let newTag = {\n                        key: null,\n                        value: text,\n                        value_to_display: text\n                    };\n                    // console.log(newTag.value, typeof(newTag.value));\n                    // const searchQuery = this.escapeRegExp(\n                    //     this.caseSensitiveTags\n                    //         ? newTag.value\n                    //         : newTag.value.toLowerCase()\n                    // );\n                    \n\n                    // for (let tag of this.existingTags) {\n                    //     const compareable = this.caseSensitiveTags\n                    //         ? tag.value\n                    //         : tag.value.toLowerCase();\n\n                    //     if (searchQuery === compareable) {\n                    //         newTag = Object.assign({}, tag);\n\n                    //         break;\n                    //     }\n                    // }\n\n                    this.addTag(newTag);\n                }\n            }\n        },\n\n        /**\n         * Add a tag from search results when a user clicks on it\n         * \n         * @param tag\n         * @returns void\n         */\n        tagFromSearchOnClick(tag) {\n            this.tagFromSearch(tag);\n\n            this.$refs['taginput'].blur();\n        },\n\n        /**\n         * Add the selected tag from the search results.\n         * Clear search results.\n         * Clear user input.\n         * \n         * @param tag\n         * @return void\n         */\n        tagFromSearch(tag) {\n            this.clearSearchResults();\n            this.addTag(tag);\n\n            this.$nextTick(() => {\n                this.input = '';\n                this.oldInput = '';\n            });\n        },\n\n        /**\n         * Add/Select a tag\n         * \n         * @param tag\n         * @returns void | Boolean\n         */\n        addTag(tag) {\n            if (!this.beforeAddingTag(tag)) {\n                return false;\n            }\n\n            // Check if the limit has been reached\n            if (this.limit > 0 && this.tags.length >= this.limit) {\n                this.$emit('limit-reached');\n\n                return false;\n            }\n\n            // Attach the tag if it hasn't been attached yet\n            if (!this.tagSelected(tag)) {\n                this.tags.push(tag);\n\n                // Emit events\n                this.$nextTick(() => {\n                    this.$emit('tag-added', tag);\n                    this.$emit('tags-updated');\n                });\n            }\n        },\n\n        /**\n         * Remove the last tag in the tags array.\n         * \n         * @returns void\n         */\n        removeLastTag() {\n            if (!this.input.length && this.deleteOnBackspace && this.tags.length) {\n                this.removeTag(this.tags.length - 1);\n            }\n        },\n\n        /**\n         * Remove the selected tag at the specified index.\n         * \n         * @param index\n         * @returns void\n         */\n        removeTag(index) {\n            let tag = this.tags[index];\n\n            if (!this.beforeRemovingTag(tag)) {\n                return false;\n            }\n\n            this.tags.splice(index, 1);\n\n            // Emit events\n            this.$nextTick(() => {\n                this.$emit('tag-removed', tag);\n                this.$emit('tags-updated');\n\n                if (this.typeaheadAlwaysShow) {\n                    this.searchTag();\n                }\n            });\n        },\n\n        /**\n         * Search the currently entered text in the list of existing tags\n         * \n         * @returns void | Boolean\n         */\n        searchTag() {\n            if (this.typeahead !== true) {\n                return false;\n            }\n\n            if (this.oldInput != this.input || (!this.searchResults.length && this.typeaheadActivationThreshold == 0) || this.typeaheadAlwaysShow || this.typeaheadShowOnFocus) {\n                this.searchResults = [];\n                this.searchSelection = 0;\n                let input = this.input.trim();\n\n                if ((input.length && input.length >= this.typeaheadActivationThreshold) || this.typeaheadActivationThreshold == 0 || this.typeaheadAlwaysShow) {\n                    // Find all the existing tags which include the search text\n                    const searchQuery = this.escapeRegExp(\n                        this.caseSensitiveTags ? input : input.toLowerCase()\n                    );\n\n                    // AJAX search\n                    if (this.typeaheadUrl.length > 0) {\n                        this.existingTags.splice();\n                        const xhttp = new XMLHttpRequest();\n                        const that = this;\n\n                        xhttp.onreadystatechange = function () {\n                            if (this.readyState == 4 && this.status == 200) {\n                                that.existingTags = JSON.parse(xhttp.responseText);\n\n                                that.doSearch(searchQuery);\n                            }\n                        }\n\n                        const endpoint = this.typeaheadUrl.replace(':search', searchQuery);\n                        xhttp.open('GET', endpoint, true);\n                        xhttp.send();\n                    } else {\n                        // Search the existing collection\n                        this.doSearch(searchQuery);\n                    }\n                }\n\n                this.oldInput = this.input;\n            }\n        },\n\n        /**\n         * Perform the actual search\n         * \n         * @param string searchQuery\n         * @return void\n         */\n        doSearch(searchQuery) {\n            // console.log(searchQuery,typeof(searchQuery));\n            // debugger;\n            for (let tag of this.existingTags) {\n                const compareable = this.caseSensitiveTags\n                    ? tag.value\n                    : tag.value.toString().toLowerCase();\n                // const compareable = tag.value;\n\n                if (compareable.search(searchQuery) > -1 && ! this.tagSelected(tag)) {\n                    this.searchResults.push(tag);\n                }\n            }\n\n            // Sort the search results alphabetically\n            if (this.sortSearchResults) {\n                this.searchResults.sort((a, b) => {\n                    if (a.value < b.value) return -1;\n                    if (a.value > b.value) return 1;\n\n                    return 0;\n                });\n            }\n\n            // Shorten Search results to desired length\n            if (this.typeaheadMaxResults > 0) {\n                this.searchResults = this.searchResults.slice(\n                    0,\n                    this.typeaheadMaxResults\n                );\n            }\n        },\n\n        /**\n         * Hide the typeahead if there's nothing intered into the input field.\n         * \n         * @returns void\n         */\n        hideTypeahead() {\n            if (! this.input.length) {\n                this.$nextTick(() => {\n                    this.clearSearchResults();\n                });\n            }\n        },\n\n        /**\n         * Select the next search result in typeahead.\n         * \n         * @returns void\n         */\n        nextSearchResult() {\n            if (this.searchSelection + 1 <= this.searchResults.length - 1) {\n                this.searchSelection++;\n            }\n        },\n\n        /**\n         * Select the previous search result in typeahead.\n         * \n         * @returns void\n         */\n        prevSearchResult() {\n            if (this.searchSelection > 0) {\n                this.searchSelection--;\n            }\n        },\n\n        /**\n         * Clear/Empty the search results.\n         * \n         * @reutrns void\n         */\n        clearSearchResults(returnFocus = false) {\n            this.searchResults = [];\n            this.searchSelection = 0;\n\n            if (this.typeaheadAlwaysShow) {\n                this.$nextTick(() => {\n                    this.searchTag();\n                });\n            }\n\n            if (returnFocus) {\n                this.$refs['taginput'].focus();\n            }\n        },\n\n        /**\n         * Clear the list of selected tags.\n         * \n         * @returns void\n         */\n        clearTags() {\n            this.tags.splice(0, this.tags.length);\n        },\n\n        /**\n         * Replace the currently selected tags with the tags from the value.\n         * \n         * @returns void\n         */\n        tagsFromValue() {\n            if (this.value && this.value.length) {\n                if (!Array.isArray(this.value)) {\n                    console.error('Voerro Tags Input: the v-model value must be an array!');\n\n                    return;\n                }\n                \n                let tags = this.value;\n\n                // Don't update if nothing has changed\n                if (this.tags == tags) {\n                    return;\n                }\n\n                this.clearTags();\n\n                for (let tag of tags) {\n                    this.addTag(tag);\n                }\n            } else {\n                if (this.tags.length == 0) {\n                    return;\n                }\n\n                this.clearTags();\n            }\n        },\n\n        /**\n         * Check if a tag is already selected.\n         * \n         * @param tag\n         * @returns Boolean\n         */\n        tagSelected(tag) {\n            if (this.allowDuplicates) {\n                return false;\n            }\n\n            if (! tag) {\n                return false;\n            }\n\n            const searchQuery = this.escapeRegExp(\n                this.caseSensitiveTags ? tag.value : tag.value.toString().toLowerCase()\n            );\n\n            for (let selectedTag of this.tags) {\n                const compareable = this.caseSensitiveTags\n                    ? selectedTag.value\n                    : selectedTag.value.toString().toLowerCase();\n\n                if (selectedTag.key === tag.key && this.escapeRegExp(compareable).length == searchQuery.length && compareable.search(searchQuery) > -1) {\n                    return true;\n                }\n            }\n\n            return false;\n        },\n\n        /**\n         * Clear the input.\n         * \n         * @returns void\n         */\n        clearInput() {\n            this.input = '';\n        },\n\n        /**\n         * Process all the keyup events.\n         * \n         * @param e\n         * @returns void\n         */\n        onKeyUp(e) {\n            this.$emit('keyup', e);\n        },\n\n        /**\n         * Process all the keydown events.\n         * \n         * @param e\n         * @returns void\n         */\n        onKeyDown(e) {\n            this.$emit('keydown', e);\n        },\n\n        /**\n         * Process the onfocus event.\n         * \n         * @param e\n         * @returns void\n         */\n        onFocus(e) {\n            this.$emit('focus', e);\n\n            this.isActive = true;\n        },\n\n        /**\n         * Process the onClick event.\n         * \n         * @param e\n         * @returns void\n         */\n        onClick(e) {\n            this.$emit('click', e);\n\n            this.isActive = true;\n\n            this.searchTag();\n        },\n\n        /**\n         * Process the onblur event.\n         * \n         * @param e\n         * @returns void\n         */\n        onBlur(e) {\n            this.$emit('blur', e)\n\n            if (this.addTagsOnBlur) {\n                // Add the inputed tag\n                this.tagFromInput(true);\n            }\n\n            if (!this.typeaheadAlwaysShow) {\n                this.hideTypeahead();\n            } else {\n                this.searchTag();\n            }\n\n            this.isActive = false;\n        },\n    },\n    mixins: [voicerecorder, start_voice_communication, foreignxchange_custom, generate_time],\n}\n</script>\n"],"sourceRoot":"src/portal/analytics/tags_input"}]}