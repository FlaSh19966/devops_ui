{"remainingRequest":"/home/vimalesh/Learning/devops_ui/node_modules/babel-loader/lib/index.js!/home/vimalesh/Learning/devops_ui/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/vimalesh/Learning/devops_ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/vimalesh/Learning/devops_ui/src/portal/analytics/components/Bargraph.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/vimalesh/Learning/devops_ui/src/portal/analytics/components/Bargraph.vue","mtime":1643027096188},{"path":"/home/vimalesh/Learning/devops_ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vimalesh/Learning/devops_ui/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/vimalesh/Learning/devops_ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vimalesh/Learning/devops_ui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Bargraph.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n<div>\n  <div id=\"barchart\">\n\n  </div>\n  <!-- <button id=\"export\">  </button> -->\n</div>\n</template>\n<script>\nimport * as d3 from 'd3-3';\nexport default {\n  name: \"BarChart\",\n  props: {\n    xKey: String,\n    yKey: String,\n    data: Array,\n    currency_key: String,\n  },\n  mounted() {\n  const vm = this;\n   this.data.sort(function(a, b) {\n            return b[vm.yKey] - a[vm.yKey];\n      });\n  var DATA_COUNT = 900;         \nvar MAX_LABEL_LENGTH = 30; \n      \nvar data = [];\ndata = this.data;\n// for (var i = 0; i < DATA_COUNT; i++) {\n//     var datum = {};\n//     datum.label = stringGen(MAX_LABEL_LENGTH)\n//     datum.value = Math.floor(Math.random() * 600);\n//     data.push(datum);\n// }\nconsole.log(data);\nfunction stringGen(maxLength) {\n    var text = \"\";\n    var charset = \"abcdefghijklmnopqrstuvwxyz0123456789\";\n\n    for( var i=0; i < getRandomArbitrary(1, maxLength) ; i++ ) {\n        text += charset.charAt(Math.floor(Math.random() * charset.length));\n    }                                                \n\n    return text;\n}\n  \nfunction getRandomArbitrary(min, max) {\n  return Math.round(Math.random() * (max - min) + min);\n}  \n \n                   \nvar margin =  {top: 20, right: 10, bottom: 20, left: 40};\nvar marginOverview = {top: 30, right: 10, bottom: 20, left: 40};\nvar selectorHeight = 10;\nvar width = 900 - margin.left - margin.right;\nvar height = 400 - margin.top - margin.bottom - selectorHeight;\nvar heightOverview = 80 - marginOverview.top - marginOverview.bottom;\n       \n// var maxLength = d3.max(data.map(function(d){ return d.label.length}))\n// var barWidth = maxLength * 2;\nvar barWidth = 20 * 2;\nvar numBars = Math.round(width/barWidth);\nvar isScrollDisplayed = barWidth * data.length > width;\n       \n\nconsole.log(isScrollDisplayed)\n  \nvar xscale = d3.scale.ordinal()\n                .domain(data.slice(0,numBars).map(function (d) { return d[vm.xKey]; }))\n                .rangeBands([0, width], .2);\n\nvar yscale = d3.scale.linear()\n\t\t\t\t\t\t\t.domain([0, d3.max(data, function (d) { return d[vm.yKey]; })])\n              .range([height, 0]);\n  \nvar xAxis  = d3.svg.axis().scale(xscale).orient(\"bottom\");\nvar yAxis  = d3.svg.axis().scale(yscale).orient(\"left\")\n            .ticks(10, \"s\");\n;\n  \nvar svg = d3.select(\"#barchart\").append(\"svg\")\n\t\t.attr(\"width\", width + margin.left + margin.right)\n\t    \t.attr(\"height\", height + margin.top + margin.bottom + selectorHeight);\n  \nvar diagram = \nsvg.append(\"g\")\n .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n  \ndiagram.append(\"g\")\n  \t\t .attr(\"class\", \"x axis\")\n       .attr(\"transform\", \"translate(0, \" + height + \")\")\n       .call(xAxis)\n       .selectAll(\".tick text\")\n          .attr(\"y\", 0)\n          .attr(\"x\", -10)\n          .attr(\"dy\", \".35em\")\n          .attr(\"transform\", \"rotate(-70)\")\n          .style(\"text-anchor\", \"end\")\n  \ndiagram.append(\"g\")\n       .attr(\"class\", \"y axis\")\n       .call(yAxis);\n  \nvar bars = diagram.append(\"g\");\n  \nbars.selectAll(\"rect\")\n            .data(data.slice(0, numBars), function (d) {return d[vm.xKey]; })\n            .enter().append(\"rect\")\n            .attr(\"class\", \"bar-positive\")\n            .attr(\"id\", function(d, i) {\n              return  d[vm.xKey];\n            })\n            .attr(\"x\", function (d) { return xscale(d[vm.xKey]); })\n            .attr(\"y\", function (d) { return yscale(d[vm.yKey]); })\n            .attr(\"width\", xscale.rangeBand())\n            .attr(\"height\", function (d) { return height - yscale(d[vm.yKey]); });\n\n  \nif (isScrollDisplayed)\n{\n  var xOverview = d3.scale.ordinal()\n                  .domain(data.map(function (d) { return d[vm.xKey]; }))\n                  .rangeBands([0, width], .2);\n var   yOverview = d3.scale.linear().range([heightOverview, 0]);\n  yOverview.domain(yscale.domain());\n\n  var subBars = diagram.selectAll('.subBar')\n      .data(data)\n\n  subBars.enter().append(\"rect\")\n      .classed('subBar', true)\n      .attr({\n          height: function(d) {\n              return heightOverview - yOverview(d[vm.yKey]);\n          },\n          width: function(d) {\n              return xOverview.rangeBand()\n          },\n          x: function(d) {\n\n              return xOverview(d[vm.xKey]);\n          },\n          y: function(d) {\n              return height + heightOverview + yOverview(d[vm.yKey])\n          }\n      })\n\n  var displayed = d3.scale.quantize()\n              .domain([0, width])\n              .range(d3.range(data.length));\n\n  diagram.append(\"rect\")\n              .attr(\"transform\", \"translate(0, \" + (height + margin.bottom) + \")\")\n              .attr(\"class\", \"mover\")\n              .attr(\"x\", 0)\n              .attr(\"y\", 0)\n              .attr(\"height\", selectorHeight)\n              .attr(\"width\", Math.round(parseFloat(numBars * width)/data.length))\n              .attr(\"pointer-events\", \"all\")\n              .attr(\"cursor\", \"ew-resize\")\n              .call(d3.behavior.drag().on(\"drag\", display));\n}\nfunction display () {\n    var x = parseInt(d3.select(this).attr(\"x\")),\n        nx = x + d3.event.dx,\n        w = parseInt(d3.select(this).attr(\"width\")),\n        f, nf, new_data, rects;\n\n    if ( nx < 0 || nx + w > width ) return;\n\n    d3.select(this).attr(\"x\", nx);\n\n    f = displayed(x);\n    nf = displayed(nx);\n\n    if ( f === nf ) return;\n\n    new_data = data.slice(nf, nf + numBars);\n\n    xscale.domain(new_data.map(function (d) { return d[vm.xKey]; }));\n    diagram.select(\".x.axis\").call(xAxis)\n    .selectAll(\".tick text\")\n          .attr(\"y\", 0)\n          .attr(\"x\", -10)\n          .attr(\"dy\", \".35em\")\n          .attr(\"transform\", \"rotate(-70)\")\n          .style(\"text-anchor\", \"end\")  \n\n    rects = bars.selectAll(\"rect\")\n    .data(new_data, function (d) {return d[vm.xKey]; });\n\n\t \trects.attr(\"x\", function (d) { return xscale(d[vm.xKey]); });\n\n// \t  rects.attr(\"transform\", function(d) { return \"translate(\" + xscale(d.label) + \",0)\"; })\n\n    rects.enter().append(\"rect\")\n      .attr(\"class\", \"bar-positive\")\n      .attr(\"id\", function(d, i) {\n        return  d[vm.xKey];\n      })\n      .attr(\"x\", function (d) { return xscale(d[vm.xKey]); })\n      .attr(\"y\", function (d) { return yscale(d[vm.yKey]); })\n      .attr(\"width\", xscale.rangeBand())\n      .attr(\"height\", function (d) { return height - yscale(d[vm.yKey]); });\n\n    rects.exit().remove();\n};\n\nvar tooltip = d3.select(\".card-body\").append(\"div\").attr(\"class\", \"toolTip\");\n          d3.selectAll(\".bar-positive\")\n          .on(\"mouseover\", function(d){\n            var x = d3.select(this).attr('id'),\n              n= vm.data.length,\n              yval\n              for(let i=0;  i < n; i++ ){\n                if(vm.data[i][vm.xKey] === x) {\n                  yval = vm.data[i][vm.yKey]\n                }\n              }\n              // console.log(Number.isInteger(yval))\n                  tooltip\n                  .style(\"left\", event.pageX - 315 + \"px\")\n                  .style(\"top\", event.pageY - 170 + \"px\")\n                  .style(\"display\", \"inline-block\")\n                  // .html((vm.data[x][vm.yKey]) + \"<br>\"  + (vm.data[x][vm.xKey]));\n                  .html( x + \"<br>\"  +vm.currency_key + ' ' +  ((Number.isInteger(yval))? yval : yval.toFixed(2)));\n              })\n              .on(\"mouseout\", function(d){\n                  tooltip.style(\"display\", \"none\");\n              });\n  \n\n  }\n}\n\n</script>\n<style>\n/* .bar {\n  fill: steelblue;\n  clip-path: url(#clip);\n}\n  \n.subBar { \n  fill: gray;\n  opacity: 0.5;\n}\n\n.axis path,\n.axis line {\n  fill: none;\n  stroke: #000;\n  shape-rendering: crispEdges;\n}\n\n.brush .extent {\n  stroke: #fff;\n  fill: steelblue;\n  fill-opacity: .25;\n  shape-rendering: crispEdges;\n}\n\n  rect.mover {\n            stroke: red;\n            stroke-opacity: .1;\n            fill: lightSteelBlue;\n            fill-opacity: .5;\n        } */\n</style>"],"sourceRoot":"src/portal/analytics/components"}]}