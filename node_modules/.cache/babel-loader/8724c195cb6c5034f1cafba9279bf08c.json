{"remainingRequest":"/home/vimalesh/Learning/devops_ui/node_modules/babel-loader/lib/index.js!/home/vimalesh/Learning/devops_ui/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/vimalesh/Learning/devops_ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/vimalesh/Learning/devops_ui/src/portal/analytics/components/MultiLineChartAlternative.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/vimalesh/Learning/devops_ui/src/portal/analytics/components/MultiLineChartAlternative.vue","mtime":1643027096188},{"path":"/home/vimalesh/Learning/devops_ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vimalesh/Learning/devops_ui/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/vimalesh/Learning/devops_ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vimalesh/Learning/devops_ui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["MultiLineChartAlternative.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n<div id=\"#chart\">\n<div id=\"test1\">\n  <svg></svg>\n</div>\n</div>\n</template>\n\n<script>\nimport * as d3 from \"d3-3\";\nexport default {\n  name: \"MultiLineChartAlternative\",\n  props : {\n    xKey: String,\n    yKey: String,\n    apiData: Array,\n    dateKey: String\n  },\n  // data : {\n\n  // },\n  mounted() {\n\n      setTimeout(() => {\n        resize_of_page();\n        resize_of_page();\n        resize_of_page();\n        resize_of_page();\n        resize_of_page();\n      }, 400);\n      // setTimeout(() => {\n      //   resize_of_page();\n      // }, 1200);\n      // setTimeout(() => {\n      //   resize_of_page();\n      // }, 1500);\n      // setTimeout(() => {\n      //   resize_of_page();\n      // }, 800);\n\n    // console.log(this.xKey,this.yKey,this.dateKey);\n    // console.log(this.apiData);\n   var api_data = \n        [\n            {\"SALES\":1340.450419999999,\"YEAR\":\"2016\",\"DATENEW\":\"Thu, 17 Mar 2016 10:18:47 GMT\",\"CATEGORY\":\"Stonefruits\",\"MONTH\":\"03\"},\n            {\"SALES\":170.90194000000005,\"YEAR\":\"2016\",\"DATENEW\":\"Thu, 17 Mar 2016 11:53:12 GMT\",\"CATEGORY\":\"Cucumbers\",\"MONTH\":\"03\"},\n            {\"SALES\":74.79999999999998,\"YEAR\":\"2016\",\"DATENEW\":\"Fri, 18 Mar 2016 12:13:55 GMT\",\"CATEGORY\":\"Sri Lankan Groceries\",\"MONTH\":\"03\"},\n            {\"SALES\":62.93936000000001,\"YEAR\":\"2016\",\"DATENEW\":\"Sat, 19 Mar 2016 19:42:10 GMT\",\"CATEGORY\":\"Veggies\",\"MONTH\":\"03\"},\n            {\"SALES\":218.4778800000001,\"YEAR\":\"2016\",\"DATENEW\":\"Sun, 20 Mar 2016 17:12:06 GMT\",\"CATEGORY\":\"Mushrooms\",\"MONTH\":\"03\"},\n            {\"SALES\":262.5995236363638,\"YEAR\":\"2016\",\"DATENEW\":\"Sun, 20 Mar 2016 17:34:22 GMT\",\"CATEGORY\":\"Tropical Fruits\",\"MONTH\":\"03\"},\n            {\"SALES\":69.59320000000001,\"YEAR\":\"2016\",\"DATENEW\":\"Sun, 20 Mar 2016 19:02:15 GMT\",\"CATEGORY\":\"Cabbages\",\"MONTH\":\"03\"},\n            {\"SALES\":671.8349600000005,\"YEAR\":\"2016\",\"DATENEW\":\"Wed, 23 Mar 2016 01:04:06 GMT\",\"CATEGORY\":\"Bananas\",\"MONTH\":\"03\"},\n            {\"SALES\":116.20128545454547,\"YEAR\":\"2016\",\"DATENEW\":\"Wed, 23 Mar 2016 01:35:13 GMT\",\"CATEGORY\":\"Nuts\",\"MONTH\":\"03\"},\n            {\"SALES\":295.2000000000002,\"YEAR\":\"2016\",\"DATENEW\":\"Wed, 23 Mar 2016 04:31:17 GMT\",\"CATEGORY\":\"Avocadoes\",\"MONTH\":\"03\"},\n            {\"SALES\":47.5,\"YEAR\":\"2016\",\"DATENEW\":\"Thu, 24 Mar 2016 03:13:07 GMT\",\"CATEGORY\":\"Herbs\",\"MONTH\":\"03\"},\n            {\"SALES\":169.20256000000003,\"YEAR\":\"2016\",\"DATENEW\":\"Thu, 24 Mar 2016 04:12:32 GMT\",\"CATEGORY\":\"Pumpkins\",\"MONTH\":\"03\"},{\"SALES\":307.6499999999997,\"YEAR\":\"2016\",\"DATENEW\":\"Thu, 24 Mar 2016 04:43:59 GMT\",\"CATEGORY\":\"Eggs\",\"MONTH\":\"03\"},{\"SALES\":975.1200545454553,\"YEAR\":\"2016\",\"DATENEW\":\"Thu, 24 Mar 2016 05:22:50 GMT\",\"CATEGORY\":\"Other Vegies\",\"MONTH\":\"03\"},{\"SALES\":112.4447,\"YEAR\":\"2016\",\"DATENEW\":\"Fri, 25 Mar 2016 01:48:45 GMT\",\"CATEGORY\":\"Chillies\",\"MONTH\":\"03\"},{\"SALES\":597.0905363636365,\"YEAR\":\"2016\",\"DATENEW\":\"Fri, 25 Mar 2016 03:28:03 GMT\",\"CATEGORY\":\"Citrus\",\"MONTH\":\"03\"},{\"SALES\":166.812,\"YEAR\":\"2016\",\"DATENEW\":\"Fri, 25 Mar 2016 03:50:08 GMT\",\"CATEGORY\":\"carrots\",\"MONTH\":\"03\"},{\"SALES\":360.92106,\"YEAR\":\"2016\",\"DATENEW\":\"Fri, 25 Mar 2016 04:41:19 GMT\",\"CATEGORY\":\"capsicum\",\"MONTH\":\"03\"},{\"SALES\":57.88363636363637,\"YEAR\":\"2016\",\"DATENEW\":\"Sat, 26 Mar 2016 22:51:27 GMT\",\"CATEGORY\":\"Other Fruits\",\"MONTH\":\"03\"},{\"SALES\":884.4411199999997,\"YEAR\":\"2016\",\"DATENEW\":\"Sat, 26 Mar 2016 23:37:38 GMT\",\"CATEGORY\":\"Potatoes\",\"MONTH\":\"03\"},{\"SALES\":304.92546000000004,\"YEAR\":\"2016\",\"DATENEW\":\"Sun, 27 Mar 2016 00:25:07 GMT\",\"CATEGORY\":\"Pears\",\"MONTH\":\"03\"},{\"SALES\":303.2260000000004,\"YEAR\":\"2016\",\"DATENEW\":\"Sun, 27 Mar 2016 00:28:50 GMT\",\"CATEGORY\":\"Bunch Vegies\",\"MONTH\":\"03\"},{\"SALES\":620.6673999999997,\"YEAR\":\"2016\",\"DATENEW\":\"Sun, 27 Mar 2016 01:08:03 GMT\",\"CATEGORY\":\"Tomatoes\",\"MONTH\":\"03\"},{\"SALES\":629.8516800000004,\"YEAR\":\"2016\",\"DATENEW\":\"Sun, 27 Mar 2016 01:45:58 GMT\",\"CATEGORY\":\"Apples\",\"MONTH\":\"03\"},{\"SALES\":372.82099999999923,\"YEAR\":\"2016\",\"DATENEW\":\"Sun, 27 Mar 2016 03:38:16 GMT\",\"CATEGORY\":\"Lettuces\",\"MONTH\":\"03\"},{\"SALES\":154.485,\"YEAR\":\"2016\",\"DATENEW\":\"Sun, 27 Mar 2016 23:08:40 GMT\",\"CATEGORY\":\"Multi buy\",\"MONTH\":\"03\"},{\"SALES\":387.9157999999999,\"YEAR\":\"2016\",\"DATENEW\":\"Mon, 28 Mar 2016 02:15:11 GMT\",\"CATEGORY\":\"Melons\",\"MONTH\":\"03\"},{\"SALES\":180.2172727272728,\"YEAR\":\"2016\",\"DATENEW\":\"Mon, 28 Mar 2016 22:59:34 GMT\",\"CATEGORY\":\"Olympian Products\",\"MONTH\":\"03\"},{\"SALES\":633.3682436363638,\"YEAR\":\"2016\",\"DATENEW\":\"Mon, 28 Mar 2016 23:57:28 GMT\",\"CATEGORY\":\"Onions\",\"MONTH\":\"03\"},{\"SALES\":854.30096,\"YEAR\":\"2016\",\"DATENEW\":\"Wed, 30 Mar 2016 03:02:09 GMT\",\"CATEGORY\":\"Grapes\",\"MONTH\":\"03\"},{\"SALES\":108.0,\"YEAR\":\"2016\",\"DATENEW\":\"Wed, 30 Mar 2016 04:15:59 GMT\",\"CATEGORY\":\"Flowers\",\"MONTH\":\"03\"},{\"SALES\":87.10741999999999,\"YEAR\":\"2016\",\"DATENEW\":\"Wed, 30 Mar 2016 21:40:15 GMT\",\"CATEGORY\":\"Root Vegies\",\"MONTH\":\"03\"},{\"SALES\":73.7,\"YEAR\":\"2016\",\"DATENEW\":\"Thu, 31 Mar 2016 00:23:50 GMT\",\"CATEGORY\":\"Cut Veggies\",\"MONTH\":\"03\"},{\"SALES\":216.50410000000002,\"YEAR\":\"2016\",\"DATENEW\":\"Thu, 31 Mar 2016 01:27:43 GMT\",\"CATEGORY\":\"Asian Vegies\",\"MONTH\":\"03\"},{\"SALES\":167.87999999999997,\"YEAR\":\"2016\",\"DATENEW\":\"Thu, 31 Mar 2016 01:59:07 GMT\",\"CATEGORY\":\"Berries\",\"MONTH\":\"03\"},\n            {\"SALES\":602.2259454545458,\"YEAR\":\"2016\",\"DATENEW\":\"Fri, 01 Apr 2016 00:26:23 GMT\",\"CATEGORY\":\"Citrus\",\"MONTH\":\"04\"},\n            {\"SALES\":964.0527800000008,\"YEAR\":\"2016\",\"DATENEW\":\"Fri, 01 Apr 2016 00:41:01 GMT\",\"CATEGORY\":\"Other Vegies\",\"MONTH\":\"04\"},\n            {\"SALES\":107.87999999999998,\"YEAR\":\"2016\",\"DATENEW\":\"Fri, 01 Apr 2016 04:50:24 GMT\",\"CATEGORY\":\"Cabbages\",\"MONTH\":\"04\"},\n            {\"SALES\":86.5556,\"YEAR\":\"2016\",\"DATENEW\":\"Fri, 01 Apr 2016 04:50:24 GMT\",\"CATEGORY\":\"Root Vegies\",\"MONTH\":\"04\"},\n            {\"SALES\":675.9299000000002,\"YEAR\":\"2016\",\"DATENEW\":\"Fri, 01 Apr 2016 04:55:24 GMT\",\"CATEGORY\":\"Bananas\",\"MONTH\":\"04\"},\n            {\"SALES\":197.20808000000005,\"YEAR\":\"2016\",\"DATENEW\":\"Fri, 01 Apr 2016 08:06:26 GMT\",\"CATEGORY\":\"Asian Vegies\",\"MONTH\":\"04\"},\n            {\"SALES\":108.0,\"YEAR\":\"2016\",\"DATENEW\":\"Fri, 01 Apr 2016 21:52:12 GMT\",\"CATEGORY\":\"Flowers\",\"MONTH\":\"04\"},\n            {\"SALES\":15.200000000000003,\"YEAR\":\"2016\",\"DATENEW\":\"Sat, 02 Apr 2016 00:22:14 GMT\",\"CATEGORY\":\"Sri Lankan Groceries\",\"MONTH\":\"04\"},\n            {\"SALES\":118.63200000000009,\"YEAR\":\"2016\",\"DATENEW\":\"Sat, 02 Apr 2016 00:22:14 GMT\",\"CATEGORY\":\"carrots\",\"MONTH\":\"04\"},\n            {\"SALES\":129.0,\"YEAR\":\"2016\",\"DATENEW\":\"Sun, 03 Apr 2016 00:00:52 GMT\",\"CATEGORY\":\"Multi buy\",\"MONTH\":\"04\"},\n            {\"SALES\":174.17508000000004,\"YEAR\":\"2016\",\"DATENEW\":\"Sun, 03 Apr 2016 00:00:52 GMT\",\"CATEGORY\":\"capsicum\",\"MONTH\":\"04\"},{\"SALES\":230.56272727272733,\"YEAR\":\"2016\",\"DATENEW\":\"Sun, 03 Apr 2016 00:34:19 GMT\",\"CATEGORY\":\"Olympian Products\",\"MONTH\":\"04\"},{\"SALES\":96.84614727272728,\"YEAR\":\"2016\",\"DATENEW\":\"Sun, 03 Apr 2016 00:37:49 GMT\",\"CATEGORY\":\"Nuts\",\"MONTH\":\"04\"},{\"SALES\":439.10896545454534,\"YEAR\":\"2016\",\"DATENEW\":\"Sun, 03 Apr 2016 01:42:18 GMT\",\"CATEGORY\":\"Tomatoes\",\"MONTH\":\"04\"},{\"SALES\":512.0569200000001,\"YEAR\":\"2016\",\"DATENEW\":\"Sun, 03 Apr 2016 02:44:59 GMT\",\"CATEGORY\":\"Grapes\",\"MONTH\":\"04\"},{\"SALES\":151.0479,\"YEAR\":\"2016\",\"DATENEW\":\"Sun, 03 Apr 2016 02:53:00 GMT\",\"CATEGORY\":\"Pumpkins\",\"MONTH\":\"04\"},{\"SALES\":43.0,\"YEAR\":\"2016\",\"DATENEW\":\"Sun, 03 Apr 2016 02:53:00 GMT\",\"CATEGORY\":\"Cut Veggies\",\"MONTH\":\"04\"},{\"SALES\":137.80607999999995,\"YEAR\":\"2016\",\"DATENEW\":\"Sun, 03 Apr 2016 06:09:50 GMT\",\"CATEGORY\":\"Cucumbers\",\"MONTH\":\"04\"},{\"SALES\":119.0145,\"YEAR\":\"2016\",\"DATENEW\":\"Mon, 04 Apr 2016 01:18:00 GMT\",\"CATEGORY\":\"Chillies\",\"MONTH\":\"04\"},{\"SALES\":276.1008799999999,\"YEAR\":\"2016\",\"DATENEW\":\"Mon, 04 Apr 2016 01:46:01 GMT\",\"CATEGORY\":\"Mushrooms\",\"MONTH\":\"04\"},{\"SALES\":202.88474000000008,\"YEAR\":\"2016\",\"DATENEW\":\"Mon, 04 Apr 2016 03:52:08 GMT\",\"CATEGORY\":\"Melons\",\"MONTH\":\"04\"},{\"SALES\":131.35276,\"YEAR\":\"2016\",\"DATENEW\":\"Tue, 05 Apr 2016 01:46:42 GMT\",\"CATEGORY\":\"Tropical Fruits\",\"MONTH\":\"04\"},{\"SALES\":90.55818181818181,\"YEAR\":\"2016\",\"DATENEW\":\"Tue, 05 Apr 2016 04:01:07 GMT\",\"CATEGORY\":\"Other Fruits\",\"MONTH\":\"04\"},{\"SALES\":187.63225999999992,\"YEAR\":\"2016\",\"DATENEW\":\"Tue, 05 Apr 2016 04:49:26 GMT\",\"CATEGORY\":\"Pears\",\"MONTH\":\"04\"},{\"SALES\":496.3780800000003,\"YEAR\":\"2016\",\"DATENEW\":\"Tue, 05 Apr 2016 05:00:29 GMT\",\"CATEGORY\":\"Onions\",\"MONTH\":\"04\"},{\"SALES\":20.44174,\"YEAR\":\"2016\",\"DATENEW\":\"Tue, 05 Apr 2016 22:36:34 GMT\",\"CATEGORY\":\"Veggies\",\"MONTH\":\"04\"},{\"SALES\":642.8219400000002,\"YEAR\":\"2016\",\"DATENEW\":\"Wed, 06 Apr 2016 02:16:13 GMT\",\"CATEGORY\":\"Potatoes\",\"MONTH\":\"04\"},{\"SALES\":275.8000000000002,\"YEAR\":\"2016\",\"DATENEW\":\"Wed, 06 Apr 2016 03:26:52 GMT\",\"CATEGORY\":\"Avocadoes\",\"MONTH\":\"04\"},{\"SALES\":39.96,\"YEAR\":\"2016\",\"DATENEW\":\"Wed, 06 Apr 2016 03:27:58 GMT\",\"CATEGORY\":\"Groceries-Dry Goods\",\"MONTH\":\"04\"},{\"SALES\":618.9657799999997,\"YEAR\":\"2016\",\"DATENEW\":\"Wed, 06 Apr 2016 04:47:53 GMT\",\"CATEGORY\":\"Stonefruits\",\"MONTH\":\"04\"},{\"SALES\":348.5120000000002,\"YEAR\":\"2016\",\"DATENEW\":\"Thu, 07 Apr 2016 02:45:13 GMT\",\"CATEGORY\":\"Lettuces\",\"MONTH\":\"04\"},{\"SALES\":293.10000000000025,\"YEAR\":\"2016\",\"DATENEW\":\"Thu, 07 Apr 2016 03:24:48 GMT\",\"CATEGORY\":\"Bunch Vegies\",\"MONTH\":\"04\"},{\"SALES\":227.34999999999985,\"YEAR\":\"2016\",\"DATENEW\":\"Fri, 08 Apr 2016 01:04:44 GMT\",\"CATEGORY\":\"Eggs\",\"MONTH\":\"04\"},{\"SALES\":138.97199999999998,\"YEAR\":\"2016\",\"DATENEW\":\"Fri, 08 Apr 2016 04:21:54 GMT\",\"CATEGORY\":\"Herbs\",\"MONTH\":\"04\"},{\"SALES\":502.37238000000025,\"YEAR\":\"2016\",\"DATENEW\":\"Sat, 09 Apr 2016 03:34:50 GMT\",\"CATEGORY\":\"Apples\",\"MONTH\":\"04\"},{\"SALES\":74.27000000000001,\"YEAR\":\"2016\",\"DATENEW\":\"Sat, 09 Apr 2016 04:22:37 GMT\",\"CATEGORY\":\"Berries\",\"MONTH\":\"04\"},{\"SALES\":2.0,\"YEAR\":\"2016\",\"DATENEW\":\"Sat, 09 Apr 2016 04:22:37 GMT\",\"CATEGORY\":\"Cut Fruits\",\"MONTH\":\"04\"}\n        ]\n\n    // var map = api_data.reduce((r, i) => (console.log(r),((r[i.CATEGORY] = r[i.CATEGORY] || []).push({\n    //   date : i.DATENEW,\n    //   sales: i.SALES\n    // }), r)), {});\n    // var entries = Object.entries(map);\n    // const second_data = [];\n    //   for(let i =0; i < entries.length; i++) {\n    //     second_data.push({\n    //       label : entries[i][0],\n    //       data: [],\n    //     })\n    //     for(let j =0 ; j < entries[i][1].length; j++) {\n    //       second_data[i].data.push({\n    //         date: entries[i][1][j].date,\n    //         sales: entries[i][1][j].sales\n    //       })\n    //     }\n    //   }\n    // console.log(\"second data\",second_data)\n\n    // const data = [];\n    //   for(let i =0; i < entries.length; i++) {\n    //     data.push({\n    //       label : entries[i][0],\n    //       data: [],\n    //     })\n    //     for(let j =0 ; j < entries[i][1].length; j++) {\n    //       data[i].data.push({\n    //         date: new Date(entries[i][1][j].date),\n    //         sales: entries[i][1][j].sales\n    //       })\n    //     }\n    //   }\n    // var vm =this;\n    // console.log(this.apiData);\n    var map = this.apiData.reduce((r, i) => ((r[i[this.xKey]] = r[i[this.xKey]] || []).push({\n      // date : i[\"MONTH\"]+\"/\"+\"01/\"+i[\"YEAR\"],\n      date : i[this.dateKey],\n      // date : i[\"MONTH\"],\n      sales: i[this.yKey]\n      // i\n    }), r), {});\n    var entries = Object.entries(map);\n    // console.log(entries);\n    const second_data = [];\n      for(let i =0; i < entries.length; i++) {\n        second_data.push({\n          label : entries[i][0],\n          data: [],\n        })\n        for(let j =0 ; j < entries[i][1].length; j++) {\n          second_data[i].data.push({\n            date: entries[i][1][j].date,\n            sales: entries[i][1][j].sales\n          })\n        }\n      }\n    // console.log(\"second data\",second_data)\n\n    const data = [];\n      for(let i =0; i < entries.length; i++) {\n        data.push({\n          label : entries[i][0],\n          data: [],\n        })\n        for(let j =0 ; j < entries[i][1].length; j++) {\n          data[i].data.push({\n            date: new Date(entries[i][1][j].date),\n            sales: entries[i][1][j].sales\n          })\n        }\n      }\n\n    // console.log(data[0].data[0].date, \"HI\",new Date(data[0].data[0].date));\n    // console.log(\"final data\",data,\"Hi\");\n\n\n    var margin = {top: 30, right: 10, bottom: 50, left: 60},\n      chart = d3LineWithLegend()\n                .xAxis.label(this.xKey)\n                .width(width(margin))\n                .height(height(margin))\n                .yAxis.label(this.yKey);\n\n\n  var svg = d3.select('#test1 svg')\n      .datum(generateData())\n\n  svg.transition().duration(0)\n      .attr('width', width(margin))\n      .attr('height', height(margin))\n      .call(chart);\n\n\n  chart.dispatch.on('showTooltip', function(e) {\n  var offset = $('#test1').offset(), // { left: 0, top: 0 }\n        left = e.pos[0] + offset.left,\n        top = e.pos[1] + offset.top,\n        // formatter = d3.time.format(\"%m/%d/%Y\")\n        formatter = d3.time.format(\"%a,%b/%d/%y\")\n        // console.log(e);\n    // TODO :  \n    var content = '<h3>' + e.series.label + '</h3>' +\n                  '<p>' +\n                  '<span class=\"value\">[' + e.point.sales.toFixed(2) + ', ' + formatter(e.point.date) + ']</span>' +\n                  '</p>';\n              \n\n    nvtooltip.show([left, top], content);\n  });\n\n  chart.dispatch.on('hideTooltip', function(e) {\n    nvtooltip.cleanup();\n  });\n\n\n\n\n  $(window).resize(function() {\n    resize_of_page();\n\n    });\n\n    function resize_of_page(){\n          var margin = chart.margin();\n    chart\n      .width(width(margin))\n      .height(height(margin));\n\n    d3.select('#test1 svg')\n      .attr('width', width(margin))\n      .attr('height', height(margin))\n      .call(chart);\n    }\n\n\n  function width(margin) {\n    var w = $(\".card-body\").width() - 40;\n\n    // return 500;\n    return ( (w - margin.left - margin.right - 20) < 0 ) ? margin.left + margin.right + 2 : w;\n  }\n\n  function height(margin) {\n    // var h = $(\".card-body\").height() - 20;\n    // var h = $(\".card-body\").height() - 20;\n    var h = 700 - 100;\n\n    return ( h - margin.top - margin.bottom - 20 < 0 ) ? \n              margin.top + margin.bottom + 2 : h;\n\n    // return 700\n  }\n\n\n  //data\n  function generateData() {\n    var sin = [],\n        sin2 = [],\n        cos = [],\n        cos2 = [],\n        sin3  = [],\n        sin4 = [],\n        sin5 = [],\n        sin6 = [],\n        cos2 = [],\n        r1 = Math.random(),\n        r2 = Math.random(),\n        r3 = Math.random(),\n        r4 = Math.random(),\n        r5 = Math.random(),\n        r6 = Math.random(),\n        r7 = Math.random()\n        // r4 = Math.random();\n\n    for (var i = 0; i < 100; i++) {\n      sin.push([ i, r1 * Math.sin( r2 +  i / (10 * (r4 + .5) ))]);\n      cos.push([ i, r2 * Math.cos( r3 + i / (10 * (r3 + .5) ))]);\n      sin2.push([ i, r3 * Math.sin( r3 + i / (10 * (r2 + .5) ))]);\n      sin3.push([ i, r4 * Math.sin( r4 + i / (10 * (r2 + .5) ))]);\n      sin4.push([ i, r5 * Math.sin( r5 + i / (10 * (r2 + .5) ))]);\n      sin5.push([ i, r6 * Math.sin( r6 + i / (10 * (r2 + .5) ))]);\n      sin6.push([ i, r7 * Math.sin( r7 + i / (10 * (r2 + .5) ))]);\n      cos2.push([ i, r4 * Math.cos( r4 + i / (10 * (r1 + .5) ))]);\n    }\n      // console.log(cos);\n\n    return data;\n\n    // return [\n    //   {\n    //     data: sin,\n    //     label: \"Sine Wave\"\n    //   },\n    //   {\n    //     data: cos,\n    //     label: \"Cosine Wave\"\n    //   },\n    //   {\n    //     data: sin2,\n    //     label: \"Sine2 Wave\"\n    //   },\n    //   {\n    //     data: cos2,\n    //     label: \"Cosine2 Wave\"\n    //   },\n    //   {\n    //     data: sin3,\n    //     label: \"Sine3 Wave\"\n    //   },\n    //   {\n    //     data: sin4,\n    //     label: \"Sine4 Wave\"\n    //   },\n    //   {\n    //     data: sin5,\n    //     label: \"Sine5 Wave\"\n    //   },\n    //   {\n    //     data: sin6,\n    //     label: \"Sine6 Wave\"\n    //   },\n\n    // ];\n    // console.log(data)\n  }\n\n  function d3Legend() {\n      var margin = {top: 5, right: 0, bottom: 5, left: 10},\n          width = 400,\n          height = 20,\n          color = d3.scale.category20().range(),\n          dispatch = d3.dispatch('legendClick', 'legendMouseover', 'legendMouseout');\n\n\n      function chart(selection) {\n        selection.each(function(data) {\n          // console.log(\"Function-chart\",data);\n          /**\n          *    Legend curently is setup to automaticaly expand vertically based on a max width.\n          *    Should implement legend where EITHER a maxWidth or a maxHeight is defined, then\n          *    the other dimension will automatically expand to fit, and anything that exceeds\n          *    that will automatically be clipped.\n          **/\n\n          var wrap = d3.select(this).selectAll('g.legend').data([data]);\n          var gEnter = wrap.enter().append('g').attr('class', 'legend').append('g');\n\n\n          var g = wrap.select('g')\n              .attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n\n          var series = g.selectAll('.series')\n              .data(function(d) { return d });\n          var seriesEnter = series.enter().append('g').attr('class', 'series')\n              .on('click', function(d, i) {\n                // dispatch.legendClick(d, i);\n              })\n              .on('mouseover', function(d, i) {\n                dispatch.legendMouseover(d, i);\n              })\n              .on('mouseout', function(d, i) {\n                dispatch.legendMouseout(d, i);\n              });\n          seriesEnter.append('circle')\n              .style('fill', function(d, i){ return d.color || color[i % 10] })\n              .style('stroke', function(d, i){ return d.color || color[i % 10] })\n              .attr('r', 5);\n          seriesEnter.append('text')\n              .text(function(d) { return d.label })\n              .attr('text-anchor', 'start')\n              .attr('dy', '.32em')\n              .attr('dx', '8');\n          series.classed('disabled', function(d) { return d.disabled });\n          series.exit().remove();\n\n\n          var ypos = 5,\n              newxpos = 5,\n              maxwidth = 0,\n              xpos;\n          series\n              .attr('transform', function(d, i) {\n                var length = d3.select(this).select('text').node().getComputedTextLength() + 28;\n                xpos = newxpos;\n\n                //TODO: 1) Make sure dot + text of every series fits horizontally, or clip text to fix\n                //      2) Consider making columns in line so dots line up\n                //         --all labels same width? or just all in the same column?\n                //         --optional, or forced always?\n                if (width < margin.left + margin.right + xpos + length) {\n                  newxpos = xpos = 5;\n                  ypos += 20;\n                }\n\n                newxpos += length;\n                if (newxpos > maxwidth) maxwidth = newxpos;\n\n                return 'translate(' + xpos + ',' + ypos + ')';\n              });\n\n          //position legend as far right as possible within the total width\n          g.attr('transform', 'translate(' + (width - margin.right - maxwidth) + ',' + margin.top + ')');\n\n          height = margin.top + margin.bottom + ypos + 15;\n        });\n\n        return chart;\n      }\n\n      chart.dispatch = dispatch;\n\n      chart.margin = function(_) {\n        if (!arguments.length) return margin;\n        margin = _;\n        return chart;\n      };\n\n      chart.width = function(_) {\n        if (!arguments.length) return width;\n        width = _;\n        return chart;\n      };\n\n      chart.height = function(_) {\n        if (!arguments.length) return height;\n        height = _;\n        return chart;\n      };\n\n      chart.color = function(_) {\n        if (!arguments.length) return color;\n        color = _;\n        return chart;\n      };\n\n      return chart;\n  }\n\n\n  function d3Line() {\n  var margin = {top: 0, right: 0, bottom: 0, left: 0},\n      width = 960,\n      height = 500,\n      dotRadius = function() { return 2.5 },\n      color = d3.scale.category20().range(),\n      id = Math.floor(Math.random() * 10000), //Create semi-unique ID incase user doesn't select one\n      // x = d3.scale.linear(),\n      x = d3.time.scale(),\n      y = d3.scale.linear(),\n      dispatch = d3.dispatch(\"pointMouseover\", \"pointMouseout\"),\n      x0, y0;\n\n\n  function chart(selection) {\n    selection.each(function(data) {\n      var seriesData = data.map(function(d) { return d.data });\n      // console.log(data);\n      // console.log(seriesData);\n      // console.log(domain(d3.extent(d3.merge(seriesData), function(d) {  return d.date } )));\n      x0 = x0 || x;\n      y0 = y0 || y;\n\n      //TODO: reconsider points {x: #, y: #} instead of [x,y]\n      //TODO: data accessors so above won't really matter, but need to decide for internal use\n\n      //add series data to each point for future ease of use\n      data = data.map(function(series, i) {\n        series.data = series.data.map(function(point) {\n          point.series = i;\n          return point;\n        });\n        return series;\n      });\n\n\n      // x   .domain(d3.extent(d3.merge(seriesData), function(d) { return d[0] } ))\n      x.domain(d3.extent(d3.merge(seriesData), function(d) {  return d.date } ))\n      // x   .domain(d3.extent(api_data, function(d) { return d.DATENEW; }))\n        // x.domain(api_data.map((d)=>{\n        // return d.DATENEW\n        // }))\n          .range([0, width - margin.left - margin.right]);\n\n      // y   .domain(d3.extent(d3.merge(seriesData), function(d) { return d[1] } ))\n      y.domain(d3.extent(d3.merge(seriesData), function(d) { return d.sales } ))\n          .range([height - margin.top - margin.bottom, 0]);\n\n      // var vertices = \"\";\n\n      var vertices = d3.merge(data.map(function(line, lineIndex) {\n            return line.data.map(function(point, pointIndex) {\n              var pointKey = line.label + '-' + point[0];\n              // console.log(point)\n              // return [x(point[0]), y(point[1]), lineIndex, pointIndex]; //adding series index to point because data is being flattened\n              return [x(point.date), y(point.sales), lineIndex, pointIndex]; //adding series index to point because data is being flattened\n            })\n          })\n      );\n      // console.log(\"verti\",vertices);\n\n\n      var wrap = d3.select(this).selectAll('g.d3line').data([data]);\n      var gEnter = wrap.enter().append('g').attr('class', 'd3line').append('g');\n\n      gEnter.append('g').attr('class', 'lines');\n      gEnter.append('g').attr('class', 'point-clips');\n      gEnter.append('g').attr('class', 'point-paths');\n\n\n      var g = wrap.select('g')\n          .attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n\n\n      var voronoiClip =  gEnter.append('g').attr('class', 'voronoi-clip')\n        .append('clipPath')\n          .attr('id', 'voronoi-clip-path-' + id) //this id should probably be set on update, unless ID is always set before render\n        .append('rect');\n      wrap.select('.voronoi-clip rect')\n          .attr('x', -10)\n          .attr('y', -10)\n          .attr('width', width - margin.left - margin.right + 20)\n          .attr('height', height - margin.top - margin.bottom + 20);\n      wrap.select('.point-paths')\n          .attr('clip-path', 'url(#voronoi-clip-path-' + id + ')');\n\n\n      //var pointClips = wrap.select('.point-clips').selectAll('clipPath') // **BROWSER BUG** can't reselect camel cased elements\n      var pointClips = wrap.select('.point-clips').selectAll('.clip-path')\n          .data(vertices);\n      pointClips.enter().append('clipPath').attr('class', 'clip-path')\n        .append('circle')\n          .attr('r', 25);\n      pointClips.exit().remove();\n      pointClips\n          .attr('id', function(d, i) { return 'clip-' + id + '-' + d[2] + '-' + d[3] })\n          .attr('transform', function(d) { return 'translate(' + d[0] + ',' + d[1] + ')' });\n\n\n      var voronoi = d3.geom.voronoi(vertices).map(function(d,i) {\n          return { 'data': d, 'series': vertices[i][2], 'point': vertices[i][3] }\n      });\n      // console.log(\"voro\",voronoi);\n\n      //TODO: Add very small amount of noise to prevent duplicates\n      var pointPaths = wrap.select('.point-paths').selectAll('path')\n          .data(voronoi);\n      pointPaths.enter().append('path')\n          .attr('class', function(d,i) { return 'path-' + i; });\n      pointPaths.exit().remove();\n      pointPaths\n          .attr('clip-path', function(d) { return 'url(#clip-' + id + '-' + d.series + '-' + d.point + ')'; })\n          .attr('d', function(d) { return 'M' + d.data.join(',') + 'Z'; })\n          .on('mouseover', function(d) {\n            dispatch.pointMouseover({\n              point: data[d.series].data[d.point],\n              series: data[d.series],\n              // pos: [x(data[d.series].data[d.point][0]) + margin.left, y(data[d.series].data[d.point][1]) + margin.top],\n              pos: [x(data[d.series].data[d.point].date) + margin.left, y(data[d.series].data[d.point].sales) + margin.top],\n              pointIndex: d.point,\n              seriesIndex: d.series\n            });\n          })\n          .on('mouseout', function(d) {\n            dispatch.pointMouseout({\n              point: d,\n              series: data[d.series],\n              pointIndex: d.point,\n              seriesIndex: d.series\n            });\n          });\n\n\n      dispatch.on('pointMouseover.point', function(d) { \n        wrap.select('.line-' + d.seriesIndex + ' .point-' + d.pointIndex)\n          .classed('hover', true);\n      });\n\n      dispatch.on('pointMouseout.point', function(d) { \n        wrap.select('.line-' + d.seriesIndex + ' .point-' + d.pointIndex)\n          .classed('hover', false);\n      });\n\n\n\n      var lines = wrap.select('.lines').selectAll('.line')\n          .data(function(d) { return d }, function(d) { return d.label });\n      lines.enter().append('g')\n          .style('stroke-opacity', 1e-6)\n          .style('fill-opacity', 1e-6);\n      d3.transition(lines.exit())\n          .style('stroke-opacity', 1e-6)\n          .style('fill-opacity', 1e-6)\n          .remove();\n      lines.attr('class', function(d,i) { return 'line line-' + i })\n          .classed('hover', function(d) { return d.hover })\n          .style('fill', function(d,i) { return color[i % 10] })\n          .style('stroke', function(d,i) { return color[i % 10] })\n      d3.transition(lines)\n          .style('stroke-opacity', 1)\n          .style('fill-opacity', .5);\n\n\n      var paths = lines.selectAll('path')\n          .data(function(d, i) { return [d.data] });\n      paths.enter().append('path')\n          .attr('d', d3.svg.line()\n            // .x(function(d) { return x0(d[0]) })\n            // .y(function(d) { return y0(d[1]) })\n             .x(function(d) { return x0(d.date) })\n            .y(function(d) { return y0(d.sales) })\n          );\n      paths.exit().remove();\n      d3.transition(paths)\n          .attr('d', d3.svg.line()\n            // .x(function(d) { return x(d[0]) })\n            // .y(function(d) { return y(d[1]) })\n             .x(function(d) { return x(d.date) })\n            .y(function(d) { return y(d.sales) })\n          );\n\n\n      var points = lines.selectAll('circle.point')\n          .data(function(d) { return d.data });\n      points.enter().append('circle')\n          // .attr('cx', function(d) { return x0(d[0]) })\n          // .attr('cy', function(d) { return y0(d[1]) });\n          .attr('cx', function(d) { return x0(d.date) })\n          .attr('cy', function(d) { return y0(d.sales) });\n      points.exit().remove();\n      points.attr('class', function(d,i) { return 'point point-' + i });\n      d3.transition(points)\n          // .attr('cx', function(d) { return x(d[0]) })\n          // .attr('cy', function(d) { return y(d[1]) })\n          .attr('cx', function(d) { return x(d.date) })\n          .attr('cy', function(d) { return y(d.sales) })\n          .attr('r', dotRadius());\n\n    });\n\n    x0 = x;\n    y0 = y;\n\n    return chart;\n  }\n\n\n\n  chart.dispatch = dispatch;\n\n  chart.margin = function(_) {\n    if (!arguments.length) return margin;\n    margin = _;\n    return chart;\n  };\n\n  chart.width = function(_) {\n    if (!arguments.length) return width;\n    width = _;\n    return chart;\n  };\n\n  chart.height = function(_) {\n    if (!arguments.length) return height;\n    height = _;\n    return chart;\n  };\n\n  chart.dotRadius = function(_) {\n    if (!arguments.length) return dotRadius;\n    dotRadius = d3.functor(_);\n    return chart;\n  };\n\n  chart.color = function(_) {\n    if (!arguments.length) return color;\n    color = _;\n    return chart;\n  };\n\n  chart.id = function(_) {\n    if (!arguments.length) return id;\n    id = _;\n    return chart;\n  };\n\n\n  return chart;\n}\n\nfunction d3LineWithLegend() {\n  var margin = {top: 30, right: 40, bottom: 40, left: 60},\n      width = 960,\n      height = 500,\n      dotRadius = function() { return 2.5 },\n      xAxisLabelText = false,\n      yAxisLabelText = false,\n      color = d3.scale.category20().range(),\n      dispatch = d3.dispatch('showTooltip', 'hideTooltip');\n\n  var \n      x = d3.time.scale(),\n  // x = d3.scale.linear(),\n      y = d3.scale.linear(),\n      xAxis = d3.svg.axis().scale(x).orient('bottom'),\n      yAxis = d3.svg.axis().scale(y).orient('left'),\n      legend = d3Legend().height(30).color(color),\n      lines = d3Line();\n\n\n  function chart(selection) {\n    selection.each(function(data) {\n      var series = data.filter(function(d) { return !d.disabled })\n            .map(function(d) { return d.data });\n\n      x   .domain(d3.extent(d3.merge(series), function(d) { return d.date } ))\n          .range([0, width - margin.left - margin.right]);\n\n      y   .domain(d3.extent(d3.merge(series), function(d) { return d.sales } ))\n          .range([height - margin.top - margin.bottom, 0]);\n\n      lines\n        .width(width - margin.left - margin.right)\n        .height(height - margin.top - margin.bottom)\n        .color(data.map(function(d,i) {\n          return d.color || color[i % 10];\n        }).filter(function(d,i) { return !data[i].disabled }))\n\n      xAxis\n        .ticks( width / 100 )\n        .tickSize(-(height - margin.top - margin.bottom), 0);\n      yAxis\n        .ticks( height / 36 )\n        .tickSize(-(width - margin.right - margin.left), 0)\n         .tickFormat(d3.format(\"s\"))\n\n      var wrap = d3.select(this).selectAll('g.wrap').data([data]);\n      var gEnter = wrap.enter().append('g').attr('class', 'wrap d3lineWithLegend').append('g');\n\n      gEnter.append('g').attr('class', 'legendWrap');\n      gEnter.append('g').attr('class', 'x axis');\n      gEnter.append('g').attr('class', 'y axis');\n      gEnter.append('g').attr('class', 'linesWrap');\n\n\n      legend.dispatch.on('legendClick', function(d, i) { \n        d.disabled = !d.disabled;\n\n        if (!data.filter(function(d) { return !d.disabled }).length) {\n          data.forEach(function(d) {\n            d.disabled = false;\n          });\n        }\n        // console.log(selection);\n        // selection.transition().call(chart)\n        // selection.transition()\n      });\n\n\n      legend.dispatch.on('legendMouseover', function(d, i) {\n        d.hover = true;\n        selection.transition().call(chart)\n      });\n\n      legend.dispatch.on('legendMouseout', function(d, i) {\n        d.hover = false;\n        selection.transition().call(chart)\n        // selection.transition().duration(2000).call(chart)\n      });\n\n\n      lines.dispatch.on('pointMouseover.tooltip', function(e) {\n        dispatch.showTooltip({\n          point: e.point,\n          series: e.series,\n          pos: [e.pos[0] + margin.left, e.pos[1] + margin.top],\n          seriesIndex: e.seriesIndex,\n          pointIndex: e.pointIndex\n        });\n      });\n\n      lines.dispatch.on('pointMouseout.tooltip', function(e) {\n        dispatch.hideTooltip(e);\n      });\n\n\n\n\n      legend\n          .color(color)\n          .width(width / 2 - margin.right);\n\n      wrap.select('.legendWrap')\n          .datum(data)\n          .attr('transform', 'translate(' + (width/2 - margin.left) + ',' + (-legend.height()) +')')\n          .call(legend);\n\n\n      //TODO: maybe margins should be adjusted based on what components are used: axes, axis labels, legend\n      // margin.top = legend.height();  //need to re-render to see update\n      margin.top = legend.height();  //need to re-render to see update\n\n      var g = wrap.select('g')\n          .attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\n\n\n\n      var linesWrap = wrap.select('.linesWrap')\n          .datum(data.filter(function(d) { return !d.disabled }));\n\n      d3.transition(linesWrap).call(lines);\n\n\n\n      var xAxisLabel = g.select('.x.axis').selectAll('text.axislabel')\n          .data([xAxisLabelText || null]);\n      xAxisLabel.enter().append('text').attr('class', 'axislabel')\n          .attr('text-anchor', 'middle')\n          .attr('x', x.range()[1] / 2)\n          .attr('y', margin.bottom - 5);\n      xAxisLabel.exit().remove();\n      xAxisLabel.text(function(d) { return d });\n\n      g.select('.x.axis')\n          .attr('transform', 'translate(0,' + y.range()[0] + ')')\n          .call(xAxis)\n        .selectAll('line.tick')\n        .filter(function(d) { return !d })\n          .classed('zero', true);\n\n\n      var yAxisLabel = g.select('.y.axis').selectAll('text.axislabel')\n          .data([yAxisLabelText || null]);\n      yAxisLabel.enter().append('text').attr('class', 'axislabel')\n          .attr('transform', 'rotate(-90)')\n          .attr('text-anchor', 'middle')\n          .attr('y', 20 - margin.left);\n      yAxisLabel.exit().remove();\n      yAxisLabel\n          .attr('x', -y.range()[0] / 2)\n          .text(function(d) { return d });\n\n      g.select('.y.axis')\n          .call(yAxis)\n        .selectAll('line.tick')\n        .filter(function(d) { return !d })\n          .classed('zero', true);\n    });\n\n    return chart;\n  }\n\n  chart.dispatch = dispatch;\n\n  chart.margin = function(_) {\n    if (!arguments.length) return margin;\n    margin = _;\n    return chart;\n  };\n\n  chart.width = function(_) {\n    if (!arguments.length) return width;\n    width = _;\n    return chart;\n  };\n\n  chart.height = function(_) {\n    if (!arguments.length) return height;\n    height = _;\n    return chart;\n  };\n\n  chart.color = function(_) {\n    if (!arguments.length) return color;\n    color = _;\n    return chart;\n  };\n\n  chart.dotRadius = function(_) {\n    if (!arguments.length) return dotRadius;\n    dotRadius = d3.functor(_);\n    lines.dotRadius = d3.functor(_);\n    return chart;\n  };\n\n  //TODO: consider directly exposing both axes\n  //chart.xAxis = xAxis;\n\n  //Expose the x-axis' tickFormat method.\n  chart.xAxis = {};\n  d3.rebind(chart.xAxis, xAxis, 'tickFormat');\n\n  chart.xAxis.label = function(_) {\n    if (!arguments.length) return xAxisLabelText;\n    xAxisLabelText = _;\n    return chart;\n  }\n\n  // Expose the y-axis' tickFormat method.\n  //chart.yAxis = yAxis;\n\n  chart.yAxis = {};\n  d3.rebind(chart.yAxis, yAxis, 'tickFormat');\n\n  chart.yAxis.label = function(_) {\n    if (!arguments.length) return yAxisLabelText;\n    yAxisLabelText = _;\n    return chart;\n  }\n\n  return chart;\n}\n(function($) {\n\n  var nvtooltip = window.nvtooltip = {};\n\n  nvtooltip.show = function(pos, content, gravity, dist) {\n    var container = $('<div class=\"nvtooltip\">');\n\n    gravity = gravity || 's';\n    dist = dist || 20;\n\n    container\n      .html(content)\n      .css({left: -1000, top: -1000, opacity: 0})\n      .appendTo('body');\n\n    var height = container.height() + parseInt(container.css('padding-top'))  + parseInt(container.css('padding-bottom')),\n        width = container.width() + parseInt(container.css('padding-left'))  + parseInt(container.css('padding-right')),\n        // windowWidth = $(\".card-body\").width(),\n        // windowHeight = $(\".card-body\").height(),\n         windowWidth = $(window).width(),\n        windowHeight = $(window).height(),\n        scrollTop = $('body').scrollTop(),  //TODO: also adjust horizontal scroll\n        left, top;\n\n\n    //TODO: implement other gravities\n    switch (gravity) {\n      case 'e':\n      case 'w':\n      case 'n':\n        left = pos[0] - (width / 2);\n        top = pos[1] + dist;\n        if (left < 0) left = 5;\n        if (left + width > windowWidth) left = windowWidth - width - 5;\n        if (scrollTop + windowHeight < top + height) top = pos[1] - height - dist;\n        break;\n      case 's':\n        left = pos[0] - (width / 2);\n        top = pos[1] - height - dist;\n        if (left < 0) left = 5;\n        if (left + width > windowWidth) left = windowWidth - width - 5;\n        if (scrollTop > top) top = pos[1] + dist;\n        break;\n    }\n\n    container\n        .css({\n          left: left,\n          top: top,\n          opacity: 1\n        });\n  };\n\n  nvtooltip.cleanup = function() {\n    var tooltips = $('.nvtooltip');\n\n    // remove right away, but delay the show with css\n    tooltips.css({\n        'transition-delay': '0 !important',\n        '-moz-transition-delay': '0 !important',\n        '-webkit-transition-delay': '0 !important'\n    });\n\n    tooltips.css('opacity',0);\n\n    setTimeout(function() {\n      tooltips.remove()\n    }, 500);\n  };\n\n})(jQuery);\n\n  }\n};\n</script>\n\n<style>\n\n/********************\n * TOOLTIP CSS\n */\n\n.nvtooltip {\n  position: absolute;\n  background-color: rgba(255,255,255,1);\n  padding: 10px;\n  border: 1px solid #ddd;\n\n  font-family: Arial;\n  font-size: 13px;\n\n  transition: opacity 500ms linear;\n  -moz-transition: opacity 500ms linear;\n  -webkit-transition: opacity 500ms linear;\n\n  transition-delay: 500ms;\n  -moz-transition-delay: 500ms;\n  -webkit-transition-delay: 500ms;\n\n  -moz-box-shadow: 4px 4px 12px rgba(0,0,0,.5);\n  -webkit-box-shadow: 4px 4px 12px rgba(0,0,0,.5);\n  box-shadow: 4px 4px 12px rgba(0,0,0,.5);\n\n  -moz-border-radius: 15px;\n  border-radius : 15px;\n  z-index: 1000;\n}\n\n.nvtooltip h3 {\n  margin: 0;\n  padding: 0;\n  text-align: center;\n}\n\n.nvtooltip p {\n  margin: 0;\n  padding: 0;\n  text-align: center;\n}\n\n.nvtooltip span {\n  display: inline-block;\n  margin: 2px 0;\n}\n\n\n\n\n\n/**********\n*  General SVG CSS\n*/\n\n\n/* text {\n  font: 12px sans-serif;\n} */\n\n\n\n/**********\n*  Legend\n*/\n\n.legend .series {\n  cursor: pointer;\n}\n\n.legend circle {\n  stroke-width: 2px;\n}\n\n.legend .disabled circle {\n  fill-opacity: 0;\n}\n\n\n\n/**********\n*  Axes\n*/\n\n.axis path {\n  fill: none;\n  stroke: #000;\n  stroke-opacity: .75;\n  shape-rendering: crispEdges;\n}\n\n.axis path.domain {\n  stroke-opacity: .75;\n}\n\n.axis line {\n  fill: none;\n  stroke: #000;\n  stroke-opacity: .25;\n  shape-rendering: crispEdges;\n}\n\n.axis line.zero {\n  stroke-opacity: .75;\n}\n\n\n\n/**********\n*  Line chart\n*/\n\n.point-paths path {\n  /*\n  fill: #eee;\n  stroke: #aaa;\n  */\n  stroke-opacity: 0;\n  fill-opacity: 0;\n}\n\n\n.lines path {\n  fill: none;\n  stroke-width: 1.5px;\n  stroke-linecap: round;\n\n  transition: stroke-width 250ms linear;\n  -moz-transition: stroke-width 250ms linear;\n  -webkit-transition: stroke-width 250ms linear;\n\n  transition-delay: 250ms;\n  -moz-transition-delay: 250ms;\n  -webkit-transition-delay: 250ms;\n}\n\n.line.hover path {\n  stroke-width: 6px;\n}\n\n.lines .point {\n  transition: stroke-width 250ms linear;\n  -moz-transition: stroke-width 250ms linear;\n  -webkit-transition: stroke-width 250ms linear;\n}\n\n.lines .point.hover {\n  stroke-width: 20px;\n  stroke-opacity: .5;\n}\n\n</style>"],"sourceRoot":"src/portal/analytics/components"}]}