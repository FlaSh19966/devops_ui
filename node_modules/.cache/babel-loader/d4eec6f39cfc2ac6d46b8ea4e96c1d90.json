{"remainingRequest":"/home/vimalesh/Elixir/chatbot-portal/node_modules/babel-loader/lib/index.js!/home/vimalesh/Elixir/chatbot-portal/node_modules/eslint-loader/index.js??ref--13-0!/home/vimalesh/Elixir/chatbot-portal/src/portal/components/microphone.js","dependencies":[{"path":"/home/vimalesh/Elixir/chatbot-portal/src/portal/components/microphone.js","mtime":1643027096288},{"path":"/home/vimalesh/Elixir/chatbot-portal/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vimalesh/Elixir/chatbot-portal/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/vimalesh/Elixir/chatbot-portal/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/home/vimalesh/Elixir/chatbot-portal/src/portal/components/microphone.js"],"names":["_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","Constructor","protoProps","staticProps","prototype","_inlineWorker","require","_inlineWorker2","_interopRequireDefault","obj","__esModule","default","_classCallCheck","instance","TypeError","defaultConfig","bufferLen","numChannels","mimeType","Microphone","source","config","_this","assign","recording","callbacks","getBuffer","exportWAV","context","node","createScriptProcessor","createJavaScriptNode","call","onaudioprocess","e","buffer","channel","push","inputBuffer","getChannelData","worker","postMessage","command","connect","destination","self","recLength","recBuffers","sampleRate","onmessage","data","init","record","type","clear","initBuffers","buffers","mergeBuffers","interleaved","interleave","dataview","encodeWAV","audioBlob","Blob","result","Float32Array","offset","set","inputL","inputR","index","inputIndex","floatTo16BitPCM","output","input","s","Math","max","min","setInt16","writeString","view","string","setUint8","charCodeAt","samples","ArrayBuffer","DataView","setUint32","setUint16","cb","pop","value","stop","callback","Error","forceDownload","blob","filename","a","document","createElement","style","body","appendChild","url","window","URL","createObjectURL","href","download","click","revokeObjectURL","removeChild"],"mappings":"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","sourcesContent":["'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /* eslint-disable */\n/**\n * License (MIT)\n *\n * Copyright © 2013 Matt Diamond\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included\n * in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n *\n */\n\n\nvar _inlineWorker = require('inline-worker');\n\nvar _inlineWorker2 = _interopRequireDefault(_inlineWorker);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar defaultConfig = {\n  bufferLen: 4096,\n  numChannels: 2,\n  mimeType: 'audio/wav'\n};\n\nvar Microphone = function () {\n  function Microphone(source, config) {\n    var _this = this;\n\n    _classCallCheck(this, Microphone);\n\n    this.config = Object.assign({}, defaultConfig, config);\n\n    this.recording = false;\n\n    this.callbacks = {\n      getBuffer: [],\n      exportWAV: []\n    };\n\n    this.context = source.context;\n    this.node = (this.context.createScriptProcessor || this.context.createJavaScriptNode).call(this.context, this.config.bufferLen, this.config.numChannels, this.config.numChannels);\n\n    this.node.onaudioprocess = function (e) {\n      if (!_this.recording) return;\n\n      var buffer = [];\n      for (var channel = 0; channel < _this.config.numChannels; channel++) {\n        buffer.push(e.inputBuffer.getChannelData(channel));\n      }\n      _this.worker.postMessage({\n        command: 'record',\n        buffer: buffer\n      });\n    };\n\n    source.connect(this.node);\n    this.node.connect(this.context.destination); //this should not be necessary\n\n    var self = {};\n    this.worker = new _inlineWorker2.default(function () {\n      var recLength = 0,\n          recBuffers = [],\n          sampleRate = void 0,\n          numChannels = void 0;\n\n      this.onmessage = function (e) {\n        switch (e.data.command) {\n          case 'init':\n            init(e.data.config);\n            break;\n          case 'record':\n            record(e.data.buffer);\n            break;\n          case 'exportWAV':\n            exportWAV(e.data.type);\n            break;\n          case 'getBuffer':\n            getBuffer();\n            break;\n          case 'clear':\n            clear();\n            break;\n        }\n      };\n\n      function init(config) {\n        sampleRate = config.sampleRate;\n        numChannels = config.numChannels;\n        initBuffers();\n      }\n\n      function record(inputBuffer) {\n        for (var channel = 0; channel < numChannels; channel++) {\n          recBuffers[channel].push(inputBuffer[channel]);\n        }\n        recLength += inputBuffer[0].length;\n      }\n\n      function exportWAV(type) {\n        var buffers = [];\n        for (var channel = 0; channel < numChannels; channel++) {\n          buffers.push(mergeBuffers(recBuffers[channel], recLength));\n        }\n        var interleaved = void 0;\n        if (numChannels === 2) {\n          interleaved = interleave(buffers[0], buffers[1]);\n        } else {\n          interleaved = buffers[0];\n        }\n        // var dataview = encodeWAV(interleaved);\n        var dataview = encodeWAV(buffers[0])\n        var audioBlob = new Blob([dataview], { type: type });\n\n        this.postMessage({ command: 'exportWAV', data: audioBlob });\n      }\n\n      function getBuffer() {\n        var buffers = [];\n        for (var channel = 0; channel < numChannels; channel++) {\n          buffers.push(mergeBuffers(recBuffers[channel], recLength));\n        }\n        this.postMessage({ command: 'getBuffer', data: buffers });\n      }\n\n      function clear() {\n        recLength = 0;\n        recBuffers = [];\n        initBuffers();\n      }\n\n      function initBuffers() {\n        for (var channel = 0; channel < numChannels; channel++) {\n          recBuffers[channel] = [];\n        }\n      }\n\n      function mergeBuffers(recBuffers, recLength) {\n        var result = new Float32Array(recLength);\n        var offset = 0;\n        for (var i = 0; i < recBuffers.length; i++) {\n          result.set(recBuffers[i], offset);\n          offset += recBuffers[i].length;\n        }\n        return result;\n      }\n\n      function interleave(inputL, inputR) {\n        var length = inputL.length + inputR.length;\n        var result = new Float32Array(length);\n\n        var index = 0,\n            inputIndex = 0;\n\n        while (index < length) {\n          result[index++] = inputL[inputIndex];\n          result[index++] = inputR[inputIndex];\n          inputIndex++;\n        }\n        return result;\n      }\n\n      function floatTo16BitPCM(output, offset, input) {\n        for (var i = 0; i < input.length; i++, offset += 2) {\n          var s = Math.max(-1, Math.min(1, input[i]));\n          output.setInt16(offset, s < 0 ? s * 0x8000 : s * 0x7FFF, true);\n        }\n      }\n\n      function writeString(view, offset, string) {\n        for (var i = 0; i < string.length; i += 1) {\n          view.setUint8(offset + i, string.charCodeAt(i));\n        }\n      }\n\n      // function encodeWAV(samples) {\n      //   var buffer = new ArrayBuffer(44 + samples.length * 2);\n      //   var view = new DataView(buffer);\n\n      //   /* RIFF identifier */\n      //   writeString(view, 0, 'RIFF');\n      //   /* RIFF chunk length */\n      //   view.setUint32(4, 36 + samples.length * 2, true);\n      //   /* RIFF type */\n      //   writeString(view, 8, 'WAVE');\n      //   /* format chunk identifier */\n      //   writeString(view, 12, 'fmt ');\n      //   /* format chunk length */\n      //   view.setUint32(16, 16, true);\n      //   /* sample format (raw) */\n      //   view.setUint16(20, 1, true);\n      //   /* channel count */\n      //   view.setUint16(22, numChannels, true);\n      //   /* sample rate */\n      //   view.setUint32(24, sampleRate, true);\n      //   /* byte rate (sample rate * block align) */\n      //   view.setUint32(28, sampleRate * 4, true);\n      //   /* block align (channel count * bytes per sample) */\n      //   view.setUint16(32, numChannels * 2, true);\n      //   /* bits per sample */\n      //   view.setUint16(34, 16, true);\n      //   /* data chunk identifier */\n      //   writeString(view, 36, 'data');\n      //   /* data chunk length */\n      //   view.setUint32(40, samples.length * 2, true);\n\n      //   floatTo16BitPCM(view, 44, samples);\n\n      //   return view;\n      // }\n\n      function encodeWAV(samples){\n        var buffer = new ArrayBuffer(44 + samples.length * 2);\n        var view = new DataView(buffer);\n      \n        /* RIFF identifier */\n        writeString(view, 0, 'RIFF');\n        /* file length */\n        view.setUint32(4, 32 + samples.length * 2, true);\n        /* RIFF type */\n        writeString(view, 8, 'WAVE');\n        /* format chunk identifier */\n        writeString(view, 12, 'fmt ');\n        /* format chunk length */\n        view.setUint32(16, 16, true);\n        /* sample format (raw) */\n        view.setUint16(20, 1, true);\n        /* channel count */\n        //view.setUint16(22, 2, true); /*STEREO*/\n        view.setUint16(22, 1, true); /*MONO*/\n        /* sample rate */\n        view.setUint32(24, sampleRate, true);\n        /* byte rate (sample rate * block align) */\n        //view.setUint32(28, sampleRate * 4, true); /*STEREO*/\n        view.setUint32(28, sampleRate * 2, true); /*MONO*/\n        /* block align (channel count * bytes per sample) */\n        //view.setUint16(32, 4, true); /*STEREO*/\n        view.setUint16(32, 2, true); /*MONO*/\n        /* bits per sample */\n        view.setUint16(34, 16, true);\n        /* data chunk identifier */\n        writeString(view, 36, 'data');\n        /* data chunk length */\n        view.setUint32(40, samples.length * 2, true);\n      \n        floatTo16BitPCM(view, 44, samples);\n      \n        return view;\n      }\n    }, self);\n\n    this.worker.postMessage({\n      command: 'init',\n      config: {\n        sampleRate: this.context.sampleRate,\n        numChannels: this.config.numChannels\n      }\n    });\n\n    this.worker.onmessage = function (e) {\n      var cb = _this.callbacks[e.data.command].pop();\n      if (typeof cb === 'function') {\n        cb(e.data.data);\n      }\n    };\n  }\n\n  _createClass(Microphone, [{\n    key: 'record',\n    value: function record() {\n      this.recording = true;\n    }\n  }, {\n    key: 'stop',\n    value: function stop() {\n      this.recording = false;\n    }\n  }, {\n    key: 'clear',\n    value: function clear() {\n      this.worker.postMessage({ command: 'clear' });\n    }\n  }, {\n    key: 'getBuffer',\n    value: function getBuffer(cb) {\n      cb = cb || this.config.callback;\n\n      if (!cb) throw new Error('Callback not set');\n\n      this.callbacks.getBuffer.push(cb);\n\n      this.worker.postMessage({ command: 'getBuffer' });\n    }\n  }, {\n    key: 'exportWAV',\n    value: function exportWAV(cb, mimeType) {\n      mimeType = mimeType || this.config.mimeType;\n      cb = cb || this.config.callback;\n\n      if (!cb) throw new Error('Callback not set');\n\n      this.callbacks.exportWAV.push(cb);\n\n      this.worker.postMessage({\n        command: 'exportWAV',\n        type: mimeType\n      });\n    }\n  }]);\n\n  return Microphone;\n}();\n\nMicrophone.forceDownload = function forceDownload(blob, filename) {\n  var a = document.createElement('a');\n\n  a.style = 'display: none';\n  document.body.appendChild(a);\n\n  var url = window.URL.createObjectURL(blob);\n\n  a.href = url;\n  a.download = filename;\n  a.click();\n\n  window.URL.revokeObjectURL(url);\n\n  document.body.removeChild(a);\n};\n\nexport default Microphone;"]}]}