{"remainingRequest":"/home/vimalesh/Learning/devops_ui/node_modules/babel-loader/lib/index.js!/home/vimalesh/Learning/devops_ui/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/vimalesh/Learning/devops_ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/vimalesh/Learning/devops_ui/src/portal/Chatbot/Dashboard/End User Response/VerifyResponsesUnanswered.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/vimalesh/Learning/devops_ui/src/portal/Chatbot/Dashboard/End User Response/VerifyResponsesUnanswered.vue","mtime":1663910265466},{"path":"/home/vimalesh/Learning/devops_ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vimalesh/Learning/devops_ui/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/vimalesh/Learning/devops_ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vimalesh/Learning/devops_ui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IGF4aW9zIGZyb20gImF4aW9zIjsKaW1wb3J0IHN3YWwgZnJvbSAic3dlZXRhbGVydDIiOwppbXBvcnQgU3dhbCBmcm9tICJzd2VldGFsZXJ0MiI7CmltcG9ydCBhcGlfY2FsbHMgZnJvbSAiQC9wb3J0YWwvYXBpX2NhbGxzIjsKaW1wb3J0IHsgc2V0VGltZW91dCB9IGZyb20gInRpbWVycyI7CmltcG9ydCBNdWx0aXNlbGVjdCBmcm9tICJ2dWUtbXVsdGlzZWxlY3QiOwppbXBvcnQgeyBjbG9zZV9tb2RhbCB9IGZyb20gIkAvcG9ydGFsL21peGlucyI7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAndmVyaWZ5X3Jlc3BvbnNlc191bmFuc3dlcmVkJywKICBjb21wb25lbnRzOiB7CiAgICBNdWx0aXNlbGVjdDogTXVsdGlzZWxlY3QKICB9LAogIG1peGluczogW2Nsb3NlX21vZGFsXSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgdW5hbnN3ZXJlZF9saXN0OiBbXSwKICAgICAgdXNlcl9yb2xlOiB0aGlzLiRzZXNzaW9uLmdldCgiVXNlckluZm9ybWF0aW9uIikucm9sZSwKICAgICAgY29tcGFueW5hbWU6IHRoaXMuJHNlc3Npb24uZ2V0KCJVc2VySW5mb3JtYXRpb24iKS5jb21wYW55X25hbWUsCiAgICAgIGNvbXBhbnlpZDogdGhpcy4kc2Vzc2lvbi5nZXQoIlVzZXJJbmZvcm1hdGlvbiIpLmNvbXBhbnlfaWQsCiAgICAgIGludGVudF9saXN0OiBbXSwKICAgICAgY2hlY2tlZF9saXN0OiBbXSwKICAgICAgaW50ZW50bGlzdDogIiIsCiAgICAgIHBlcl9wYWdlOiAxNSwKICAgICAgcGFnZV9ubzogMSwKICAgICAgdG90YWxfcGFnZXM6IDAsCiAgICAgIHNob3dfbG9hZGVyOiBmYWxzZSwKICAgICAgbnVtYmVyX29mX3Jvd3M6IG51bGwsCiAgICAgIHNlYXJjaF9uYW1lOiAiIiwKICAgICAgcGFnZV9hcnJheTogW10sCiAgICAgIG9sZF9xdWVzdGlvbjogIiIsCiAgICAgIG9sZF9pbnRlbnQ6ICIiLAogICAgICBuZXdfaW50ZW50X2xpc3Q6IFtdLAogICAgICBvbGRfZGF0YTogewogICAgICAgIHF1ZXN0aW9uOiBudWxsLAogICAgICAgIGludGVudDogbnVsbAogICAgICB9LAogICAgICB0aHVtYnNfZG93bl9pY29uOiByZXF1aXJlKCJAL3BvcnRhbC9hc3NldHMvaW1nL0dyb3VwIDYxLnN2ZyIpLAogICAgICB0aHVtYnNfdXBfaWNvbjogcmVxdWlyZSgiQC9wb3J0YWwvYXNzZXRzL2ltZy9Hcm91cCA3MS5zdmciKSAvLyB2aWV3X2NvbXBvbmVudF9uYW1lOiAidW5hbnN3ZXJlZF9xdWVzdGlvbnMiLAoKICAgIH07CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdmFyIF90aGlzID0gdGhpczsKCiAgICB2YXIgdm0gPSB0aGlzOwogICAgJCgiI3NlbGVjdGFsbCIpLmNsaWNrKGZ1bmN0aW9uICgpIHsKICAgICAgaWYgKCQodGhpcykuaXMoIjpjaGVja2VkIikpIHsKICAgICAgICAkKCJpbnB1dDpjaGVja2JveCIpLnByb3AoImNoZWNrZWQiLCB0cnVlKTsKICAgICAgfSBlbHNlIHsKICAgICAgICB2bS5jaGVja2VkX2xpc3QgPSBbXTsKICAgICAgICAkKCJpbnB1dDpjaGVja2JveCIpLnByb3AoImNoZWNrZWQiLCBmYWxzZSk7CiAgICAgIH0KICAgIH0pOwogICAgdGhpcy4kcm9vdC4kb24oImFkZF9xdWVzdGlvbnNfdW5hbnN3ZXJlZCIsIGZ1bmN0aW9uIChkYXRhKSB7CiAgICAgIC8vIGNvbnNvbGUubG9nKGRhdGEpOyAgIAogICAgICBfdGhpcy5hZGRfcXVlc3Rpb25zKCk7CiAgICB9KTsKICAgIHRoaXMuJHJvb3QuJG9uKCJzZWFyY2hfdW5hbnN3ZXJlZCIsIGZ1bmN0aW9uIChkYXRhKSB7CiAgICAgIF90aGlzLnNlYXJjaF9uYW1lID0gZGF0YTsKCiAgICAgIF90aGlzLnNlYXJjaF9xdWVzdGlvbigpOyAvLyB0aGlzLmFkZF9xdWVzdGlvbnMoKTsKCiAgICB9KTsKICAgIHRoaXMuJHJvb3QuJG9uKCJkZWxldGVfbXVsdGlwbGVfdW5hbnN3ZXJlZCIsIGZ1bmN0aW9uIChkYXRhKSB7CiAgICAgIF90aGlzLmRlbGV0ZV9tdWx0aXBsZSgpOwogICAgfSk7CiAgICB0aGlzLiRyb290LiRvbigibG9hZF92ZXJpZnlfcmVzcG9uc2VzX3VuYW5zd2VyZWQiLCBmdW5jdGlvbiAoZGF0YSkgewogICAgICBfdGhpcy5sb2FkX3ZlcmlmeV9yZXNwb25zZXNfdW5hbnN3ZXJlZCgpOwogICAgfSk7CiAgfSwKICBiZWZvcmVEZXN0cm95OiBmdW5jdGlvbiBiZWZvcmVEZXN0cm95KCkgewogICAgdGhpcy4kcm9vdC4kb2ZmKCJhZGRfcXVlc3Rpb25zX3VuYW5zd2VyZWQiKTsKICAgIHRoaXMuJHJvb3QuJG9mZigic2VhcmNoX3VuYW5zd2VyZWQiKTsKICAgIHRoaXMuJHJvb3QuJG9mZigiZGVsZXRlX211bHRpcGxlX3VuYW5zd2VyZWQiKTsKICAgIHRoaXMuJHJvb3QuJG9mZigibG9hZF92ZXJpZnlfcmVzcG9uc2VzX3VuYW5zd2VyZWQiKTsKICB9LAogIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7CiAgICB0aGlzLmxvYWRfdmVyaWZ5X3Jlc3BvbnNlc191bmFuc3dlcmVkKCk7CiAgfSwKICBtZXRob2RzOiB7CiAgICBsb2FkX3ZlcmlmeV9yZXNwb25zZXNfdW5hbnN3ZXJlZDogZnVuY3Rpb24gbG9hZF92ZXJpZnlfcmVzcG9uc2VzX3VuYW5zd2VyZWQoKSB7CiAgICAgIHZhciBfdGhpczIgPSB0aGlzOwoKICAgICAgdGhpcy5jaGVja2VkX2xpc3QgPSBbXTsKICAgICAgJCgiaW5wdXQ6Y2hlY2tib3giKS5wcm9wKCJjaGVja2VkIiwgZmFsc2UpOwogICAgICB0aGlzLnNob3dfbG9hZGVyID0gdHJ1ZTsKICAgICAgdGhpcy5pbnRlbnRfbGlzdCA9IFtdOwogICAgICB0aGlzLm5ld19pbnRlbnRfbGlzdCA9IFtdOwogICAgICB0aGlzLnVuYW5zd2VyZWRfbGlzdCA9IFtdOwogICAgICB0aGlzLnNlYXJjaF9uYW1lID0gIiI7CgogICAgICBpZiAodGhpcy51c2VyX3JvbGUgPT0gIlN1cGVyQWRtaW4iKSB7CiAgICAgICAgaWYgKHRoaXMuJHNlc3Npb24uaGFzKCJDb21wYW55SWQiKSkgewogICAgICAgICAgdGhpcy5jb21wYW55aWQgPSB0aGlzLiRzZXNzaW9uLmdldCgiQ29tcGFueUlkIik7CiAgICAgICAgICB0aGlzLmNvbXBhbnluYW1lID0gdGhpcy4kc2Vzc2lvbi5nZXQoIkNvbXBhbnlOYW1lIik7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIHRoaXMuY29tcGFueWlkID0gdGhpcy4kc2Vzc2lvbi5nZXQoIlVzZXJJbmZvcm1hdGlvbiIpLmNvbXBhbnlfaWQ7CiAgICAgICAgICB0aGlzLmNvbXBhbnluYW1lID0gdGhpcy4kc2Vzc2lvbi5nZXQoIlVzZXJJbmZvcm1hdGlvbiIpLmNvbXBhbnlfbmFtZTsKICAgICAgICB9CiAgICAgIH0gZWxzZSB7CiAgICAgICAgdGhpcy5jb21wYW55aWQgPSB0aGlzLiRzZXNzaW9uLmdldCgiVXNlckluZm9ybWF0aW9uIikuY29tcGFueV9pZDsKICAgICAgICB0aGlzLmNvbXBhbnluYW1lID0gdGhpcy4kc2Vzc2lvbi5nZXQoIlVzZXJJbmZvcm1hdGlvbiIpLmNvbXBhbnlfbmFtZTsKICAgICAgfQoKICAgICAgaWYgKHRoaXMuY29tcGFueW5hbWUgIT09IHVuZGVmaW5lZCkgewogICAgICAgIGF4aW9zLnBvc3QoYXBpX2NhbGxzLmdldF91bmFuc3dlcmVkX3VybCgpLCB7CiAgICAgICAgICBjb21wYW55X25hbWU6IHRoaXMuY29tcGFueW5hbWUsCiAgICAgICAgICBjb21wYW55X2lkOiB0aGlzLmNvbXBhbnlpZCwKICAgICAgICAgIGVtYWlsOiB0aGlzLiRzZXNzaW9uLmdldCgiVXNlckluZm9ybWF0aW9uIikuZW1haWwsCiAgICAgICAgICBpc0RlbGV0ZTogIkZhbHNlIiwKICAgICAgICAgIGxpY2Vuc2Vfa2V5OiB0aGlzLiRzZXNzaW9uLmdldCgiVXNlckluZm9ybWF0aW9uIikubGljZW5zZV9rZXksCiAgICAgICAgICB0b2tlbjogdGhpcy4kc2Vzc2lvbi5nZXQoIlVzZXJJbmZvcm1hdGlvbiIpLnRva2VucywKICAgICAgICAgIHBhZ2Vfbm86IHRoaXMucGFnZV9ubywKICAgICAgICAgIHBlcl9wYWdlOiB0aGlzLnBlcl9wYWdlLAogICAgICAgICAgaXNfZ2V0X3VzZXJfcmVzcG9uc2U6IGZhbHNlCiAgICAgICAgfSwgewogICAgICAgICAgaGVhZGVyczogewogICAgICAgICAgICBBdXRob3JpemF0aW9uOiAiQmVhcmVyICIuY29uY2F0KHRoaXMuJHNlc3Npb24uZ2V0KCJhdCIpKQogICAgICAgICAgfQogICAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgICBfdGhpczIuc2hvd19sb2FkZXIgPSBmYWxzZTsKCiAgICAgICAgICBpZiAocmVzcG9uc2UuZGF0YS5tZXNzYWdlLk1TR19DT0RFID09PSBfdGhpczIuYXBpX3N0YXR1c19jb2RlLkRBVEFfQVZBSUxBQkxFLk1TR19DT0RFKSB7CiAgICAgICAgICAgIF90aGlzMi5udW1iZXJfb2Zfcm93cyA9IHJlc3BvbnNlLmRhdGEucGFnaW5hdGlvbi50b3RhbF9kYXRhID09IHVuZGVmaW5lZCA/IDAgOiByZXNwb25zZS5kYXRhLnBhZ2luYXRpb24udG90YWxfZGF0YTsKICAgICAgICAgICAgX3RoaXMyLnRvdGFsX3BhZ2VzID0gcmVzcG9uc2UuZGF0YS5wYWdpbmF0aW9uLnRvdGFsX3BhZ2UgPT0gdW5kZWZpbmVkID8gMCA6IHJlc3BvbnNlLmRhdGEucGFnaW5hdGlvbi50b3RhbF9wYWdlOwogICAgICAgICAgICB2YXIgZGF0YSA9IHJlc3BvbnNlLmRhdGEuZGF0YTsKICAgICAgICAgICAgX3RoaXMyLnVuYW5zd2VyZWRfbGlzdCA9IFtdOwoKICAgICAgICAgICAgZm9yICh2YXIgaSBpbiBkYXRhWzBdKSB7CiAgICAgICAgICAgICAgdmFyIHRlbXBfaW50ID0gIiI7CgogICAgICAgICAgICAgIGlmIChCb29sZWFuKGRhdGFbMl1baV0pKSB7CiAgICAgICAgICAgICAgICAvLyB0ZW1wX2ludCA9IGRhdGFbMl1baV0ucmVwbGFjZSh0aGlzLmNvbXBhbnlpZCArICJfIiwgIiIpOwogICAgICAgICAgICAgICAgdGVtcF9pbnQgPSBkYXRhWzJdW2ldOwogICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgX3RoaXMyLnVuYW5zd2VyZWRfbGlzdC5wdXNoKHsKICAgICAgICAgICAgICAgIHF1ZXN0aW9uOiBkYXRhWzBdW2ldLAogICAgICAgICAgICAgICAgaW50ZW50OiB0ZW1wX2ludCwKICAgICAgICAgICAgICAgIHNvdXJjZTogZGF0YVsxXVtpXSwKICAgICAgICAgICAgICAgIHVzZXJfcmVzcG9uc2U6IGRhdGFbMl1baV0sCiAgICAgICAgICAgICAgICB1c2VyX2ZlZWRiYWNrOiBkYXRhWzNdW2ldLAogICAgICAgICAgICAgICAgZWRpdDogZmFsc2UKICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgX3RoaXMyLnNldHBhZ2luYXRpb24oX3RoaXMyLnBhZ2Vfbm8pOwoKICAgICAgICAgICAgX3RoaXMyLnNob3dfbG9hZGVyID0gZmFsc2U7CiAgICAgICAgICB9IGVsc2UgaWYgKHJlc3BvbnNlLmRhdGEubWVzc2FnZS5NU0dfQ09ERSA9PT0gX3RoaXMyLmFwaV9zdGF0dXNfY29kZS5OT19EQVRBX0FWQUlMQUJMRS5NU0dfQ09ERSkgewogICAgICAgICAgICBTd2FsKHsKICAgICAgICAgICAgICB0ZXh0OiByZXNwb25zZS5kYXRhLm1lc3NhZ2UuTVNHLAogICAgICAgICAgICAgIHNob3dDYW5jZWxCdXR0b246IGZhbHNlLAogICAgICAgICAgICAgIHNob3dDb25maXJtQnV0dG9uOiBmYWxzZSwKICAgICAgICAgICAgICBwb3NpdGlvbjogInRvcC1lbmQiLAogICAgICAgICAgICAgIHRvYXN0OiB0cnVlLAogICAgICAgICAgICAgIHRpbWVyOiAyNTAwLAogICAgICAgICAgICAgIHR5cGU6ICJpbmZvIgogICAgICAgICAgICB9KTsKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIF90aGlzMi5zaG93X2xvYWRlciA9IGZhbHNlOwogICAgICAgICAgICBTd2FsKHsKICAgICAgICAgICAgICB0aXRsZTogcmVzcG9uc2UuZGF0YS5tZXNzYWdlLk1TR19DT0RFLAogICAgICAgICAgICAgIHRleHQ6IHJlc3BvbnNlLmRhdGEubWVzc2FnZS5NU0csCiAgICAgICAgICAgICAgc2hvd0NhbmNlbEJ1dHRvbjogZmFsc2UsCiAgICAgICAgICAgICAgc2hvd0NvbmZpcm1CdXR0b246IGZhbHNlLAogICAgICAgICAgICAgIHRpbWVyOiAyNTAwLAogICAgICAgICAgICAgIHR5cGU6ICJlcnJvciIKICAgICAgICAgICAgfSk7CiAgICAgICAgICB9CiAgICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKGUpIHsKICAgICAgICAgIGlmIChlLnJlc3BvbnNlLnN0YXR1cyA9PT0gNDEwIHx8IGUucmVzcG9uc2Uuc3RhdHVzID09PSA0NDAgfHwgZS5yZXNwb25zZS5zdGF0dXMgPT09IDQwOSkgewogICAgICAgICAgICBfdGhpczIuJHJvb3QuJGVtaXQoIlNlc3Npb25fRXhwaXJlZCIsIGUucmVzcG9uc2UuZGF0YSk7CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICB0b2FzdHIuZXJyb3IoZS5tZXNzYWdlKTsKICAgICAgICAgIH0KCiAgICAgICAgICBfdGhpczIuc2hvd19sb2FkZXIgPSBmYWxzZTsKICAgICAgICB9KTsKICAgICAgfQoKICAgICAgYXhpb3MucG9zdChhcGlfY2FsbHMuZ2V0X3VuYW5zd2VyZWRfdXJsKCksIHsKICAgICAgICBjb21wYW55X2lkOiB0aGlzLmNvbXBhbnlpZCwKICAgICAgICBjb21wYW55X25hbWU6IHRoaXMuY29tcGFueW5hbWUsCiAgICAgICAgaXNEcm9wZG93bjogIlRydWUiLAogICAgICAgIGVtYWlsOiB0aGlzLiRzZXNzaW9uLmdldCgiVXNlckluZm9ybWF0aW9uIikuZW1haWwsCiAgICAgICAgbGljZW5zZV9rZXk6IHRoaXMuJHNlc3Npb24uZ2V0KCJVc2VySW5mb3JtYXRpb24iKS5saWNlbnNlX2tleSwKICAgICAgICB0b2tlbjogdGhpcy4kc2Vzc2lvbi5nZXQoIlVzZXJJbmZvcm1hdGlvbiIpLnRva2VucwogICAgICB9LCB7CiAgICAgICAgaGVhZGVyczogewogICAgICAgICAgQXV0aG9yaXphdGlvbjogIkJlYXJlciAiLmNvbmNhdCh0aGlzLiRzZXNzaW9uLmdldCgiYXQiKSkKICAgICAgICB9CiAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgLy8gY29uc29sZS5sb2cocmVzcG9uc2UuZGF0YSk7CiAgICAgICAgLy8gZm9yICh2YXIgaSBpbiByZXNwb25zZS5kYXRhWzBdKSB7CiAgICAgICAgLy8gdGhpcy5pbnRlbnRfbGlzdC5wdXNoKAogICAgICAgIC8vICAgICByZXNwb25zZS5kYXRhWzBdW2ldLnJlcGxhY2UodGhpcy5jb21wYW55aWQgKyAiXyIsICIiKQogICAgICAgIC8vICk7CiAgICAgICAgLy8gdGhpcy5uZXdfaW50ZW50X2xpc3QucHVzaCgKICAgICAgICAvLyAgICAgcmVzcG9uc2UuZGF0YVswXVtpXS5yZXBsYWNlKHRoaXMuY29tcGFueWlkICsgIl8iLCAiIikKICAgICAgICAvLyApOwogICAgICAgIC8vIH0KICAgICAgICBpZiAocmVzcG9uc2UuZGF0YS5tZXNzYWdlLk1TR19DT0RFID09PSBfdGhpczIuYXBpX3N0YXR1c19jb2RlLkRBVEFfQVZBSUxBQkxFLk1TR19DT0RFKSB7CiAgICAgICAgICBmb3IgKHZhciBpIGluIHJlc3BvbnNlLmRhdGEuZGF0YVswXSkgewogICAgICAgICAgICBfdGhpczIuaW50ZW50X2xpc3QucHVzaChyZXNwb25zZS5kYXRhLmRhdGFbMF1baV0pOwoKICAgICAgICAgICAgX3RoaXMyLm5ld19pbnRlbnRfbGlzdC5wdXNoKHJlc3BvbnNlLmRhdGEuZGF0YVswXVtpXSk7CiAgICAgICAgICB9CiAgICAgICAgfSBlbHNlIGlmIChyZXNwb25zZS5kYXRhLm1lc3NhZ2UuTVNHX0NPREUgPT09IF90aGlzMi5hcGlfc3RhdHVzX2NvZGUuTk9fREFUQV9BVkFJTEFCTEUuTVNHX0NPREUpIHsKICAgICAgICAgIFN3YWwoewogICAgICAgICAgICB0ZXh0OiByZXNwb25zZS5kYXRhLm1lc3NhZ2UuTVNHLAogICAgICAgICAgICBzaG93Q2FuY2VsQnV0dG9uOiBmYWxzZSwKICAgICAgICAgICAgc2hvd0NvbmZpcm1CdXR0b246IGZhbHNlLAogICAgICAgICAgICBwb3NpdGlvbjogInRvcC1lbmQiLAogICAgICAgICAgICB0b2FzdDogdHJ1ZSwKICAgICAgICAgICAgdGltZXI6IDI1MDAsCiAgICAgICAgICAgIHR5cGU6ICJpbmZvIgogICAgICAgICAgfSk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIF90aGlzMi5zaG93X2xvYWRlciA9IGZhbHNlOwogICAgICAgICAgU3dhbCh7CiAgICAgICAgICAgIHRpdGxlOiByZXNwb25zZS5kYXRhLm1lc3NhZ2UuTVNHX0NPREUsCiAgICAgICAgICAgIHRleHQ6IHJlc3BvbnNlLmRhdGEubWVzc2FnZS5NU0csCiAgICAgICAgICAgIHNob3dDYW5jZWxCdXR0b246IGZhbHNlLAogICAgICAgICAgICBzaG93Q29uZmlybUJ1dHRvbjogZmFsc2UsCiAgICAgICAgICAgIHRpbWVyOiAyNTAwLAogICAgICAgICAgICB0eXBlOiAiZXJyb3IiCiAgICAgICAgICB9KTsKICAgICAgICB9CiAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlKSB7CiAgICAgICAgaWYgKGUucmVzcG9uc2Uuc3RhdHVzID09PSA0MTAgfHwgZS5yZXNwb25zZS5zdGF0dXMgPT09IDQ0MCB8fCBlLnJlc3BvbnNlLnN0YXR1cyA9PT0gNDA5KSB7CiAgICAgICAgICBfdGhpczIuJHJvb3QuJGVtaXQoIlNlc3Npb25fRXhwaXJlZCIsIGUucmVzcG9uc2UuZGF0YSk7CiAgICAgICAgfQogICAgICB9KTsKICAgIH0sCiAgICBzZXRwYWdpbmF0aW9uOiBmdW5jdGlvbiBzZXRwYWdpbmF0aW9uKHBhZ2Vfbm8pIHsKICAgICAgdGhpcy5wYWdlX2FycmF5ID0gW107CgogICAgICBpZiAodGhpcy50b3RhbF9wYWdlcyA8PSA3KSB7CiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLnRvdGFsX3BhZ2VzOyBpKyspIHsKICAgICAgICAgIHRoaXMucGFnZV9hcnJheS5wdXNoKGkgKyAxKTsKICAgICAgICB9CiAgICAgIH0gZWxzZSBpZiAocGFnZV9ubyA9PSAxKSB7CiAgICAgICAgZm9yICh2YXIgX2kgPSAwOyBfaSA8IDQ7IF9pKyspIHsKICAgICAgICAgIHRoaXMucGFnZV9hcnJheS5wdXNoKF9pICsgMSk7CiAgICAgICAgfQoKICAgICAgICB0aGlzLnBhZ2VfYXJyYXkucHVzaCgiLi4ubCIpOwogICAgICAgIHRoaXMucGFnZV9hcnJheS5wdXNoKHRoaXMudG90YWxfcGFnZXMpOwogICAgICB9IGVsc2UgaWYgKHBhZ2Vfbm8gPT0gdGhpcy50b3RhbF9wYWdlcykgewogICAgICAgIHRoaXMucGFnZV9hcnJheS5wdXNoKDEpOwogICAgICAgIHRoaXMucGFnZV9hcnJheS5wdXNoKCIuLi5zIik7CgogICAgICAgIGZvciAodmFyIF9pMiA9IHRoaXMudG90YWxfcGFnZXMgLSA0OyBfaTIgPCB0aGlzLnRvdGFsX3BhZ2VzOyBfaTIrKykgewogICAgICAgICAgdGhpcy5wYWdlX2FycmF5LnB1c2goX2kyICsgMSk7CiAgICAgICAgfQogICAgICB9IGVsc2UgaWYgKHBhZ2Vfbm8gPD0gNCkgewogICAgICAgIGZvciAodmFyIF9pMyA9IDA7IF9pMyA8IHBhZ2Vfbm8gKyAzOyBfaTMrKykgewogICAgICAgICAgdGhpcy5wYWdlX2FycmF5LnB1c2goX2kzICsgMSk7CiAgICAgICAgfQoKICAgICAgICB0aGlzLnBhZ2VfYXJyYXkucHVzaCgiLi4ubCIpOwogICAgICAgIHRoaXMucGFnZV9hcnJheS5wdXNoKHRoaXMudG90YWxfcGFnZXMpOwogICAgICB9IGVsc2UgaWYgKHBhZ2Vfbm8gPj0gdGhpcy50b3RhbF9wYWdlcyAtIDQpIHsKICAgICAgICB0aGlzLnBhZ2VfYXJyYXkucHVzaCgxKTsKICAgICAgICB0aGlzLnBhZ2VfYXJyYXkucHVzaCgiLi4ucyIpOwoKICAgICAgICBmb3IgKHZhciBfaTQgPSBwYWdlX25vIC0gNDsgX2k0IDwgdGhpcy50b3RhbF9wYWdlczsgX2k0KyspIHsKICAgICAgICAgIHRoaXMucGFnZV9hcnJheS5wdXNoKF9pNCArIDEpOwogICAgICAgIH0KICAgICAgfSBlbHNlIHsKICAgICAgICB0aGlzLnBhZ2VfYXJyYXkucHVzaCgxKTsKICAgICAgICB0aGlzLnBhZ2VfYXJyYXkucHVzaCgiLi4ucyIpOwoKICAgICAgICBmb3IgKHZhciBfaTUgPSBwYWdlX25vIC0gMzsgX2k1IDw9IHBhZ2Vfbm8gKyAzOyBfaTUrKykgewogICAgICAgICAgdGhpcy5wYWdlX2FycmF5LnB1c2goX2k1KTsKICAgICAgICB9CgogICAgICAgIHRoaXMucGFnZV9hcnJheS5wdXNoKCIuLi5sIik7CiAgICAgICAgdGhpcy5wYWdlX2FycmF5LnB1c2godGhpcy50b3RhbF9wYWdlcyk7CiAgICAgIH0KICAgIH0sCiAgICBwYWdlX3JlcXVpcmU6IGZ1bmN0aW9uIHBhZ2VfcmVxdWlyZShwYWdlKSB7CiAgICAgIHZhciBfdGhpczMgPSB0aGlzOwoKICAgICAgdGhpcy5jaGVja2VkX2xpc3QgPSBbXTsKICAgICAgJCgiaW5wdXQ6Y2hlY2tib3giKS5wcm9wKCJjaGVja2VkIiwgZmFsc2UpOwoKICAgICAgaWYgKHBhZ2UgPT0gMCB8fCBwYWdlID09IHRoaXMudG90YWxfcGFnZXMgKyAxKSB7fSBlbHNlIHsKICAgICAgICAkKCJpbnB1dDpjaGVja2JveCIpLnByb3AoImNoZWNrZWQiLCBmYWxzZSk7CgogICAgICAgIGlmIChwYWdlID09ICIuLi5zIikgewogICAgICAgICAgdGhpcy5wYWdlX25vID0gTWF0aC5jZWlsKCgxICsgdGhpcy5wYWdlX25vKSAvIDIpOwogICAgICAgIH0gZWxzZSBpZiAocGFnZSA9PSAiLi4ubCIpIHsKICAgICAgICAgIHRoaXMucGFnZV9ubyA9IE1hdGguY2VpbCgodGhpcy50b3RhbF9wYWdlcyArIHRoaXMucGFnZV9ubykgLyAyKTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgdGhpcy5wYWdlX25vID0gcGFnZTsKICAgICAgICB9CgogICAgICAgIGlmICh0aGlzLnNlYXJjaF9uYW1lID09ICIiKSB7CiAgICAgICAgICB0aGlzLnNob3dfbG9hZGVyID0gdHJ1ZTsKICAgICAgICAgIGF4aW9zLnBvc3QoYXBpX2NhbGxzLmdldF91bmFuc3dlcmVkX3VybCgpLCB7CiAgICAgICAgICAgIGNvbXBhbnlfbmFtZTogdGhpcy5jb21wYW55bmFtZSwKICAgICAgICAgICAgY29tcGFueV9pZDogdGhpcy5jb21wYW55aWQsCiAgICAgICAgICAgIGVtYWlsOiB0aGlzLiRzZXNzaW9uLmdldCgiVXNlckluZm9ybWF0aW9uIikuZW1haWwsCiAgICAgICAgICAgIGxpY2Vuc2Vfa2V5OiB0aGlzLiRzZXNzaW9uLmdldCgiVXNlckluZm9ybWF0aW9uIikubGljZW5zZV9rZXksCiAgICAgICAgICAgIHRva2VuOiB0aGlzLiRzZXNzaW9uLmdldCgiVXNlckluZm9ybWF0aW9uIikudG9rZW5zLAogICAgICAgICAgICBzdWJzY3JpcHRpb246IHRoaXMuJHNlc3Npb24uZ2V0KCJVc2VySW5mb3JtYXRpb24iKS5zdWJzY3JpcHRpb24sCiAgICAgICAgICAgIGlzRGVsZXRlOiAiRmFsc2UiLAogICAgICAgICAgICBwYWdlX25vOiB0aGlzLnBhZ2Vfbm8sCiAgICAgICAgICAgIHBlcl9wYWdlOiB0aGlzLnBlcl9wYWdlLAogICAgICAgICAgICBpc19nZXRfdXNlcl9yZXNwb25zZTogZmFsc2UKICAgICAgICAgIH0sIHsKICAgICAgICAgICAgaGVhZGVyczogewogICAgICAgICAgICAgIEF1dGhvcml6YXRpb246ICJCZWFyZXIgIi5jb25jYXQodGhpcy4kc2Vzc2lvbi5nZXQoImF0IikpCiAgICAgICAgICAgIH0KICAgICAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgICAgIF90aGlzMy5zaG93X2xvYWRlciA9IGZhbHNlOwogICAgICAgICAgICBfdGhpczMudW5hbnN3ZXJlZF9saXN0ID0gW107CgogICAgICAgICAgICBpZiAocmVzcG9uc2UuZGF0YS5tZXNzYWdlLk1TR19DT0RFID09PSBfdGhpczMuYXBpX3N0YXR1c19jb2RlLkRBVEFfQVZBSUxBQkxFLk1TR19DT0RFKSB7CiAgICAgICAgICAgICAgZm9yICh2YXIgaSBpbiByZXNwb25zZS5kYXRhLmRhdGFbMF0pIHsKICAgICAgICAgICAgICAgIHZhciB0ZW1wX2ludCA9ICIiOwoKICAgICAgICAgICAgICAgIGlmIChCb29sZWFuKHJlc3BvbnNlLmRhdGEuZGF0YVsyXVtpXSkpIHsKICAgICAgICAgICAgICAgICAgLy8gdGVtcF9pbnQgPSByZXNwb25zZS5kYXRhWzJdW2ldLnJlcGxhY2UodGhpcy5jb21wYW55aWQgKyAiXyIsICIiKTsKICAgICAgICAgICAgICAgICAgdGVtcF9pbnQgPSByZXNwb25zZS5kYXRhLmRhdGFbMl1baV07CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgX3RoaXMzLnVuYW5zd2VyZWRfbGlzdC5wdXNoKHsKICAgICAgICAgICAgICAgICAgcXVlc3Rpb246IHJlc3BvbnNlLmRhdGEuZGF0YVswXVtpXSwKICAgICAgICAgICAgICAgICAgaW50ZW50OiB0ZW1wX2ludCwKICAgICAgICAgICAgICAgICAgc291cmNlOiByZXNwb25zZS5kYXRhLmRhdGFbMV1baV0sCiAgICAgICAgICAgICAgICAgIHVzZXJfcmVzcG9uc2U6IHJlc3BvbnNlLmRhdGEuZGF0YVsyXVtpXSwKICAgICAgICAgICAgICAgICAgdXNlcl9mZWVkYmFjazogcmVzcG9uc2UuZGF0YS5kYXRhWzNdW2ldLAogICAgICAgICAgICAgICAgICBlZGl0OiBmYWxzZQogICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICBfdGhpczMuc2V0cGFnaW5hdGlvbihfdGhpczMucGFnZV9ubyk7CiAgICAgICAgICAgIH0gZWxzZSBpZiAocmVzcG9uc2UuZGF0YS5tZXNzYWdlLk1TR19DT0RFID09PSBfdGhpczMuYXBpX3N0YXR1c19jb2RlLk5PX0RBVEFfQVZBSUxBQkxFLk1TR19DT0RFKSB7CiAgICAgICAgICAgICAgU3dhbCh7CiAgICAgICAgICAgICAgICB0ZXh0OiByZXNwb25zZS5kYXRhLm1lc3NhZ2UuTVNHLAogICAgICAgICAgICAgICAgc2hvd0NhbmNlbEJ1dHRvbjogZmFsc2UsCiAgICAgICAgICAgICAgICBzaG93Q29uZmlybUJ1dHRvbjogZmFsc2UsCiAgICAgICAgICAgICAgICB0b2FzdDogdHJ1ZSwKICAgICAgICAgICAgICAgIHBvc2l0aW9uOiAidG9wLWVuZCIsCiAgICAgICAgICAgICAgICB0aW1lcjogMjUwMCwKICAgICAgICAgICAgICAgIHR5cGU6ICJpbmZvIgogICAgICAgICAgICAgIH0pOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgIF90aGlzMy5zaG93X2xvYWRlciA9IGZhbHNlOwogICAgICAgICAgICAgIFN3YWwoewogICAgICAgICAgICAgICAgdGl0bGU6IHJlc3BvbnNlLmRhdGEubWVzc2FnZS5NU0dfQ09ERSwKICAgICAgICAgICAgICAgIHRleHQ6IHJlc3BvbnNlLmRhdGEubWVzc2FnZS5NU0csCiAgICAgICAgICAgICAgICBzaG93Q2FuY2VsQnV0dG9uOiBmYWxzZSwKICAgICAgICAgICAgICAgIHNob3dDb25maXJtQnV0dG9uOiBmYWxzZSwKICAgICAgICAgICAgICAgIHRpbWVyOiAyNTAwLAogICAgICAgICAgICAgICAgdHlwZTogImVycm9yIgogICAgICAgICAgICAgIH0pOwogICAgICAgICAgICB9CiAgICAgICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZSkgewogICAgICAgICAgICBpZiAoZS5yZXNwb25zZS5zdGF0dXMgPT09IDQxMCB8fCBlLnJlc3BvbnNlLnN0YXR1cyA9PT0gNDQwIHx8IGUucmVzcG9uc2Uuc3RhdHVzID09PSA0MDkpIHsKICAgICAgICAgICAgICBfdGhpczMuJHJvb3QuJGVtaXQoIlNlc3Npb25fRXhwaXJlZCIsIGUucmVzcG9uc2UuZGF0YSk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0pOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICB0aGlzLnNob3dfbG9hZGVyID0gdHJ1ZTsKICAgICAgICAgIGF4aW9zLnBvc3QoYXBpX2NhbGxzLmdldF91bmFuc3dlcmVkX3VybCgpLCB7CiAgICAgICAgICAgIGNvbXBhbnlfaWQ6IHRoaXMuJHNlc3Npb24uZ2V0KCJVc2VySW5mb3JtYXRpb24iKS5jb21wYW55X2lkLAogICAgICAgICAgICBjb21wYW55X25hbWU6IHRoaXMuJHNlc3Npb24uZ2V0KCJVc2VySW5mb3JtYXRpb24iKS5jb21wYW55X25hbWUsCiAgICAgICAgICAgIGxpY2Vuc2Vfa2V5OiB0aGlzLiRzZXNzaW9uLmdldCgiVXNlckluZm9ybWF0aW9uIikubGljZW5zZV9rZXksCiAgICAgICAgICAgIGVtYWlsOiB0aGlzLiRzZXNzaW9uLmdldCgiVXNlckluZm9ybWF0aW9uIikuZW1haWwsCiAgICAgICAgICAgIHRva2VuOiB0aGlzLiRzZXNzaW9uLmdldCgiVXNlckluZm9ybWF0aW9uIikudG9rZW5zLAogICAgICAgICAgICBpc3NlYXJjaDogdHJ1ZSwKICAgICAgICAgICAgLy8gc2VhcmNoYnk6IHRoaXMuc2VhcmNoX2J5LAogICAgICAgICAgICBrZXk6IHRoaXMuc2VhcmNoX25hbWUsCiAgICAgICAgICAgIHBlcl9wYWdlOiB0aGlzLnBlcl9wYWdlLAogICAgICAgICAgICBwYWdlX25vOiB0aGlzLnBhZ2Vfbm8sCiAgICAgICAgICAgIGlzX2dldF91c2VyX3Jlc3BvbnNlOiBmYWxzZQogICAgICAgICAgfSwgewogICAgICAgICAgICBoZWFkZXJzOiB7CiAgICAgICAgICAgICAgQXV0aG9yaXphdGlvbjogIkJlYXJlciAiLmNvbmNhdCh0aGlzLiRzZXNzaW9uLmdldCgiYXQiKSkKICAgICAgICAgICAgfQogICAgICAgICAgfSkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICAgICAgX3RoaXMzLnNob3dfbG9hZGVyID0gZmFsc2U7CgogICAgICAgICAgICBpZiAocmVzcG9uc2UuZGF0YS5wYWdpbmF0aW9uLnRvdGFsX3BhZ2UgIT0gdW5kZWZpbmVkKSB7CiAgICAgICAgICAgICAgX3RoaXMzLnBhZ2Vfbm8gPSBwYWdlOwogICAgICAgICAgICAgIF90aGlzMy51bmFuc3dlcmVkX2xpc3QgPSBbXTsKICAgICAgICAgICAgICBfdGhpczMubnVtYmVyX29mX3Jvd3MgPSByZXNwb25zZS5kYXRhLnBhZ2luYXRpb24udG90YWxfZGF0YTsKICAgICAgICAgICAgICBfdGhpczMudG90YWxfcGFnZXMgPSByZXNwb25zZS5kYXRhLnBhZ2luYXRpb24udG90YWxfcGFnZTsKICAgICAgICAgICAgICB2YXIgZGF0YSA9IHJlc3BvbnNlLmRhdGE7CgogICAgICAgICAgICAgIGZvciAodmFyIGkgaW4gcmVzcG9uc2UuZGF0YS5kYXRhWzBdKSB7CiAgICAgICAgICAgICAgICB2YXIgdGVtcF9pbnQgPSAiIjsKCiAgICAgICAgICAgICAgICBpZiAoQm9vbGVhbihkYXRhWzJdW2ldKSkgewogICAgICAgICAgICAgICAgICAvLyB0ZW1wX2ludCA9IGRhdGFbMl1baV0ucmVwbGFjZSh0aGlzLmNvbXBhbnlpZCArICJfIiwgIiIpOwogICAgICAgICAgICAgICAgICB0ZW1wX2ludCA9IGRhdGFbMl1baV07CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgX3RoaXMzLnVuYW5zd2VyZWRfbGlzdC5wdXNoKHsKICAgICAgICAgICAgICAgICAgcXVlc3Rpb246IHJlc3BvbnNlLmRhdGEuZGF0YVswXVtpXSwKICAgICAgICAgICAgICAgICAgaW50ZW50OiB0ZW1wX2ludCwKICAgICAgICAgICAgICAgICAgc291cmNlOiByZXNwb25zZS5kYXRhLmRhdGFbMV1baV0sCiAgICAgICAgICAgICAgICAgIHVzZXJfcmVzcG9uc2U6IHJlc3BvbnNlLmRhdGEuZGF0YVsyXVtpXSwKICAgICAgICAgICAgICAgICAgdXNlcl9mZWVkYmFjazogcmVzcG9uc2UuZGF0YS5kYXRhWzNdW2ldLAogICAgICAgICAgICAgICAgICBlZGl0OiBmYWxzZQogICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICBfdGhpczMuc2V0cGFnaW5hdGlvbihfdGhpczMucGFnZV9ubyk7CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgdG9hc3RyLmVycm9yKCJJbnRlcm5hbCBTZXJ2ZXIgRXJyb3IiKTsgLy8gc2V0VGltZW91dCgoKSA9PiB7CiAgICAgICAgICAgICAgLy8gdGhpcy4kcm91dGVyLmdvKCk7CiAgICAgICAgICAgICAgLy8gfSwgMjUwMCk7CgogICAgICAgICAgICAgIF90aGlzMy5sb2FkX3ZlcmlmeV9yZXNwb25zZXNfdW5hbnN3ZXJlZCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZSkgewogICAgICAgICAgICBpZiAoZS5yZXNwb25zZS5zdGF0dXMgPT09IDQxMCB8fCBlLnJlc3BvbnNlLnN0YXR1cyA9PT0gNDQwIHx8IGUucmVzcG9uc2Uuc3RhdHVzID09PSA0MDkpIHsKICAgICAgICAgICAgICBfdGhpczMuJHJvb3QuJGVtaXQoIlNlc3Npb25fRXhwaXJlZCIsIGUucmVzcG9uc2UuZGF0YSk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0pOwogICAgICAgIH0KICAgICAgfQogICAgfSwKICAgIHF1ZXN0aW9uX3NlbGVjdGVkOiBmdW5jdGlvbiBxdWVzdGlvbl9zZWxlY3RlZCh2YWx1ZSkgewogICAgICB2YXIgX3RoaXM0ID0gdGhpczsKCiAgICAgIGlmIChldmVudC50YXJnZXQuY2hlY2tlZCkgewogICAgICAgIGlmICh2YWx1ZSA9PSAiYWxsIikgewogICAgICAgICAgdGhpcy5jaGVja2VkX2xpc3QgPSBbXTsKCiAgICAgICAgICBmb3IgKHZhciBpIGluIHRoaXMudW5hbnN3ZXJlZF9saXN0KSB7CiAgICAgICAgICAgIHRoaXMuY2hlY2tlZF9saXN0LnB1c2godGhpcy51bmFuc3dlcmVkX2xpc3RbaV0pOwogICAgICAgICAgfQogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICB0aGlzLmNoZWNrZWRfbGlzdC5wdXNoKHRoaXMudW5hbnN3ZXJlZF9saXN0W3ZhbHVlXSk7CiAgICAgICAgfQogICAgICB9IGVsc2UgaWYgKCFldmVudC50YXJnZXQuY2hlY2tlZCkgewogICAgICAgIGlmICh2YWx1ZSAhPSAiYWxsIikgewogICAgICAgICAgdmFyIHNlbGVjdGFsbCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoIiNzZWxlY3RhbGwiKTsKCiAgICAgICAgICBpZiAoc2VsZWN0YWxsLmNoZWNrZWQpIHsKICAgICAgICAgICAgc2VsZWN0YWxsLmNoZWNrZWQgPSBmYWxzZTsKICAgICAgICAgIH0KCiAgICAgICAgICB2YXIgdGVtcCA9IHRoaXMuY2hlY2tlZF9saXN0LmZpbHRlcihmdW5jdGlvbiAocXVlc3Rpb24pIHsKICAgICAgICAgICAgcmV0dXJuIHF1ZXN0aW9uICE9PSBfdGhpczQudW5hbnN3ZXJlZF9saXN0W3ZhbHVlXTsKICAgICAgICAgIH0pOwogICAgICAgICAgdGhpcy5jaGVja2VkX2xpc3QgPSB0ZW1wOwogICAgICAgIH0KICAgICAgfQogICAgfSwKICAgIGRlbGV0ZV9zaW5nbGU6IGZ1bmN0aW9uIGRlbGV0ZV9zaW5nbGUoaW5kZXgpIHsKICAgICAgdmFyIF90aGlzNSA9IHRoaXM7CgogICAgICB0aGlzLnNob3dfbG9hZGVyID0gdHJ1ZTsKICAgICAgdmFyIHF1ZXN0aW9ubGlzdCA9IFtdOwogICAgICBTd2FsLmZpcmUoewogICAgICAgIHRpdGxlOiB0aGlzLnRsdCgndW5hbnN3ZXJlZF9kZWxldGVfc3dhbF9tc2cnKSwKICAgICAgICB0ZXh0OiB0aGlzLnRsdCgndW5hbnN3ZXJlZF9kZWxldGVfdGhpc19xc19tc2cnKSwKICAgICAgICB0eXBlOiAicXVlc3Rpb24iLAogICAgICAgIHNob3dDYW5jZWxCdXR0b246IHRydWUsCiAgICAgICAgY29uZmlybUJ1dHRvbkNvbG9yOiAiIzMwODVkNiIsCiAgICAgICAgY2FuY2VsQnV0dG9uQ29sb3I6ICIjZDMzIiwKICAgICAgICBjb25maXJtQnV0dG9uVGV4dDogdGhpcy50bHQoJ3VuYW5zd2VyZWRfZGVsZXRlX3N3YWxfY29uZmlybV9tc2cnKQogICAgICB9KS50aGVuKGZ1bmN0aW9uIChyZXN1bHQpIHsKICAgICAgICBfdGhpczUuc2hvd19sb2FkZXIgPSBmYWxzZTsgLy8gY29uc29sZS5sb2cocmVzdWx0LnZhbHVlKTsKCiAgICAgICAgaWYgKHJlc3VsdC52YWx1ZSkgewogICAgICAgICAgLy8gY29uc29sZS5sb2coImRlbGV0ZWQiKTsKICAgICAgICAgIHF1ZXN0aW9ubGlzdC5wdXNoKF90aGlzNS51bmFuc3dlcmVkX2xpc3RbaW5kZXhdLnF1ZXN0aW9uKTsKCiAgICAgICAgICBfdGhpczUuZGVsZXRlX3F1ZXN0aW9uc19hcGkocXVlc3Rpb25saXN0KTsKICAgICAgICB9CiAgICAgIH0pOwogICAgfSwKICAgIGRlbGV0ZV9tdWx0aXBsZTogZnVuY3Rpb24gZGVsZXRlX211bHRpcGxlKCkgewogICAgICB2YXIgX3RoaXM2ID0gdGhpczsKCiAgICAgIGlmICh0aGlzLmNoZWNrZWRfbGlzdC5sZW5ndGggPT0gMCkgewogICAgICAgIFN3YWwuZmlyZSh7CiAgICAgICAgICB0aXRsZTogdGhpcy50bHQoJ3VuYW5zd2VyZWRfZGVsZXRlX25vX3FzX3NlbGVjdGVkX21zZycpLAogICAgICAgICAgdGV4dDogIiIsCiAgICAgICAgICB0eXBlOiAiZXJyb3IiLAogICAgICAgICAgdGltZXI6IDIwMDAKICAgICAgICB9KTsKICAgICAgfSBlbHNlIGlmICh0aGlzLmNoZWNrZWRfbGlzdC5sZW5ndGggPiAwKSB7CiAgICAgICAgdmFyIHF1ZXN0aW9ubGlzdCA9IFtdOwogICAgICAgIFN3YWwuZmlyZSh7CiAgICAgICAgICB0aXRsZTogdGhpcy50bHQoJ3VuYW5zd2VyZWRfZGVsZXRlX3N3YWxfYWxlcnRfbXNnJyksCiAgICAgICAgICB0ZXh0OiB0aGlzLnRsdCgndW5hbnN3ZXJlZF9kZWxldGVfdGhpc19xc19tdWx0aXBsZV9tc2cnKSwKICAgICAgICAgIHR5cGU6ICJxdWVzdGlvbiIsCiAgICAgICAgICBzaG93Q2FuY2VsQnV0dG9uOiB0cnVlLAogICAgICAgICAgY29uZmlybUJ1dHRvbkNvbG9yOiAiIzMwODVkNiIsCiAgICAgICAgICBjYW5jZWxCdXR0b25Db2xvcjogIiNkMzMiLAogICAgICAgICAgY29uZmlybUJ1dHRvblRleHQ6IHRoaXMudGx0KCd1bmFuc3dlcmVkX2RlbGV0ZV9jb25maXJtX3N3YWxfbXNnJykKICAgICAgICB9KS50aGVuKGZ1bmN0aW9uIChyZXN1bHQpIHsKICAgICAgICAgIGlmIChyZXN1bHQudmFsdWUpIHsKICAgICAgICAgICAgZm9yICh2YXIgaSBpbiBfdGhpczYuY2hlY2tlZF9saXN0KSB7CiAgICAgICAgICAgICAgcXVlc3Rpb25saXN0LnB1c2goX3RoaXM2LmNoZWNrZWRfbGlzdFtpXS5xdWVzdGlvbik7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIF90aGlzNi5kZWxldGVfcXVlc3Rpb25zX2FwaShxdWVzdGlvbmxpc3QpOwogICAgICAgICAgfQogICAgICAgIH0pOwogICAgICB9CiAgICB9LAogICAgZGVsZXRlX3F1ZXN0aW9uc19hcGk6IGZ1bmN0aW9uIGRlbGV0ZV9xdWVzdGlvbnNfYXBpKHF1ZXN0aW9ubGlzdCkgewogICAgICB2YXIgX3RoaXM3ID0gdGhpczsKCiAgICAgIHRoaXMuc2hvd19sb2FkZXIgPSB0cnVlOwogICAgICBheGlvcy5wb3N0KGFwaV9jYWxscy5nZXRfdW5hbnN3ZXJlZF91cmwoKSwgewogICAgICAgIGNvbXBhbnlfaWQ6IHRoaXMuY29tcGFueWlkLAogICAgICAgIGNvbXBhbnlfbmFtZTogdGhpcy5jb21wYW55bmFtZSwKICAgICAgICBxdWVzdGlvbmxpc3Q6IHF1ZXN0aW9ubGlzdCwKICAgICAgICBpc0RlbGV0ZTogIlRydWUiLAogICAgICAgIGVtYWlsOiB0aGlzLiRzZXNzaW9uLmdldCgiVXNlckluZm9ybWF0aW9uIikuZW1haWwsCiAgICAgICAgbGljZW5zZV9rZXk6IHRoaXMuJHNlc3Npb24uZ2V0KCJVc2VySW5mb3JtYXRpb24iKS5saWNlbnNlX2tleSwKICAgICAgICB0b2tlbjogdGhpcy4kc2Vzc2lvbi5nZXQoIlVzZXJJbmZvcm1hdGlvbiIpLnRva2VucwogICAgICB9LCB7CiAgICAgICAgaGVhZGVyczogewogICAgICAgICAgQXV0aG9yaXphdGlvbjogIkJlYXJlciAiLmNvbmNhdCh0aGlzLiRzZXNzaW9uLmdldCgiYXQiKSkKICAgICAgICB9CiAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgX3RoaXM3LnNob3dfbG9hZGVyID0gZmFsc2U7CgogICAgICAgIGlmIChyZXNwb25zZS5kYXRhLm1lc3NhZ2UuTVNHX0NPREUgPT09IF90aGlzNy5hcGlfc3RhdHVzX2NvZGUuREVMRVRFRF9TVUNDRVNTRlVMTFlfMDAwNC5NU0dfQ09ERSkgewogICAgICAgICAgLy8gY29uc29sZS5sb2coImRlbGV0ZWQgc3VjY2Vzc2Z1bGx5Iik7CiAgICAgICAgICBfdGhpczcuY2hlY2tlZF9saXN0ID0gW107CiAgICAgICAgICBfdGhpczcubnVtYmVyX29mX3Jvd3MgPSByZXNwb25zZS5kYXRhLnBhZ2luYXRpb24udG90YWxfZGF0YSA9PSB1bmRlZmluZWQgPyAwIDogcmVzcG9uc2UuZGF0YS5wYWdpbmF0aW9uLnRvdGFsX2RhdGE7CiAgICAgICAgICBfdGhpczcudG90YWxfcGFnZXMgPSByZXNwb25zZS5kYXRhLnBhZ2luYXRpb24udG90YWxfcGFnZSA9PSB1bmRlZmluZWQgPyAwIDogcmVzcG9uc2UuZGF0YS5wYWdpbmF0aW9uLnRvdGFsX3BhZ2U7CiAgICAgICAgICB0b2FzdHIuc3VjY2VzcyhfdGhpczcudGx0KCd1bmFuc3dlcmVkX2RlbGV0ZV9zdWNjZXNzX21zZycpKTsgLy8gc2V0VGltZW91dCgoKSA9PiB7CiAgICAgICAgICAvLyB0aGlzLiRyb3V0ZXIuZ28oKTsKICAgICAgICAgIC8vIH0sIDE1MDApOwoKICAgICAgICAgIGlmIChxdWVzdGlvbmxpc3QubGVuZ3RoID09PSBfdGhpczcudW5hbnN3ZXJlZF9saXN0Lmxlbmd0aCAmJiBfdGhpczcucGFnZV9ubyA+IDEpIHsKICAgICAgICAgICAgX3RoaXM3LnBhZ2Vfbm8gPSBfdGhpczcucGFnZV9ubyAtIDE7CiAgICAgICAgICB9CgogICAgICAgICAgd2hpbGUgKF90aGlzNy5wYWdlX25vID4gMSAmJiBfdGhpczcucGFnZV9ubyA+IF90aGlzNy50b3RhbF9wYWdlcykgewogICAgICAgICAgICBfdGhpczcucGFnZV9ubyA9IF90aGlzNy5wYWdlX25vIC0gMTsKICAgICAgICAgIH0KCiAgICAgICAgICBfdGhpczcubG9hZF92ZXJpZnlfcmVzcG9uc2VzX3VuYW5zd2VyZWQoKTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgX3RoaXM3LnNob3dfbG9hZGVyID0gZmFsc2U7CiAgICAgICAgICBTd2FsKHsKICAgICAgICAgICAgdGl0bGU6IHJlc3BvbnNlLmRhdGEubWVzc2FnZS5NU0dfQ09ERSwKICAgICAgICAgICAgdGV4dDogcmVzcG9uc2UuZGF0YS5tZXNzYWdlLk1TRywKICAgICAgICAgICAgc2hvd0NhbmNlbEJ1dHRvbjogZmFsc2UsCiAgICAgICAgICAgIHNob3dDb25maXJtQnV0dG9uOiBmYWxzZSwKICAgICAgICAgICAgdGltZXI6IDI1MDAsCiAgICAgICAgICAgIHR5cGU6ICJlcnJvciIKICAgICAgICAgIH0pOwogICAgICAgIH0KCiAgICAgICAgX3RoaXM3LnNob3dfbG9hZGVyID0gZmFsc2U7CiAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlKSB7CiAgICAgICAgaWYgKGUucmVzcG9uc2Uuc3RhdHVzID09PSA0MTAgfHwgZS5yZXNwb25zZS5zdGF0dXMgPT09IDQ0MCB8fCBlLnJlc3BvbnNlLnN0YXR1cyA9PT0gNDA5KSB7CiAgICAgICAgICBfdGhpczcuJHJvb3QuJGVtaXQoIlNlc3Npb25fRXhwaXJlZCIsIGUucmVzcG9uc2UuZGF0YSk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIHRvYXN0ci5lcnJvcihlLm1lc3NhZ2UpOwogICAgICAgIH0KCiAgICAgICAgX3RoaXM3LnNob3dfbG9hZGVyID0gZmFsc2U7CiAgICAgIH0pOwogICAgfSwKICAgIGVkaXRfaXRlbTogZnVuY3Rpb24gZWRpdF9pdGVtKGluZGV4KSB7CiAgICAgIHRoaXMudW5hbnN3ZXJlZF9saXN0W2luZGV4XS5lZGl0ID0gIXRoaXMudW5hbnN3ZXJlZF9saXN0W2luZGV4XS5lZGl0OwogICAgICB0aGlzLm9sZF9xdWVzdGlvbiA9IHRoaXMudW5hbnN3ZXJlZF9saXN0W2luZGV4XS5xdWVzdGlvbjsgLy8gdGhpcy5vbGRfaW50ZW50ID0gdGhpcy51bmFuc3dlcmVkX2xpc3RbaW5kZXhdLmludGVudDsKCiAgICAgIHRoaXMub2xkX2RhdGEucXVlc3Rpb24gPSB0aGlzLm9sZF9xdWVzdGlvbjsgLy8gdGhpcy5vbGRfZGF0YS5pbnRlbnQgPSB0aGlzLmNvbXBhbnlpZCArICJfIiArIHRoaXMub2xkX2ludGVudDsKICAgICAgLy8gdGhpcy5xdWVzdGlvbiA9IHF1ZXN0aW9uLnF1ZXN0aW9uOwogICAgICAvLyB0aGlzLmludGVudCA9IHF1ZXN0aW9uLmludGVudDsKICAgICAgLy8gY29uc29sZS5sb2codGhpcy5vbGRfZGF0YSk7CiAgICAgIC8vIGNvbnNvbGUubG9nKHRoaXMub2xkX3F1ZXN0aW9uKTsKICAgIH0sCiAgICBzdWJtaXRfcXVlc3Rpb246IGZ1bmN0aW9uIHN1Ym1pdF9xdWVzdGlvbigpIHsKICAgICAgdmFyIF90aGlzOCA9IHRoaXM7CgogICAgICAvLyBjb25zb2xlLmxvZygic3VibWl0Iik7CiAgICAgIC8vIGNvbnNvbGUubG9nKCJxdWVzdGlvbiIsIHRoaXMub2xkX3F1ZXN0aW9uKTsKICAgICAgLy8gY29uc29sZS5sb2coImludGVudCIsIHRoaXMub2xkX2ludGVudCk7CiAgICAgIC8vIGNvbnNvbGUubG9nKCJpbnRlbnQiLCB0aGlzLmlzZWRpdCk7CiAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7CgogICAgICBpZiAodGhpcy5vbGRfcXVlc3Rpb24gPT0gIiIpIHsKICAgICAgICB0b2FzdHIuZXJyb3IodGhpcy50bHQoJ3VuYW5zd2VyZWRfZW50ZXJfYWxsX2ZpZWxkX21zZycpKTsKICAgICAgfSBlbHNlIHsKICAgICAgICB0aGlzLnNob3dfbG9hZGVyID0gdHJ1ZTsKICAgICAgICBheGlvcy5wb3N0KGFwaV9jYWxscy5nZXRfdW5hbnN3ZXJlZF91cmwoKSwgewogICAgICAgICAgaXNfRWRpdDogIlRydWUiLAogICAgICAgICAgcXVlc3Rpb246IHRoaXMub2xkX3F1ZXN0aW9uLAogICAgICAgICAgLy8gaW50ZW50OiB0aGlzLmNvbXBhbnlpZCArICJfIiArIHRoaXMub2xkX2ludGVudCwKICAgICAgICAgIGNvbXBhbnlfbmFtZTogdGhpcy5jb21wYW55bmFtZSwKICAgICAgICAgIGNvbXBhbnlfaWQ6IHRoaXMuY29tcGFueWlkLAogICAgICAgICAgb2xkX3F1ZXN0aW9uX2RhdGE6IHRoaXMub2xkX2RhdGEsCiAgICAgICAgICBlbWFpbDogdGhpcy4kc2Vzc2lvbi5nZXQoIlVzZXJJbmZvcm1hdGlvbiIpLmVtYWlsLAogICAgICAgICAgbGljZW5zZV9rZXk6IHRoaXMuJHNlc3Npb24uZ2V0KCJVc2VySW5mb3JtYXRpb24iKS5saWNlbnNlX2tleSwKICAgICAgICAgIHRva2VuOiB0aGlzLiRzZXNzaW9uLmdldCgiVXNlckluZm9ybWF0aW9uIikudG9rZW5zLAogICAgICAgICAgc3Vic2NyaXB0aW9uOiB0aGlzLiRzZXNzaW9uLmdldCgiVXNlckluZm9ybWF0aW9uIikuc3Vic2NyaXB0aW9uCiAgICAgICAgfSwgewogICAgICAgICAgaGVhZGVyczogewogICAgICAgICAgICBBdXRob3JpemF0aW9uOiAiQmVhcmVyICIuY29uY2F0KHRoaXMuJHNlc3Npb24uZ2V0KCJhdCIpKQogICAgICAgICAgfQogICAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgICBfdGhpczguc2hvd19sb2FkZXIgPSBmYWxzZTsKCiAgICAgICAgICBpZiAocmVzcG9uc2UuZGF0YS5tZXNzYWdlLk1TR19DT0RFID09PSBfdGhpczguYXBpX3N0YXR1c19jb2RlLklOVEVSTkFMX1NFUlZFUl9FUlJPUi5NU0dfQ09ERSkgewogICAgICAgICAgICB0b2FzdHIuZXJyb3IoX3RoaXM4LnRsdCgndW5hbnN3ZXJlZF9pbnRlcnZhbF9zZXJ2ZXJfbXNnJykpOwogICAgICAgICAgfSBlbHNlIGlmIChyZXNwb25zZS5kYXRhLm1lc3NhZ2UuTVNHX0NPREUgPT09IF90aGlzOC5hcGlfc3RhdHVzX2NvZGUuRURJVEVEX1NVQ0NFU1NGVUxMWV8wMDA1Lk1TR19DT0RFKSB7CiAgICAgICAgICAgIFN3YWwoewogICAgICAgICAgICAgIHR5cGU6ICJzdWNjZXNzIiwKICAgICAgICAgICAgICB0ZXh0OiBfdGhpczgudGx0KCd1bmFuc3dlcmVkX3FzX2VkaXRlZF9zdWNjZXNzZnVsX21zZycpLAogICAgICAgICAgICAgIHRpbWVyOiAyNTAwCiAgICAgICAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKHJlc3VsdCkgewogICAgICAgICAgICAgIC8vIGlmIChyZXN1bHQudmFsdWUpIHsKICAgICAgICAgICAgICAvLyB0aGlzLiRyb3V0ZXIuZ28oKTsKICAgICAgICAgICAgICAvLyB9CiAgICAgICAgICAgICAgX3RoaXM4LmxvYWRfdmVyaWZ5X3Jlc3BvbnNlc191bmFuc3dlcmVkKCk7CiAgICAgICAgICAgIH0pOwogICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgX3RoaXM4LnNob3dfbG9hZGVyID0gZmFsc2U7CiAgICAgICAgICAgIFN3YWwoewogICAgICAgICAgICAgIHRpdGxlOiByZXNwb25zZS5kYXRhLm1lc3NhZ2UuTVNHX0NPREUsCiAgICAgICAgICAgICAgdGV4dDogcmVzcG9uc2UuZGF0YS5tZXNzYWdlLk1TRywKICAgICAgICAgICAgICBzaG93Q2FuY2VsQnV0dG9uOiBmYWxzZSwKICAgICAgICAgICAgICBzaG93Q29uZmlybUJ1dHRvbjogZmFsc2UsCiAgICAgICAgICAgICAgdGltZXI6IDI1MDAsCiAgICAgICAgICAgICAgdHlwZTogImVycm9yIgogICAgICAgICAgICB9KTsKICAgICAgICAgIH0gLy8gZWxzZSBpZiAocmVzcG9uc2UuZGF0YSA9PSAiUXVlc3Rpb24gSW50ZW50IFVwZGF0ZWQiKSB7CiAgICAgICAgICAvLyBTd2FsKHsKICAgICAgICAgIC8vICAgICB0eXBlOiAic3VjY2VzcyIsCiAgICAgICAgICAvLyAgICAgdGV4dDogIllvdXIgcXVlc3Rpb24gaGFzIGJlZW4gdXBkYXRlZCBzdWNjZXNzZnVsbHkiLAogICAgICAgICAgLy8gICAgIHRpbWVyOjIwMDAsCiAgICAgICAgICAvLyB9KS50aGVuKChyZXN1bHQpID0+IHsKICAgICAgICAgIC8vICAgICAvLyBpZiAocmVzdWx0LnZhbHVlKSB7CiAgICAgICAgICAvLyAgICAgLy8gdGhpcy4kcm91dGVyLmdvKCk7CiAgICAgICAgICAvLyAgICAgLy8gfQogICAgICAgICAgLy8gICAgIHRoaXMubG9hZF92ZXJpZnlfcmVzcG9uc2VzX3VuYW5zd2VyZWQoKTsKICAgICAgICAgIC8vIH0pOwogICAgICAgICAgLy8gfQoKICAgICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZSkgewogICAgICAgICAgaWYgKGUucmVzcG9uc2Uuc3RhdHVzID09PSA0MTAgfHwgZS5yZXNwb25zZS5zdGF0dXMgPT09IDQ0MCB8fCBlLnJlc3BvbnNlLnN0YXR1cyA9PT0gNDA5KSB7CiAgICAgICAgICAgIF90aGlzOC4kcm9vdC4kZW1pdCgiU2Vzc2lvbl9FeHBpcmVkIiwgZS5yZXNwb25zZS5kYXRhKTsKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIHRvYXN0ci5lcnJvcihfdGhpczgudGx0KCd1bmFuc3dlcmVkX2ludGVydmFsX3NlcnZlcl9tc2cxJykpOwogICAgICAgICAgfQogICAgICAgIH0pOwogICAgICAgIHRoaXMuY2xvc2VfbW9kYWwoJ2FkZF9xdWVzbl9zYXZlJyk7CiAgICAgIH0KICAgIH0sCiAgICBwYWdpbmF0aW9uX2NsYXNzOiBmdW5jdGlvbiBwYWdpbmF0aW9uX2NsYXNzKGluZGV4KSB7CiAgICAgIGlmIChpbmRleCA9PSB0aGlzLnBhZ2Vfbm8pIHsKICAgICAgICByZXR1cm4gIiBhY3RpdmUiOwogICAgICB9IGVsc2UgewogICAgICAgIHJldHVybiAiIjsKICAgICAgfQogICAgfSwKICAgIGFkZF9xdWVzdGlvbnM6IGZ1bmN0aW9uIGFkZF9xdWVzdGlvbnMoKSB7CiAgICAgIHZhciBfdGhpczkgPSB0aGlzOwoKICAgICAgdGhpcy5zaG93X2xvYWRlciA9IHRydWU7CiAgICAgIHZhciBxdWVzdGlvbmxpc3QgPSBbXTsKICAgICAgdmFyIHRlbXBfbGlzdCA9IFtdOwogICAgICB2YXIgZW1wdHkgPSB0aGlzLnVuYW5zd2VyZWRfbGlzdC5maWx0ZXIoZnVuY3Rpb24gKHVuYW5zd2VyZWQpIHsKICAgICAgICByZXR1cm4gdW5hbnN3ZXJlZC5pbnRlbnQgPT0gIiI7CiAgICAgIH0pOwoKICAgICAgZm9yICh2YXIgaSBpbiB0aGlzLnVuYW5zd2VyZWRfbGlzdCkgewogICAgICAgIGlmICh0aGlzLnVuYW5zd2VyZWRfbGlzdFtpXS5pbnRlbnQgIT0gIiIpIHsKICAgICAgICAgIHRlbXBfbGlzdC5wdXNoKHRoaXMudW5hbnN3ZXJlZF9saXN0W2ldLnF1ZXN0aW9uLCAvLyB0aGlzLmNvbXBhbnlpZCArICJfIiArIHRoaXMudW5hbnN3ZXJlZF9saXN0W2ldLmludGVudAogICAgICAgICAgdGhpcy51bmFuc3dlcmVkX2xpc3RbaV0uaW50ZW50KTsKICAgICAgICAgIHF1ZXN0aW9ubGlzdC5wdXNoKHRlbXBfbGlzdCk7CiAgICAgICAgfQoKICAgICAgICB0ZW1wX2xpc3QgPSBbXTsKICAgICAgfQoKICAgICAgaWYgKHF1ZXN0aW9ubGlzdC5sZW5ndGggPiAwKSB7CiAgICAgICAgdGhpcy5zaG93X2xvYWRlciA9IHRydWU7CiAgICAgICAgYXhpb3MucG9zdChhcGlfY2FsbHMuZ2V0X3VuYW5zd2VyZWRfdXJsKCksIHsKICAgICAgICAgIGNvbXBhbnlfbmFtZTogdGhpcy5jb21wYW55bmFtZSwKICAgICAgICAgIGNvbXBhbnlfaWQ6IHRoaXMuY29tcGFueWlkLAogICAgICAgICAgaXNBZGQ6ICJUcnVlIiwKICAgICAgICAgIHF1ZXN0aW9uaW50ZW50OiBxdWVzdGlvbmxpc3QsCiAgICAgICAgICBlbWFpbDogdGhpcy4kc2Vzc2lvbi5nZXQoIlVzZXJJbmZvcm1hdGlvbiIpLmVtYWlsLAogICAgICAgICAgbGljZW5zZV9rZXk6IHRoaXMuJHNlc3Npb24uZ2V0KCJVc2VySW5mb3JtYXRpb24iKS5saWNlbnNlX2tleSwKICAgICAgICAgIHRva2VuOiB0aGlzLiRzZXNzaW9uLmdldCgiVXNlckluZm9ybWF0aW9uIikudG9rZW5zCiAgICAgICAgfSwgewogICAgICAgICAgaGVhZGVyczogewogICAgICAgICAgICBBdXRob3JpemF0aW9uOiAiQmVhcmVyICIuY29uY2F0KHRoaXMuJHNlc3Npb24uZ2V0KCJhdCIpKQogICAgICAgICAgfQogICAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgICBfdGhpczkuc2hvd19sb2FkZXIgPSBmYWxzZTsKCiAgICAgICAgICBpZiAocmVzcG9uc2UuZGF0YS5tZXNzYWdlLk1TR19DT0RFID09PSBfdGhpczkuYXBpX3N0YXR1c19jb2RlLkFEREVEX1NVQ0NFU1NGVUxMWV8wMDAyLk1TR19DT0RFKSB7CiAgICAgICAgICAgIHN3YWwoewogICAgICAgICAgICAgIHRleHQ6IF90aGlzOS50bHQoJ3VuYW5zd2VyZWRfYWRkZWRfc3VjY2Vzc2Z1bF9tc2cnKSwKICAgICAgICAgICAgICB0eXBlOiAic3VjY2VzcyIsCiAgICAgICAgICAgICAgdGltZXI6IDMwMDAKICAgICAgICAgICAgfSk7CgogICAgICAgICAgICBpZiAocXVlc3Rpb25saXN0Lmxlbmd0aCA9PT0gX3RoaXM5LnVuYW5zd2VyZWRfbGlzdC5sZW5ndGggJiYgX3RoaXM5LnBhZ2Vfbm8gPiAxKSB7CiAgICAgICAgICAgICAgX3RoaXM5LnBhZ2Vfbm8gPSBfdGhpczkucGFnZV9ubyAtIDE7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIF90aGlzOS5sb2FkX3ZlcmlmeV9yZXNwb25zZXNfdW5hbnN3ZXJlZCgpOwogICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgX3RoaXM5LnNob3dfbG9hZGVyID0gZmFsc2U7CiAgICAgICAgICAgIFN3YWwoewogICAgICAgICAgICAgIHRpdGxlOiByZXNwb25zZS5kYXRhLm1lc3NhZ2UuTVNHX0NPREUsCiAgICAgICAgICAgICAgdGV4dDogcmVzcG9uc2UuZGF0YS5tZXNzYWdlLk1TRywKICAgICAgICAgICAgICBzaG93Q2FuY2VsQnV0dG9uOiBmYWxzZSwKICAgICAgICAgICAgICBzaG93Q29uZmlybUJ1dHRvbjogZmFsc2UsCiAgICAgICAgICAgICAgdGltZXI6IDI1MDAsCiAgICAgICAgICAgICAgdHlwZTogImVycm9yIgogICAgICAgICAgICB9KTsKICAgICAgICAgIH0KICAgICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZSkgewogICAgICAgICAgX3RoaXM5LnNob3dfbG9hZGVyID0gZmFsc2U7CgogICAgICAgICAgaWYgKGUucmVzcG9uc2Uuc3RhdHVzID09PSA0MTAgfHwgZS5yZXNwb25zZS5zdGF0dXMgPT09IDQ0MCB8fCBlLnJlc3BvbnNlLnN0YXR1cyA9PT0gNDA5KSB7CiAgICAgICAgICAgIF90aGlzOS4kcm9vdC4kZW1pdCgiU2Vzc2lvbl9FeHBpcmVkIiwgZS5yZXNwb25zZS5kYXRhKTsKICAgICAgICAgIH0KICAgICAgICB9KTsKICAgICAgfSBlbHNlIHsKICAgICAgICB0b2FzdHIuZXJyb3IodGhpcy50bHQoJ3VuYW5zd2VyZWRfYWRkX3F1ZXN0aW9uX21zZycpKTsKICAgICAgfQoKICAgICAgdGhpcy5zaG93X2xvYWRlciA9IGZhbHNlOwogICAgfSwKICAgIHNlYXJjaF9xdWVzdGlvbjogZnVuY3Rpb24gc2VhcmNoX3F1ZXN0aW9uKCkgewogICAgICB2YXIgX3RoaXMxMCA9IHRoaXM7CgogICAgICAvLyBpZih0aGlzLnNlYXJjaF9ieSE9JycpewogICAgICBpZiAodGhpcy5zZWFyY2hfbmFtZSAhPSAiIikgewogICAgICAgIHRoaXMuY2hlY2tlZF9saXN0ID0gW107CiAgICAgICAgJCgiaW5wdXQ6Y2hlY2tib3giKS5wcm9wKCJjaGVja2VkIiwgZmFsc2UpOwogICAgICAgIHRoaXMuc2hvd19sb2FkZXIgPSB0cnVlOwogICAgICAgIGF4aW9zLnBvc3QoYXBpX2NhbGxzLmdldF91bmFuc3dlcmVkX3VybCgpLCB7CiAgICAgICAgICBjb21wYW55X2lkOiB0aGlzLiRzZXNzaW9uLmdldCgiVXNlckluZm9ybWF0aW9uIikuY29tcGFueV9pZCwKICAgICAgICAgIGNvbXBhbnlfbmFtZTogdGhpcy4kc2Vzc2lvbi5nZXQoIlVzZXJJbmZvcm1hdGlvbiIpLmNvbXBhbnlfbmFtZSwKICAgICAgICAgIGxpY2Vuc2Vfa2V5OiB0aGlzLiRzZXNzaW9uLmdldCgiVXNlckluZm9ybWF0aW9uIikubGljZW5zZV9rZXksCiAgICAgICAgICBlbWFpbDogdGhpcy4kc2Vzc2lvbi5nZXQoIlVzZXJJbmZvcm1hdGlvbiIpLmVtYWlsLAogICAgICAgICAgdG9rZW46IHRoaXMuJHNlc3Npb24uZ2V0KCJVc2VySW5mb3JtYXRpb24iKS50b2tlbnMsCiAgICAgICAgICBpc3NlYXJjaDogdHJ1ZSwKICAgICAgICAgIC8vIHNlYXJjaGJ5OiB0aGlzLnNlYXJjaF9ieSwKICAgICAgICAgIGtleTogdGhpcy5zZWFyY2hfbmFtZSwKICAgICAgICAgIHBlcl9wYWdlOiB0aGlzLnBlcl9wYWdlLAogICAgICAgICAgcGFnZV9ubzogMSwKICAgICAgICAgIGlzX2dldF91c2VyX3Jlc3BvbnNlOiBmYWxzZQogICAgICAgIH0sIHsKICAgICAgICAgIGhlYWRlcnM6IHsKICAgICAgICAgICAgQXV0aG9yaXphdGlvbjogIkJlYXJlciAiLmNvbmNhdCh0aGlzLiRzZXNzaW9uLmdldCgiYXQiKSkKICAgICAgICAgIH0KICAgICAgICB9KS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgICAgX3RoaXMxMC5zaG93X2xvYWRlciA9IGZhbHNlOwoKICAgICAgICAgIGlmIChyZXNwb25zZS5kYXRhLm1lc3NhZ2UuTVNHX0NPREUgPT09IF90aGlzMTAuYXBpX3N0YXR1c19jb2RlLk5PX0RBVEFfQVZBSUxBQkxFLk1TR19DT0RFKSB7CiAgICAgICAgICAgIHRvYXN0ci5lcnJvcihfdGhpczEwLnRsdCgndW5hbnN3ZXJlZF9ub19xc19mb3VuZF9tc2cnKSk7IC8vIHNldFRpbWVvdXQoKCkgPT4gewogICAgICAgICAgICAvLyAgICAgdGhpcy4kcm91dGVyLmdvKCk7CiAgICAgICAgICAgIC8vIH0sIDI1MDApOwoKICAgICAgICAgICAgX3RoaXMxMC5sb2FkX3ZlcmlmeV9yZXNwb25zZXNfdW5hbnN3ZXJlZCgpOwogICAgICAgICAgfSBlbHNlIGlmIChyZXNwb25zZS5kYXRhLnBhZ2luYXRpb24udG90YWxfcGFnZSAhPSB1bmRlZmluZWQpIHsKICAgICAgICAgICAgX3RoaXMxMC5wYWdlX25vID0gMTsKICAgICAgICAgICAgX3RoaXMxMC51bmFuc3dlcmVkX2xpc3QgPSBbXTsKICAgICAgICAgICAgX3RoaXMxMC5udW1iZXJfb2Zfcm93cyA9IHJlc3BvbnNlLmRhdGEucGFnaW5hdGlvbi50b3RhbF9kYXRhOwogICAgICAgICAgICBfdGhpczEwLnRvdGFsX3BhZ2VzID0gcmVzcG9uc2UuZGF0YS5wYWdpbmF0aW9uLnRvdGFsX3BhZ2U7CiAgICAgICAgICAgIHZhciBkYXRhID0gcmVzcG9uc2UuZGF0YS5kYXRhOwoKICAgICAgICAgICAgZm9yICh2YXIgaSBpbiByZXNwb25zZS5kYXRhLmRhdGFbMF0pIHsKICAgICAgICAgICAgICB2YXIgdGVtcF9pbnQgPSAiIjsKCiAgICAgICAgICAgICAgaWYgKEJvb2xlYW4oZGF0YVsyXVtpXSkpIHsKICAgICAgICAgICAgICAgIC8vIHRlbXBfaW50ID0gZGF0YVsyXVtpXS5yZXBsYWNlKHRoaXMuY29tcGFueWlkICsgIl8iLCAiIik7CiAgICAgICAgICAgICAgICB0ZW1wX2ludCA9IGRhdGFbMl1baV07CiAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICBfdGhpczEwLnVuYW5zd2VyZWRfbGlzdC5wdXNoKHsKICAgICAgICAgICAgICAgIHF1ZXN0aW9uOiByZXNwb25zZS5kYXRhLmRhdGFbMF1baV0sCiAgICAgICAgICAgICAgICBpbnRlbnQ6IHRlbXBfaW50LAogICAgICAgICAgICAgICAgc291cmNlOiByZXNwb25zZS5kYXRhLmRhdGFbMV1baV0sCiAgICAgICAgICAgICAgICB1c2VyX3Jlc3BvbnNlOiBkYXRhWzJdW2ldLAogICAgICAgICAgICAgICAgdXNlcl9mZWVkYmFjazogZGF0YVszXVtpXSwKICAgICAgICAgICAgICAgIGVkaXQ6IGZhbHNlCiAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIF90aGlzMTAuc2V0cGFnaW5hdGlvbihfdGhpczEwLnBhZ2Vfbm8pOwogICAgICAgICAgfSAvLyBlbHNlIGlmIChyZXNwb25zZS5kYXRhLk1TRyA9PSAiTm8gUXVlc3Rpb25zIEZvdW5kIikgewogICAgICAgICAgLy8gICB0b2FzdHIuZXJyb3IoIk5vIFF1ZXN0aW9uIEZvdW5kIik7CiAgICAgICAgICAvLyAgIHNldFRpbWVvdXQoKCkgPT4gewogICAgICAgICAgLy8gICAgIHRoaXMuJHJvdXRlci5nbygpOwogICAgICAgICAgLy8gICB9LCAyNTAwKTsKICAgICAgICAgIC8vIHRoaXMubG9hZF92ZXJpZnlfcmVzcG9uc2VzX3VuYW5zd2VyZWQoKTsKICAgICAgICAgIC8vIH0KICAgICAgICAgIGVsc2UgewogICAgICAgICAgICAgIHRvYXN0ci5lcnJvcihfdGhpczEwLnRsdCgndW5hbnN3ZXJlZF9pbnRlcm5hbF9zZXJ2ZXJfbXNnMicpKTsgLy8gc2V0VGltZW91dCgoKSA9PiB7CiAgICAgICAgICAgICAgLy8gICAgIHRoaXMuJHJvdXRlci5nbygpOwogICAgICAgICAgICAgIC8vICAgfSwgMjUwMCk7CgogICAgICAgICAgICAgIF90aGlzMTAubG9hZF92ZXJpZnlfcmVzcG9uc2VzX3VuYW5zd2VyZWQoKTsKICAgICAgICAgICAgfQogICAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlKSB7CiAgICAgICAgICBpZiAoZS5yZXNwb25zZS5zdGF0dXMgPT09IDQxMCB8fCBlLnJlc3BvbnNlLnN0YXR1cyA9PT0gNDQwIHx8IGUucmVzcG9uc2Uuc3RhdHVzID09PSA0MDkpIHsKICAgICAgICAgICAgX3RoaXMxMC4kcm9vdC4kZW1pdCgiU2Vzc2lvbl9FeHBpcmVkIiwgZS5yZXNwb25zZS5kYXRhKTsKICAgICAgICAgIH0KICAgICAgICB9KTsKICAgICAgfSBlbHNlIHsKICAgICAgICB0b2FzdHIuZXJyb3IodGhpcy50bHQoJ3VuYW5zd2VyZWRfZGF0YV9mb3Jfc2VhcmNoX21zZycpKTsKICAgICAgfSAvLyB9ZWxzZXsKICAgICAgLy8gICB0b2FzdHIuZXJyb3IoIlNlbGVjdCBoZWFkZXIgZm9yIHNlYXJjaGluZyIpOwogICAgICAvLyB9CgogICAgfQogIH0KfTs="},{"version":3,"sources":["VerifyResponsesUnanswered.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n<div class=\"table-box\">\n    <div class=\"spinner\" id=\"spinner\" v-show=\"show_loader\"></div>\n    <div class=\"table-responsive mb-0\" style=\"overflow :visible;\">\n    <table class=\"table\">\n        <thead>\n        <tr>\n            <th scope=\"col\">\n            <div class=\"form-check checkbox checkbox-success\">\n                <label class=\"form-check-label\">\n                <input\n                    class=\"form-check-input\"\n                    id=\"selectall\"\n                    type=\"checkbox\"\n                    @change=\"question_selected('all')\"\n                />\n                <span class=\"icn\"></span>\n                </label>\n            </div>\n            </th>\n            <th scope=\"col\" style=\"width: 5%\">{{tlt('unanswered_action_label')}}</th>\n            <th scope=\"col\">{{tlt('unanswered_question_label')}}</th>\n            <th scope=\"col\">{{tlt('unanswered_intent_label')}}</th>\n            <!-- <th scope=\"col\" style=\"width: 2%\">SOURCES</th> -->\n        </tr>\n        </thead>\n        <tbody>\n        <tr\n            v-for=\"(row, index) in unanswered_list\"\n            :key=\"index\"\n            id=\"list-group\"\n        >\n            <!-- <template v-if=\"row.intent === null\"> -->\n            <template>\n            <th scope=\"col\" class=\"table-head\">\n                <div class=\"form-check checkbox checkbox-success\">\n                <label class=\"form-check-label\">\n                    <input\n                    class=\"form-check-input\"\n                    @change=\"question_selected(index)\"\n                    type=\"checkbox\"\n                    />\n                    <span class=\"icn\"></span>\n                </label>\n                </div>\n            </th>\n            <td class=\"action\">\n                <a href=\"#\" @click=\"edit_item(index)\">\n                <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    width=\"15.392\"\n                    height=\"15.392\"\n                    viewBox=\"0 0 15.392 15.392\"\n                    data-toggle=\"modal\"\n                    data-target=\"#exampleModalCenter\"\n                >\n                    <path\n                    id=\"square-edit-outline\"\n                    d=\"M4.71,3A1.7,1.7,0,0,0,3,4.71V16.682a1.71,1.71,0,0,0,1.71,1.71H16.682a1.71,1.71,0,0,0,1.71-1.71V10.7h-1.71v5.986H4.71V4.71H10.7V3H4.71m10.928.855a.591.591,0,0,0-.41.171L14.185,5.061,16.322,7.2l1.043-1.035a.578.578,0,0,0,0-.812L16.04,4.026a.571.571,0,0,0-.4-.171M13.578,5.668l-6.3,6.311v2.138H9.413l6.3-6.311Z\"\n                    transform=\"translate(-3 -3)\"\n                    fill=\"#9499ae\"\n                    />\n                </svg>\n                </a>\n                <a href=\"#\" @click=\"delete_single(index)\">\n                <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    width=\"13.682\"\n                    height=\"15.392\"\n                    viewBox=\"0 0 13.682 15.392\"\n                >\n                    <path\n                    id=\"trash-can-outline\"\n                    d=\"M8.276,3v.855H4v1.71h.855V16.682a1.71,1.71,0,0,0,1.71,1.71h8.551a1.71,1.71,0,0,0,1.71-1.71V5.565h.855V3.855H13.406V3H8.276M6.565,5.565h8.551V16.682H6.565V5.565m1.71,1.71v7.7h1.71v-7.7H8.276m3.42,0v7.7h1.71v-7.7Z\"\n                    transform=\"translate(-4 -3)\"\n                    fill=\"#f23d3d\"\n                    />\n                </svg>\n                </a>\n            </td>\n            <td>{{ row.question }}</td>\n            <td style=\"width: 50%;\">\n                <div class=\"form-group\">\n                <multiselect\n                    v-model=\"row.intent\"\n                    :searchable=\"true\"\n                    :close-on-select=\"true\"\n                    :show-labels=\"false\"\n                    :options=\"intent_list\"\n                >\n                    <span>{{ row.intent }}</span>\n                </multiselect>\n                </div>\n            </td>\n            <!-- <td>{{ row.source }}</td> -->\n            </template>\n        </tr>\n        </tbody>\n    </table>\n    </div>\n    <div class=\"pagin-table\" style=\"margin-top: 0%\">\n    <nav aria-label=\"Page navigation example\">\n        <ul class=\"pagination justify-content-center\">\n        <li class=\"page-item\">\n            <a\n            class=\"page-link\"\n            href=\"#\"\n            @click=\"page_require(page_no - 1)\"\n            >\n            <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"8.667\"\n                height=\"15.204\"\n                viewBox=\"0 0 8.667 15.204\"\n            >\n                <g\n                id=\"arrow-point-to-left\"\n                transform=\"translate(105.806 15.204) rotate(180)\"\n                >\n                <path\n                    id=\"Path_1136\"\n                    data-name=\"Path 1136\"\n                    d=\"M105.493,8.354l-6.537,6.537a1.065,1.065,0,1,1-1.506-1.506L103.235,7.6,97.45,1.817A1.065,1.065,0,0,1,98.956.312l6.537,6.537a1.065,1.065,0,0,1,0,1.505Z\"\n                    transform=\"translate(0 0)\"\n                    fill=\"#9499ae\"\n                />\n                </g>\n            </svg>\n            </a>\n        </li>\n        <li\n            :class=\"'page-item ' + pagination_class(pageno)\"\n            v-for=\"pageno in page_array\"\n            :key=\"pageno\"\n        >\n            <a\n            v-if=\"pageno == '...s' || pageno == '...l'\"\n            class=\"page-link\"\n            href=\"#\"\n            @click=\"page_require(pageno)\"\n            >...</a\n            >\n            <a\n            v-if=\"pageno != '...s' && pageno != '...l'\"\n            class=\"page-link\"\n            href=\"#\"\n            @click=\"page_require(pageno)\"\n            >{{ pageno }}</a\n            >\n            <!-- <a class=\"page-link\" href=\"#\" @click=\"page_require(pageno)\">{{pageno}}</a> -->\n        </li>\n        <li class=\"page-item\">\n            <a\n            class=\"page-link\"\n            href=\"#\"\n            @click=\"page_require(page_no + 1)\"\n            >\n            <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"8.667\"\n                height=\"15.204\"\n                viewBox=\"0 0 8.667 15.204\"\n            >\n                <g\n                id=\"arrow-point-to-right\"\n                transform=\"translate(-97.139 0)\"\n                >\n                <path\n                    id=\"Path_1136\"\n                    data-name=\"Path 1136\"\n                    d=\"M105.493,8.354l-6.537,6.537a1.065,1.065,0,1,1-1.506-1.506L103.235,7.6,97.45,1.817A1.065,1.065,0,0,1,98.956.312l6.537,6.537a1.065,1.065,0,0,1,0,1.505Z\"\n                    transform=\"translate(0 0)\"\n                    fill=\"#9499ae\"\n                />\n                </g>\n            </svg>\n            </a>\n        </li>\n        </ul>\n    </nav>\n    </div>\n     <div\n        class=\"modal fade dash-modal\"\n        id=\"exampleModalCenter\"\n        tabindex=\"-1\"\n        role=\"dialog\"\n        aria-labelledby=\"exampleModalCenterTitle\"\n        aria-hidden=\"true\"\n      >\n        <div class=\"modal-dialog modal-dialog-centered\" role=\"document\">\n          <div class=\"modal-content\">\n            <div class=\"modal-body\">\n              <div class=\"modal-head d-flex align-items-center\">\n                <div class=\"head-icn\">\n                  <img src=\"/img/msg-blue.png\" alt />\n                </div>\n                <h3>{{tlt('unanswered_edit_question_header')}}</h3>\n              </div>\n              <button\n                type=\"button\"\n                class=\"close\"\n                data-dismiss=\"modal\"\n                aria-label=\"Close\"\n              >\n                <img src=\"/img/close-icn.png\" alt />\n              </button>\n              <form >\n                <div class=\"form-group\">\n                  <label>{{tlt('unanswered_your_qs_label')}}</label>\n                  <input\n                    type=\"text\"\n                    class=\"form-control\"\n                    :placeholder=\"tlt('enter_question')\"\n                    v-model=\"old_question\"\n                    id=\"add_question_question\"\n                  />\n                </div>\n                <!-- <div class=\"form-group\">\n                  <label>Select Intent</label>\n                  <multiselect\n                    v-model=\"old_intent\"\n                    id=\"qus_n_int_intent\"\n                    :options=\"intent_list\"\n                    :searchable=\"true\"\n                    :close-on-select=\"true\"\n                    :show-labels=\"false\"\n                  >\n                    <span>{{ old_intent }}</span>\n                  </multiselect>\n                </div> -->\n                <div class=\"btn-wrap text-right\">\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-link\"\n                    data-dismiss=\"modal\"\n                  >\n                    {{tlt('unanswered_edit_cancel_btn')}}\n                  </button>\n                  <button\n                    type=\"submit\"\n                    class=\"darkblue-btn\"\n                    id=\"add_quesn_save\"\n                    @click=\"submit_question\"\n                  >\n                    {{tlt('save_btn')}}\n                  </button>\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n</div>\n</template>\n\n<script>\nimport axios from \"axios\";\nimport swal from \"sweetalert2\";\nimport Swal from \"sweetalert2\";\nimport api_calls from \"@/portal/api_calls\";\nimport { setTimeout } from \"timers\";\nimport Multiselect from \"vue-multiselect\";\nimport {  close_modal } from \"@/portal/mixins\";\n\n\nexport default {\n    name: 'verify_responses_unanswered',\n    components: {\n        Multiselect,\n    },\n      mixins: [close_modal],\n\n    data() {\n        return {\n        unanswered_list: [],\n        user_role: this.$session.get(\"UserInformation\").role,\n        companyname: this.$session.get(\"UserInformation\").company_name,\n        companyid: this.$session.get(\"UserInformation\").company_id,\n        intent_list: [],\n        checked_list: [],\n        intentlist: \"\",\n        per_page: 15,\n        page_no: 1,\n        total_pages: 0,\n        show_loader: false,\n        number_of_rows: null,\n        search_name: \"\",\n        page_array: [],\n        old_question: \"\",\n        old_intent: \"\",\n        new_intent_list: [],\n        old_data: { question: null, intent: null },\n        thumbs_down_icon: require(\"@/portal/assets/img/Group 61.svg\"),\n        thumbs_up_icon: require(\"@/portal/assets/img/Group 71.svg\"),\n        // view_component_name: \"unanswered_questions\",\n        };\n    },\n    mounted() {\n        var vm = this;\n        $(\"#selectall\").click(function () {\n        if ($(this).is(\":checked\")) {\n            $(\"input:checkbox\").prop(\"checked\", true);\n        } else {\n            vm.checked_list = [];\n            $(\"input:checkbox\").prop(\"checked\", false);\n        }\n        });\n        this.$root.$on(\"add_questions_unanswered\", (data) => {\n            // console.log(data);   \n\t        this.add_questions();\n        });\n        this.$root.$on(\"search_unanswered\", (data) => {\n            this.search_name = data;\n            this.search_question();\n            // this.add_questions();\n        });\n        this.$root.$on(\"delete_multiple_unanswered\", (data) => {\n            this.delete_multiple();\n        });\n        this.$root.$on(\"load_verify_responses_unanswered\", (data) => {\n            this.load_verify_responses_unanswered();\n        });\n    },\n    beforeDestroy() {\n        this.$root.$off(\"add_questions_unanswered\");\n        this.$root.$off(\"search_unanswered\");\n        this.$root.$off(\"delete_multiple_unanswered\");\n        this.$root.$off(\"load_verify_responses_unanswered\");\n    },\n    created() {\n        this.load_verify_responses_unanswered();\n    },\n    methods: {\n        load_verify_responses_unanswered(){\n        this.checked_list = [];\n        $(\"input:checkbox\").prop(\"checked\", false);\n        this.show_loader = true;\n        this.intent_list = [];\n        this.new_intent_list = [];\n        this.unanswered_list =[];\n        this.search_name = \"\";\n        if (this.user_role == \"SuperAdmin\") {\n        if (this.$session.has(\"CompanyId\")) {\n            this.companyid = this.$session.get(\"CompanyId\");\n            this.companyname = this.$session.get(\"CompanyName\");\n        } else {\n            this.companyid = this.$session.get(\"UserInformation\").company_id;\n            this.companyname = this.$session.get(\"UserInformation\").company_name;\n        }\n        } else {\n        this.companyid = this.$session.get(\"UserInformation\").company_id;\n        this.companyname = this.$session.get(\"UserInformation\").company_name;\n        }\n        if (this.companyname !== undefined) {\n        axios\n            .post(\n            api_calls.get_unanswered_url(),\n            {\n                company_name: this.companyname,\n                company_id: this.companyid,\n                email: this.$session.get(\"UserInformation\").email,\n                isDelete: \"False\",\n                license_key: this.$session.get(\"UserInformation\").license_key,\n                token: this.$session.get(\"UserInformation\").tokens,\n                page_no: this.page_no,\n                per_page: this.per_page,\n                is_get_user_response: false\n            },\n            {\n                headers: {\n                Authorization: `Bearer ${this.$session.get(\"at\")}`,\n                },\n            }\n            )\n            .then((response) => {\n            this.show_loader = false;\n            if (response.data.message.MSG_CODE === this.api_status_code.DATA_AVAILABLE.MSG_CODE) {\n                this.number_of_rows = response.data.pagination.total_data == undefined ? 0 : response.data.pagination.total_data;\n                this.total_pages = response.data.pagination.total_page == undefined ? 0 : response.data.pagination.total_page;\n                var data = response.data.data;\n                this.unanswered_list = [];\n                for (var i in data[0]) {\n                    let temp_int = \"\";\n                    if (Boolean(data[2][i])) {\n                    // temp_int = data[2][i].replace(this.companyid + \"_\", \"\");\n                    temp_int = data[2][i];\n                    }\n                    this.unanswered_list.push({\n                    question: data[0][i],\n                    intent: temp_int,\n                    source: data[1][i],\n                    user_response: data[2][i],\n                    user_feedback: data[3][i],\n                    edit: false,\n                    });\n                }\n                this.setpagination(this.page_no);\n                this.show_loader = false;            \n            }else if(response.data.message.MSG_CODE === this.api_status_code.NO_DATA_AVAILABLE.MSG_CODE){\n                Swal({\n                text: response.data.message.MSG,\n                showCancelButton: false,\n                showConfirmButton: false,\n                position: \"top-end\",\n                toast: true,\n                timer: 2500,\n                type: \"info\"\n                });    \n            }else {\n                this.show_loader = false;\n                Swal({\n                title: response.data.message.MSG_CODE,\n                text: response.data.message.MSG,\n                showCancelButton: false,\n                showConfirmButton: false,\n                timer: 2500,\n                type: \"error\"\n                });\n            }\n            })\n            .catch((e) => {\n            if (\n                e.response.status === 410 ||\n                e.response.status === 440 ||\n                e.response.status === 409\n            ) {\n                this.$root.$emit(\"Session_Expired\", e.response.data);\n            } else {\n                toastr.error(e.message);\n            }\n            this.show_loader = false;\n            });\n        }\n        axios\n        .post(\n            api_calls.get_unanswered_url(),\n            {\n            company_id: this.companyid,\n            company_name: this.companyname,\n            isDropdown: \"True\",\n            email: this.$session.get(\"UserInformation\").email,\n            license_key: this.$session.get(\"UserInformation\").license_key,\n            token: this.$session.get(\"UserInformation\").tokens,\n            },\n            {\n            headers: {\n                Authorization: `Bearer ${this.$session.get(\"at\")}`,\n            },\n            }\n        )\n        .then((response) => {\n            // console.log(response.data);\n            // for (var i in response.data[0]) {\n            // this.intent_list.push(\n            //     response.data[0][i].replace(this.companyid + \"_\", \"\")\n            // );\n            // this.new_intent_list.push(\n            //     response.data[0][i].replace(this.companyid + \"_\", \"\")\n            // );\n            // }\n            if (response.data.message.MSG_CODE === this.api_status_code.DATA_AVAILABLE.MSG_CODE) {\n                for (var i in response.data.data[0]) {\n                this.intent_list.push(\n                    response.data.data[0][i]\n                );\n                this.new_intent_list.push(\n                    response.data.data[0][i]\n                );\n                }              \n            }else if(response.data.message.MSG_CODE === this.api_status_code.NO_DATA_AVAILABLE.MSG_CODE){\n                Swal({\n                text: response.data.message.MSG,\n                showCancelButton: false,\n                showConfirmButton: false,\n                position: \"top-end\",\n                toast: true,\n                timer: 2500,\n                type: \"info\"\n                });    \n            }else {\n                this.show_loader = false;\n                Swal({\n                title: response.data.message.MSG_CODE,\n                text: response.data.message.MSG,\n                showCancelButton: false,\n                showConfirmButton: false,\n                timer: 2500,\n                type: \"error\"\n                });\n            }\n        })\n        .catch((e) => {\n            if (\n            e.response.status === 410 ||\n            e.response.status === 440 ||\n            e.response.status === 409\n            ) {\n            this.$root.$emit(\"Session_Expired\", e.response.data);\n            }\n        });       \n        },\n        setpagination(page_no) {\n        this.page_array = [];\n        if (this.total_pages <= 7) {\n            for (let i = 0; i < this.total_pages; i++) {\n            this.page_array.push(i + 1);\n            }\n        } else if (page_no == 1) {\n            for (let i = 0; i < 4; i++) {\n            this.page_array.push(i + 1);\n            }\n            this.page_array.push(\"...l\");\n            this.page_array.push(this.total_pages);\n        } else if (page_no == this.total_pages) {\n            this.page_array.push(1);\n            this.page_array.push(\"...s\");\n            for (let i = this.total_pages - 4; i < this.total_pages; i++) {\n            this.page_array.push(i + 1);\n            }\n        } else if (page_no <= 4) {\n            for (let i = 0; i < page_no + 3; i++) {\n            this.page_array.push(i + 1);\n            }\n            this.page_array.push(\"...l\");\n            this.page_array.push(this.total_pages);\n        } else if (page_no >= this.total_pages - 4) {\n            this.page_array.push(1);\n            this.page_array.push(\"...s\");\n            for (let i = page_no - 4; i < this.total_pages; i++) {\n            this.page_array.push(i + 1);\n            }\n        } else {\n            this.page_array.push(1);\n            this.page_array.push(\"...s\");\n            for (let i = page_no - 3; i <= page_no + 3; i++) {\n            this.page_array.push(i);\n            }\n            this.page_array.push(\"...l\");\n            this.page_array.push(this.total_pages);\n        }\n        },\n        page_require(page) {\n        this.checked_list = [];\n        $(\"input:checkbox\").prop(\"checked\", false);\n        if (page == 0 || page == this.total_pages + 1) {\n        } else {\n            $(\"input:checkbox\").prop(\"checked\", false);\n            if (page == \"...s\") {\n            this.page_no = Math.ceil((1 + this.page_no) / 2);\n            } else if (page == \"...l\") {\n            this.page_no = Math.ceil((this.total_pages + this.page_no) / 2);\n            } else {\n            this.page_no = page;\n            }\n            if (this.search_name == \"\") {\n            this.show_loader = true;\n            axios\n                .post(\n                api_calls.get_unanswered_url(),\n                {\n                    company_name: this.companyname,\n                    company_id: this.companyid,\n                    email: this.$session.get(\"UserInformation\").email,\n                    license_key: this.$session.get(\"UserInformation\").license_key,\n                    token: this.$session.get(\"UserInformation\").tokens,\n                    subscription: this.$session.get(\"UserInformation\").subscription,\n                    isDelete: \"False\",\n                    page_no: this.page_no,\n                    per_page: this.per_page,\n                    is_get_user_response: false\n                },\n                {\n                    headers: {\n                    Authorization: `Bearer ${this.$session.get(\"at\")}`,\n                    },\n                }\n                )\n                .then((response) => {\n                this.show_loader = false;\n                this.unanswered_list = [];\n                if (response.data.message.MSG_CODE === this.api_status_code.DATA_AVAILABLE.MSG_CODE) {\n                    for (var i in response.data.data[0]) {\n                        let temp_int = \"\";\n                        if (Boolean(response.data.data[2][i])) {\n                            // temp_int = response.data[2][i].replace(this.companyid + \"_\", \"\");\n                            temp_int = response.data.data[2][i];\n                        }\n                        this.unanswered_list.push({\n                        question: response.data.data[0][i],\n                        intent: temp_int,\n                        source: response.data.data[1][i],\n                        user_response: response.data.data[2][i],\n                        user_feedback: response.data.data[3][i],\n                        edit: false,\n                        });\n                    }\n                    this.setpagination(this.page_no);\n                }else if(response.data.message.MSG_CODE === this.api_status_code.NO_DATA_AVAILABLE.MSG_CODE){\n                    Swal({\n                    text: response.data.message.MSG,\n                    showCancelButton: false,\n                    showConfirmButton: false,\n                    toast: true,\n                    position: \"top-end\",\n                    timer: 2500,\n                    type: \"info\"\n                    });    \n                }else {\n                    this.show_loader = false;\n                    Swal({\n                    title: response.data.message.MSG_CODE,\n                    text: response.data.message.MSG,\n                    showCancelButton: false,\n                    showConfirmButton: false,\n                    timer: 2500,\n                    type: \"error\"\n                     });\n                }\n                })\n                .catch((e) => {\n                if (\n                    e.response.status === 410 ||\n                    e.response.status === 440 ||\n                    e.response.status === 409\n                ) {\n                    this.$root.$emit(\"Session_Expired\", e.response.data);\n                }\n                });\n            } else {\n            this.show_loader = true;\n            axios\n                .post(\n                api_calls.get_unanswered_url(),\n                {\n                    company_id: this.$session.get(\"UserInformation\").company_id,\n                    company_name: this.$session.get(\"UserInformation\").company_name,\n                    license_key: this.$session.get(\"UserInformation\").license_key,\n                    email: this.$session.get(\"UserInformation\").email,\n                    token: this.$session.get(\"UserInformation\").tokens,\n                    issearch: true,\n                    // searchby: this.search_by,\n                    key: this.search_name,\n                    per_page: this.per_page,\n                    page_no: this.page_no,\n                    is_get_user_response: false\n                },\n                {\n                    headers: {\n                    Authorization: `Bearer ${this.$session.get(\"at\")}`,\n                    },\n                }\n                )\n                .then((response) => {\n                this.show_loader = false;\n                if (response.data.pagination.total_page != undefined) {\n                    this.page_no = page;\n                    this.unanswered_list = [];\n                    this.number_of_rows = response.data.pagination.total_data;\n                    this.total_pages =  response.data.pagination.total_page;\n                    var data = response.data;\n                    for (var i in response.data.data[0]) {\n                    let temp_int = \"\";\n                    if (Boolean(data[2][i])) {\n                        // temp_int = data[2][i].replace(this.companyid + \"_\", \"\");\n                        temp_int = data[2][i];\n                    }\n                    this.unanswered_list.push({\n                        question: response.data.data[0][i],\n                        intent: temp_int,\n                        source: response.data.data[1][i],\n                        user_response: response.data.data[2][i],\n                        user_feedback: response.data.data[3][i],\n                        edit: false,\n                    });\n                    }\n                    this.setpagination(this.page_no);\n                } else {\n                    toastr.error(\"Internal Server Error\");\n                    // setTimeout(() => {\n                    // this.$router.go();\n                    // }, 2500);\n                    this.load_verify_responses_unanswered();\n                }\n                })\n                .catch((e) => {\n                if (\n                    e.response.status === 410 ||\n                    e.response.status === 440 ||\n                    e.response.status === 409\n                ) {\n                    this.$root.$emit(\"Session_Expired\", e.response.data);\n                }\n                });\n            }\n        }\n        },\n        question_selected(value) {\n            if (event.target.checked) {\n                if (value == \"all\") {\n                    this.checked_list = [];\n                    for (var i in this.unanswered_list) {\n                        this.checked_list.push(this.unanswered_list[i]);\n                }\n                } else {\n                    this.checked_list.push(this.unanswered_list[value]);\n                }\n            } else if (!event.target.checked) {\n                if (value != \"all\") {\n                    var selectall = document.querySelector(\"#selectall\");\n                    if (selectall.checked) {\n                        selectall.checked = false;\n                    }\n                    var temp = this.checked_list.filter((question) => {\n                        return question !== this.unanswered_list[value];\n                    });\n                    this.checked_list = temp;\n                }\n            }\n        },\n        delete_single(index) {\n            this.show_loader = true;\n            let questionlist = [];\n            Swal.fire({\n                title: this.tlt('unanswered_delete_swal_msg'),\n                text: this.tlt('unanswered_delete_this_qs_msg'),\n                type: \"question\",\n                showCancelButton: true,\n                confirmButtonColor: \"#3085d6\",\n                cancelButtonColor: \"#d33\",\n                confirmButtonText: this.tlt('unanswered_delete_swal_confirm_msg'),\n            }).then((result) => {\n                    this.show_loader = false;\n                // console.log(result.value);\n                if (result.value) {\n                \n                // console.log(\"deleted\");\n                questionlist.push(this.unanswered_list[index].question);\n                this.delete_questions_api(questionlist);\n                }\n            });\n        },\n        delete_multiple() {\n            if (this.checked_list.length == 0) {\n                Swal.fire({\n                title: this.tlt('unanswered_delete_no_qs_selected_msg'),\n                text:\"\",\n                type:\"error\",\n                timer:2000,\n                });\n            } else if (this.checked_list.length > 0) {\n                let questionlist = [];\n                Swal.fire({\n                title: this.tlt('unanswered_delete_swal_alert_msg'),\n                text: this.tlt('unanswered_delete_this_qs_multiple_msg'),\n                type: \"question\",\n                showCancelButton: true,\n                confirmButtonColor: \"#3085d6\",\n                cancelButtonColor: \"#d33\",\n                confirmButtonText: this.tlt('unanswered_delete_confirm_swal_msg'),\n                }).then((result) => {\n                if (result.value) {\n                    for (var i in this.checked_list) {\n                    questionlist.push(this.checked_list[i].question);\n                    }\n                    this.delete_questions_api(questionlist);\n                }\n                });\n            }\n        },\n        delete_questions_api(questionlist) {\n        this.show_loader = true;\n        axios\n            .post(\n            api_calls.get_unanswered_url(),\n            {\n                company_id: this.companyid,\n                company_name: this.companyname,\n                questionlist: questionlist,\n                isDelete: \"True\",\n                email: this.$session.get(\"UserInformation\").email,\n                license_key: this.$session.get(\"UserInformation\").license_key,\n                token: this.$session.get(\"UserInformation\").tokens,\n            },\n            {\n                headers: {\n                Authorization: `Bearer ${this.$session.get(\"at\")}`,\n                },\n            }\n            )\n            .then((response) => {\n            this.show_loader = false;\n            if (response.data.message.MSG_CODE === this.api_status_code.DELETED_SUCCESSFULLY_0004.MSG_CODE) {\n                // console.log(\"deleted successfully\");\n                this.checked_list = [];\n                this.number_of_rows = response.data.pagination.total_data == undefined ? 0 : response.data.pagination.total_data;\n                this.total_pages = response.data.pagination.total_page == undefined ? 0 : response.data.pagination.total_page;\n                toastr.success(this.tlt('unanswered_delete_success_msg'));\n                // setTimeout(() => {\n                // this.$router.go();\n                // }, 1500);\n                if(questionlist.length === this.unanswered_list.length && \n                    this.page_no >1){\n                    this.page_no = this.page_no - 1;\n                }\n                while(this.page_no > 1 && this.page_no > this.total_pages){\n                    this.page_no = this.page_no - 1;\n                }\n                this.load_verify_responses_unanswered();\n            }else{\n                this.show_loader = false;\n                Swal({\n                title: response.data.message.MSG_CODE,\n                text: response.data.message.MSG,\n                showCancelButton: false,\n                showConfirmButton: false,\n                timer: 2500,\n                type: \"error\"\n                });\n            }\n            this.show_loader = false;\n            })\n            .catch((e) => {\n            if (\n                e.response.status === 410 ||\n                e.response.status === 440 ||\n                e.response.status === 409\n            ) {\n                this.$root.$emit(\"Session_Expired\", e.response.data);\n            } else {\n                toastr.error(e.message);\n            }\n            this.show_loader = false;\n            });\n        },\n        edit_item(index) {\n            this.unanswered_list[index].edit = !this.unanswered_list[index].edit;\n            this.old_question = this.unanswered_list[index].question;\n            // this.old_intent = this.unanswered_list[index].intent;\n            this.old_data.question = this.old_question;\n            // this.old_data.intent = this.companyid + \"_\" + this.old_intent;\n            // this.question = question.question;\n            // this.intent = question.intent;\n            // console.log(this.old_data);\n            // console.log(this.old_question);\n        },\n        submit_question() {\n            // console.log(\"submit\");\n            // console.log(\"question\", this.old_question);\n            // console.log(\"intent\", this.old_intent);\n            // console.log(\"intent\", this.isedit);\n            event.preventDefault();\n            if (this.old_question == \"\") {\n                toastr.error(this.tlt('unanswered_enter_all_field_msg'));\n            } else {\n                this.show_loader = true;\n                axios\n                .post(\n                    api_calls.get_unanswered_url(),\n                    {\n                    is_Edit: \"True\",\n                    question: this.old_question,\n                    // intent: this.companyid + \"_\" + this.old_intent,\n                    company_name: this.companyname,\n                    company_id: this.companyid,\n                    old_question_data: this.old_data,\n                    email: this.$session.get(\"UserInformation\").email,\n                    license_key: this.$session.get(\"UserInformation\").license_key,\n                    token: this.$session.get(\"UserInformation\").tokens,\n                    subscription: this.$session.get(\"UserInformation\").subscription,\n                    },\n                    {\n                    headers: {\n                        Authorization: `Bearer ${this.$session.get(\"at\")}`,\n                    },\n                    }\n                )\n                .then((response) => {\n                    this.show_loader = false;\n                    if (response.data.message.MSG_CODE === this.api_status_code.INTERNAL_SERVER_ERROR.MSG_CODE) {\n                    toastr.error(this.tlt('unanswered_interval_server_msg'));\n                    } else if (response.data.message.MSG_CODE === this.api_status_code.EDITED_SUCCESSFULLY_0005.MSG_CODE) {\n                    Swal({\n                        type: \"success\",\n                        text: this.tlt('unanswered_qs_edited_successful_msg'),\n                        timer:2500,\n                    }).then((result) => {\n                        // if (result.value) {\n                        // this.$router.go();\n                        // }\n                        this.load_verify_responses_unanswered();\n                    });\n                    } else {\n                        this.show_loader = false;\n                        Swal({\n                        title: response.data.message.MSG_CODE,\n                        text: response.data.message.MSG,\n                        showCancelButton: false,\n                        showConfirmButton: false,\n                        timer: 2500,\n                        type: \"error\"\n                        });\n                    } \n                    // else if (response.data == \"Question Intent Updated\") {\n                    // Swal({\n                    //     type: \"success\",\n                    //     text: \"Your question has been updated successfully\",\n                    //     timer:2000,\n                    // }).then((result) => {\n                    //     // if (result.value) {\n                    //     // this.$router.go();\n                    //     // }\n                    //     this.load_verify_responses_unanswered();\n                    // });\n                    // }\n                })\n                .catch((e) => {\n                    if (\n                    e.response.status === 410 ||\n                    e.response.status === 440 ||\n                    e.response.status === 409\n                    ) {\n                    this.$root.$emit(\"Session_Expired\", e.response.data);\n                    } else {\n                    toastr.error(this.tlt('unanswered_interval_server_msg1'));\n                    }\n                });\n                this.close_modal('add_quesn_save');\n            }\n        },\n        pagination_class(index) {\n            if (index == this.page_no) {\n                return \" active\";\n            } else {\n                return \"\";\n            }\n        },\n        add_questions() {\n            this.show_loader = true;\n            var questionlist = [];\n            var temp_list = [];\n            var empty = this.unanswered_list.filter((unanswered) => {\n                return unanswered.intent == \"\";\n            });\n            for (var i in this.unanswered_list) {\n                if (this.unanswered_list[i].intent != \"\") {\n                temp_list.push(\n                    this.unanswered_list[i].question,\n                    // this.companyid + \"_\" + this.unanswered_list[i].intent\n                    this.unanswered_list[i].intent\n                );\n                questionlist.push(temp_list);\n                }\n                temp_list = [];\n            }\n            if (questionlist.length > 0) {\n                this.show_loader = true;\n                axios\n                .post(\n                    api_calls.get_unanswered_url(),\n                    {\n                    company_name: this.companyname,\n                    company_id: this.companyid,\n                    isAdd: \"True\",\n                    questionintent: questionlist,\n                    email: this.$session.get(\"UserInformation\").email,\n                    license_key: this.$session.get(\"UserInformation\").license_key,\n                    token: this.$session.get(\"UserInformation\").tokens,\n                    },\n                    {\n                    headers: {\n                        Authorization: `Bearer ${this.$session.get(\"at\")}`,\n                    },\n                    }\n                )\n                .then((response) => {\n                    this.show_loader = false;\n                    if (response.data.message.MSG_CODE === this.api_status_code.ADDED_SUCCESSFULLY_0002.MSG_CODE) {\n                        swal({\n                            text: this.tlt('unanswered_added_successful_msg'),\n                            type: \"success\",\n                            timer: 3000,\n                        });\n                         if(questionlist.length === this.unanswered_list.length && \n                            this.page_no >1){\n                            this.page_no = this.page_no - 1;\n                        }\n                        this.load_verify_responses_unanswered();\n                    }else {\n                        this.show_loader = false;\n                        Swal({\n                        title: response.data.message.MSG_CODE,\n                        text: response.data.message.MSG,\n                        showCancelButton: false,\n                        showConfirmButton: false,\n                        timer: 2500,\n                        type: \"error\"\n                        });\n                    } \n                })\n                .catch((e) => {\n                    this.show_loader = false;\n                    if (\n                    e.response.status === 410 ||\n                    e.response.status === 440 ||\n                    e.response.status === 409\n                    ) {\n                    this.$root.$emit(\"Session_Expired\", e.response.data);\n                    }\n                });\n            } else {\n                toastr.error(this.tlt('unanswered_add_question_msg'));\n            }\n            this.show_loader = false;\n        },\n        search_question() {\n            // if(this.search_by!=''){\n            if (this.search_name != \"\") {\n                this.checked_list = [];\n                $(\"input:checkbox\").prop(\"checked\", false);\n                this.show_loader = true;\n                axios\n                .post(\n                    api_calls.get_unanswered_url(),\n                    {\n                    company_id: this.$session.get(\"UserInformation\").company_id,\n                    company_name: this.$session.get(\"UserInformation\").company_name,\n                    license_key: this.$session.get(\"UserInformation\").license_key,\n                    email: this.$session.get(\"UserInformation\").email,\n                    token: this.$session.get(\"UserInformation\").tokens,\n                    issearch: true,\n                    // searchby: this.search_by,\n                    key: this.search_name,\n                    per_page: this.per_page,\n                    page_no: 1,\n                    is_get_user_response: false\n                    },\n                    {\n                    headers: {\n                        Authorization: `Bearer ${this.$session.get(\"at\")}`,\n                    },\n                    }\n                )\n                .then((response) => {\n                    this.show_loader = false;\n                    if (response.data.message.MSG_CODE === this.api_status_code.NO_DATA_AVAILABLE.MSG_CODE) {\n                    toastr.error(this.tlt('unanswered_no_qs_found_msg'));\n                    // setTimeout(() => {\n                    //     this.$router.go();\n                    // }, 2500);\n                    this.load_verify_responses_unanswered();\n                    } else if (response.data.pagination.total_page != undefined) {\n                    this.page_no = 1;\n                    this.unanswered_list = [];\n                    this.number_of_rows =  response.data.pagination.total_data;\n                    this.total_pages = response.data.pagination.total_page;\n                    var data = response.data.data;\n                    for (var i in response.data.data[0]) {\n                        let temp_int = \"\";\n                        if (Boolean(data[2][i])) {\n                            // temp_int = data[2][i].replace(this.companyid + \"_\", \"\");\n                            temp_int = data[2][i];\n                        }\n                        this.unanswered_list.push({\n                        question: response.data.data[0][i],\n                        intent: temp_int,\n                        source: response.data.data[1][i],\n                        user_response: data[2][i],\n                        user_feedback: data[3][i],\n                        edit: false,\n                        });\n                    }\n                    this.setpagination(this.page_no);\n                    }\n                    // else if (response.data.MSG == \"No Questions Found\") {\n                    //   toastr.error(\"No Question Found\");\n                    //   setTimeout(() => {\n                    //     this.$router.go();\n                    //   }, 2500);\n                        // this.load_verify_responses_unanswered();\n                    // }\n                    else {\n                    toastr.error(this.tlt('unanswered_internal_server_msg2'));\n                    // setTimeout(() => {\n                    //     this.$router.go();\n                    //   }, 2500);\n                    this.load_verify_responses_unanswered();\n                    }\n                })\n                .catch((e) => {\n                    if (\n                    e.response.status === 410 ||\n                    e.response.status === 440 ||\n                    e.response.status === 409\n                    ) {\n                    this.$root.$emit(\"Session_Expired\", e.response.data);\n                    }\n                });\n            } else {\n                toastr.error(this.tlt('unanswered_data_for_search_msg'));\n            }\n            // }else{\n            //   toastr.error(\"Select header for searching\");\n            // }\n        },\n    }\n}\n</script>\n<style scoped>\n/* .table-responsive {\n  min-height: 400px;\n} */\n\n.form-group{\n    margin: 0 0 4px;\n    top: 3px;\n}\n.table-head{\n    padding-top: 15px;\n}\n@media (max-width: 1400px){\n    .form-group{\n        margin: 0 0 -5px;\n        top: -2px;\n    }\n}\n</style>"],"sourceRoot":"src/portal/Chatbot/Dashboard/End User Response"}]}