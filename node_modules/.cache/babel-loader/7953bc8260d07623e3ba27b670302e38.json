{"remainingRequest":"/home/vimalesh/CENSE/chatbot-portal/node_modules/babel-loader/lib/index.js!/home/vimalesh/CENSE/chatbot-portal/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/vimalesh/CENSE/chatbot-portal/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/vimalesh/CENSE/chatbot-portal/src/portal/components/GoogleMaps.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/vimalesh/CENSE/chatbot-portal/src/portal/components/GoogleMaps.vue","mtime":1643027096288},{"path":"/home/vimalesh/CENSE/chatbot-portal/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vimalesh/CENSE/chatbot-portal/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/vimalesh/CENSE/chatbot-portal/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vimalesh/CENSE/chatbot-portal/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm51bWJlci5jb25zdHJ1Y3RvciI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy50cmltIjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IENvdW50cmllcyBmcm9tICJAL3BvcnRhbC9jb21wb25lbnRzL0NvdW50cmllcyI7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiZ29vZ2xlLW1hcHMiLAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBwbGFjZXNNYXA6IG51bGwsCiAgICAgIHBsYWNlSWRMb2NhbDogbnVsbAogICAgfTsKICB9LAogIHByb3BzOiB7CiAgICBwbGFjZUlkOiBTdHJpbmcsCiAgICBsYXRsbmc6IE9iamVjdAogIH0sCiAgd2F0Y2g6IHsKICAgIHBsYWNlSWQ6IGZ1bmN0aW9uIHBsYWNlSWQobmV3VmFsKSB7CiAgICAgIGlmIChTdHJpbmcobmV3VmFsKS50cmltKCkgIT0gIiIgJiYgbmV3VmFsICE9IHRoaXMucGxhY2VJZExvY2FsKSB7CiAgICAgICAgdGhpcy5wbGFjZUlkTG9jYWwgPSBuZXdWYWw7CiAgICAgICAgdGhpcy51cGRhdGVfbWFwKG5ld1ZhbCk7CiAgICAgIH0KICAgIH0KICB9LAogIGJlZm9yZUNyZWF0ZTogZnVuY3Rpb24gYmVmb3JlQ3JlYXRlKCkgewogICAgdmFyIG1hcHMgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJzY3JpcHQiKTsKICAgIG1hcHMuc3JjID0gImh0dHBzOi8vbWFwcy5nb29nbGVhcGlzLmNvbS9tYXBzL2FwaS9qcz9rZXk9Ii5jb25jYXQocHJvY2Vzcy5lbnYuVlVFX0FQUF9NQVBfQ1JFRFMsICImbGlicmFyaWVzPXBsYWNlcyZjYWxsYmFjaz1pbml0TWFwIik7CiAgICBtYXBzLmFzeW5jID0gdHJ1ZTsKICAgIG1hcHMuZGVmZXIgPSB0cnVlOwogICAgZG9jdW1lbnQuaGVhZC5hcHBlbmQobWFwcyk7CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdmFyIF90aGlzID0gdGhpczsKCiAgICB2YXIgdm0gPSB0aGlzOwoKICAgIHdpbmRvdy5pbml0TWFwID0gZnVuY3Rpb24gKCkgewogICAgICB2YXIgY291bnRyeUNvZGUgPSBfdGhpcy4kc2Vzc2lvbi5nZXQoImNvdW50cnlfbmFtZSIpIHx8IF90aGlzLiRzZXNzaW9uLmdldCgiVXNlckluZm9ybWF0aW9uIikuY291bnRyeV9uYW1lOwoKICAgICAgdmFyIGZpbHRlcmVkQ291bnRyeU5hbWUgPSBDb3VudHJpZXMuZmlsdGVyKGZ1bmN0aW9uIChjb3VudHJ5KSB7CiAgICAgICAgcmV0dXJuIGNvdW50cnkuY29kZSA9PSBjb3VudHJ5Q29kZTsKICAgICAgfSk7CiAgICAgIHZhciBjb3VudHJ5TmFtZSA9IGZpbHRlcmVkQ291bnRyeU5hbWVbMF0ubmFtZTsKICAgICAgdm0ucGxhY2VzTWFwID0gbmV3IGdvb2dsZS5tYXBzLk1hcChkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgibWFwIiksIHsKICAgICAgICBjZW50ZXI6IHsKICAgICAgICAgIGxhdDogTnVtYmVyKGZpbHRlcmVkQ291bnRyeU5hbWVbMF0ubGF0bG5nWzBdKSwKICAgICAgICAgIGxuZzogTnVtYmVyKGZpbHRlcmVkQ291bnRyeU5hbWVbMF0ubGF0bG5nWzFdKQogICAgICAgIH0sCiAgICAgICAgem9vbTogNQogICAgICB9KTsKICAgICAgdmFyIGlucHV0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoInBhYy1pbnB1dCIpOwogICAgICB2YXIgYXV0b2NvbXBsZXRlID0gbmV3IGdvb2dsZS5tYXBzLnBsYWNlcy5BdXRvY29tcGxldGUoaW5wdXQpOwogICAgICBhdXRvY29tcGxldGUuYmluZFRvKCJib3VuZHMiLCB2bS5wbGFjZXNNYXApOyAvLyBTcGVjaWZ5IGp1c3QgdGhlIHBsYWNlIGRhdGEgZmllbGRzIHRoYXQgeW91IG5lZWQuCgogICAgICBhdXRvY29tcGxldGUuc2V0RmllbGRzKFsicGxhY2VfaWQiLCAiZ2VvbWV0cnkiLCAibmFtZSJdKTsKICAgICAgdm0ucGxhY2VzTWFwLmNvbnRyb2xzW2dvb2dsZS5tYXBzLkNvbnRyb2xQb3NpdGlvbi5UT1BfTEVGVF0ucHVzaChpbnB1dCk7CiAgICAgIHZhciBpbmZvd2luZG93ID0gbmV3IGdvb2dsZS5tYXBzLkluZm9XaW5kb3coKTsKICAgICAgdmFyIGluZm93aW5kb3dDb250ZW50ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImluZm93aW5kb3ctY29udGVudCIpOwogICAgICBpbmZvd2luZG93LnNldENvbnRlbnQoaW5mb3dpbmRvd0NvbnRlbnQpOwogICAgICB2YXIgbWFya2VyID0gbmV3IGdvb2dsZS5tYXBzLk1hcmtlcih7CiAgICAgICAgbWFwOiB2bS5wbGFjZXNNYXAKICAgICAgfSk7CiAgICAgIG1hcmtlci5hZGRMaXN0ZW5lcigiY2xpY2siLCBmdW5jdGlvbiAoKSB7CiAgICAgICAgaW5mb3dpbmRvdy5vcGVuKHZtLnBsYWNlc01hcCwgbWFya2VyKTsKICAgICAgfSk7CiAgICAgIHZhciByZXF1ZXN0ID0gewogICAgICAgIHF1ZXJ5OiBjb3VudHJ5TmFtZSwKICAgICAgICBmaWVsZHM6IFsibmFtZSIsICJnZW9tZXRyeSJdCiAgICAgIH07CiAgICAgIGF1dG9jb21wbGV0ZS5hZGRMaXN0ZW5lcigicGxhY2VfY2hhbmdlZCIsIGZ1bmN0aW9uICgpIHsKICAgICAgICBpbmZvd2luZG93LmNsb3NlKCk7CiAgICAgICAgdmFyIHBsYWNlID0gYXV0b2NvbXBsZXRlLmdldFBsYWNlKCk7CgogICAgICAgIGlmICghcGxhY2UuZ2VvbWV0cnkpIHsKICAgICAgICAgIHJldHVybjsKICAgICAgICB9CgogICAgICAgIGlmIChwbGFjZS5nZW9tZXRyeS52aWV3cG9ydCkgewogICAgICAgICAgdm0ucGxhY2VzTWFwLmZpdEJvdW5kcyhwbGFjZS5nZW9tZXRyeS52aWV3cG9ydCk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIHZtLnBsYWNlc01hcC5zZXRDZW50ZXIocGxhY2UuZ2VvbWV0cnkubG9jYXRpb24pOwogICAgICAgICAgdm0ucGxhY2VzTWFwLnNldFpvb20oMTcpOwogICAgICAgIH0gLy8gU2V0IHRoZSBwb3NpdGlvbiBvZiB0aGUgbWFya2VyIHVzaW5nIHRoZSBwbGFjZSBJRCBhbmQgbG9jYXRpb24uCgoKICAgICAgICBtYXJrZXIuc2V0UGxhY2UoewogICAgICAgICAgcGxhY2VJZDogcGxhY2UucGxhY2VfaWQsCiAgICAgICAgICBsb2NhdGlvbjogcGxhY2UuZ2VvbWV0cnkubG9jYXRpb24KICAgICAgICB9KTsKICAgICAgICBtYXJrZXIuc2V0VmlzaWJsZSh0cnVlKTsKICAgICAgICBpbmZvd2luZG93Q29udGVudC5jaGlsZHJlblsicGxhY2UtbmFtZSJdLnRleHRDb250ZW50ID0gcGxhY2UubmFtZTsKICAgICAgICBpbmZvd2luZG93Q29udGVudC5jaGlsZHJlblsicGxhY2UtaWQiXS50ZXh0Q29udGVudCA9IHBsYWNlLnBsYWNlX2lkOwogICAgICAgIGluZm93aW5kb3dDb250ZW50LmNoaWxkcmVuWyJwbGFjZS1hZGRyZXNzIl0udGV4dENvbnRlbnQgPSBwbGFjZS5mb3JtYXR0ZWRfYWRkcmVzczsKICAgICAgICBpbmZvd2luZG93Lm9wZW4odm0ucGxhY2VzTWFwLCBtYXJrZXIpOwogICAgICAgIHZtLiRlbWl0KCJwbGFjZV9pZF91cGRhdGVkIiwgewogICAgICAgICAgcGxhY2VJZDogcGxhY2UucGxhY2VfaWQsCiAgICAgICAgICBsYXQ6IHBsYWNlLmdlb21ldHJ5LmxvY2F0aW9uLmxhdCgpLAogICAgICAgICAgbG5nOiBwbGFjZS5nZW9tZXRyeS5sb2NhdGlvbi5sbmcoKQogICAgICAgIH0pOwogICAgICB9KTsKICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICB1cGRhdGVfbWFwOiBmdW5jdGlvbiB1cGRhdGVfbWFwKHBsYWNlSWQpIHsKICAgICAgdmFyIHZtID0gdGhpczsKICAgICAgdmFyIHJlcXVlc3QgPSB7CiAgICAgICAgcGxhY2VJZDogcGxhY2VJZCwKICAgICAgICBmaWVsZHM6IFsibmFtZSIsICJmb3JtYXR0ZWRfYWRkcmVzcyIsICJwbGFjZV9pZCIsICJnZW9tZXRyeSJdCiAgICAgIH07IC8vIGNvbnN0IGluZm93aW5kb3cgPSBuZXcgZ29vZ2xlLm1hcHMuSW5mb1dpbmRvdygpOwogICAgICAvLyBjb25zdCBzZXJ2aWNlID0gbmV3IGdvb2dsZS5tYXBzLnBsYWNlcy5QbGFjZXNTZXJ2aWNlKHZtLnBsYWNlc01hcCk7CiAgICAgIC8vIHNlcnZpY2UuZ2V0RGV0YWlscyhyZXF1ZXN0LCAocGxhY2UsIHN0YXR1cykgPT4gewogICAgICAvLyAgIGlmIChzdGF0dXMgPT09IGdvb2dsZS5tYXBzLnBsYWNlcy5QbGFjZXNTZXJ2aWNlU3RhdHVzLk9LKSB7CiAgICAgIC8vICAgICBjb25zdCBtYXJrZXIgPSBuZXcgZ29vZ2xlLm1hcHMuTWFya2VyKHsKICAgICAgLy8gICAgICAgbWFwOiB0aGlzLnBsYWNlc01hcCwKICAgICAgLy8gICAgICAgcG9zaXRpb246IHBsYWNlLmdlb21ldHJ5LmxvY2F0aW9uLAogICAgICAvLyAgICAgfSk7CiAgICAgIC8vICAgICBnb29nbGUubWFwcy5ldmVudC5hZGRMaXN0ZW5lcihtYXJrZXIsICJjbGljayIsIGZ1bmN0aW9uICgpIHsKICAgICAgLy8gICAgICAgaW5mb3dpbmRvdy5zZXRDb250ZW50KAogICAgICAvLyAgICAgICAgICI8ZGl2PjxzdHJvbmc+IiArCiAgICAgIC8vICAgICAgICAgICBwbGFjZS5uYW1lICsKICAgICAgLy8gICAgICAgICAgICI8L3N0cm9uZz48YnI+IiArCiAgICAgIC8vICAgICAgICAgICAiUGxhY2UgSUQ6ICIgKwogICAgICAvLyAgICAgICAgICAgcGxhY2UucGxhY2VfaWQgKwogICAgICAvLyAgICAgICAgICAgIjwvZGl2PiIKICAgICAgLy8gICAgICAgKTsKICAgICAgLy8gICAgICAgaW5mb3dpbmRvdy5vcGVuKHZtLnBsYWNlc01hcCwgdGhpcyk7CiAgICAgIC8vICAgICB9KTsKICAgICAgLy8gICAgIHZtLnBsYWNlc01hcC5zZXRDZW50ZXIocGxhY2UuZ2VvbWV0cnkubG9jYXRpb24pOwogICAgICAvLyAgIH0KICAgICAgLy8gfSk7CgogICAgICB2YXIgbWFya2VyID0gbmV3IGdvb2dsZS5tYXBzLk1hcmtlcih7CiAgICAgICAgbWFwOiB0aGlzLnBsYWNlc01hcCwKICAgICAgICBwb3NpdGlvbjogewogICAgICAgICAgbGF0OiB0aGlzLmxhdGxuZy5sYXQsCiAgICAgICAgICBsbmc6IHRoaXMubGF0bG5nLmxuZwogICAgICAgIH0KICAgICAgfSk7CiAgICAgIHZtLnBsYWNlc01hcC5zZXRDZW50ZXIoewogICAgICAgIGxhdDogdGhpcy5sYXRsbmcubGF0LAogICAgICAgIGxuZzogdGhpcy5sYXRsbmcubG5nCiAgICAgIH0pOwogICAgfQogIH0KfTs="},{"version":3,"sources":["GoogleMaps.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <body>\n    <div style=\"display: none\">\n      <input\n        id=\"pac-input\"\n        class=\"controls\"\n        type=\"text\"\n        placeholder=\"Enter a location\"\n      />\n    </div>\n    <div id=\"map\"></div>\n    <div id=\"infowindow-content\">\n      <span id=\"place-name\" class=\"title\"></span>\n      <br />\n      <strong>Place ID:</strong>\n      <span id=\"place-id\"></span>\n      <br />\n      <span id=\"place-address\"></span>\n    </div>\n  </body>\n</template>\n\n<script>\nimport Countries from \"@/portal/components/Countries\";\nexport default {\n  name: \"google-maps\",\n  data() {\n    return {\n      placesMap: null,\n      placeIdLocal: null,\n    };\n  },\n  props: {\n    placeId: String,\n    latlng: Object,\n  },\n  watch: {\n    placeId(newVal) {\n      if (String(newVal).trim() != \"\" && newVal != this.placeIdLocal) {\n        this.placeIdLocal = newVal;\n        this.update_map(newVal);\n      }\n    },\n  },\n  beforeCreate() {\n    let maps = document.createElement(\"script\");\n    maps.src = `https://maps.googleapis.com/maps/api/js?key=${process.env.VUE_APP_MAP_CREDS}&libraries=places&callback=initMap`;\n    maps.async = true;\n    maps.defer = true;\n    document.head.append(maps);\n  },\n  mounted() {\n    var vm = this;\n    window.initMap = () => {\n      let countryCode =\n        this.$session.get(\"country_name\") ||\n        this.$session.get(\"UserInformation\").country_name;\n      let filteredCountryName = Countries.filter((country) => {\n        return country.code == countryCode;\n      });\n      let countryName = filteredCountryName[0].name;\n\n      vm.placesMap = new google.maps.Map(document.getElementById(\"map\"), {\n        center: {\n          lat: Number(filteredCountryName[0].latlng[0]),\n          lng: Number(filteredCountryName[0].latlng[1]),\n        },\n        zoom: 5,\n      });\n\n      var input = document.getElementById(\"pac-input\");\n\n      var autocomplete = new google.maps.places.Autocomplete(input);\n      autocomplete.bindTo(\"bounds\", vm.placesMap);\n\n      // Specify just the place data fields that you need.\n      autocomplete.setFields([\"place_id\", \"geometry\", \"name\"]);\n\n      vm.placesMap.controls[google.maps.ControlPosition.TOP_LEFT].push(input);\n\n      var infowindow = new google.maps.InfoWindow();\n      var infowindowContent = document.getElementById(\"infowindow-content\");\n      infowindow.setContent(infowindowContent);\n\n      var marker = new google.maps.Marker({ map: vm.placesMap });\n\n      marker.addListener(\"click\", function () {\n        infowindow.open(vm.placesMap, marker);\n      });\n\n      const request = {\n        query: countryName,\n        fields: [\"name\", \"geometry\"],\n      };\n\n      autocomplete.addListener(\"place_changed\", function () {\n        infowindow.close();\n\n        var place = autocomplete.getPlace();\n\n        if (!place.geometry) {\n          return;\n        }\n\n        if (place.geometry.viewport) {\n          vm.placesMap.fitBounds(place.geometry.viewport);\n        } else {\n          vm.placesMap.setCenter(place.geometry.location);\n          vm.placesMap.setZoom(17);\n        }\n\n        // Set the position of the marker using the place ID and location.\n        marker.setPlace({\n          placeId: place.place_id,\n          location: place.geometry.location,\n        });\n\n        marker.setVisible(true);\n\n        infowindowContent.children[\"place-name\"].textContent = place.name;\n        infowindowContent.children[\"place-id\"].textContent = place.place_id;\n        infowindowContent.children[\"place-address\"].textContent =\n          place.formatted_address;\n        infowindow.open(vm.placesMap, marker);\n        vm.$emit(\"place_id_updated\", {\n          placeId: place.place_id,\n          lat: place.geometry.location.lat(),\n          lng: place.geometry.location.lng(),\n        });\n      });\n    };\n  },\n  methods: {\n    update_map(placeId) {\n      var vm = this;\n      const request = {\n        placeId: placeId,\n        fields: [\"name\", \"formatted_address\", \"place_id\", \"geometry\"],\n      };\n      // const infowindow = new google.maps.InfoWindow();\n      // const service = new google.maps.places.PlacesService(vm.placesMap);\n      // service.getDetails(request, (place, status) => {\n      //   if (status === google.maps.places.PlacesServiceStatus.OK) {\n      //     const marker = new google.maps.Marker({\n      //       map: this.placesMap,\n      //       position: place.geometry.location,\n      //     });\n      //     google.maps.event.addListener(marker, \"click\", function () {\n      //       infowindow.setContent(\n      //         \"<div><strong>\" +\n      //           place.name +\n      //           \"</strong><br>\" +\n      //           \"Place ID: \" +\n      //           place.place_id +\n      //           \"</div>\"\n      //       );\n\n      //       infowindow.open(vm.placesMap, this);\n      //     });\n\n      //     vm.placesMap.setCenter(place.geometry.location);\n      //   }\n      // });\n      const marker = new google.maps.Marker({\n        map: this.placesMap,\n        position: { lat: this.latlng.lat, lng: this.latlng.lng },\n      });\n      vm.placesMap.setCenter({ lat: this.latlng.lat, lng: this.latlng.lng });\n    },\n  },\n};\n</script>\n\n<style scoped>\n#map {\n  height: 100%;\n}\n/* Optional: Makes the sample page fill the window. */\nhtml,\nbody {\n  height: 50vh;\n  margin: 0;\n  padding: 0;\n}\n.controls {\n  background-color: #fff;\n  border-radius: 2px;\n  border: 1px solid transparent;\n  box-shadow: 0 2px 6px rgba(0, 0, 0, 0.3);\n  box-sizing: border-box;\n  font-family: Roboto;\n  font-size: 15px;\n  font-weight: 300;\n  height: 29px;\n  margin-left: 17px;\n  margin-top: 10px;\n  outline: none;\n  padding: 0 11px 0 13px;\n  text-overflow: ellipsis;\n  width: 400px;\n}\n\n.controls:focus {\n  border-color: #4d90fe;\n}\n.title {\n  font-weight: bold;\n}\n#infowindow-content {\n  display: none;\n}\n#map #infowindow-content {\n  display: inline;\n}\n</style>"],"sourceRoot":"src/portal/components"}]}