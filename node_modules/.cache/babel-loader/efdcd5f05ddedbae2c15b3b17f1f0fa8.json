{"remainingRequest":"/home/vimalesh/Elixir/chatbot-portal/node_modules/babel-loader/lib/index.js!/home/vimalesh/Elixir/chatbot-portal/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/vimalesh/Elixir/chatbot-portal/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/vimalesh/Elixir/chatbot-portal/src/portal/Chatbot/Dashboard/Dashboard.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/vimalesh/Elixir/chatbot-portal/src/portal/Chatbot/Dashboard/Dashboard.vue","mtime":1643027096164},{"path":"/home/vimalesh/Elixir/chatbot-portal/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vimalesh/Elixir/chatbot-portal/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/vimalesh/Elixir/chatbot-portal/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vimalesh/Elixir/chatbot-portal/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Dashboard.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <div class=\"dash-cont\">\n      <div class=\"spinner\" id=\"spinner\" v-show=\"spinnerOn\"></div>\n      <div class=\"container-fluid\" id=\"dashboard-chart\">\n        <div class=\"card dash-card\">\n          <div\n            class=\"card-header d-flex flex-wrap justify-content-between pb-0\"\n          >\n            <h3 class=\"mab-3 mb-md-0\">\n              Welcome {{ $session.get(\"UserFirstName\") }}\n            </h3>\n            <!-- <span\n              style=\"\n                margin-bottom: 5px !important;\n                color: #0645ad;\n                cursor: pointer;\n              \"\n            >\n              <i\n                class=\"fa fa-info-circle\"\n                aria-hidden=\"true\"\n                style=\"font-size: 22px\"\n                title=\"start your page tour.\"\n                @click=\"start_tour\"\n              >\n              </i>\n            </span> -->\n          </div>\n          <ul\n            class=\"list-group mb-2\"\n            style=\"width: auto\"\n            :style=\"display_list_dynamic_class()\"\n          >\n            <li\n              class=\"list-group-item\"\n              :class=\"list_group_dynamic_class(row.entity)\"\n              v-for=\"(row, index) in display_list\"\n              :key=\"index\"\n            >\n              <span v-html=\"row.message\">\n\n              </span>\n              <!-- {{ row.message }} -->\n              <a href=\"#\" style=\"float: right\" @click=\"go_to_page(row.entity)\">\n                {{ row.click_text }}</a\n              >\n            </li>\n          </ul>\n        </div>\n        <div class=\"card dash-card\">\n          <div class=\"card-header d-flex flex-wrap justify-content-between\">\n            <h4 class=\"mab-3 mb-md-0\">ChatBot Request - Response</h4>\n            <div class=\"card-act d-flex flex-wrap\">\n              <div class=\"form-group mb-0\">\n                <select\n                  class=\"form-control\"\n                  @change=\"bar_chart_dropdown\"\n                  id=\"exampleFormControlSelect1\"\n                >\n                  <option>Last 7 days</option>\n                  <option>Last 30 days</option>\n                  <option>Last 3 months</option>\n                  <option>Last 9 months</option>\n                  <option>Last 12 months</option>\n                </select>\n              </div>\n            </div>\n          </div>\n          <div class=\"card-body\">\n            <div class=\"chart-box\">\n              <request-chart\n                :Successful=\"API_data.Successful\"\n                :Total=\"API_data.Total\"\n                :Unsuccessful=\"API_data.Unsuccessful\"\n                :labels=\"API_data.labels\"\n                :scaleLabel=\"bar_chart_dropdown_value\"\n              ></request-chart>\n            </div>\n          </div>\n        </div>\n        <!-- <div class=\"card dash-card\">\n          <div class=\"card-header d-flex flex-wrap justify-content-between\">\n            <h4 class=\"mab-3 mb-md-0\">Chatbot Billing Parameters</h4>\n            <div class=\"card-act d-flex flex-wrap\">\n              <div class=\"form-group mb-0\">\n                <select\n                  class=\"form-control\"\n                  v-model=\"bar_chart2_dropdown_value\"\n                  @change=\"graph_2_bar_chart_dropdown\"\n                  id=\"exampleFormControlSelect\"\n                >\n                  <option>Last 7 days</option>\n                  <option>Last 30 days</option>\n                  <option>Last 3 months</option>\n                  <option>Last 9 months</option>\n                  <option>Last 12 months</option>\n                </select>\n              </div>\n            </div>\n          </div>\n          <div class=\"card-body\">\n            <div class=\"chart-box\">\n              <billing-chart\n                :CallsCount=\"this.Second_chart.CallCount\"\n                :MsgExchange=\"this.Second_chart.MsgExchange\"\n                :TasksExecuted=\"this.Second_chart.TaskExecution\"\n                :labels=\"this.Second_chart.labels\"\n                :scaleLabel=\"this.bar_chart2_dropdown_value\"\n              ></billing-chart>\n            </div>\n          </div>\n        </div> -->\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\nimport { bus } from \"@/portal/main\";\nimport api_calls from \"@/portal/api_calls\";\nimport RequestChart from \"@/portal/components/RequestChart.vue\";\nimport AreaChart from \"@/portal/components/AreaChart.vue\";\nimport BillingChart from \"@/portal/components/BillingChart.vue\";\nimport swal from 'sweetalert2';\n//import page_guide from \"@/portal/mixins/pageguide.js\";\nexport default {\n  //mixins: [page_guide],\n  props: {},\n  components: {\n    RequestChart,\n    AreaChart,\n    BillingChart,\n  },\n  created() {\n    if (\n      !this.$session.has(\"CompanyId\") &&\n      this.$session.has(\"UserInformation\").role &&\n      this.$session.get(\"UserInformation\").role == \"SuperAdmin\"\n    ) {\n      toastr.warning(\"Please select a company name from the dropdown\");\n    }\n    if (this.user_role == \"SuperAdmin\") {\n      if (this.$session.has(\"CompanyId\")) {\n        this.companyid = this.$session.get(\"CompanyId\");\n        this.companyname = this.$session.get(\"CompanyName\");\n      }\n    } else {\n      this.companyid = this.$session.has(\"UserInformation\")\n        ? this.$session.get(\"UserInformation\").company_id\n        : \"\";\n      this.companyname = this.$session.has(\"UserInformation\")\n        ? this.$session.get(\"UserInformation\").company_name\n        : \"\";\n    }\n    // axios\n    //   .post(\n    //     api_calls.billing_usage_url(),\n    //     {\n    //       companyname: this.companyname,\n    //       companyid: this.companyid,\n    //       email: this.$session.get(\"UserInformation\").email,\n    //       token: this.$session.get(\"UserInformation\").tokens,\n    //       load_data_by: \"Last 7 days\",\n    //       license_key: this.$session.get(\"UserInformation\").license_key,\n    //     },\n    //     {\n    //       headers: {\n    //         Authorization: `Bearer ${this.$session.get(\"at\")}`,\n    //       },\n    //     }\n    //   )\n    //   .then((response) => {\n    //     this.Second_chart.labels = [];\n    //     this.Second_chart.CallCount = [];\n    //     this.Second_chart.MsgExchange = [];\n    //     this.Second_chart.TaskExecution = [];\n    //     if (response.data == \"No Data available\") {\n    //       bus.$emit(\n    //         \"chart is updated\",\n    //         \"True\",\n    //         [],\n    //         [],\n    //         [],\n    //         [],\n    //         this.bar_chart2_dropdown_value\n    //       );\n    //     } else {\n    //       for (var i in response.data) {\n    //         this.Second_chart.labels.push(i);\n    //         this.Second_chart.CallCount.push(response.data[i].CallCount);\n    //         this.Second_chart.MsgExchange.push(response.data[i].MsgExchange);\n    //         this.Second_chart.TaskExecution.push(\n    //           response.data[i].TaskExecution\n    //         );\n    //       }\n    //       bus.$emit(\n    //         \"billing chart is updated\",\n    //         \"True\",\n    //         this.Second_chart.CallCount,\n    //         this.Second_chart.MsgExchange,\n    //         this.Second_chart.TaskExecution,\n    //         this.Second_chart.labels,\n    //         this.bar_chart2_dropdown_value\n    //       );\n    //     }\n    //   })\n    //   .catch((e) => {\n    //     if (\n    //       e.response.status === 410 ||\n    //       e.response.status === 440 ||\n    //       e.response.status === 409\n    //     ) {\n    //       this.$root.$emit(\"Session_Expired\", e.response.data);\n    //     }\n    //   });\n    axios\n      .post(\n        api_calls.dashboard_chart_url(),\n        {\n          companyname: this.companyname,\n          companyid: this.companyid,\n          email: this.$session.get(\"UserInformation\").email,\n          token: this.$session.get(\"UserInformation\").tokens,\n          load_data_by: \"Last 7 days\",\n          license_key: this.$session.get(\"UserInformation\").license_key,\n        },\n        {\n          headers: {\n            Authorization: `Bearer ${this.$session.get(\"at\")}`,\n          },\n        }\n      )\n      .then((response) => {\n        this.update_chart_data(response.data);\n      })\n      .catch((e) => {\n        if (\n          e.response.status === 410 ||\n          e.response.status === 440 ||\n          e.response.status === 409\n        ) {\n          this.$root.$emit(\"Session_Expired\", e.response.data);\n        }\n      });\n    this.spinnerOn = true;\n    axios\n      .post(\n        api_calls.dashboard_bot_details_count(),\n        {\n          company_name: this.companyname,\n          company_id: this.companyid,\n          email: this.$session.get(\"UserInformation\").email,\n          token: this.$session.get(\"UserInformation\").tokens,\n          license_key: this.$session.get(\"UserInformation\").license_key,\n          is_get: true,\n        },\n        {\n          headers: {\n            Authorization: `Bearer ${this.$session.get(\"at\")}`,\n          },\n        }\n      )\n      .then((response) => {\n        this.spinnerOn = false;\n        for (var i in this.$session.get(\"ChatbotMenu\")) {\n          this.permission_list.push(\n            this.$session.get(\"ChatbotMenu\")[i].main_menu.name\n          );\n          for (var j in this.$session.get(\"ChatbotMenu\")[i].sub_menu_list) {\n            this.permission_list.push(\n              this.$session.get(\"ChatbotMenu\")[i].sub_menu_list[j].name\n            );\n          }\n        }\n        if (response.data.Status === \"Success\") {\n          let temp_list = [];\n          // try {\n          //   let training_data = response.data.data.filter((x) => x.entity === \"Training\");\n          //   if (\n              \n          //       training_data.length === 1\n          //   ) {\n          //     this.display_list.push(training_data[0])\n          //   }\n          // } catch (error) {}\n          // try {\n          //   let synonyms_data = response.data.data.filter((x) => x.entity === \"Synonyms\");\n          //   if (\n              \n          //       synonyms_data.length === 1\n          //   ) {\n          //     this.display_list.push(synonyms_data[0])\n          //   }\n          // } catch (error) {}\n          var verify_bot_response = false,\n          store_settings = false;\n          for (var n in this.permission_list) {\n            if (this.permission_list[n] == \"Verify Bot Response\") {\n              verify_bot_response = true;\n            }\n            if(this.permission_list[n] === \"Store\"){\n              store_settings = true;\n            }\n          }\n          for (var i in response.data.data) {\n            let pushed = false;\n            for (var j in this.permission_list) {\n              if (response.data.data[i].entity == this.permission_list[j]) {\n                response.data.data[i].list_belong = this.list_group_dynamic_type(response.data.data[i].entity)\n                this.display_list.push(response.data.data[i]);\n                pushed = true;\n              }\n              if (\n                verify_bot_response == true &&\n                response.data.data[i].entity == \"Verify Responses Unanswered\"\n              ) {\n                pushed = true;\n                response.data.data[i].list_belong = this.list_group_dynamic_type(response.data.data[i].entity)\n                this.display_list.push(response.data.data[i]);\n                verify_bot_response = false;\n              }\n              if (\n                store_settings == true &&\n                response.data.data[i].entity == \"Products\"\n              ) {\n                pushed = true;\n                response.data.data[i].list_belong = this.list_group_dynamic_type(response.data.data[i].entity)\n                this.display_list.push(response.data.data[i]);\n                store_settings = false;\n              }\n            }\n            if(!pushed){\n              if(response.data.data[i].entity === \"Training\"){\n                response.data.data[i].list_belong = this.list_group_dynamic_type(response.data.data[i].entity)\n                this.display_list.push(response.data.data[i])\n                pushed = true;\n              }\n            }\n            if(!pushed){\n              if(response.data.data[i].entity === \"Synonyms\"){\n                response.data.data[i].list_belong = this.list_group_dynamic_type(response.data.data[i].entity)\n                this.display_list.push(response.data.data[i])\n                pushed = true;\n              }\n            }\n            if(!pushed){\n              if(response.data.data[i].entity === \"Accounts\"){\n                response.data.data[i].list_belong = this.list_group_dynamic_type(response.data.data[i].entity)\n                this.display_list.push(response.data.data[i])\n                pushed = true;\n              }\n            }\n\n          }\n          this.display_list.sort((a,b) => (a.list_belong > b.list_belong) ? 1 : -1 )\n        }\n      })\n      .catch((e) => {\n        this.spinnerOn = false;\n        if (\n          e.response.status === 410 ||\n          e.response.status === 440 ||\n          e.response.status === 409\n        ) {\n          this.$root.$emit(\"Session_Expired\", e.response.data);\n        }\n      });\n  },\n  updated() {\n    bus.$on(\"company attributes updated\", (data) => {\n      if (data == \"True\") {\n        bus.$emit(\"send company attributes\");\n      }\n    });\n    bus.$on(\"company name and company id\", (data1, data2) => {\n      this.$router.go();\n    });\n  },\n  data() {\n    return {\n      show: false,\n      bar_chart_dropdown_value: \"Last 7 days\",\n      bar_chart2_dropdown_value: \"Last 7 days\",\n      companyname: null,\n      companyid: null,\n      permission_list: [],\n      API_data: {\n        labels: [],\n        Successful: [],\n        Total: [],\n        Unsuccessful: [],\n        xAxisLabel: \"\",\n      },\n      Second_chart: {\n        labels: [],\n        CallCount: [],\n        MsgExchange: [],\n        TaskExecution: [],\n      },\n      Concurrent_Users_Data: {\n        labels: [],\n        data: [],\n      },\n      concurrent_users_month: \"\",\n      user_role: this.$session.has(\"UserInformation\")\n        ? this.$session.get(\"UserInformation\").role\n        : \"\",\n      intent_count: 53,\n      intent_count_display: 0,\n      display_list: [],\n      primary_item_entities_list: [\"Intents\", \"Questions\", \"Responses\", \"Training\"],\n      danger_item_entities_list: [\n        \"Verify Responses Unanswered\",\n        \"Verify Bot Response\",\n        \"Products\",\n        \"Synonyms\",\n        \"Accounts\"\n      ],\n      info_item_entities_list: [],\n      success_item_info_list: [\"Check Bot Response\",\"Bot Configuration\"],\n      item_list_order: [\"danger_item_entities_list\", \"success_item_info_list\", \"primary_item_entities_list\"],\n      spinnerOn: false,\n      //tour_guide_icon: require(\"@/portal/assets/img/info_icon.svg\"),\n    };\n  },\n  methods: {\n    // graph_2_bar_chart_dropdown() {\n    //   this.bar_chart2_dropdown_value = event.target.value;\n    //   // console.log(this.bar_chart2_dropdown_value)\n    //   axios\n    //     .post(\n    //       api_calls.billing_usage_url(),\n    //       {\n    //         companyname: this.$session.get(\"UserInformation\").company_name,\n    //         companyid: this.$session.get(\"UserInformation\").company_id,\n    //         email: this.$session.get(\"UserInformation\").email,\n    //         token: this.$session.get(\"UserInformation\").tokens,\n    //         load_data_by: this.bar_chart2_dropdown_value,\n    //         license_key: this.$session.get(\"UserInformation\").license_key,\n    //       },\n    //       {\n    //         headers: {\n    //           Authorization: `Bearer ${this.$session.get(\"at\")}`,\n    //         },\n    //       }\n    //     )\n    //     .then((response) => {\n    //       this.Second_chart.labels = [];\n    //       this.Second_chart.CallCount = [];\n    //       this.Second_chart.MsgExchange = [];\n    //       this.Second_chart.TaskExecution = [];\n    //       if (response.data == \"No Data available\") {\n    //       } else {\n    //         for (var i in response.data) {\n    //           this.Second_chart.labels.push(i);\n    //           this.Second_chart.CallCount.push(response.data[i].CallCount);\n    //           this.Second_chart.MsgExchange.push(response.data[i].MsgExchange);\n    //           this.Second_chart.TaskExecution.push(\n    //             response.data[i].TaskExecution\n    //           );\n    //         }\n    //       }\n    //     })\n    //     .catch((e) => {\n    //       if (\n    //         e.response.status === 410 ||\n    //         e.response.status === 440 ||\n    //         e.response.status === 409\n    //       ) {\n    //         this.$root.$emit(\"Session_Expired\", e.response.data);\n    //       }\n    //     });\n    // },\n    bar_chart_dropdown() {\n      this.bar_chart_dropdown_value = event.target.value;\n      axios\n        .post(\n          api_calls.dashboard_chart_url(),\n          {\n            companyname: this.companyname,\n            companyid: this.companyid,\n            email: this.$session.get(\"UserInformation\").email,\n            token: this.$session.get(\"UserInformation\").tokens,\n            load_data_by: this.bar_chart_dropdown_value,\n            license_key: this.$session.get(\"UserInformation\").license_key,\n          },\n          {\n            headers: {\n              Authorization: `Bearer ${this.$session.get(\"at\")}`,\n            },\n          }\n        )\n        .then((response) => {\n          this.update_chart_data(response.data);\n        })\n        .catch((e) => {\n          if (\n            e.response.status === 410 ||\n            e.response.status === 440 ||\n            e.response.status === 409\n          ) {\n            this.$root.$emit(\"Session_Expired\", e.response.data);\n          }\n        });\n    },\n    update_chart_data(message) {\n      this.API_data.labels = [];\n      this.API_data.Successful = [];\n      this.API_data.Total = [];\n      this.API_data.Unsuccessful = [];\n      if (message == \"No Data available\") {\n      } else {\n        for (var i in message) {\n          this.API_data.labels.push(i);\n          this.API_data.Successful.push(message[i].Successful);\n          this.API_data.Total.push(message[i].Total);\n          this.API_data.Unsuccessful.push(message[i].Unsuccessful);\n        }\n      }\n    },\n    go_to_page(page_name) {\n      if (page_name == \"Verify Responses Unanswered\") {\n        this.$router.push({\n          name: \"Verify Bot Response\",\n          params: { modal_open_switch_tab: false },\n        });\n      } else if(page_name == \"Synonyms\"){\n        swal({\n          title: \"Are You Sure?\",\n          text: \"You want to Train The Model?\",\n          type: \"question\",\n          showCancelButton: true,\n          confirmButtonColor: \"#3085d6\",\n          cancelButtonColor: \"#d33\",\n          confirmButtonText: \"Yes, Confirm!\",\n          allowOutsideClick: false,\n          allowEscapeKey: false,\n        }).then((result) => {\n          if (result.value) {\n            this.spinnerOn = true;\n            axios\n              .post(\n                api_calls.train_intent_ner_model(),\n                {\n                  email: this.$session.get(\"UserInformation\").email,\n                  license_key: this.$session.get(\"UserInformation\").license_key,\n                  token: this.$session.get(\"UserInformation\").tokens,\n                  subscription: this.$session.get(\"UserInformation\").subscription,\n                  company_name: this.$session.get(\"UserInformation\").company_name,\n                  company_id: this.$session.get(\"UserInformation\").company_id,\n                  update_model: true,\n                  update_model_status: true\n                },\n                {\n                  headers: {\n                    Authorization: `Bearer ${this.$session.get(\"at\")}`,\n                  },\n                }\n              )\n              .then((response) => {\n                this.spinnerOn = false;\n                this.$root.$emit(\"want_model_status\",true);\n                if (response.data.MSG_CODE === 4046) {\n                  toastr.success(response.data.MSG);\n                } else if (response.data.MSG_CODE === 1034) {\n                  toastr.error(response.data.MSG);\n                } else {\n                  toastr.error(\"Internal Server Error\");\n                }\n              })\n              .catch((e) => {\n                this.spinnerOn = false;\n                if (\n                  e.response.status === 410 ||\n                  e.response.status === 440 ||\n                  e.response.status === 409\n                ) {\n                  this.$root.$emit(\"Session_Expired\", e.response.data);\n                }\n                toastr.error(\"Some error occurred. Please try again.\");\n              });\n          }\n        });\n      } else if (page_name == \"Products\"){\n        this.$router.push({\n          path: \"/bot/store-setting\",\n        });\n      } \n      else if (page_name==\"Accounts\"){\n        this.$router.push({\n          name: 'Settings',params:{Subscription:true}\n        })\n      }\n      else {\n        this.$router.push({\n          name: page_name,\n          params: { modal_open_switch_tab: true },\n        });\n      }\n    },\n    intents_count_function() {\n      let startTimestamp = null;\n      let duration = 2000;\n      let end = this.intent_count;\n      let start = 0;\n      const step = (timestamp) => {\n        if (!startTimestamp) startTimestamp = timestamp;\n        const progress = Math.min((timestamp - startTimestamp) / duration, 1);\n        this.intent_count_display = Math.floor(\n          progress * (end - start) + start\n        );\n        if (progress < 1) {\n          window.requestAnimationFrame(step);\n        }\n      };\n      window.requestAnimationFrame(step);\n    },\n    list_group_dynamic_class(row) {\n      if (this.primary_item_entities_list.includes(row)) {\n        return \"list-group-item-primary\";\n      } else if (this.danger_item_entities_list.includes(row)) {\n        return \"list-group-item-danger\";\n      } else if (this.info_item_entities_list.includes(row)) {\n        return \"list-group-item-info\";\n      } else if (this.success_item_info_list.includes(row)) {\n        return \"list-group-item-success\";\n      }\n    },\n    list_group_dynamic_type(row) {\n      /**  \n        * @param- row determines which list grou pit belongs to.\n        * @returns- the respective list item colour prefixed with alphabet for easy sorting as per our requirement\n      */\n      if (this.primary_item_entities_list.includes(row)) {\n        return \"d-primary\";\n      } else if (this.danger_item_entities_list.includes(row)) {\n        return \"a-danger\";\n      } else if (this.info_item_entities_list.includes(row)) {\n        return \"b-info\";\n      } else if (this.success_item_info_list.includes(row)) {\n        return \"c-success\";\n      }\n    },\n    display_list_dynamic_class() {\n      if (this.display_list.length > 0) {\n        return \"padding: 20px 25px;\";\n      } else {\n        return \"padding: 10px 25px;\";\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n.dash-card .card-body {\n  min-height: fit-content;\n}\na {\n  color: black;\n}\na:hover {\n  color: #4024da;\n}\n</style>\n"],"sourceRoot":"src/portal/Chatbot/Dashboard"}]}