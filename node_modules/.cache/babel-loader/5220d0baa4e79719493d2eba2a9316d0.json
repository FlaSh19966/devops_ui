{"remainingRequest":"/home/vimalesh/CENSE/chatbot-portal/node_modules/babel-loader/lib/index.js!/home/vimalesh/CENSE/chatbot-portal/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/vimalesh/CENSE/chatbot-portal/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/vimalesh/CENSE/chatbot-portal/src/portal/Chatbot/Dashboard/End User Response/VerifyResponsesUnanswered.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/vimalesh/CENSE/chatbot-portal/src/portal/Chatbot/Dashboard/End User Response/VerifyResponsesUnanswered.vue","mtime":1643027096172},{"path":"/home/vimalesh/CENSE/chatbot-portal/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vimalesh/CENSE/chatbot-portal/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/vimalesh/CENSE/chatbot-portal/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vimalesh/CENSE/chatbot-portal/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["VerifyResponsesUnanswered.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n<div class=\"table-box\">\n    <div class=\"spinner\" id=\"spinner\" v-show=\"show_loader\"></div>\n    <div class=\"table-responsive mb-0\" style=\"overflow :visible;\">\n    <table class=\"table\">\n        <thead>\n        <tr>\n            <th scope=\"col\">\n            <div class=\"form-check checkbox checkbox-success\">\n                <label class=\"form-check-label\">\n                <input\n                    class=\"form-check-input\"\n                    id=\"selectall\"\n                    type=\"checkbox\"\n                    @change=\"question_selected('all')\"\n                />\n                <span class=\"icn\"></span>\n                </label>\n            </div>\n            </th>\n            <th scope=\"col\" style=\"width: 5%\">ACTION</th>\n            <th scope=\"col\">QUESTIONS</th>\n            <th scope=\"col\">INTENT</th>\n            <!-- <th scope=\"col\" style=\"width: 2%\">SOURCES</th> -->\n        </tr>\n        </thead>\n        <tbody>\n        <tr\n            v-for=\"(row, index) in unanswered_list\"\n            :key=\"index\"\n            id=\"list-group\"\n        >\n            <!-- <template v-if=\"row.intent === null\"> -->\n            <template>\n            <th scope=\"col\" class=\"table-head\">\n                <div class=\"form-check checkbox checkbox-success\">\n                <label class=\"form-check-label\">\n                    <input\n                    class=\"form-check-input\"\n                    @change=\"question_selected(index)\"\n                    type=\"checkbox\"\n                    />\n                    <span class=\"icn\"></span>\n                </label>\n                </div>\n            </th>\n            <td class=\"action\">\n                <a href=\"#\" @click=\"edit_item(index)\">\n                <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    width=\"15.392\"\n                    height=\"15.392\"\n                    viewBox=\"0 0 15.392 15.392\"\n                    data-toggle=\"modal\"\n                    data-target=\"#exampleModalCenter\"\n                >\n                    <path\n                    id=\"square-edit-outline\"\n                    d=\"M4.71,3A1.7,1.7,0,0,0,3,4.71V16.682a1.71,1.71,0,0,0,1.71,1.71H16.682a1.71,1.71,0,0,0,1.71-1.71V10.7h-1.71v5.986H4.71V4.71H10.7V3H4.71m10.928.855a.591.591,0,0,0-.41.171L14.185,5.061,16.322,7.2l1.043-1.035a.578.578,0,0,0,0-.812L16.04,4.026a.571.571,0,0,0-.4-.171M13.578,5.668l-6.3,6.311v2.138H9.413l6.3-6.311Z\"\n                    transform=\"translate(-3 -3)\"\n                    fill=\"#9499ae\"\n                    />\n                </svg>\n                </a>\n                <a href=\"#\" @click=\"delete_single(index)\">\n                <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    width=\"13.682\"\n                    height=\"15.392\"\n                    viewBox=\"0 0 13.682 15.392\"\n                >\n                    <path\n                    id=\"trash-can-outline\"\n                    d=\"M8.276,3v.855H4v1.71h.855V16.682a1.71,1.71,0,0,0,1.71,1.71h8.551a1.71,1.71,0,0,0,1.71-1.71V5.565h.855V3.855H13.406V3H8.276M6.565,5.565h8.551V16.682H6.565V5.565m1.71,1.71v7.7h1.71v-7.7H8.276m3.42,0v7.7h1.71v-7.7Z\"\n                    transform=\"translate(-4 -3)\"\n                    fill=\"#f23d3d\"\n                    />\n                </svg>\n                </a>\n            </td>\n            <td>{{ row.question }}</td>\n            <td style=\"width: 50%;\">\n                <div class=\"form-group\">\n                <multiselect\n                    v-model=\"row.intent\"\n                    :searchable=\"true\"\n                    :close-on-select=\"true\"\n                    :show-labels=\"false\"\n                    :options=\"intent_list\"\n                >\n                    <span>{{ row.intent }}</span>\n                </multiselect>\n                </div>\n            </td>\n            <!-- <td>{{ row.source }}</td> -->\n            </template>\n        </tr>\n        </tbody>\n    </table>\n    </div>\n    <div class=\"pagin-table\" style=\"margin-top: 0%\">\n    <nav aria-label=\"Page navigation example\">\n        <ul class=\"pagination justify-content-center\">\n        <li class=\"page-item\">\n            <a\n            class=\"page-link\"\n            href=\"#\"\n            @click=\"page_require(page_no - 1)\"\n            >\n            <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"8.667\"\n                height=\"15.204\"\n                viewBox=\"0 0 8.667 15.204\"\n            >\n                <g\n                id=\"arrow-point-to-left\"\n                transform=\"translate(105.806 15.204) rotate(180)\"\n                >\n                <path\n                    id=\"Path_1136\"\n                    data-name=\"Path 1136\"\n                    d=\"M105.493,8.354l-6.537,6.537a1.065,1.065,0,1,1-1.506-1.506L103.235,7.6,97.45,1.817A1.065,1.065,0,0,1,98.956.312l6.537,6.537a1.065,1.065,0,0,1,0,1.505Z\"\n                    transform=\"translate(0 0)\"\n                    fill=\"#9499ae\"\n                />\n                </g>\n            </svg>\n            </a>\n        </li>\n        <li\n            :class=\"'page-item ' + pagination_class(pageno)\"\n            v-for=\"pageno in page_array\"\n            :key=\"pageno\"\n        >\n            <a\n            v-if=\"pageno == '...s' || pageno == '...l'\"\n            class=\"page-link\"\n            href=\"#\"\n            @click=\"page_require(pageno)\"\n            >...</a\n            >\n            <a\n            v-if=\"pageno != '...s' && pageno != '...l'\"\n            class=\"page-link\"\n            href=\"#\"\n            @click=\"page_require(pageno)\"\n            >{{ pageno }}</a\n            >\n            <!-- <a class=\"page-link\" href=\"#\" @click=\"page_require(pageno)\">{{pageno}}</a> -->\n        </li>\n        <li class=\"page-item\">\n            <a\n            class=\"page-link\"\n            href=\"#\"\n            @click=\"page_require(page_no + 1)\"\n            >\n            <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"8.667\"\n                height=\"15.204\"\n                viewBox=\"0 0 8.667 15.204\"\n            >\n                <g\n                id=\"arrow-point-to-right\"\n                transform=\"translate(-97.139 0)\"\n                >\n                <path\n                    id=\"Path_1136\"\n                    data-name=\"Path 1136\"\n                    d=\"M105.493,8.354l-6.537,6.537a1.065,1.065,0,1,1-1.506-1.506L103.235,7.6,97.45,1.817A1.065,1.065,0,0,1,98.956.312l6.537,6.537a1.065,1.065,0,0,1,0,1.505Z\"\n                    transform=\"translate(0 0)\"\n                    fill=\"#9499ae\"\n                />\n                </g>\n            </svg>\n            </a>\n        </li>\n        </ul>\n    </nav>\n    </div>\n     <div\n        class=\"modal fade dash-modal\"\n        id=\"exampleModalCenter\"\n        tabindex=\"-1\"\n        role=\"dialog\"\n        aria-labelledby=\"exampleModalCenterTitle\"\n        aria-hidden=\"true\"\n      >\n        <div class=\"modal-dialog modal-dialog-centered\" role=\"document\">\n          <div class=\"modal-content\">\n            <div class=\"modal-body\">\n              <div class=\"modal-head d-flex align-items-center\">\n                <div class=\"head-icn\">\n                  <img src=\"/img/msg-blue.png\" alt />\n                </div>\n                <h3>Edit Question</h3>\n              </div>\n              <button\n                type=\"button\"\n                class=\"close\"\n                data-dismiss=\"modal\"\n                aria-label=\"Close\"\n              >\n                <img src=\"/img/close-icn.png\" alt />\n              </button>\n              <form @submit=\"submit_question\">\n                <div class=\"form-group\">\n                  <label>Your Question</label>\n                  <input\n                    type=\"text\"\n                    class=\"form-control\"\n                    placeholder=\"Enter your question\"\n                    v-model=\"old_question\"\n                    id=\"add_question_question\"\n                  />\n                </div>\n                <!-- <div class=\"form-group\">\n                  <label>Select Intent</label>\n                  <multiselect\n                    v-model=\"old_intent\"\n                    id=\"qus_n_int_intent\"\n                    :options=\"intent_list\"\n                    :searchable=\"true\"\n                    :close-on-select=\"true\"\n                    :show-labels=\"false\"\n                  >\n                    <span>{{ old_intent }}</span>\n                  </multiselect>\n                </div> -->\n                <div class=\"btn-wrap text-right\">\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-link\"\n                    data-dismiss=\"modal\"\n                  >\n                    Cancel\n                  </button>\n                  <button\n                    type=\"submit\"\n                    class=\"darkblue-btn\"\n                    id=\"add_quesn_save\"\n                  >\n                    Save\n                  </button>\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n</div>\n</template>\n\n<script>\nimport axios from \"axios\";\nimport swal from \"sweetalert2\";\nimport Swal from \"sweetalert2\";\nimport api_calls from \"@/portal/api_calls\";\nimport { setTimeout } from \"timers\";\nimport Multiselect from \"vue-multiselect\";\n\nexport default {\n    name: 'verify_responses_unanswered',\n    components: {\n        Multiselect,\n    },\n    data() {\n        return {\n        unanswered_list: [],\n        user_role: this.$session.get(\"UserInformation\").role,\n        companyname: this.$session.get(\"UserInformation\").company_name,\n        companyid: this.$session.get(\"UserInformation\").company_id,\n        intent_list: [],\n        checked_list: [],\n        intentlist: \"\",\n        per_page: 15,\n        page_no: 1,\n        total_pages: 0,\n        show_loader: false,\n        number_of_rows: null,\n        search_name: \"\",\n        page_array: [],\n        old_question: \"\",\n        old_intent: \"\",\n        new_intent_list: [],\n        old_data: { question: null, intent: null },\n        thumbs_down_icon: require(\"@/portal/assets/img/Group 61.svg\"),\n        thumbs_up_icon: require(\"@/portal/assets/img/Group 71.svg\"),\n        // view_component_name: \"unanswered_questions\",\n        };\n    },\n    mounted() {\n        var vm = this;\n        $(\"#selectall\").click(function () {\n        if ($(this).is(\":checked\")) {\n            $(\"input:checkbox\").prop(\"checked\", true);\n        } else {\n            vm.checked_list = [];\n            $(\"input:checkbox\").prop(\"checked\", false);\n        }\n        });\n        this.$root.$on(\"add_questions_unanswered\", (data) => {\n            // console.log(data);   \n\t        this.add_questions();\n        });\n        this.$root.$on(\"search_unanswered\", (data) => {\n            this.search_name = data;\n            this.search_question();\n            // this.add_questions();\n        });\n        this.$root.$on(\"delete_multiple_unanswered\", (data) => {\n            this.delete_multiple();\n        });\n        this.$root.$on(\"load_verify_responses_unanswered\", (data) => {\n            this.load_verify_responses_unanswered();\n        });\n    },\n    beforeDestroy() {\n        this.$root.$off(\"add_questions_unanswered\");\n        this.$root.$off(\"search_unanswered\");\n        this.$root.$off(\"delete_multiple_unanswered\");\n        this.$root.$off(\"load_verify_responses_unanswered\");\n    },\n    created() {\n        this.load_verify_responses_unanswered();\n    },\n    methods: {\n        load_verify_responses_unanswered(){\n        this.checked_list = [];\n        $(\"input:checkbox\").prop(\"checked\", false);\n        this.show_loader = true;\n        this.intent_list = [];\n        this.new_intent_list = [];\n        this.unanswered_list =[];\n        this.search_name = \"\";\n        if (this.user_role == \"SuperAdmin\") {\n        if (this.$session.has(\"CompanyId\")) {\n            this.companyid = this.$session.get(\"CompanyId\");\n            this.companyname = this.$session.get(\"CompanyName\");\n        } else {\n            this.companyid = this.$session.get(\"UserInformation\").company_id;\n            this.companyname = this.$session.get(\"UserInformation\").company_name;\n        }\n        } else {\n        this.companyid = this.$session.get(\"UserInformation\").company_id;\n        this.companyname = this.$session.get(\"UserInformation\").company_name;\n        }\n        if (this.companyname !== undefined) {\n        axios\n            .post(\n            api_calls.get_unanswered_url(),\n            {\n                companyname: this.companyname,\n                companyid: this.companyid,\n                email: this.$session.get(\"UserInformation\").email,\n                isDelete: \"False\",\n                license_key: this.$session.get(\"UserInformation\").license_key,\n                token: this.$session.get(\"UserInformation\").tokens,\n                page_no: this.page_no,\n                per_page: this.per_page,\n                is_get_user_response: false\n            },\n            {\n                headers: {\n                Authorization: `Bearer ${this.$session.get(\"at\")}`,\n                },\n            }\n            )\n            .then((response) => {\n            this.number_of_rows = response.data[0].length;\n            this.total_pages = response.data[4].pagecount;\n            var data = response.data;\n            this.unanswered_list = [];\n            for (var i in data[0]) {\n                let temp_int = \"\";\n                if (Boolean(data[2][i])) {\n                // temp_int = data[2][i].replace(this.companyid + \"_\", \"\");\n                temp_int = data[2][i];\n                }\n                this.unanswered_list.push({\n                question: data[0][i],\n                intent: temp_int,\n                source: data[1][i],\n                user_response: data[2][i],\n                user_feedback: data[3][i],\n                edit: false,\n                });\n            }\n            this.setpagination(this.page_no);\n            this.show_loader = false;\n            })\n            .catch((e) => {\n            if (\n                e.response.status === 410 ||\n                e.response.status === 440 ||\n                e.response.status === 409\n            ) {\n                this.$root.$emit(\"Session_Expired\", e.response.data);\n            } else {\n                toastr.error(e.message);\n            }\n            this.show_loader = false;\n            });\n        }\n        axios\n        .post(\n            api_calls.get_unanswered_url(),\n            {\n            companyid: this.companyid,\n            companyname: this.companyname,\n            isDropdown: \"True\",\n            email: this.$session.get(\"UserInformation\").email,\n            license_key: this.$session.get(\"UserInformation\").license_key,\n            token: this.$session.get(\"UserInformation\").tokens,\n            },\n            {\n            headers: {\n                Authorization: `Bearer ${this.$session.get(\"at\")}`,\n            },\n            }\n        )\n        .then((response) => {\n            // console.log(response.data);\n            // for (var i in response.data[0]) {\n            // this.intent_list.push(\n            //     response.data[0][i].replace(this.companyid + \"_\", \"\")\n            // );\n            // this.new_intent_list.push(\n            //     response.data[0][i].replace(this.companyid + \"_\", \"\")\n            // );\n            // }\n            for (var i in response.data[0]) {\n            this.intent_list.push(\n                response.data[0][i]\n            );\n            this.new_intent_list.push(\n                response.data[0][i]\n            );\n            }\n        })\n        .catch((e) => {\n            if (\n            e.response.status === 410 ||\n            e.response.status === 440 ||\n            e.response.status === 409\n            ) {\n            this.$root.$emit(\"Session_Expired\", e.response.data);\n            }\n        });       \n        },\n        setpagination(page_no) {\n        this.page_array = [];\n        if (this.total_pages <= 7) {\n            for (let i = 0; i < this.total_pages; i++) {\n            this.page_array.push(i + 1);\n            }\n        } else if (page_no == 1) {\n            for (let i = 0; i < 4; i++) {\n            this.page_array.push(i + 1);\n            }\n            this.page_array.push(\"...l\");\n            this.page_array.push(this.total_pages);\n        } else if (page_no == this.total_pages) {\n            this.page_array.push(1);\n            this.page_array.push(\"...s\");\n            for (let i = this.total_pages - 4; i < this.total_pages; i++) {\n            this.page_array.push(i + 1);\n            }\n        } else if (page_no <= 4) {\n            for (let i = 0; i < page_no + 3; i++) {\n            this.page_array.push(i + 1);\n            }\n            this.page_array.push(\"...l\");\n            this.page_array.push(this.total_pages);\n        } else if (page_no >= this.total_pages - 4) {\n            this.page_array.push(1);\n            this.page_array.push(\"...s\");\n            for (let i = page_no - 4; i < this.total_pages; i++) {\n            this.page_array.push(i + 1);\n            }\n        } else {\n            this.page_array.push(1);\n            this.page_array.push(\"...s\");\n            for (let i = page_no - 3; i <= page_no + 3; i++) {\n            this.page_array.push(i);\n            }\n            this.page_array.push(\"...l\");\n            this.page_array.push(this.total_pages);\n        }\n        },\n        page_require(page) {\n        this.checked_list = [];\n        $(\"input:checkbox\").prop(\"checked\", false);\n        if (page == 0 || page == this.total_pages + 1) {\n        } else {\n            $(\"input:checkbox\").prop(\"checked\", false);\n            if (page == \"...s\") {\n            this.page_no = Math.ceil((1 + this.page_no) / 2);\n            } else if (page == \"...l\") {\n            this.page_no = Math.ceil((this.total_pages + this.page_no) / 2);\n            } else {\n            this.page_no = page;\n            }\n            if (this.search_name == \"\") {\n            this.show_loader = true;\n            axios\n                .post(\n                api_calls.get_unanswered_url(),\n                {\n                    companyname: this.companyname,\n                    companyid: this.companyid,\n                    email: this.$session.get(\"UserInformation\").email,\n                    license_key: this.$session.get(\"UserInformation\").license_key,\n                    token: this.$session.get(\"UserInformation\").tokens,\n                    subscription: this.$session.get(\"UserInformation\").subscription,\n                    isDelete: \"False\",\n                    page_no: this.page_no,\n                    per_page: this.per_page,\n                    is_get_user_response: false\n                },\n                {\n                    headers: {\n                    Authorization: `Bearer ${this.$session.get(\"at\")}`,\n                    },\n                }\n                )\n                .then((response) => {\n                this.show_loader = false;\n                this.unanswered_list = [];\n                for (var i in response.data[0]) {\n                    let temp_int = \"\";\n                    if (Boolean(response.data[2][i])) {\n                        // temp_int = response.data[2][i].replace(this.companyid + \"_\", \"\");\n                        temp_int = response.data[2][i];\n                    }\n                    this.unanswered_list.push({\n                    question: response.data[0][i],\n                    intent: temp_int,\n                    source: response.data[1][i],\n                    user_response: response.data[2][i],\n                    user_feedback: response.data[3][i],\n                    edit: false,\n                    });\n                }\n                this.setpagination(this.page_no);\n                })\n                .catch((e) => {\n                if (\n                    e.response.status === 410 ||\n                    e.response.status === 440 ||\n                    e.response.status === 409\n                ) {\n                    this.$root.$emit(\"Session_Expired\", e.response.data);\n                }\n                });\n            } else {\n            this.show_loader = true;\n            axios\n                .post(\n                api_calls.get_unanswered_url(),\n                {\n                    companyid: this.$session.get(\"UserInformation\").company_id,\n                    companyname: this.$session.get(\"UserInformation\").company_name,\n                    license_key: this.$session.get(\"UserInformation\").license_key,\n                    email: this.$session.get(\"UserInformation\").email,\n                    token: this.$session.get(\"UserInformation\").tokens,\n                    issearch: true,\n                    // searchby: this.search_by,\n                    key: this.search_name,\n                    per_page: this.per_page,\n                    page_no: this.page_no,\n                    is_get_user_response: false\n                },\n                {\n                    headers: {\n                    Authorization: `Bearer ${this.$session.get(\"at\")}`,\n                    },\n                }\n                )\n                .then((response) => {\n                this.show_loader = false;\n                if (response.data[4].pagecount != undefined) {\n                    this.page_no = page;\n                    this.unanswered_list = [];\n                    this.number_of_rows = response.data[0].length;\n                    this.total_pages = response.data[4].pagecount;\n                    var data = response.data;\n                    for (var i in response.data[0]) {\n                    let temp_int = \"\";\n                    if (Boolean(data[2][i])) {\n                        // temp_int = data[2][i].replace(this.companyid + \"_\", \"\");\n                        temp_int = data[2][i];\n                    }\n                    this.unanswered_list.push({\n                        question: response.data[0][i],\n                        intent: temp_int,\n                        source: response.data[1][i],\n                        user_response: response.data[2][i],\n                        user_feedback: response.data[3][i],\n                        edit: false,\n                    });\n                    }\n                    this.setpagination(this.page_no);\n                } else {\n                    toastr.error(\"Internal Server Error\");\n                    // setTimeout(() => {\n                    // this.$router.go();\n                    // }, 2500);\n                    this.load_verify_responses_unanswered();\n                }\n                })\n                .catch((e) => {\n                if (\n                    e.response.status === 410 ||\n                    e.response.status === 440 ||\n                    e.response.status === 409\n                ) {\n                    this.$root.$emit(\"Session_Expired\", e.response.data);\n                }\n                });\n            }\n        }\n        },\n        question_selected(value) {\n            if (event.target.checked) {\n                if (value == \"all\") {\n                    this.checked_list = [];\n                    for (var i in this.unanswered_list) {\n                        this.checked_list.push(this.unanswered_list[i]);\n                }\n                } else {\n                    this.checked_list.push(this.unanswered_list[value]);\n                }\n            } else if (!event.target.checked) {\n                if (value != \"all\") {\n                    var selectall = document.querySelector(\"#selectall\");\n                    if (selectall.checked) {\n                        selectall.checked = false;\n                    }\n                    var temp = this.checked_list.filter((question) => {\n                        return question !== this.unanswered_list[value];\n                    });\n                    this.checked_list = temp;\n                }\n            }\n        },\n        delete_single(index) {\n            let questionlist = [];\n            Swal.fire({\n                title: \"Are you sure?\",\n                text: \" You want to Delete this Question?\",\n                type: \"question\",\n                showCancelButton: true,\n                confirmButtonColor: \"#3085d6\",\n                cancelButtonColor: \"#d33\",\n                confirmButtonText: \"Yes, Confirm!\",\n            }).then((result) => {\n                // console.log(result.value);\n                if (result.value) {\n                // console.log(\"deleted\");\n                questionlist.push(this.unanswered_list[index].question);\n                this.delete_questions_api(questionlist);\n                }\n            });\n        },\n        delete_multiple() {\n            if (this.checked_list.length == 0) {\n                Swal.fire({\n                title:\"No question selected!\",\n                text:\"\",\n                type:\"error\",\n                timer:2000,\n                });\n            } else if (this.checked_list.length > 0) {\n                let questionlist = [];\n                Swal.fire({\n                title: \"Are you sure?\",\n                text: \" You want to Delete this Questions?\",\n                type: \"question\",\n                showCancelButton: true,\n                confirmButtonColor: \"#3085d6\",\n                cancelButtonColor: \"#d33\",\n                confirmButtonText: \"Yes, Confirm!\",\n                }).then((result) => {\n                if (result.value) {\n                    for (var i in this.checked_list) {\n                    questionlist.push(this.checked_list[i].question);\n                    }\n                    this.delete_questions_api(questionlist);\n                }\n                });\n            }\n        },\n        delete_questions_api(questionlist) {\n        this.show_loader = true;\n        axios\n            .post(\n            api_calls.get_unanswered_url(),\n            {\n                companyid: this.companyid,\n                companyname: this.companyname,\n                questionlist: questionlist,\n                isDelete: \"True\",\n                email: this.$session.get(\"UserInformation\").email,\n                license_key: this.$session.get(\"UserInformation\").license_key,\n                token: this.$session.get(\"UserInformation\").tokens,\n            },\n            {\n                headers: {\n                Authorization: `Bearer ${this.$session.get(\"at\")}`,\n                },\n            }\n            )\n            .then((response) => {\n            this.show_loader = false;\n            if (response.data == \"Deleted Successfully\") {\n                // console.log(\"deleted successfully\");\n                this.checked_list = [];\n                this.number_of_rows = response.data[2].number_of_rows;\n                this.total_pages = Math.ceil(this.number_of_rows / this.per_page);\n                toastr.success(\"Deleted Successfully\");\n                // setTimeout(() => {\n                // this.$router.go();\n                // }, 1500);\n                if(questionlist.length === this.unanswered_list.length && \n                    this.page_no >1){\n                    this.page_no = this.page_no - 1;\n                }\n                while(this.page_no > 1 && this.page_no > this.total_pages){\n                    this.page_no = this.page_no - 1;\n                }\n                this.load_verify_responses_unanswered();\n            }\n            this.show_loader = false;\n            })\n            .catch((e) => {\n            if (\n                e.response.status === 410 ||\n                e.response.status === 440 ||\n                e.response.status === 409\n            ) {\n                this.$root.$emit(\"Session_Expired\", e.response.data);\n            } else {\n                toastr.error(e.message);\n            }\n            this.show_loader = false;\n            });\n        },\n        edit_item(index) {\n            this.unanswered_list[index].edit = !this.unanswered_list[index].edit;\n            this.old_question = this.unanswered_list[index].question;\n            // this.old_intent = this.unanswered_list[index].intent;\n            this.old_data.question = this.old_question;\n            // this.old_data.intent = this.companyid + \"_\" + this.old_intent;\n            // this.question = question.question;\n            // this.intent = question.intent;\n            // console.log(this.old_data);\n            // console.log(this.old_question);\n        },\n        submit_question() {\n            // console.log(\"submit\");\n            // console.log(\"question\", this.old_question);\n            // console.log(\"intent\", this.old_intent);\n            // console.log(\"intent\", this.isedit);\n            event.preventDefault();\n            if (this.old_question == \"\") {\n                toastr.error(\"Please enter all the fields.\");\n            } else {\n\t\t        $(\"#exampleModalCenter\").modal('hide');\n                this.show_loader = true;\n                axios\n                .post(\n                    api_calls.get_unanswered_url(),\n                    {\n                    is_Edit: \"True\",\n                    question: this.old_question,\n                    // intent: this.companyid + \"_\" + this.old_intent,\n                    companyname: this.companyname,\n                    companyid: this.companyid,\n                    old_question_data: this.old_data,\n                    email: this.$session.get(\"UserInformation\").email,\n                    license_key: this.$session.get(\"UserInformation\").license_key,\n                    token: this.$session.get(\"UserInformation\").tokens,\n                    subscription: this.$session.get(\"UserInformation\").subscription,\n                    },\n                    {\n                    headers: {\n                        Authorization: `Bearer ${this.$session.get(\"at\")}`,\n                    },\n                    }\n                )\n                .then((response) => {\n                    this.show_loader = false;\n                    if (response.data == \"Internal Server Error\") {\n                    toastr.error(\"Internal Server Error\");\n                    } else if (response.data == \"Edited Successfully\") {\n                    Swal({\n                        type: \"success\",\n                        text: \"Your question has been edited successfully\",\n                        timer:2500,\n                    }).then((result) => {\n                        // if (result.value) {\n                        // this.$router.go();\n                        // }\n                        this.load_verify_responses_unanswered();\n                    });\n                    } \n                    // else if (response.data == \"Question Intent Updated\") {\n                    // Swal({\n                    //     type: \"success\",\n                    //     text: \"Your question has been updated successfully\",\n                    //     timer:2000,\n                    // }).then((result) => {\n                    //     // if (result.value) {\n                    //     // this.$router.go();\n                    //     // }\n                    //     this.load_verify_responses_unanswered();\n                    // });\n                    // }\n                })\n                .catch((e) => {\n                    if (\n                    e.response.status === 410 ||\n                    e.response.status === 440 ||\n                    e.response.status === 409\n                    ) {\n                    this.$root.$emit(\"Session_Expired\", e.response.data);\n                    } else {\n                    toastr.error(\"Internal Server Error\");\n                    }\n                });\n            }\n        },\n        pagination_class(index) {\n            if (index == this.page_no) {\n                return \" active\";\n            } else {\n                return \"\";\n            }\n        },\n        add_questions() {\n            this.show_loader = true;\n            var questionlist = [];\n            var temp_list = [];\n            var empty = this.unanswered_list.filter((unanswered) => {\n                return unanswered.intent == \"\";\n            });\n            for (var i in this.unanswered_list) {\n                if (this.unanswered_list[i].intent != \"\") {\n                temp_list.push(\n                    this.unanswered_list[i].question,\n                    // this.companyid + \"_\" + this.unanswered_list[i].intent\n                    this.unanswered_list[i].intent\n                );\n                questionlist.push(temp_list);\n                }\n                temp_list = [];\n            }\n            if (questionlist.length > 0) {\n                this.show_loader = true;\n                axios\n                .post(\n                    api_calls.get_unanswered_url(),\n                    {\n                    companyname: this.companyname,\n                    companyid: this.companyid,\n                    isAdd: \"True\",\n                    questionintent: questionlist,\n                    email: this.$session.get(\"UserInformation\").email,\n                    license_key: this.$session.get(\"UserInformation\").license_key,\n                    token: this.$session.get(\"UserInformation\").tokens,\n                    },\n                    {\n                    headers: {\n                        Authorization: `Bearer ${this.$session.get(\"at\")}`,\n                    },\n                    }\n                )\n                .then((response) => {\n                    this.show_loader = false;\n                    if (response.data == \"Added Successfully\") {\n                        swal({\n                            text: \"Added Successfully\",\n                            type: \"success\",\n                            timer: 3000,\n                        });\n                         if(questionlist.length === this.unanswered_list.length && \n                            this.page_no >1){\n                            this.page_no = this.page_no - 1;\n                        }\n                        this.load_verify_responses_unanswered();\n                    }\n                })\n                .catch((e) => {\n                    this.show_loader = false;\n                    if (\n                    e.response.status === 410 ||\n                    e.response.status === 440 ||\n                    e.response.status === 409\n                    ) {\n                    this.$root.$emit(\"Session_Expired\", e.response.data);\n                    }\n                });\n            } else {\n                toastr.error(\"No question to add. Please add some questions.\");\n            }\n            this.show_loader = false;\n        },\n        search_question() {\n            // if(this.search_by!=''){\n            if (this.search_name != \"\") {\n                this.checked_list = [];\n                $(\"input:checkbox\").prop(\"checked\", false);\n                this.show_loader = true;\n                axios\n                .post(\n                    api_calls.get_unanswered_url(),\n                    {\n                    companyid: this.$session.get(\"UserInformation\").company_id,\n                    companyname: this.$session.get(\"UserInformation\").company_name,\n                    license_key: this.$session.get(\"UserInformation\").license_key,\n                    email: this.$session.get(\"UserInformation\").email,\n                    token: this.$session.get(\"UserInformation\").tokens,\n                    issearch: true,\n                    // searchby: this.search_by,\n                    key: this.search_name,\n                    per_page: this.per_page,\n                    page_no: 1,\n                    is_get_user_response: false\n                    },\n                    {\n                    headers: {\n                        Authorization: `Bearer ${this.$session.get(\"at\")}`,\n                    },\n                    }\n                )\n                .then((response) => {\n                    this.show_loader = false;\n                    if (response.data.MSG == \"No Questions Found\") {\n                    toastr.error(\"No Question Found\");\n                    // setTimeout(() => {\n                    //     this.$router.go();\n                    // }, 2500);\n                    this.load_verify_responses_unanswered();\n                    } else if (response.data[4].pagecount != undefined) {\n                    this.page_no = 1;\n                    this.unanswered_list = [];\n                    this.number_of_rows = response.data[0].length;\n                    this.total_pages = response.data[4].pagecount;\n                    var data = response.data;\n                    for (var i in response.data[0]) {\n                        let temp_int = \"\";\n                        if (Boolean(data[2][i])) {\n                            // temp_int = data[2][i].replace(this.companyid + \"_\", \"\");\n                            temp_int = data[2][i];\n                        }\n                        this.unanswered_list.push({\n                        question: response.data[0][i],\n                        intent: temp_int,\n                        source: response.data[1][i],\n                        user_response: data[2][i],\n                        user_feedback: data[3][i],\n                        edit: false,\n                        });\n                    }\n                    this.setpagination(this.page_no);\n                    }\n                    // else if (response.data.MSG == \"No Questions Found\") {\n                    //   toastr.error(\"No Question Found\");\n                    //   setTimeout(() => {\n                    //     this.$router.go();\n                    //   }, 2500);\n                        // this.load_verify_responses_unanswered();\n                    // }\n                    else {\n                    toastr.error(\"Internal Server Error\");\n                    // setTimeout(() => {\n                    //     this.$router.go();\n                    //   }, 2500);\n                    this.load_verify_responses_unanswered();\n                    }\n                })\n                .catch((e) => {\n                    if (\n                    e.response.status === 410 ||\n                    e.response.status === 440 ||\n                    e.response.status === 409\n                    ) {\n                    this.$root.$emit(\"Session_Expired\", e.response.data);\n                    }\n                });\n            } else {\n                toastr.error(\"Enter proper data for searching\");\n            }\n            // }else{\n            //   toastr.error(\"Select header for searching\");\n            // }\n        },\n    }\n}\n</script>\n<style scoped>\n/* .table-responsive {\n  min-height: 400px;\n} */\n\n.form-group{\n    margin: 0 0 4px;\n    top: 3px;\n}\n.table-head{\n    padding-top: 15px;\n}\n@media (max-width: 1400px){\n    .form-group{\n        margin: 0 0 -5px;\n        top: -2px;\n    }\n}\n</style>"],"sourceRoot":"src/portal/Chatbot/Dashboard/End User Response"}]}