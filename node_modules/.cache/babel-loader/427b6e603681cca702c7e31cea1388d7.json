{"remainingRequest":"/home/vimalesh/Learning/devops_ui/node_modules/babel-loader/lib/index.js!/home/vimalesh/Learning/devops_ui/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/vimalesh/Learning/devops_ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/vimalesh/Learning/devops_ui/src/portal/Chatbot/Dashboard/Account/Billing.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/vimalesh/Learning/devops_ui/src/portal/Chatbot/Dashboard/Account/Billing.vue","mtime":1663910265446},{"path":"/home/vimalesh/Learning/devops_ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vimalesh/Learning/devops_ui/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/vimalesh/Learning/devops_ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vimalesh/Learning/devops_ui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3ltYm9sLmRlc2NyaXB0aW9uIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5jbHVkZXMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5tYXAiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5hcnJheS5zbGljZSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmZ1bmN0aW9uLm5hbWUiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3Qua2V5cyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmciOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuaW5jbHVkZXMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuaXRlcmF0b3IiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLml0ZXJhdG9yIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLnVybCI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCBTd2FsIGZyb20gInN3ZWV0YWxlcnQyIjsKaW1wb3J0IGNvdW50cmllcyBmcm9tICJAL3BvcnRhbC9jb21wb25lbnRzL0NvdW50cmllcyI7CmltcG9ydCBheGlvcyBmcm9tICJheGlvcyI7CmltcG9ydCB7IGJ1cyB9IGZyb20gIkAvcG9ydGFsL21haW4iOwppbXBvcnQgYXBpX2NhbGxzIGZyb20gIkAvcG9ydGFsL2FwaV9jYWxscyI7CmltcG9ydCBBcmVhQ2hhcnQgZnJvbSAiQC9wb3J0YWwvY29tcG9uZW50cy9BcmVhQ2hhcnQudnVlIjsKaW1wb3J0IE11bHRpc2VsZWN0IGZyb20gInZ1ZS1tdWx0aXNlbGVjdCI7IC8vIGltcG9ydCB7IFN0cmlwZUNoZWNrb3V0IH0gZnJvbSAiQHZ1ZS1zdHJpcGUvdnVlLXN0cmlwZSI7CgppbXBvcnQgbW9tZW50IGZyb20gIm1vbWVudCI7CmltcG9ydCB7IHVwZGF0ZV9zaWRlYmFyX21lbnUsIHVwZGF0ZV9yZXN0cmljdGlvbl9saXN0IH0gZnJvbSAiQC9wb3J0YWwvbWl4aW5zIjsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJCaWxsaW5nIiwKICBjb21wb25lbnRzOiB7CiAgICBBcmVhQ2hhcnQ6IEFyZWFDaGFydCwKICAgIE11bHRpc2VsZWN0OiBNdWx0aXNlbGVjdCAvLyBTdHJpcGVDaGVja291dCwKCiAgfSwKICBtaXhpbnM6IFt1cGRhdGVfc2lkZWJhcl9tZW51LCB1cGRhdGVfcmVzdHJpY3Rpb25fbGlzdF0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHNlbGVjdF9zdWJzY3JpcHRpb25fcGxhbjogWyJTaWx2ZXIiLCAiR29sZCIsICJQbGFudGludW0iLCAiRW50ZXJwcmlzZSJdLAogICAgICBzZWxlY3RlZF9zdWJzY3JpcHRpb246ICIiLAogICAgICBzdWJzY3JpcHRpb25faWQ6ICIiLAogICAgICBwbGFuX2lkOiAiIiwKICAgICAgY3VzdG9tZXJfaWQ6ICIiLAogICAgICBwbGFuX3BlcmlvZDogWyJNb250aGx5IiwgIlllYXJseSJdLAogICAgICBzZWxlY3RlZF9wZXJpb2Q6ICIiLAogICAgICBvcmRlcl9pZDogIiIsCiAgICAgIGFtb3VudDogIiIsCiAgICAgIHBheV9zdWNjZXNzX2RhdGE6IHt9LAogICAgICBzdWJzY3JpcHRpb25fYnRuX2Rpc2FibGU6IGZhbHNlLAogICAgICBjb3VudHJ5X2xpc3Q6IGNvdW50cmllcywKICAgICAgcGF5bWVudGlkOiAiIiwKICAgICAgYmFyQ2hhcnQ6ICIiLAogICAgICBiYWNrZ3JvdW5kQ29sb3I6IFsiI2U2N2UyMiIsICIjMTZhMDg1IiwgIiMyOTgwYjkiXSwKICAgICAgbGFiZWxzOiBbIkV4Y2hhbmdlIG9mIE1lc3NhZ2VzIiwgIkV4ZWN1dGlvbiBvZiBUYXNrcyIsICJBdWRpby9WaWRlbyBJbnRlcmFjdGlvbiIsICJTdG9yYWdlIl0sCiAgICAgIGNvbXBhbnlpZDogbnVsbCwKICAgICAgY29tcGFueW5hbWU6IG51bGwsCiAgICAgIGNvdW50cnlfbmFtZTogIiIsCiAgICAgIHBheW1lbnRfY3VycmVuY3k6ICIiLAogICAgICB2YWx1ZV9jdXJyZW5jeV90b3BfdXA6ICIiLAogICAgICB2YWx1ZV9jdXJyZW5jeV9zdWJzY3JpcHRpb246ICIiLAogICAgICBJTlI6IFszNTAwLCA3MDAwLCAxNDAwMCwgMzUwMDBdLAogICAgICBVU0Q6IFs1MCwgMTAwLCAyMDAsIDUwMF0sCiAgICAgIGNvbW1vbl9jdXJyZW5jeTogW10sCiAgICAgIGN1cnJlbmN5X2Ftb3VudDogbnVsbCwKICAgICAgdG9wX3VwX2Ftb3VudDogbnVsbCwKICAgICAgcGllY2hhcnRfZGF0YTogW10sCiAgICAgIHVzZXJfcm9sZTogdGhpcy4kc2Vzc2lvbi5nZXQoIlVzZXJJbmZvcm1hdGlvbiIpLnJvbGUsCiAgICAgIGNvbmN1cnJlbnRfdXNlcnNfbW9udGg6ICIiLAogICAgICBDb25jdXJyZW50X1VzZXJzX0RhdGE6IHsKICAgICAgICBsYWJlbHM6IFtdLAogICAgICAgIGRhdGE6IFtdCiAgICAgIH0sCiAgICAgIG1vbnRoczogWyJKYW4iLCAiRmViIiwgIk1hciIsICJBcHIiLCAiTWF5IiwgIkp1bmUiLCAiSnVseSIsICJBdWciLCAiU2VwdCIsICJPY3QiLCAiTm92IiwgIkRlYyJdLAogICAgICBpbnZvaWNlX2RldGFpbHM6IFtdLAogICAgICBpbnZvaWNlX2RldGFpbHNfY29weTogW10sCiAgICAgIHRvdGFsX3llYXI6IFtdLAogICAgICB5ZWFyX3NlbGVjdGVkOiAiIiwKICAgICAgc3Bpbm5lck9uOiBmYWxzZSwKICAgICAgLy9oYXJzaAogICAgICBjb21tb25fY3VycmVuY3kyOiBbXSwKICAgICAgSU5SMjogWzM1MDAsIDcwMDAsIDE0MDAwLCAzNTAwMF0sCiAgICAgIFVTRDI6IFsxMDAsIDMwMCwgNTAwXSwKICAgICAgcmV0YWlsX3Nob3BpZnlfY29tcGFueTogZmFsc2UsCiAgICAgIC8vIGFkZG9uX3BsYW5zOiBbCiAgICAgIC8vICAgewogICAgICAvLyAgICAgICAiVHlwZSI6ICJTbXNBZGRPbiIsCiAgICAgIC8vICAgICAgICJQcmljZSI6IDE1LjAsCiAgICAgIC8vICAgICAgICJTZXJ2aWNlIjogIlNNUyIsCiAgICAgIC8vICAgICAgICJQcmljZU9wdGlvbnMiOiBbCiAgICAgIC8vICAgICAgICAgICB7CiAgICAgIC8vICAgICAgICAgICAgICAgInByaWNlIjogMTUuMCwKICAgICAgLy8gICAgICAgICAgICAgICAiY3VycmVuY3kiOiAidXNkIiwKICAgICAgLy8gICAgICAgICAgICAgICAiaWQiOiAiMTI0MjU2NDgzMjU0MTQzNTM0MTMyMzUyMzQxMzQiLAogICAgICAvLyAgICAgICAgICAgICAgICJ0eXBlIjogInVzIiwKICAgICAgLy8gICAgICAgICAgICAgICAiY291bnQiOiAxMDAwLAogICAgICAvLyAgICAgICAgICAgICAgICJrZXkiOiAic21zX2NvdW50LmFkZF9vbi51cyIsCiAgICAgIC8vICAgICAgICAgICAgICAgImxhYmVsIjogIiQxNSAoMTAwMCBzbXMgZm9yIFVTIHJlZ2lvbikiCiAgICAgIC8vICAgICAgICAgICB9LAogICAgICAvLyAgICAgICAgICAgewogICAgICAvLyAgICAgICAgICAgICAgICJwcmljZSI6IDE1LjAsCiAgICAgIC8vICAgICAgICAgICAgICAgImN1cnJlbmN5IjogInVzZCIsCiAgICAgIC8vICAgICAgICAgICAgICAgImlkIjogIjEyNDI1NjQ4MzI1NDE0MzUzNDEzMjM1MjM0MTM0IiwKICAgICAgLy8gICAgICAgICAgICAgICAidHlwZSI6ICJub25fdXMiLAogICAgICAvLyAgICAgICAgICAgICAgICJjb3VudCI6IDUwMCwKICAgICAgLy8gICAgICAgICAgICAgICAia2V5IjogInNtc19jb3VudC5hZGRfb24ubm9uX3VzIiwKICAgICAgLy8gICAgICAgICAgICAgICAibGFiZWwiOiAiJDE1ICg1MDAgc21zIGZvciBOb24tVVMgcmVnaW9uKSIKICAgICAgLy8gICAgICAgICAgIH0KICAgICAgLy8gICAgICAgXSwKICAgICAgLy8gICAgICAgIk9wdGlvbnMiOiBbCiAgICAgIC8vICAgICAgICAgICB7CiAgICAgIC8vICAgICAgICAgICAgICAgInR5cGUiOiAidXMiLAogICAgICAvLyAgICAgICAgICAgICAgICJjb3VudCI6IDEwMDAKICAgICAgLy8gICAgICAgICAgIH0sCiAgICAgIC8vICAgICAgICAgICB7CiAgICAgIC8vICAgICAgICAgICAgICAgInR5cGUiOiAibm9uX3VzIiwKICAgICAgLy8gICAgICAgICAgICAgICAiY291bnQiOiA1MDAKICAgICAgLy8gICAgICAgICAgIH0KICAgICAgLy8gICAgICAgXSwKICAgICAgLy8gICAgICAgIklzQWN0aXZlIjogdHJ1ZSwKICAgICAgLy8gICAgICAgIklzQWRkT24iOiB0cnVlCiAgICAgIC8vICAgfSwKICAgICAgLy8gICB7CiAgICAgIC8vICAgICAgICJUeXBlIjogIkNvbnZlcnNhdGlvbkFkZE9uIiwKICAgICAgLy8gICAgICAgIlNlcnZpY2UiOiAiV2hhdHNhcHBDb252ZXJzYXRpb24iLAogICAgICAvLyAgICAgICAiUHJpY2VPcHRpb25zIjogWwogICAgICAvLyAgICAgICAgICAgewogICAgICAvLyAgICAgICAgICAgICAgICJwcmljZSI6IDI5LjAsCiAgICAgIC8vICAgICAgICAgICAgICAgImN1cnJlbmN5IjogInVzZCIsCiAgICAgIC8vICAgICAgICAgICAgICAgImlkIjogIjEyNDI1NjQ4MzI1NDE0MzUzNDEzMjM1MjM0MTM0IiwKICAgICAgLy8gICAgICAgICAgICAgICAidHlwZSI6ICJjb252ZXJzYXRpb25zIiwKICAgICAgLy8gICAgICAgICAgICAgICAiY291bnQiOiAyMDAwLAogICAgICAvLyAgICAgICAgICAgICAgICJrZXkiOiAid2hhdHNhcHBfY29udmVyc2F0aW9uc19jb3VudC5hZGRfb24iLAogICAgICAvLyAgICAgICAgICAgICAgICJsYWJlbCI6ICIkMjkgKDIwMDAgY29udmVyc2F0aW9ucykiCiAgICAgIC8vICAgICAgICAgICB9LAogICAgICAvLyAgICAgICAgICAgewogICAgICAvLyAgICAgICAgICAgICAgICJwcmljZSI6IDIwMDAuMCwKICAgICAgLy8gICAgICAgICAgICAgICAiY3VycmVuY3kiOiAiaW5yIiwKICAgICAgLy8gICAgICAgICAgICAgICAiaWQiOiAiMTI0MjU2NDgzMjU0MTQzNjM0NTI5MjA4NDUyMzQiLAogICAgICAvLyAgICAgICAgICAgICAgICJ0eXBlIjogImNvbnZlcnNhdGlvbnMiLAogICAgICAvLyAgICAgICAgICAgICAgICJjb3VudCI6IDIwMDAsCiAgICAgIC8vICAgICAgICAgICAgICAgImtleSI6ICJ3aGF0c2FwcF9jb252ZXJzYXRpb25zX2NvdW50LmFkZF9vbiIsCiAgICAgIC8vICAgICAgICAgICAgICAgImxhYmVsIjogIuKCuTIwMDAgKDIwMDAgY29udmVyc2F0aW9ucykiCiAgICAgIC8vICAgICAgICAgICB9CiAgICAgIC8vICAgICAgIF0sCiAgICAgIC8vICAgICAgICJJc0FjdGl2ZSI6IHRydWUsCiAgICAgIC8vICAgICAgICJJc0FkZE9uIjogdHJ1ZQogICAgICAvLyAgIH0KICAgICAgLy8gXSwKICAgICAgLy8gcGxhbnM6IFsKICAgICAgLy8gewogICAgICAvLyAgICAgIlR5cGUiIDogIlN0YXJ0ZXIiLAogICAgICAvLyAgICAgIklzQWN0aXZlIiA6IHRydWUsCiAgICAgIC8vICAgICAiUHJpY2VPcHRpb25zIiA6IFsgCiAgICAgIC8vICAgICAgICAgewogICAgICAvLyAgICAgICAgICAgICAicHJpY2UiIDogMjkuMCwKICAgICAgLy8gICAgICAgICAgICAgImN1cnJlbmN5IiA6ICJ1c2QiLAogICAgICAvLyAgICAgICAgICAgICAicHJpY2VfaWQiIDogInByaWNlXzFKelp5MkdUWjdKZG1WdXN5VXFqT3RqNyIsCiAgICAgIC8vICAgICAgICAgICAgICJuaWNrbmFtZSIgOiAiU3RhcnRlci1UZXN0IiwKICAgICAgLy8gICAgICAgICAgICAgImxhYmVsIiA6ICIkMjkvbW9udGgiLAogICAgICAvLyAgICAgICAgICAgICAidHlwZSIgOiAibW9udGhseSIKICAgICAgLy8gICAgICAgICB9LCAKICAgICAgLy8gICAgICAgICB7CiAgICAgIC8vICAgICAgICAgICAgICJwcmljZSIgOiAyMDAwLjAsCiAgICAgIC8vICAgICAgICAgICAgICJjdXJyZW5jeSIgOiAiaW5yIiwKICAgICAgLy8gICAgICAgICAgICAgInByaWNlX2lkIiA6ICJwcmljZV8xS2RZT1BHVFo3SmRtVnVzRFl0VDNyeTgiLAogICAgICAvLyAgICAgICAgICAgICAibmlja25hbWUiIDogIlN0YXJ0ZXItVGVzdC1JTlIiLAogICAgICAvLyAgICAgICAgICAgICAibGFiZWwiIDogIuKCuTIwMDAvbW9udGgiLAogICAgICAvLyAgICAgICAgICAgICAidHlwZSIgOiAibW9udGhseSIKICAgICAgLy8gICAgICAgICB9LCAKICAgICAgLy8gICAgICAgICB7CiAgICAgIC8vICAgICAgICAgICAgICJwcmljZSIgOiAyOTAuMCwKICAgICAgLy8gICAgICAgICAgICAgImN1cnJlbmN5IiA6ICJ1c2QiLAogICAgICAvLyAgICAgICAgICAgICAicHJpY2VfaWQiIDogInByaWNlXzFLMjhqSkdUWjdKZG1WdXNhSGhLNHRPRiIsCiAgICAgIC8vICAgICAgICAgICAgICJuaWNrbmFtZSIgOiAiU3RhcnRlci1UZXN0LVllYXJseSIsCiAgICAgIC8vICAgICAgICAgICAgICJsYWJlbCIgOiAiJDI5MC95ZWFybHkiLAogICAgICAvLyAgICAgICAgICAgICAidHlwZSIgOiAieWVhcmx5IgogICAgICAvLyAgICAgICAgIH0sIAogICAgICAvLyAgICAgICAgIHsKICAgICAgLy8gICAgICAgICAgICAgInByaWNlIiA6IDIwMDAwLjAsCiAgICAgIC8vICAgICAgICAgICAgICJjdXJyZW5jeSIgOiAiaW5yIiwKICAgICAgLy8gICAgICAgICAgICAgInByaWNlX2lkIiA6ICJwcmljZV8xS2RZVDRHVFo3SmRtVnVzWTRuRVRHSEgiLAogICAgICAvLyAgICAgICAgICAgICAibmlja25hbWUiIDogIlN0YXJ0ZXItVGVzdC1ZZWFybHktSU5SIiwKICAgICAgLy8gICAgICAgICAgICAgImxhYmVsIiA6ICLigrkyMDAwMC95ZWFybHkiLAogICAgICAvLyAgICAgICAgICAgICAidHlwZSIgOiAieWVhcmx5IgogICAgICAvLyAgICAgICAgIH0KICAgICAgLy8gICAgIF0sICAgIAogICAgICAvLyB9LAogICAgICAvLyB7CiAgICAgIC8vICAgICAiVHlwZSIgOiAiUHJlbWl1bSIsCiAgICAgIC8vICAgICAiUHJpY2VPcHRpb25zIiA6IFsgCiAgICAgIC8vICAgICAgICAgewogICAgICAvLyAgICAgICAgICAgICAicHJpY2UiIDogOTkuMCwKICAgICAgLy8gICAgICAgICAgICAgImN1cnJlbmN5IiA6ICJ1c2QiLAogICAgICAvLyAgICAgICAgICAgICAicHJpY2VfaWQiIDogInByaWNlXzFKelp5akdUWjdKZG1WdXMyS0hkTDhYRSIsCiAgICAgIC8vICAgICAgICAgICAgICJuaWNrbmFtZSIgOiAiUHJlbWl1bS1UZXN0IiwKICAgICAgLy8gICAgICAgICAgICAgImxhYmVsIiA6ICIkOTkvbW9udGgiLAogICAgICAvLyAgICAgICAgICAgICAidHlwZSIgOiAibW9udGhseSIKICAgICAgLy8gICAgICAgICB9LCAKICAgICAgLy8gICAgICAgICB7CiAgICAgIC8vICAgICAgICAgICAgICJwcmljZSIgOiA3MDAwLjAsCiAgICAgIC8vICAgICAgICAgICAgICJjdXJyZW5jeSIgOiAiaW5yIiwKICAgICAgLy8gICAgICAgICAgICAgInByaWNlX2lkIiA6ICJwcmljZV8xS2RZU0VHVFo3SmRtVnVzWndLVEFVVjYiLAogICAgICAvLyAgICAgICAgICAgICAibmlja25hbWUiIDogIlByZW1pdW0tVGVzdC1JTlIiLAogICAgICAvLyAgICAgICAgICAgICAibGFiZWwiIDogIuKCuTcwMDAvbW9udGgiLAogICAgICAvLyAgICAgICAgICAgICAidHlwZSIgOiAibW9udGhseSIKICAgICAgLy8gICAgICAgICB9LCAKICAgICAgLy8gICAgICAgICB7CiAgICAgIC8vICAgICAgICAgICAgICJwcmljZSIgOiA5OTAuMCwKICAgICAgLy8gICAgICAgICAgICAgImN1cnJlbmN5IiA6ICJ1c2QiLAogICAgICAvLyAgICAgICAgICAgICAicHJpY2VfaWQiIDogInByaWNlXzFLMjhoVEdUWjdKZG1WdXMxd1djdDlQVCIsCiAgICAgIC8vICAgICAgICAgICAgICJuaWNrbmFtZSIgOiAiUHJlbWl1bS1UZXN0LVllYXJseSIsCiAgICAgIC8vICAgICAgICAgICAgICJsYWJlbCIgOiAiJDk5MC95ZWFyIiwKICAgICAgLy8gICAgICAgICAgICAgInR5cGUiIDogInllYXJseSIKICAgICAgLy8gICAgICAgICB9LCAKICAgICAgLy8gICAgICAgICB7CiAgICAgIC8vICAgICAgICAgICAgICJwcmljZSIgOiA3MDAwMC4wLAogICAgICAvLyAgICAgICAgICAgICAiY3VycmVuY3kiIDogImluciIsCiAgICAgIC8vICAgICAgICAgICAgICJwcmljZV9pZCIgOiAicHJpY2VfMUtkWVRaR1RaN0pkbVZ1c1NKSWNFR256IiwKICAgICAgLy8gICAgICAgICAgICAgIm5pY2tuYW1lIiA6ICJQcmVtaXVtLVRlc3QtWWVhcmx5LUlOUiIsCiAgICAgIC8vICAgICAgICAgICAgICJsYWJlbCIgOiAi4oK5NzAwMDAveWVhciIsCiAgICAgIC8vICAgICAgICAgICAgICJ0eXBlIiA6ICJ5ZWFybHkiCiAgICAgIC8vICAgICAgICAgfQogICAgICAvLyAgICAgXSwKICAgICAgLy8gfV0sCiAgICAgIHJldGFpbF9zaG9waWZ5X3N1YnNjcmlwdGlvbl9wbGFuczogWy8vIHsKICAgICAgLy8gICBuYW1lOiAiRnJlZSIsCiAgICAgIC8vICAgaXNfY2hhcmdlYWJsZTogZmFsc2UsCiAgICAgIC8vIH0sCiAgICAgIHsKICAgICAgICBuYW1lOiAiU3RhcnRlciIsCiAgICAgICAgbGFiZWw6ICJTdGFydGVyICgkMjkvbW9udGggb3IgJDI5MC95ZWFyKSIsCiAgICAgICAgaXNfY2hhcmdlYWJsZTogdHJ1ZSwKICAgICAgICBtb250aGx5X2NoYXJnZTogMjksCiAgICAgICAgYW5udWFsX2NoYXJnZTogewogICAgICAgICAgcGVyX21vbnRoX2VmZmVjdGl2ZTogMjQuMTcsCiAgICAgICAgICBhY3R1YWxfY2hhcmdlOiAyOTAKICAgICAgICB9LAogICAgICAgIGN1cnJlbmN5OiAidXNkIgogICAgICB9LCB7CiAgICAgICAgbmFtZTogIlByZW1pdW0iLAogICAgICAgIGxhYmVsOiAiUHJlbWl1bSAoJDk5L21vbnRoIG9yICQ5OTAveWVhcikiLAogICAgICAgIGlzX2NoYXJnZWFibGU6IHRydWUsCiAgICAgICAgbW9udGhseV9jaGFyZ2U6IDk5LAogICAgICAgIGFubnVhbF9jaGFyZ2U6IHsKICAgICAgICAgIHBlcl9tb250aF9lZmZlY3RpdmU6IDgyLjUsCiAgICAgICAgICBhY3R1YWxfY2hhcmdlOiA5OTAKICAgICAgICB9LAogICAgICAgIGN1cnJlbmN5OiAidXNkIgogICAgICB9LCB7CiAgICAgICAgbmFtZTogIlN0YXJ0ZXIiLAogICAgICAgIGxhYmVsOiAiU3RhcnRlciAo4oK5MjAwMC9tb250aCBvciDigrkyMDAwMC95ZWFyKSIsCiAgICAgICAgaXNfY2hhcmdlYWJsZTogdHJ1ZSwKICAgICAgICBtb250aGx5X2NoYXJnZTogMjAwMCwKICAgICAgICBhbm51YWxfY2hhcmdlOiB7CiAgICAgICAgICBwZXJfbW9udGhfZWZmZWN0aXZlOiAyNC4xNywKICAgICAgICAgIGFjdHVhbF9jaGFyZ2U6IDIwMDAwCiAgICAgICAgfSwKICAgICAgICBjdXJyZW5jeTogImluciIKICAgICAgfSwgewogICAgICAgIG5hbWU6ICJQcmVtaXVtIiwKICAgICAgICBsYWJlbDogIlByZW1pdW0gKOKCuTcwMDAvbW9udGggb3Ig4oK5NzAwMDAveWVhcikiLAogICAgICAgIGlzX2NoYXJnZWFibGU6IHRydWUsCiAgICAgICAgbW9udGhseV9jaGFyZ2U6IDcwMDAsCiAgICAgICAgYW5udWFsX2NoYXJnZTogewogICAgICAgICAgcGVyX21vbnRoX2VmZmVjdGl2ZTogODIuNSwKICAgICAgICAgIGFjdHVhbF9jaGFyZ2U6IDcwMDAwCiAgICAgICAgfSwKICAgICAgICBjdXJyZW5jeTogImluciIKICAgICAgfSwgewogICAgICAgIG5hbWU6ICJXaGF0c0FwcCIsCiAgICAgICAgbGFiZWw6ICJXaGF0c0FwcCAoJDI5L21vbnRoKSIsCiAgICAgICAgaXNfY2hhcmdlYWJsZTogdHJ1ZSwKICAgICAgICBtb250aGx5X2NoYXJnZTogMjksCiAgICAgICAgY3VycmVuY3k6ICJ1c2QiCiAgICAgIH0sIHsKICAgICAgICBuYW1lOiAiV2hhdHNBcHAiLAogICAgICAgIGxhYmVsOiAiV2hhdHNBcHAgKOKCuTIwMDAvbW9udGgpIiwKICAgICAgICBpc19jaGFyZ2VhYmxlOiB0cnVlLAogICAgICAgIG1vbnRobHlfY2hhcmdlOiAyMDAwLAogICAgICAgIGN1cnJlbmN5OiAiaW5yIgogICAgICB9XSwKICAgICAgcmV0YWlsX3BsYW5fY3VycmVudDogbnVsbCwKICAgICAgcGF5bWVudF90eXBlczogWyJBbm51YWwiLCAiTW9udGhseSJdLAogICAgICByZXRhaWxfcGF5bWVudF90eXBlOiBudWxsLAogICAgICBzdHJpcGVfc3Vic2NyaXB0aW9uX3BsYW5zOiBudWxsLAogICAgICBzdHJpcGVfc3Vic2NyaXB0aW9uX3BsYW5zX2RldGFpbHM6IHt9LAogICAgICBzdHJpcGVfYWRkb25fcGxhbnM6IFtdLAogICAgICBzaG93X3N1YnNjcmlwdGlvbjogZmFsc2UsCiAgICAgIHNlbGVjdGVkX2FkZG9uX3BsYW46IG51bGwsCiAgICAgIGhpZGVfYnV0dG9uOiAnRnJlZScsCiAgICAgIGNyZWRpdHNfYmFsYW5jZTogbnVsbCwKICAgICAgcmV0YWlsX3dlYl9mcmFtZXdvcms6IHRoaXMuJHNlc3Npb24uZ2V0KCJyZXRhaWxfd2ViX2ZyYW1ld29yayIpLAogICAgICBzaG9wX2Jhc2VfY3VycmVuY3k6ICd1c2QnLAogICAgICBhY2NlcHRhYmxlX3Nob3BfYmFzZV9jdXJyZW5jaWVzOiBbJ0lOUicsICdVU0QnLCAnaW5yJywgJ3VzZCddLAogICAgICBzdHJpcGVfYWRkb25fdHlwZTogW10sCiAgICAgIHNlbGVjdGVkX2FkZG9uX3R5cGU6IG51bGwKICAgIH07CiAgfSwKICBjcmVhdGVkOiBmdW5jdGlvbiBjcmVhdGVkKCkgewogICAgdmFyIF90aGlzID0gdGhpczsKCiAgICB0aGlzLnJldGFpbF93ZWJfZnJhbWV3b3JrID0gdGhpcy4kc2Vzc2lvbi5nZXQoInJldGFpbF93ZWJfZnJhbWV3b3JrIik7CiAgICB0aGlzLmNvdW50cnlfbGlzdCA9IGNvdW50cmllczsKCiAgICBpZiAoIXRoaXMuJHNlc3Npb24uaGFzKCJDb21wYW55SWQiKSAmJiB0aGlzLiRzZXNzaW9uLmdldCgiVXNlckluZm9ybWF0aW9uIikucm9sZSA9PSAiU3VwZXJBZG1pbiIpIHsKICAgICAgdG9hc3RyLndhcm5pbmcodGx0KCdiaWxsaW5nX3NlbGVjdF9jb21wYW55X25hbWVfbXNnJykpOwogICAgfQoKICAgIGlmICh0aGlzLnVzZXJfcm9sZSA9PSAiU3VwZXJBZG1pbiIpIHsKICAgICAgaWYgKHRoaXMuJHNlc3Npb24uaGFzKCJDb21wYW55SWQiKSkgewogICAgICAgIHRoaXMuY29tcGFueWlkID0gdGhpcy4kc2Vzc2lvbi5nZXQoIkNvbXBhbnlJZCIpOwogICAgICAgIHRoaXMuY29tcGFueW5hbWUgPSB0aGlzLiRzZXNzaW9uLmdldCgiQ29tcGFueU5hbWUiKTsKICAgICAgfSBlbHNlIHsKICAgICAgICB0aGlzLmNvbXBhbnlpZCA9IHRoaXMuJHNlc3Npb24uZ2V0KCJVc2VySW5mb3JtYXRpb24iKS5jb21wYW55X2lkOwogICAgICAgIHRoaXMuY29tcGFueW5hbWUgPSB0aGlzLiRzZXNzaW9uLmdldCgiVXNlckluZm9ybWF0aW9uIikuY29tcGFueV9uYW1lOwogICAgICB9CiAgICB9IGVsc2UgewogICAgICB0aGlzLmNvbXBhbnlpZCA9IHRoaXMuJHNlc3Npb24uZ2V0KCJVc2VySW5mb3JtYXRpb24iKS5jb21wYW55X2lkOwogICAgICB0aGlzLmNvbXBhbnluYW1lID0gdGhpcy4kc2Vzc2lvbi5nZXQoIlVzZXJJbmZvcm1hdGlvbiIpLmNvbXBhbnlfbmFtZTsKICAgIH0KCiAgICBpZiAodGhpcy4kc2Vzc2lvbi5nZXQoIlVzZXJJbmZvcm1hdGlvbiIpLmNvdW50cnlfbmFtZSA9PSAiIiAmJiAhdGhpcy4kc2Vzc2lvbi5oYXMoImNvdW50cnlfbmFtZSIpKSB7fSBlbHNlIHsKICAgICAgYXhpb3MuZ2V0KGFwaV9jYWxscy5iaWxsaW5nX2ludm9pY2UoKSwgewogICAgICAgIGhlYWRlcnM6IHsKICAgICAgICAgIEF1dGhvcml6YXRpb246ICJCZWFyZXIgIi5jb25jYXQodGhpcy4kc2Vzc2lvbi5nZXQoImF0IikpCiAgICAgICAgfQogICAgICB9KS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgIGlmIChyZXNwb25zZS5kYXRhLm1lc3NhZ2UuTVNHX0NPREUgPT09IF90aGlzLmFwaV9zdGF0dXNfY29kZS5EQVRBX0FWQUlMQUJMRS5NU0dfQ09ERSkgewogICAgICAgICAgX3RoaXMudG90YWxfeWVhciA9IHJlc3BvbnNlLmRhdGEuZGF0YS5ZZWFyTGlzdDsKICAgICAgICAgIF90aGlzLnllYXJfc2VsZWN0ZWQgPSBfdGhpcy50b3RhbF95ZWFyWzBdOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBTd2FsKHsKICAgICAgICAgICAgdGl0bGU6IHJlc3BvbnNlLmRhdGEubWVzc2FnZS5NU0dfQ09ERSwKICAgICAgICAgICAgdGV4dDogcmVzcG9uc2UuZGF0YS5tZXNzYWdlLk1TRywKICAgICAgICAgICAgc2hvd0NhbmNlbEJ1dHRvbjogZmFsc2UsCiAgICAgICAgICAgIHNob3dDb25maXJtQnV0dG9uOiBmYWxzZSwKICAgICAgICAgICAgdGltZXI6IDI1MDAsCiAgICAgICAgICAgIHR5cGU6ICJlcnJvciIKICAgICAgICAgIH0pOwogICAgICAgIH0KICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKGUpIHsKICAgICAgICBpZiAoZS5yZXNwb25zZS5zdGF0dXMgPT09IDQxMCB8fCBlLnJlc3BvbnNlLnN0YXR1cyA9PT0gNDQwIHx8IGUucmVzcG9uc2Uuc3RhdHVzID09PSA0MDkpIHsKICAgICAgICAgIF90aGlzLiRyb290LiRlbWl0KCJTZXNzaW9uX0V4cGlyZWQiLCBlLnJlc3BvbnNlLmRhdGEpOwogICAgICAgIH0KICAgICAgfSk7CiAgICAgIGF4aW9zLnBvc3QoYXBpX2NhbGxzLmJpbGxpbmdfaW52b2ljZSgpLCB7CiAgICAgICAgY29tcGFueV9pZDogdGhpcy4kc2Vzc2lvbi5nZXQoIlVzZXJJbmZvcm1hdGlvbiIpLmNvbXBhbnlfaWQsCiAgICAgICAgY29tcGFueV9uYW1lOiB0aGlzLiRzZXNzaW9uLmdldCgiVXNlckluZm9ybWF0aW9uIikuY29tcGFueV9uYW1lLAogICAgICAgIGVtYWlsOiB0aGlzLiRzZXNzaW9uLmdldCgiVXNlckluZm9ybWF0aW9uIikuZW1haWwsCiAgICAgICAgbGljZW5zZV9rZXk6IHRoaXMuJHNlc3Npb24uZ2V0KCJVc2VySW5mb3JtYXRpb24iKS5saWNlbnNlX2tleSwKICAgICAgICB0b2tlbjogdGhpcy4kc2Vzc2lvbi5nZXQoIlVzZXJJbmZvcm1hdGlvbiIpLnRva2VucywKICAgICAgICBkb3dubG9hZF9maWxlOiBmYWxzZSwKICAgICAgICB5ZWFyOiB0aGlzLnllYXJfc2VsZWN0ZWQKICAgICAgfSwgewogICAgICAgIGhlYWRlcnM6IHsKICAgICAgICAgIEF1dGhvcml6YXRpb246ICJCZWFyZXIgIi5jb25jYXQodGhpcy4kc2Vzc2lvbi5nZXQoImF0IikpCiAgICAgICAgfQogICAgICB9KS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgIGlmIChyZXNwb25zZS5kYXRhLm1lc3NhZ2UuTVNHX0NPREUgPT09IF90aGlzLmFwaV9zdGF0dXNfY29kZS5EQVRBX0FWQUlMQUJMRS5NU0dfQ09ERSkgewogICAgICAgICAgX3RoaXMuaW52b2ljZV9kZXRhaWxzID0gcmVzcG9uc2UuZGF0YS5kYXRhLkJ1Y2tldF9saXN0OwoKICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgX3RoaXMuaW52b2ljZV9kZXRhaWxzLmxlbmd0aDsgaSsrKSB7CiAgICAgICAgICAgIF90aGlzLmludm9pY2VfZGV0YWlsc19jb3B5W2ldID0gX3RoaXMuaW52b2ljZV9kZXRhaWxzW2ldLnNsaWNlKDgpOwogICAgICAgICAgfQogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBTd2FsKHsKICAgICAgICAgICAgdGl0bGU6IHJlc3BvbnNlLmRhdGEubWVzc2FnZS5NU0dfQ09ERSwKICAgICAgICAgICAgdGV4dDogcmVzcG9uc2UuZGF0YS5tZXNzYWdlLk1TRywKICAgICAgICAgICAgc2hvd0NhbmNlbEJ1dHRvbjogZmFsc2UsCiAgICAgICAgICAgIHNob3dDb25maXJtQnV0dG9uOiBmYWxzZSwKICAgICAgICAgICAgdGltZXI6IDI1MDAsCiAgICAgICAgICAgIHR5cGU6ICJlcnJvciIKICAgICAgICAgIH0pOwogICAgICAgIH0gLy8gY29uc29sZS5sb2codGhpcy5pbnZvaWNlX2RldGFpbHNfY29weSk7CgogICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZSkgewogICAgICAgIGNvbnNvbGUubG9nKGUsICdycicpOwoKICAgICAgICBpZiAoZS5yZXNwb25zZS5zdGF0dXMgPT09IDQxMCB8fCBlLnJlc3BvbnNlLnN0YXR1cyA9PT0gNDQwIHx8IGUucmVzcG9uc2Uuc3RhdHVzID09PSA0MDkpIHsKICAgICAgICAgIF90aGlzLiRyb290LiRlbWl0KCJTZXNzaW9uX0V4cGlyZWQiLCBlLnJlc3BvbnNlLmRhdGEpOwogICAgICAgIH0KICAgICAgfSk7CiAgICB9CgogICAgdmFyIGlzX3Nob3BpZnkgPSB0aGlzLnJldGFpbF93ZWJfZnJhbWV3b3JrOwoKICAgIGlmIChCb29sZWFuKGlzX3Nob3BpZnkpICYmIGlzX3Nob3BpZnkgPT09ICJzaG9waWZ5IikgewogICAgICB0aGlzLnJldGFpbF9zaG9waWZ5X2NvbXBhbnkgPSB0cnVlOwogICAgfQoKICAgIHRoaXMuZ2V0X3Nob3BfYmFzZV9jdXJyZW5jeSgpOwogICAgdGhpcy5jaGVja19hZGRvbnNfYmFsYW5jZSgpOwogIH0sCiAgd2F0Y2g6IHsKICAgIHNlbGVjdGVkX2FkZG9uX3BsYW46IGZ1bmN0aW9uIHNlbGVjdGVkX2FkZG9uX3BsYW4oKSB7CiAgICAgIHRoaXMuc3RyaXBlX2FkZG9uX3R5cGUgPSBbXTsKICAgICAgdGhpcy5zZWxlY3RlZF9hZGRvbl90eXBlID0gbnVsbDsKCiAgICAgIGlmICh0aGlzLnNlbGVjdGVkX2FkZG9uX3BsYW4gIT09IG51bGwpIHsKICAgICAgICB0aGlzLnN0cmlwZV9hZGRvbl90eXBlID0gdGhpcy5zZWxlY3RlZF9hZGRvbl9wbGFuLk9wdGlvbnM7CiAgICAgIH0KICAgIH0KICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICB0aGlzLmdldF9wbGFuc19mcm9tX2RiKCk7IC8vIEdldCBwbGFucyBmcm9tIGRiCgogICAgdGhpcy5nZXRfYWRkb25fZGV0YWlscygpOyAvLyBHZXQgQWRkIE9ucyBmcm9tIGNlbnNlIGRiCgogICAgdGhpcy5nZXRfY3VycmVudF9zdWJzY3JpcHRpb25fZGV0YWlscygpOyAvLyBnZXQgc3Vic2NyaXB0aW9uIGRldGFpbHMgZnJvbSBjZW5zZV9kYgoKICAgIGlmICh0aGlzLiRzZXNzaW9uLmdldCgiVXNlckluZm9ybWF0aW9uIikuY291bnRyeV9uYW1lID09ICIiICYmICF0aGlzLiRzZXNzaW9uLmhhcygiY291bnRyeV9uYW1lIikpIHsKICAgICAgJCgiI2NvdW50cnltb2RhbCIpLm1vZGFsKHsKICAgICAgICBiYWNrZHJvcDogInN0YXRpYyIKICAgICAgfSkub24oImhpZGRlbi5icy5tb2RhbCIsIGZ1bmN0aW9uIChlKSB7CiAgICAgICAgaWYgKCFfdGhpczIuJHNlc3Npb24uaGFzKCJjb3VudHJ5X25hbWUiKSkgewogICAgICAgICAgJCgiI2NvdW50cnltb2RhbCIpLm1vZGFsKCJoaWRlIik7CgogICAgICAgICAgX3RoaXMyLiRyb3V0ZXIucHVzaCgiL2JvdC9kYXNoYm9hcmQiKTsKCiAgICAgICAgICBfdGhpczIuJHJvb3QuJGVtaXQoImNoYW5nZV9zaWRlYmFyX21haW5fbWVudSIsICJEYXNoYm9hcmQiKTsKICAgICAgICB9CiAgICAgIH0pOwogICAgfQogIH0sCiAgY29tcHV0ZWQ6IHsKICAgIGNoZWNrX3JldGFpbF9wYXltZW50X3R5cGVfZGlzYWJsZWQ6IGZ1bmN0aW9uIGNoZWNrX3JldGFpbF9wYXltZW50X3R5cGVfZGlzYWJsZWQoKSB7CiAgICAgIGlmIChCb29sZWFuKHRoaXMucmV0YWlsX3BsYW5fY3VycmVudCkgJiYgdGhpcy5yZXRhaWxfcGxhbl9jdXJyZW50LmlzX2NoYXJnZWFibGUgPT09IGZhbHNlKSB7CiAgICAgICAgcmV0dXJuIHRydWU7CiAgICAgIH0KCiAgICAgIHJldHVybiBmYWxzZTsKICAgIH0sCiAgICByZXRhaWxfcGF5bWVudF9wbGFjZWhvbGRlcjogZnVuY3Rpb24gcmV0YWlsX3BheW1lbnRfcGxhY2Vob2xkZXIoKSB7CiAgICAgIGlmICh0aGlzLmNoZWNrX3JldGFpbF9wYXltZW50X3R5cGVfZGlzYWJsZWQpIHsKICAgICAgICByZXR1cm4gdGhpcy50bHQoJ25vX2JpbGxpbmdfY3ljbGVfbXNnJyk7CiAgICAgIH0KCiAgICAgIHJldHVybiB0aGlzLnRsdCgncGlja19vbmVfbXNnJyk7CiAgICB9LAogICAgY3VycmVudF9yZXRhaWxfcGxhbl9jaGFyZ2VzOiBmdW5jdGlvbiBjdXJyZW50X3JldGFpbF9wbGFuX2NoYXJnZXMoKSB7CiAgICAgIC8vIGlmKHRoaXMucmV0YWlsX3Nob3BpZnlfY29tcGFueSkgewogICAgICByZXR1cm4gQm9vbGVhbih0aGlzLnJldGFpbF9wbGFuX2N1cnJlbnQpID8gdGhpcy5yZXRhaWxfcGxhbl9jdXJyZW50LmlzX2NoYXJnZWFibGUgPyAiJCIuY29uY2F0KHRoaXMucmV0YWlsX3BsYW5fY3VycmVudC5tb250aGx5X2NoYXJnZSwgIi9tb250aCAgb3IgJCIpLmNvbmNhdCh0aGlzLnJldGFpbF9wbGFuX2N1cnJlbnQuYW5udWFsX2NoYXJnZS5wZXJfbW9udGhfZWZmZWN0aXZlLCAiL21vbnRoIGJpbGxlZCBhdCAkIikuY29uY2F0KHRoaXMucmV0YWlsX3BsYW5fY3VycmVudC5hbm51YWxfY2hhcmdlLmFjdHVhbF9jaGFyZ2UsICIgb25jZSBwZXIgeWVhciIpIDogbnVsbCA6IG51bGw7IC8vIH0gZWxzZSB7CiAgICAgIC8vICAgcmV0dXJuIEJvb2xlYW4odGhpcy5yZXRhaWxfcGxhbl9jdXJyZW50KQogICAgICAvLyAgID8gdGhpcy5yZXRhaWxfcGxhbl9jdXJyZW50LmlzX2NoYXJnZWFibGUKICAgICAgLy8gICAgID8gYCQke3RoaXMucmV0YWlsX3BsYW5fY3VycmVudC5tb250aGx5X2NoYXJnZX0vbW9udGhgCiAgICAgIC8vICAgICA6IG51bGwKICAgICAgLy8gICA6IG51bGw7CiAgICAgIC8vIH0KICAgIH0sCiAgICBjaGVja19yZXRhaWxfc2hvcGlmeV9mb3JtX3ZhbGlkYXRpb25zOiBmdW5jdGlvbiBjaGVja19yZXRhaWxfc2hvcGlmeV9mb3JtX3ZhbGlkYXRpb25zKCkgewogICAgICBpZiAodGhpcy5yZXRhaWxfcGxhbl9jdXJyZW50ICE9PSBudWxsICYmIHRoaXMucmV0YWlsX3BheW1lbnRfdHlwZSAhPT0gbnVsbCkgewogICAgICAgIHJldHVybiB0cnVlOwogICAgICB9IGVsc2UgaWYgKHRoaXMucmV0YWlsX3BsYW5fY3VycmVudCAhPT0gbnVsbCAmJiB0aGlzLnJldGFpbF9wYXltZW50X3R5cGUgPT0gbnVsbCAmJiB0aGlzLnJldGFpbF9wbGFuX2N1cnJlbnQuaXNfY2hhcmdlYWJsZSA9PT0gZmFsc2UpIHsKICAgICAgICByZXR1cm4gdHJ1ZTsKICAgICAgfQoKICAgICAgcmV0dXJuIGZhbHNlOwogICAgfSwKICAgIGZpcnN0X3N0ZXA6IGZ1bmN0aW9uIGZpcnN0X3N0ZXAoKSB7CiAgICAgIGlmICh0aGlzLnN0cmlwZV9zdWJzY3JpcHRpb25fcGxhbnMpIHsKICAgICAgICByZXR1cm4gdGhpcy5zdHJpcGVfc3Vic2NyaXB0aW9uX3BsYW5zLmZpbHRlcihmdW5jdGlvbiAocGxhbnMpIHsKICAgICAgICAgIHJldHVybiBwbGFucy5UeXBlICE9PSAnRnJlZSc7CiAgICAgICAgfSkubWFwKGZ1bmN0aW9uIChwbGFucykgewogICAgICAgICAgcmV0dXJuIHBsYW5zLlR5cGU7CiAgICAgICAgfSk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgcmV0dXJuIFtdOwogICAgICB9CiAgICB9LAogICAgcmV0YWlsX3Nob3BpZnlfc3Vic2NyaXB0aW9uX3BsYW5zX2N1c3RvbV9jdXJyZW5jeTogZnVuY3Rpb24gcmV0YWlsX3Nob3BpZnlfc3Vic2NyaXB0aW9uX3BsYW5zX2N1c3RvbV9jdXJyZW5jeSgpIHsKICAgICAgdmFyIF90aGlzMyA9IHRoaXM7CgogICAgICBpZiAodGhpcy5zdHJpcGVfc3Vic2NyaXB0aW9uX3BsYW5zX2RldGFpbHMuc3Vic2NyaXB0aW9uX3R5cGUgIT09ICdQcmVtaXVtJykgewogICAgICAgIHJldHVybiB0aGlzLnJldGFpbF9zaG9waWZ5X3N1YnNjcmlwdGlvbl9wbGFucy5maWx0ZXIoZnVuY3Rpb24gKGl0ZW0pIHsKICAgICAgICAgIHJldHVybiBpdGVtLmN1cnJlbmN5ID09PSBfdGhpczMuc2hvcF9iYXNlX2N1cnJlbmN5OwogICAgICAgIH0pOwogICAgICB9IGVsc2UgewogICAgICAgIHJldHVybiB0aGlzLnJldGFpbF9zaG9waWZ5X3N1YnNjcmlwdGlvbl9wbGFucy5maWx0ZXIoZnVuY3Rpb24gKGl0ZW0pIHsKICAgICAgICAgIHJldHVybiBpdGVtLmN1cnJlbmN5ID09PSBfdGhpczMuc2hvcF9iYXNlX2N1cnJlbmN5ICYmIChpdGVtLm5hbWUgPT09ICJTdGFydGVyIiB8fCBpdGVtLm5hbWUgPT09ICJXaGF0c0FwcCIpOwogICAgICAgIH0pOwogICAgICB9CiAgICB9LAogICAgLy8gcmV0YWlsX3Nob3BpZnlfc3Vic2NyaXB0aW9uX3BsYW5zX2NoZWNrX2N1cnJlbnRwbGFuKCl7CiAgICAvLyAgIGlmKHRoaXMuc3RyaXBlX3N1YnNjcmlwdGlvbl9wbGFuc19kZXRhaWxzLnN1YnNjcmlwdGlvbl90eXBlICE9PSAnUHJlbWl1bScpewogICAgLy8gICAgIHJldHVybiB0aGlzLnJldGFpbF9zaG9waWZ5X3N1YnNjcmlwdGlvbl9wbGFucwogICAgLy8gICB9ZWxzZXsKICAgIC8vICAgICByZXR1cm4gdGhpcy5yZXRhaWxfc2hvcGlmeV9zdWJzY3JpcHRpb25fcGxhbnMuZmlsdGVyKChpdGVtKSA9PiAgaXRlbS5uYW1lID09PSAiU3RhcnRlciIpCiAgICAvLyAgIH0KICAgIC8vIH0sCiAgICBzZWNvbmRfc3RlcDogZnVuY3Rpb24gc2Vjb25kX3N0ZXAoKSB7CiAgICAgIHZhciBfdGhpczQgPSB0aGlzOwoKICAgICAgdmFyIHRlbXAgPSBbXTsKCiAgICAgIGlmICh0aGlzLnN0cmlwZV9zdWJzY3JpcHRpb25fcGxhbnMgJiYgdGhpcy5yZXRhaWxfcGxhbl9jdXJyZW50KSB7CiAgICAgICAgdGVtcCA9IHRoaXMuc3RyaXBlX3N1YnNjcmlwdGlvbl9wbGFucy5maWx0ZXIoZnVuY3Rpb24gKHBsYW5zKSB7CiAgICAgICAgICByZXR1cm4gcGxhbnMuVHlwZSA9PSBfdGhpczQucmV0YWlsX3BsYW5fY3VycmVudDsKICAgICAgICB9KTsKICAgICAgICB2YXIgc29ydGVkID0gdGVtcFswXS5QcmljZU9wdGlvbnMuZmlsdGVyKGZ1bmN0aW9uIChhYmMpIHsKICAgICAgICAgIHJldHVybiBhYmMuY3VycmVuY3kgPT09IF90aGlzNC5zaG9wX2Jhc2VfY3VycmVuY3k7CiAgICAgICAgfSk7CiAgICAgICAgcmV0dXJuIHNvcnRlZDsKICAgICAgfQoKICAgICAgcmV0dXJuIHRlbXA7CiAgICB9LAogICAgZmlyc3Rfc3RlcF9hZGRvbl9wbGFuczogZnVuY3Rpb24gZmlyc3Rfc3RlcF9hZGRvbl9wbGFucygpIHsKICAgICAgaWYgKHRoaXMuc3RyaXBlX2FkZG9uX3BsYW5zKSB7CiAgICAgICAgcmV0dXJuIHRoaXMuc3RyaXBlX2FkZG9uX3BsYW5zLm1hcChmdW5jdGlvbiAocGxhbnMpIHsKICAgICAgICAgIHJldHVybiBwbGFucy5UeXBlOwogICAgICAgIH0pOwogICAgICB9CiAgICB9LAogICAgc2Vjb25kX3N0ZXBfYWRkb25fcGxhbnM6IGZ1bmN0aW9uIHNlY29uZF9zdGVwX2FkZG9uX3BsYW5zKCkgewogICAgICB2YXIgX3RoaXM1ID0gdGhpczsKCiAgICAgIC8vIGNvbnNvbGUubG9nKCJzZWxlY3RlZF9hZGRvbl9wbGFuIix0aGlzLnNlbGVjdGVkX2FkZG9uX3BsYW4pOwogICAgICBpZiAodGhpcy5zZWxlY3RlZF9hZGRvbl9wbGFuKSB7CiAgICAgICAgdmFyIGNoZWNrID0gdGhpcy5zZWxlY3RlZF9hZGRvbl9wbGFuWydQcmljZU9wdGlvbnMnXS5maWx0ZXIoZnVuY3Rpb24gKHBsYW4pIHsKICAgICAgICAgIHJldHVybiBwbGFuLmN1cnJlbmN5ID09IF90aGlzNS5zaG9wX2Jhc2VfY3VycmVuY3k7CiAgICAgICAgfSk7CiAgICAgICAgcmV0dXJuIGNoZWNrOwogICAgICB9CgogICAgICByZXR1cm4gW107CiAgICB9LAogICAgcmV0YWlsX3BheW1lbnRfdHlwZXM6IGZ1bmN0aW9uIHJldGFpbF9wYXltZW50X3R5cGVzKCkgewogICAgICBpZiAodGhpcy5yZXRhaWxfcGxhbl9jdXJyZW50ID09IG51bGwpIHsKICAgICAgICByZXR1cm4gdGhpcy5wYXltZW50X3R5cGVzOwogICAgICB9IGVsc2UgaWYgKHRoaXMucmV0YWlsX3BsYW5fY3VycmVudC5uYW1lID09IHRoaXMuc3RyaXBlX3N1YnNjcmlwdGlvbl9wbGFuc19kZXRhaWxzLnN1YnNjcmlwdGlvbl90eXBlKSB7CiAgICAgICAgdmFyIHN1Yl90eXBlID0gdGhpcy5zdHJpcGVfc3Vic2NyaXB0aW9uX3BsYW5zX2RldGFpbHMuc3Vic2NyaXB0aW9uX3BlcmlvZCA9PSAnWWVhcmx5JyA/ICdBbm51YWwnIDogJ01vbnRobHknOwogICAgICAgIHJldHVybiB0aGlzLnBheW1lbnRfdHlwZXMuZmlsdGVyKGZ1bmN0aW9uIChpdGVtKSB7CiAgICAgICAgICByZXR1cm4gaXRlbSAhPSBzdWJfdHlwZTsKICAgICAgICB9KTsKICAgICAgfSBlbHNlIGlmICh0aGlzLnJldGFpbF9wbGFuX2N1cnJlbnQubmFtZSA9PSAnV2hhdHNBcHAnKSB7CiAgICAgICAgcmV0dXJuIHRoaXMucGF5bWVudF90eXBlcy5maWx0ZXIoZnVuY3Rpb24gKGl0ZW0pIHsKICAgICAgICAgIHJldHVybiBpdGVtICE9ICdBbm51YWwnOwogICAgICAgIH0pOwogICAgICB9IGVsc2UgewogICAgICAgIHJldHVybiB0aGlzLnBheW1lbnRfdHlwZXM7CiAgICAgIH0KICAgIH0KICB9LAogIG1ldGhvZHM6IHsKICAgIC8vIG5hbWVXaXRoTGFuZyAoeyB0eXBlLCBjb3VudCB9KSB7CiAgICAvLyAgIHJldHVybiBgJHt0eXBlfSAke3RoaXMuc2VsZWN0ZWRfYWRkb25fcGxhbi5TZXJ2aWNlfVske2NvdW50fV1gCiAgICAvLyB9LAogICAgLy8gbmFtZXdpdGhQcmljZSh7bmFtZSxQcmljZX0pewogICAgLy8gICByZXR1cm4gYCR7bmFtZX0gKCQke1ByaWNlfSlgCiAgICAvLyB9LAogICAgc2hvd19zd2FsX25vdGlmaWNhdGlvbjogZnVuY3Rpb24gc2hvd19zd2FsX25vdGlmaWNhdGlvbigpIHsKICAgICAgdmFyIF90aGlzNiA9IHRoaXM7CgogICAgICBTd2FsLmZpcmUoewogICAgICAgIHRpdGxlOiB0aGlzLnRsdCgnYmlsbGluZ19zd2FsX2FsZXJ0X21zZycpLAogICAgICAgIHRleHQ6IHRoaXMudGx0KCdiaWxsaW5nX3Vuc3Vic2NyaWJlX3BsYW5fbXNnJyksCiAgICAgICAgaWNvbjogJ3dhcm5pbmcnLAogICAgICAgIHNob3dDYW5jZWxCdXR0b246IHRydWUsCiAgICAgICAgY29uZmlybUJ1dHRvbkNvbG9yOiAnIzMwODVkNicsCiAgICAgICAgY2FuY2VsQnV0dG9uQ29sb3I6ICcjZDMzJywKICAgICAgICBjb25maXJtQnV0dG9uVGV4dDogdGhpcy50bHQoJ2JpbGxpbmdfc3dhbF95ZXNfYnRuJykKICAgICAgfSkudGhlbihmdW5jdGlvbiAocmVzdWx0KSB7CiAgICAgICAgaWYgKHJlc3VsdC52YWx1ZSA9PSB0cnVlKSB7CiAgICAgICAgICBfdGhpczYudXBkYXRlX3N1YnNjcmlwdGlvbl9wbGFuX2ZyZWUoKTsKCiAgICAgICAgICBTd2FsLmZpcmUoX3RoaXM2LnRsdCgnYmlsbGluZ19zd2FsX3Vuc3Vic2NyaWJlZF9tc2cnKSwgX3RoaXM2LnRsdCgnYmlsbGluZ19zdWJzY3JpYmVfY2FuY2VsX21zZycpLCAnc3VjY2VzcycpOwogICAgICAgIH0KICAgICAgfSk7CiAgICB9LAogICAgZ2V0X3N1YnNjcmlwdGlvbl92YWxpZF90aWxsOiBmdW5jdGlvbiBnZXRfc3Vic2NyaXB0aW9uX3ZhbGlkX3RpbGwoc3ViX2RhdGUpIHsKICAgICAgcmV0dXJuIG1vbWVudC51dGMoc3ViX2RhdGUpLmZvcm1hdCgiRG8gTU1NTSBZWVlZIik7CiAgICB9LAogICAgdXBkYXRlX3N1YnNjcmlwdGlvbl9wbGFuX2ZyZWU6IGZ1bmN0aW9uIHVwZGF0ZV9zdWJzY3JpcHRpb25fcGxhbl9mcmVlKCkgewogICAgICB2YXIgX3RoaXM3ID0gdGhpczsKCiAgICAgIGF4aW9zLnBvc3QoYXBpX2NhbGxzLnN0cmlwZV9wYXltZW50X2dhdGV3YXkoKSwgewogICAgICAgIGNvbXBhbnlfaWQ6IHRoaXMuY29tcGFueWlkLAogICAgICAgIGNvbXBhbnlfbmFtZTogdGhpcy5jb21wYW55bmFtZSwKICAgICAgICB1bnN1YnNjcmliZV9wbGFuOiB0cnVlLAogICAgICAgIGVtYWlsOiB0aGlzLiRzZXNzaW9uLmdldCgiVXNlckluZm9ybWF0aW9uIikuZW1haWwKICAgICAgfSkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICBpZiAocmVzcG9uc2UuZGF0YS5tZXNzYWdlLk1TR19DT0RFID09PSBfdGhpczcuYXBpX3N0YXR1c19jb2RlLkRBVEFfQVZBSUxBQkxFLk1TR19DT0RFKSB7CiAgICAgICAgICB2YXIgbWVzc2FnZSA9IHJlc3BvbnNlLmRhdGEuZGF0YS5Vc2VyTWVudTsKCiAgICAgICAgICBfdGhpczcudXBkYXRlX3NpZGViYXJfbWVudShtZXNzYWdlKTsKCiAgICAgICAgICBfdGhpczcuJHJvb3QuJGVtaXQoIlNpZGVCYXJNZW51VXBkYXRlZCIsIHRydWUpOyAvLyAgY29uc29sZS5sb2coInVwZGF0ZSBzdWNjZXNzZnVsbHkiKQoKCiAgICAgICAgICBfdGhpczcudXBkYXRlX3Jlc3RyaWN0aW9uX2xpc3QocmVzcG9uc2UuZGF0YS5kYXRhLlJlc3RyaWN0aW9uTGlzdCwgcmVzcG9uc2UuZGF0YS5kYXRhLlN1YnNjcmliZWRQbGFuKTsKCiAgICAgICAgICBfdGhpczcuZ2V0X2N1cnJlbnRfc3Vic2NyaXB0aW9uX2RldGFpbHMoKTsKCiAgICAgICAgICBfdGhpczcuJHJvdXRlci5wdXNoKCIvYm90L3N1YnNjcmlwdGlvbi1yZW5ld2FsIik7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIFN3YWwoewogICAgICAgICAgICAvLyB0aXRsZTogdGhpcy50bHQoJ2JpbGxpbmdfZXJyb3Jfb2NjdXJyZWRfbXNnOScpLAogICAgICAgICAgICB0aXRsZTogcmVzcG9uc2UuZGF0YS5tZXNzYWdlLk1TR19DT0RFLAogICAgICAgICAgICB0ZXh0OiByZXNwb25zZS5kYXRhLm1lc3NhZ2UuTVNHLAogICAgICAgICAgICBzaG93Q2FuY2VsQnV0dG9uOiBmYWxzZSwKICAgICAgICAgICAgc2hvd0NvbmZpcm1CdXR0b246IGZhbHNlLAogICAgICAgICAgICB0aW1lcjogMjUwMCwKICAgICAgICAgICAgdHlwZTogImVycm9yIgogICAgICAgICAgfSk7CiAgICAgICAgfQogICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZSkgewogICAgICAgIGlmIChlLnJlc3BvbnNlLnN0YXR1cyA9PT0gNDEwIHx8IGUucmVzcG9uc2Uuc3RhdHVzID09PSA0NDAgfHwgZS5yZXNwb25zZS5zdGF0dXMgPT09IDQwOSkgewogICAgICAgICAgX3RoaXM3LiRyb290LiRlbWl0KCJTZXNzaW9uX0V4cGlyZWQiLCBlLnJlc3BvbnNlLmRhdGEpOwogICAgICAgIH0KICAgICAgfSk7CiAgICB9LAogICAgZ2V0X3BsYW5zX2Zyb21fZGI6IGZ1bmN0aW9uIGdldF9wbGFuc19mcm9tX2RiKCkgewogICAgICB2YXIgX3RoaXM4ID0gdGhpczsKCiAgICAgIHRoaXMuc3Bpbm5lck9uID0gdHJ1ZTsKICAgICAgYXhpb3MucG9zdChhcGlfY2FsbHMuc3RyaXBlX3BheW1lbnRfZ2F0ZXdheSgpLCB7CiAgICAgICAgY29tcGFueV9pZDogdGhpcy5jb21wYW55aWQsCiAgICAgICAgY29tcGFueV9uYW1lOiB0aGlzLmNvbXBhbnluYW1lLAogICAgICAgIGdldF9wbGFuc19mcm9tX2RiOiB0cnVlCiAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgaWYgKHJlc3BvbnNlLmRhdGEubWVzc2FnZS5NU0dfQ09ERSA9PT0gX3RoaXM4LmFwaV9zdGF0dXNfY29kZS5EQVRBX0FWQUlMQUJMRS5NU0dfQ09ERSkgewogICAgICAgICAgX3RoaXM4LnNwaW5uZXJPbiA9IGZhbHNlOwogICAgICAgICAgX3RoaXM4LnN0cmlwZV9zdWJzY3JpcHRpb25fcGxhbnMgPSByZXNwb25zZS5kYXRhLmRhdGE7CiAgICAgICAgICBfdGhpczguc2hvd19zdWJzY3JpcHRpb24gPSB0cnVlOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBfdGhpczguc3RyaXBlX3N1YnNjcmlwdGlvbl9wbGFuc19kZXRhaWxzID0gW107CiAgICAgICAgfQogICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZSkgewogICAgICAgIF90aGlzOC5zcGlubmVyT24gPSBmYWxzZTsKICAgICAgICBTd2FsLmZpcmUoewogICAgICAgICAgdGl0bGU6IF90aGlzOC50bHQoJ2JpbGxpbmdfZXJyb3Jfb2NjdXJyZWRfbXNnMicpLAogICAgICAgICAgdHlwZTogImVycm9yIgogICAgICAgIH0pOwogICAgICB9KTsKICAgIH0sCiAgICBnZXRfY3VycmVudF9zdWJzY3JpcHRpb25fZGV0YWlsczogZnVuY3Rpb24gZ2V0X2N1cnJlbnRfc3Vic2NyaXB0aW9uX2RldGFpbHMoKSB7CiAgICAgIHZhciBfdGhpczkgPSB0aGlzOwoKICAgICAgdGhpcy5zcGlubmVyT24gPSB0cnVlOwogICAgICBheGlvcy5wb3N0KGFwaV9jYWxscy5zdHJpcGVfcGF5bWVudF9nYXRld2F5KCksIHsKICAgICAgICBjb21wYW55X2lkOiB0aGlzLmNvbXBhbnlpZCwKICAgICAgICBjb21wYW55X25hbWU6IHRoaXMuY29tcGFueW5hbWUsCiAgICAgICAgZ2V0X2FjdGl2ZV9wbGFuOiB0cnVlCiAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgaWYgKHJlc3BvbnNlLmRhdGEubWVzc2FnZS5NU0dfQ09ERSA9PT0gX3RoaXM5LmFwaV9zdGF0dXNfY29kZS5EQVRBX0FWQUlMQUJMRS5NU0dfQ09ERSkgewogICAgICAgICAgX3RoaXM5LnNwaW5uZXJPbiA9IGZhbHNlOwogICAgICAgICAgX3RoaXM5LnN0cmlwZV9zdWJzY3JpcHRpb25fcGxhbnNfZGV0YWlscyA9IHJlc3BvbnNlLmRhdGEuZGF0YS5EYXRhLmN1cnJlbnRfc3Vic2NyaXB0aW9uOwogICAgICAgICAgX3RoaXM5LmhpZGVfYnV0dG9uID0gcmVzcG9uc2UuZGF0YS5kYXRhLkRhdGEuY3VycmVudF9zdWJzY3JpcHRpb24uc3Vic2NyaXB0aW9uX3R5cGU7CiAgICAgICAgICBfdGhpczkuc2hvd19zdWJzY3JpcHRpb24gPSB0cnVlOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICBfdGhpczkuc3RyaXBlX3N1YnNjcmlwdGlvbl9wbGFuc19kZXRhaWxzID0gW107CiAgICAgICAgICBTd2FsKHsKICAgICAgICAgICAgdGl0bGU6IHJlc3BvbnNlLmRhdGEubWVzc2FnZS5NU0dfQ09ERSwKICAgICAgICAgICAgdGV4dDogcmVzcG9uc2UuZGF0YS5tZXNzYWdlLk1TRywKICAgICAgICAgICAgc2hvd0NhbmNlbEJ1dHRvbjogZmFsc2UsCiAgICAgICAgICAgIHNob3dDb25maXJtQnV0dG9uOiBmYWxzZSwKICAgICAgICAgICAgdGltZXI6IDI1MDAsCiAgICAgICAgICAgIHR5cGU6ICJlcnJvciIKICAgICAgICAgIH0pOwogICAgICAgIH0KICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKGUpIHsKICAgICAgICBfdGhpczkuc3Bpbm5lck9uID0gZmFsc2U7CiAgICAgICAgY29uc29sZS5sb2coZSwgJ2VlZScpOwogICAgICAgIFN3YWwuZmlyZSh7CiAgICAgICAgICB0aXRsZTogX3RoaXM5LnRsdCgnYmlsbGluZ19lcnJvcl9vY2N1cnJlZF9tc2cyJyksCiAgICAgICAgICB0eXBlOiAiZXJyb3IiCiAgICAgICAgfSk7CiAgICAgIH0pOwogICAgfSwKICAgIC8vIGdldF9jdXJyZW50X3N1YnNjcmlwdGlvbigpIHsKICAgIC8vICAgYXhpb3MKICAgIC8vICAgICAucG9zdChhcGlfY2FsbHMucmF6b3JwYXlfY29tbXVuY2F0aW9uKCksIHsKICAgIC8vICAgICAgIGNvbXBhbnlfaWQ6IHRoaXMuY29tcGFueWlkLAogICAgLy8gICAgICAgY29tcGFueV9uYW1lOiB0aGlzLmNvbXBhbnluYW1lLAogICAgLy8gICAgICAgaXNfZ2V0OiB0cnVlLAogICAgLy8gICAgIH0pCiAgICAvLyAgICAgLnRoZW4oKHJlc3BvbnNlKSA9PiB7CiAgICAvLyAgICAgICAvLyBjb25zb2xlLmxvZygiQ1VSUkVOVCBQTEFOIERFVEFJTFMiLHJlc3BvbnNlKTsKICAgIC8vICAgICAgIGlmIChyZXNwb25zZS5kYXRhID09IG51bGwpIHsKICAgIC8vICAgICAgICAgdGhpcy5zdWJzY3JpcHRpb25fYnRuX2Rpc2FibGUgPSB0cnVlOwogICAgLy8gICAgICAgICBTd2FsKHsKICAgIC8vICAgICAgICAgICB0aXRsZTogdGhpcy50bHQoJ2JpbGxpbmdfbm9fYWN0aXZlX3N1YnNjcmlwdGlvbl9tc2cxJyksCiAgICAvLyAgICAgICAgICAgdHlwZTogImVycm9yIiwKICAgIC8vICAgICAgICAgICB0b2FzdDogdHJ1ZSwKICAgIC8vICAgICAgICAgICBzaG93Q29uZmlybUJ1dHRvbjogZmFsc2UsCiAgICAvLyAgICAgICAgICAgdGltZXI6IDIwMDAsCiAgICAvLyAgICAgICAgIH0pOwogICAgLy8gICAgICAgfSBlbHNlIGlmIChyZXNwb25zZS5kYXRhLk1TRyA9PSAiQ3VycmVudCBTdWJzY3JpcHRpb24gUGxhbiIpIHsKICAgIC8vICAgICAgICAgdGhpcy5zZWxlY3RlZF9zdWJzY3JpcHRpb24gPQogICAgLy8gICAgICAgICAgIHJlc3BvbnNlLmRhdGEuc3Vic2NyaXB0aW9uLnN1YnNjcmlwdGlvbl90eXBlOwogICAgLy8gICAgICAgICB0aGlzLnNlbGVjdGVkX3BlcmlvZCA9IHJlc3BvbnNlLmRhdGEuc3Vic2NyaXB0aW9uLnBlcmlvZDsKICAgIC8vICAgICAgICAgdGhpcy5jdXN0b21lcl9pZCA9IHJlc3BvbnNlLmRhdGEuY3VzdG9tZXJfaWQ7CiAgICAvLyAgICAgICAgIHRoaXMuc3Vic2NyaXB0aW9uX2J0bl9kaXNhYmxlID0gZmFsc2U7CiAgICAvLyAgICAgICB9IGVsc2UgaWYgKHJlc3BvbnNlLmRhdGEuTVNHID09ICJObyBBY3RpdmUgU3Vic2NyaXB0aW9uIHBsYW4gZm91bmQiKSB7CiAgICAvLyAgICAgICAgIHRoaXMuY3VzdG9tZXJfaWQgPSByZXNwb25zZS5kYXRhLmN1c3RvbWVyX2lkOwogICAgLy8gICAgICAgICBTd2FsKHsKICAgIC8vICAgICAgICAgICB0aXRsZTogdGhpcy50bHQoJ2JpbGxpbmdfbm9fYWN0aXZlX3N1YnNjcmlwdGlvbl9tc2cyJyksCiAgICAvLyAgICAgICAgICAgdHlwZTogIndhcm5pbmciLAogICAgLy8gICAgICAgICAgIHRvYXN0OiB0cnVlLAogICAgLy8gICAgICAgICAgIHNob3dDb25maXJtQnV0dG9uOiBmYWxzZSwKICAgIC8vICAgICAgICAgICB0aW1lcjogMjAwMCwKICAgIC8vICAgICAgICAgfSk7CiAgICAvLyAgICAgICAgIHRoaXMuc3Vic2NyaXB0aW9uX2J0bl9kaXNhYmxlID0gdHJ1ZTsKICAgIC8vICAgICAgIH0KICAgIC8vICAgICB9KQogICAgLy8gICAgIC5jYXRjaCgoZSkgPT4gewogICAgLy8gICAgICAgdGhpcy5zcGlubmVyT24gPSBmYWxzZTsKICAgIC8vICAgICAgIGlmICgKICAgIC8vICAgICAgICAgZS5yZXNwb25zZS5zdGF0dXMgPT09IDQxMCB8fAogICAgLy8gICAgICAgICBlLnJlc3BvbnNlLnN0YXR1cyA9PT0gNDQwIHx8CiAgICAvLyAgICAgICAgIGUucmVzcG9uc2Uuc3RhdHVzID09PSA0MDkKICAgIC8vICAgICAgICkgewogICAgLy8gICAgICAgICB0aGlzLiRyb290LiRlbWl0KCJTZXNzaW9uX0V4cGlyZWQiLCBlLnJlc3BvbnNlLmRhdGEpOwogICAgLy8gICAgICAgfQogICAgLy8gICAgIH0pOwogICAgLy8gfSwKICAgIGNoZWNrX2FkZG9uc19iYWxhbmNlOiBmdW5jdGlvbiBjaGVja19hZGRvbnNfYmFsYW5jZSgpIHsKICAgICAgdmFyIF90aGlzMTAgPSB0aGlzOwoKICAgICAgdGhpcy5zcGlubmVyT24gPSB0cnVlOwogICAgICBheGlvcy5wb3N0KGFwaV9jYWxscy5jaGVja19hZGRvbnNfYmFsYW5jZSgpLCB7CiAgICAgICAgY29tcGFueV9uYW1lOiB0aGlzLmNvbXBhbnluYW1lLAogICAgICAgIGNvbXBhbnlfaWQ6IHRoaXMuY29tcGFueWlkLAogICAgICAgIGNoZWNrX2JhbGFuY2U6IHRydWUKICAgICAgfSwgewogICAgICAgIGhlYWRlcnM6IHsKICAgICAgICAgIEF1dGhvcml6YXRpb246ICJCZWFyZXIgIi5jb25jYXQodGhpcy4kc2Vzc2lvbi5nZXQoImF0IikpCiAgICAgICAgfQogICAgICB9KS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgIC8vIGNvbnNvbGUubG9nKHJlc3BvbnNlKTsKICAgICAgICBfdGhpczEwLnNwaW5uZXJPbiA9IGZhbHNlOwoKICAgICAgICBpZiAocmVzcG9uc2UuZGF0YS5tZXNzYWdlLk1TR19DT0RFID09PSBfdGhpczEwLmFwaV9zdGF0dXNfY29kZS5DSEVDS19CQUxBTkNFLk1TR19DT0RFKSB7CiAgICAgICAgICBpZiAoQm9vbGVhbihyZXNwb25zZS5kYXRhLmRhdGEuY3JlZGl0cy5zbXNfY291bnQpID09IHRydWUpIHsKICAgICAgICAgICAgdmFyIHNtc19jb3VudCA9IHJlc3BvbnNlLmRhdGEuZGF0YS5jcmVkaXRzLnNtc19jb3VudDsKICAgICAgICAgICAgX3RoaXMxMC5jcmVkaXRzX2JhbGFuY2UgPSBzbXNfY291bnQ7IC8vIHRoaXMuY3JlZGl0c19iYWxhbmNlID0gdGhpcy50bHQoJ2N1cnJlbnRfc21zX2NyZWRpdF90ZXh0JykgKyAiPHN0cm9uZz4gIisgdGhpcy50bHQoJ2N1cnJlbnRfc21zX2NyZWRpdF90ZXh0MicpICsgIjogIiArIHNtc19jb3VudC51cyArICIgfCAiICsgdGhpcy50bHQoJ2N1cnJlbnRfc21zX2NyZWRpdF90ZXh0MycpICsgIjogIiArIHNtc19jb3VudC5ub25fdXMgKyAiPC9zdHJvbmc+IgogICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgU3dhbC5maXJlKHsKICAgICAgICAgICAgICB0aXRsZTogcmVzcG9uc2UuZGF0YS5tZXNzYWdlLk1TR19DT0RFLAogICAgICAgICAgICAgIHRleHQ6IHJlc3BvbnNlLmRhdGEubWVzc2FnZS5NU0csCiAgICAgICAgICAgICAgc2hvd0NhbmNlbEJ1dHRvbjogZmFsc2UsCiAgICAgICAgICAgICAgc2hvd0NvbmZpcm1CdXR0b246IGZhbHNlLAogICAgICAgICAgICAgIHR5cGU6ICJlcnJvciIKICAgICAgICAgICAgfSk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZSkgewogICAgICAgIF90aGlzMTAuc3Bpbm5lck9uID0gZmFsc2U7CgogICAgICAgIGlmIChlLnJlc3BvbnNlLnN0YXR1cyA9PT0gNDEwIHx8IGUucmVzcG9uc2Uuc3RhdHVzID09PSA0NDAgfHwgZS5yZXNwb25zZS5zdGF0dXMgPT09IDQwOSkgewogICAgICAgICAgX3RoaXMxMC4kcm9vdC4kZW1pdCgiU2Vzc2lvbl9FeHBpcmVkIiwgZS5yZXNwb25zZS5kYXRhKTsKICAgICAgICB9CiAgICAgIH0pOwogICAgfSwKICAgIGdldF9hZGRvbl9kZXRhaWxzOiBmdW5jdGlvbiBnZXRfYWRkb25fZGV0YWlscygpIHsKICAgICAgdmFyIF90aGlzMTEgPSB0aGlzOwoKICAgICAgYXhpb3MucG9zdChhcGlfY2FsbHMuc3RyaXBlX3BheW1lbnRfZ2F0ZXdheSgpLCB7CiAgICAgICAgZ2V0X2FkZF9vbnM6IHRydWUKICAgICAgfSkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICBpZiAocmVzcG9uc2UuZGF0YS5tZXNzYWdlLk1TR19DT0RFID09PSBfdGhpczExLmFwaV9zdGF0dXNfY29kZS5OT19BRERfT05TX0ZPVU5ELk1TR19DT0RFKSB7CiAgICAgICAgICBfdGhpczExLnN0cmlwZV9hZGRvbl9wbGFucyA9IFtdOwogICAgICAgICAgcmV0dXJuOwogICAgICAgIH0gZWxzZSBpZiAocmVzcG9uc2UuZGF0YS5tZXNzYWdlLk1TR19DT0RFID09PSBfdGhpczExLmFwaV9zdGF0dXNfY29kZS5EQVRBX0FWQUlMQUJMRS5NU0dfQ09ERSkgewogICAgICAgICAgaWYgKEJvb2xlYW4ocmVzcG9uc2UuZGF0YS5kYXRhKSAhPSBmYWxzZSkgewogICAgICAgICAgICBfdGhpczExLnN0cmlwZV9hZGRvbl9wbGFucyA9IHJlc3BvbnNlLmRhdGEuZGF0YTsKICAgICAgICAgIH0KICAgICAgICB9IGVsc2UgewogICAgICAgICAgU3dhbCh7CiAgICAgICAgICAgIHRpdGxlOiByZXNwb25zZS5kYXRhLm1lc3NhZ2UuTVNHX0NPREUsCiAgICAgICAgICAgIHRleHQ6IHJlc3BvbnNlLmRhdGEubWVzc2FnZS5NU0csCiAgICAgICAgICAgIHNob3dDYW5jZWxCdXR0b246IGZhbHNlLAogICAgICAgICAgICBzaG93Q29uZmlybUJ1dHRvbjogZmFsc2UsCiAgICAgICAgICAgIHRpbWVyOiAyNTAwLAogICAgICAgICAgICB0eXBlOiAiZXJyb3IiCiAgICAgICAgICB9KTsKICAgICAgICB9CiAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlKSB7CiAgICAgICAgY29uc29sZS5sb2coZSk7CiAgICAgICAgU3dhbC5maXJlKHsKICAgICAgICAgIHRpdGxlOiBfdGhpczExLnRsdCgnYmlsbGluZ19lcnJvcl9vY2N1cnJlZF9tc2czJyksCiAgICAgICAgICB0eXBlOiAiZXJyb3IiCiAgICAgICAgfSk7CiAgICAgIH0pOwogICAgfSwKICAgIC8vIGdldF9zdWJzY3JpcHRpb25fZGV0YWlscygpIHsKICAgIC8vICAgYXhpb3MKICAgIC8vICAgICAucG9zdChhcGlfY2FsbHMuc3RyaXBlX3BheW1lbnRfZ2F0ZXdheSgpLCB7CiAgICAvLyAgICAgICBjb21wYW55X2lkOiB0aGlzLmNvbXBhbnlpZCwKICAgIC8vICAgICAgIGNvbXBhbnlfbmFtZTogdGhpcy5jb21wYW55bmFtZSwKICAgIC8vICAgICAgIGdldF9wbGFuczogdHJ1ZSwKICAgIC8vICAgICB9KQogICAgLy8gICAgIC50aGVuKChyZXNwb25zZSkgPT4gewogICAgLy8gICAgICAgLy8gY29uc29sZS5sb2cocmVzcG9uc2UuZGF0YSk7CiAgICAvLyAgICAgICBpZiAoCiAgICAvLyAgICAgICAgIHJlc3BvbnNlLmRhdGEuU3RhdHVzID09PSAiU3VjY2VzcyIgJiYKICAgIC8vICAgICAgICAgcmVzcG9uc2UuZGF0YS5EYXRhLmRhdGEubGVuZ3RoID4gMAogICAgLy8gICAgICAgKSB7CiAgICAvLyAgICAgICAgIHRoaXMuc3RyaXBlX3N1YnNjcmlwdGlvbl9wbGFucyA9IHJlc3BvbnNlLmRhdGEuRGF0YS5kYXRhOwogICAgLy8gICAgICAgfSBlbHNlIHsKICAgIC8vICAgICAgICAgdGhpcy5zdHJpcGVfc3Vic2NyaXB0aW9uX3BsYW5zID0gW107CiAgICAvLyAgICAgICB9CiAgICAvLyAgICAgfSkKICAgIC8vICAgICAuY2F0Y2goKGUpID0+IHsKICAgIC8vICAgICAgIGNvbnNvbGUubG9nKGUpOwogICAgLy8gICAgICAgU3dhbC5maXJlKHsKICAgIC8vICAgICAgICAgdGl0bGU6IHRoaXMudGx0KCdiaWxsaW5nX2Vycm9yX29jY3VycmVkX21zZzQnKSwKICAgIC8vICAgICAgICAgdHlwZTogImVycm9yIiwKICAgIC8vICAgICAgIH0pOwogICAgLy8gICAgIH0pOwogICAgLy8gfSwKICAgIGNhbmNlbF9zdWJzY3JpcHRpb246IGZ1bmN0aW9uIGNhbmNlbF9zdWJzY3JpcHRpb24oKSB7CiAgICAgIHZhciBfdGhpczEyID0gdGhpczsKCiAgICAgIGF4aW9zLnBvc3QoYXBpX2NhbGxzLnJhem9ycGF5X2NvbW11bmNhdGlvbigpLCB7CiAgICAgICAgaXNfY2FuY2VsOiB0cnVlLAogICAgICAgIHN1YnNjcmlwdGlvbl9pZDogdGhpcy5zdWJzY3JpcHRpb25faWQKICAgICAgfSkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICBpZiAocmVzcG9uc2UuZGF0YS5tZXNzYWdlLk1TR19DT0RFID09PSBfdGhpczEyLmFwaV9zdGF0dXNfY29kZS5TVUJTQ1JJUFRJT05fQ0FOQ0VMX1NVQ0NFU1MuTVNHX0NPREUpIHsKICAgICAgICAgIF90aGlzMTIuc3Vic2NyaXB0aW9uX2J0bl9kaXNhYmxlID0gdHJ1ZTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgU3dhbCh7CiAgICAgICAgICAgIHRpdGxlOiBfdGhpczEyLnRsdCgnYmlsbGluZ19pbnRlcm5hbF9zZXJ2ZXJfbXNnMScpLAogICAgICAgICAgICB0eXBlOiAiZXJyb3IiLAogICAgICAgICAgICBzaG93Q29uZmlybUJ1dHRvbjogZmFsc2UsCiAgICAgICAgICAgIHRpbWVyOiAyMDAwCiAgICAgICAgICB9KTsKICAgICAgICB9CiAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlKSB7CiAgICAgICAgX3RoaXMxMi5zcGlubmVyT24gPSBmYWxzZTsKCiAgICAgICAgaWYgKGUucmVzcG9uc2Uuc3RhdHVzID09PSA0MTAgfHwgZS5yZXNwb25zZS5zdGF0dXMgPT09IDQ0MCB8fCBlLnJlc3BvbnNlLnN0YXR1cyA9PT0gNDA5KSB7CiAgICAgICAgICBfdGhpczEyLiRyb290LiRlbWl0KCJTZXNzaW9uX0V4cGlyZWQiLCBlLnJlc3BvbnNlLmRhdGEpOwogICAgICAgIH0KICAgICAgfSk7CiAgICB9LAogICAgY3JlYXRlX2N1c3RvbWVyOiBmdW5jdGlvbiBjcmVhdGVfY3VzdG9tZXIoKSB7CiAgICAgIHZhciBfdGhpczEzID0gdGhpczsKCiAgICAgIGlmICh0aGlzLnNlbGVjdGVkX3N1YnNjcmlwdGlvbiA9PSAiIiB8fCB0aGlzLnNlbGVjdGVkX3BlcmlvZCA9PSAiIikgewogICAgICAgIFN3YWwoewogICAgICAgICAgdHlwZTogImluZm8iLAogICAgICAgICAgdGV4dDogdGhpcy50bHQoJ2JpbGxpbmdfc3Vic2NyaWJlX3BsYW5fcGVyaW9kX21zZycpLAogICAgICAgICAgdG9hc3Q6IHRydWUsCiAgICAgICAgICBwb3NpdGlvbjogInRvcC1yaWdodCIsCiAgICAgICAgICBzaG93Q29uZmlybUJ1dHRvbjogZmFsc2UsCiAgICAgICAgICB0aW1lcjogMjAwMAogICAgICAgIH0pOwogICAgICAgIHJldHVybjsKICAgICAgfQoKICAgICAgdmFyIHBlcmlvZCA9IHRoaXMuc2VsZWN0ZWRfcGVyaW9kLnRvTG93ZXJDYXNlKCk7CgogICAgICBmb3IgKHZhciBpIGluIHRoaXMuc3Vic2NyaXB0aW9uX3BsYW5zKSB7CiAgICAgICAgaWYgKHBlcmlvZCA9PSB0aGlzLnN1YnNjcmlwdGlvbl9wbGFuc1tpXS5wZXJpb2QpIHsKICAgICAgICAgIGlmICh0aGlzLnNlbGVjdGVkX3N1YnNjcmlwdGlvbiA9PSB0aGlzLnN1YnNjcmlwdGlvbl9wbGFuc1tpXS5pdGVtLm5hbWUpIHsKICAgICAgICAgICAgdGhpcy5wbGFuX2lkID0gdGhpcy5zdWJzY3JpcHRpb25fcGxhbnNbaV0uaWQ7IC8vIGNvbnNvbGUubG9nKCJQTEFOIE5BTUU6IiwgdGhpcy5zdWJzY3JpcHRpb25fcGxhbnNbaV0uaXRlbS5uYW1lKTsKICAgICAgICAgICAgLy8gY29uc29sZS5sb2coIlBMQU4gSUQ6IiwgdGhpcy5zdWJzY3JpcHRpb25fcGxhbnNbaV0uaWQpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfQoKICAgICAgaWYgKHRoaXMucGxhbl9pZCA9PSAiIikgewogICAgICAgIFN3YWwoewogICAgICAgICAgdGl0bGU6IHRoaXMudGx0KCdiaWxsaW5nX3BsYW5fbm90X2ZvdW5kX21zZycpLAogICAgICAgICAgdHlwZTogImVycm9yIiwKICAgICAgICAgIHRleHQ6IHRoaXMudGx0KCdiaWxsaW5nX2NvbnRhY3RfY2Vuc2VfYWRtaW5fbXNnJyksCiAgICAgICAgICBzaG93Q29uZmlybUJ1dHRvbjogZmFsc2UsCiAgICAgICAgICB0aW1lcjogMjAwMAogICAgICAgIH0pOwogICAgICAgIHJldHVybjsKICAgICAgfQoKICAgICAgaWYgKHRoaXMuY3VzdG9tZXJfaWQgPT0gIiIpIHsKICAgICAgICB2YXIgY3VzdF9kYXRhID0gewogICAgICAgICAgbmFtZTogdGhpcy5jb21wYW55bmFtZSwKICAgICAgICAgIGNvbnRhY3Q6ICIiLAogICAgICAgICAgZW1haWw6IHRoaXMuJHNlc3Npb24uZ2V0KCJVc2VySW5mb3JtYXRpb24iKS5lbWFpbCwKICAgICAgICAgIG5vdGVzOiB7CiAgICAgICAgICAgIEV4dHJhOiAiRGV0YWlscyByZWxhdGVkIHRvIGN1c3RvbWVyIgogICAgICAgICAgfQogICAgICAgIH07CiAgICAgICAgYXhpb3MucG9zdChhcGlfY2FsbHMucmF6b3JwYXlfY29tbXVuY2F0aW9uKCksIHsKICAgICAgICAgIGNvbXBhbnlfaWQ6IHRoaXMuY29tcGFueWlkLAogICAgICAgICAgY29tcGFueV9uYW1lOiB0aGlzLmNvbXBhbnluYW1lLAogICAgICAgICAgY3JlYXRlX2N1c3RvbWVyX2lkOiB0cnVlLAogICAgICAgICAgZGF0YTogY3VzdF9kYXRhCiAgICAgICAgfSkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICAgIGlmIChkYXRhLm1lc3NhZ2UuTVNHX0NPREUgPT09IF90aGlzMTMuYXBpX3N0YXR1c19jb2RlLlNUQVRVU19TVUNDRVNTLk1TR19DT0RFKSB7CiAgICAgICAgICAgIHZhciBjdXN0b21lcl9kZXRhaWwgPSByZXNwb25zZS5kYXRhLmRhdGEuQ3VzdG9tZXJfRGV0YWlsOwogICAgICAgICAgICBfdGhpczEzLmN1c3RvbWVyX2lkID0gcmVzcG9uc2UuZGF0YS5kYXRhLkN1c3RvbWVyX0RldGFpbC5pZDsgLy8gY29uc29sZS5sb2coImN1c3RvbWVyIGlkIix0aGlzLmN1c3RvbWVyX2lkKTsKCiAgICAgICAgICAgIF90aGlzMTMuY3JlYXRlX3N1YnNjcmlwdGlvbihfdGhpczEzLnBsYW5faWQsIF90aGlzMTMuY3VzdG9tZXJfaWQpOwogICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgU3dhbCh7CiAgICAgICAgICAgICAgdGl0bGU6IF90aGlzMTMudGx0KCdiaWxsaW5nX2ludGVybmFsX3NlcnZlcl9tc2cyJyksCiAgICAgICAgICAgICAgdHlwZTogImVycm9yIiwKICAgICAgICAgICAgICB0ZXh0OiBfdGhpczEzLnRsdCgnYmlsbGluZ19lcnJvcl9jcmVhdGluZ19jdXN0X2lkX21zZycpLAogICAgICAgICAgICAgIHRpbWVyOiAyMDAwCiAgICAgICAgICAgIH0pOwogICAgICAgICAgfQogICAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlKSB7CiAgICAgICAgICBpZiAoZS5yZXNwb25zZS5zdGF0dXMgPT09IDQxMCB8fCBlLnJlc3BvbnNlLnN0YXR1cyA9PT0gNDQwIHx8IGUucmVzcG9uc2Uuc3RhdHVzID09PSA0MDkpIHsKICAgICAgICAgICAgX3RoaXMxMy4kcm9vdC4kZW1pdCgiU2Vzc2lvbl9FeHBpcmVkIiwgZS5yZXNwb25zZS5kYXRhKTsKICAgICAgICAgIH0KICAgICAgICB9KTsKICAgICAgfSBlbHNlIHsKICAgICAgICB0aGlzLmNyZWF0ZV9zdWJzY3JpcHRpb24odGhpcy5wbGFuX2lkLCB0aGlzLmN1c3RvbWVyX2lkKTsKICAgICAgfQogICAgfSwKICAgIGNyZWF0ZV9zdWJzY3JpcHRpb246IGZ1bmN0aW9uIGNyZWF0ZV9zdWJzY3JpcHRpb24ocGxhbl9pZCwgY3VzdG9tZXJfaWQpIHsKICAgICAgdmFyIF90aGlzMTQgPSB0aGlzOwoKICAgICAgdmFyIHN1Yl9kYXRhID0gewogICAgICAgIHBsYW5faWQ6IHBsYW5faWQsCiAgICAgICAgY3VzdG9tZXJfaWQ6IGN1c3RvbWVyX2lkCiAgICAgIH07CiAgICAgIGF4aW9zLnBvc3QoYXBpX2NhbGxzLnJhem9ycGF5X2NvbW11bmNhdGlvbigpLCB7CiAgICAgICAgY3JlYXRlX3N1YnNjcmlwdGlvbjogdHJ1ZSwKICAgICAgICBkYXRhOiBzdWJfZGF0YQogICAgICB9KS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgIGlmIChyZXNwb25zZS5kYXRhLm1lc3NhZ2UuTVNHX0NPREUgPT09IF90aGlzMTQuYXBpX3N0YXR1c19jb2RlLlNUQVRVU19TVUNDRVNTLk1TR19DT0RFKSB7CiAgICAgICAgICBfdGhpczE0LnN1YnNjcmlwdGlvbl9pZCA9IHJlc3BvbnNlLmRhdGEuZGF0YS5TdWJzY3JpcHRpb25fRGV0YWlsLmlkOyAvLyBjb25zb2xlLmxvZygiU3Vic2NyaXB0aW9uIGlkIiwgcmVzcG9uc2UpOwoKICAgICAgICAgIF90aGlzMTQuc3RhcnRfcGF5bWVudChfdGhpczE0LnN1YnNjcmlwdGlvbl9pZCk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIFN3YWwoewogICAgICAgICAgICB0aXRsZTogX3RoaXMxNC50bHQoJ2JpbGxpbmdfaW50ZXJuYWxfc2VydmVyX21zZzMnKSwKICAgICAgICAgICAgdHlwZTogImVycm9yIiwKICAgICAgICAgICAgdGV4dDogX3RoaXMxNC50bHQoJ2JpbGxpbmdfZXJyb3JfY3JlYXRpbmdfc3Vic2NyaXB0aW9uX21zZycpLAogICAgICAgICAgICB0aW1lcjogMjAwMAogICAgICAgICAgfSk7CiAgICAgICAgfQogICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZSkgewogICAgICAgIGlmIChlLnJlc3BvbnNlLnN0YXR1cyA9PT0gNDEwIHx8IGUucmVzcG9uc2Uuc3RhdHVzID09PSA0NDAgfHwgZS5yZXNwb25zZS5zdGF0dXMgPT09IDQwOSkgewogICAgICAgICAgX3RoaXMxNC4kcm9vdC4kZW1pdCgiU2Vzc2lvbl9FeHBpcmVkIiwgZS5yZXNwb25zZS5kYXRhKTsKICAgICAgICB9CiAgICAgIH0pOwogICAgfSwKICAgIHN0YXJ0X3BheW1lbnQ6IGZ1bmN0aW9uIHN0YXJ0X3BheW1lbnQoc3Vic2NyaXB0aW9uX2lkKSB7CiAgICAgIHZhciB2bSA9IHRoaXM7IC8vIHN0YXJ0X3BheW1lbnQoKXsKICAgICAgLy8gICB2YXIgdm0gPSB0aGlzOwogICAgICAvLyAgIHZhciBkYXRhID0gewogICAgICAvLyAgICAgb3JkZXJfYW1vdW50OiA1MDAwMCwKICAgICAgLy8gICAgIG9yZGVyX2N1cnJlbmN5OiAnSU5SJywKICAgICAgLy8gICAgIG9yZGVyX3JlY2VpcHQ6ICdvcmRlcl9yY3B0aWRfMTEnLAogICAgICAvLyAgICAgcGF5bWVudF9jYXB0dXJlOiAxLAogICAgICAvLyAgICAgbm90ZXM6IHsnU2hpcHBpbmcgYWRkcmVzcyc6ICdCb21tYW5haGFsbGksIEJhbmdhbG9yZSd9CiAgICAgIC8vICAgfQogICAgICAvLyAgIGF4aW9zLgogICAgICAvLyAgICAgcG9zdCgKICAgICAgLy8gICAgICAgYXBpX2NhbGxzLnJhem9ycGF5X2NvbW11bmNhdGlvbigpLAogICAgICAvLyAgICAgICB7CiAgICAgIC8vICAgICAgICAgZ2VuZXJhdGVfb3JkZXJfaWQ6IHRydWUsCiAgICAgIC8vICAgICAgICAgZGF0YTogZGF0YQogICAgICAvLyAgICAgICB9KS50aGVuKChyZXNwb25zZSkgPT4gewogICAgICAvLyAgICAgICBpZihyZXNwb25zZS5kYXRhLk1TRyA9PSAiT3JkZXIgSUQgY3JlYXRlZCIpewogICAgICAvLyAgICAgICAgIGNvbnNvbGUubG9nKHJlc3BvbnNlLmRhdGEuT3JkZXJfRGV0YWlsKTsKICAgICAgLy8gICAgICAgICB2bS5vcmRlcl9pZCA9IHJlc3BvbnNlLmRhdGEuT3JkZXJfRGV0YWlsLmlkOwogICAgICAvLyAgICAgICAgIHZtLmFtb3VudCA9IHJlc3BvbnNlLmRhdGEuT3JkZXJfRGV0YWlsLmFtb3VudDsKICAgICAgLy8gICAgICAgICBjb25zb2xlLmxvZygicmVhY2hlZCIpOwoKICAgICAgdmFyIG9wdGlvbnMgPSB7CiAgICAgICAga2V5OiBwcm9jZXNzLmVudi5WVUVfQVBQX1JBWk9SUEFZX0tFWSwKICAgICAgICAvLyBFbnRlciB0aGUgS2V5IElEIGdlbmVyYXRlZCBmcm9tIHRoZSBEYXNoYm9hcmQKICAgICAgICBzdWJzY3JpcHRpb25faWQ6IHN1YnNjcmlwdGlvbl9pZCwKICAgICAgICAvLyBZb3UgZG9udCBuZWVkIGFtb3VudC9jdXJyZW5jeS9vcmRlcl9pZCB3aGVuIHN1Ym1pdHRpbmcgc3Vic2NyaXB0aW9uIGlkCiAgICAgICAgLy8gImFtb3VudCI6IHRoaXMuYW1vdW50LCAvLyBBbW91bnQgaXMgaW4gY3VycmVuY3kgc3VidW5pdHMuIERlZmF1bHQgY3VycmVuY3kgaXMgSU5SLiBIZW5jZSwgNTAwMDAgcmVmZXJzIHRvIDUwMDAwIHBhaXNlCiAgICAgICAgLy8gImN1cnJlbmN5IjogIklOUiIsCiAgICAgICAgbmFtZTogIkNlbnNlIEFJIiwKICAgICAgICBkZXNjcmlwdGlvbjogIlRlc3QgVHJhbnNhY3Rpb24iLAogICAgICAgIGltYWdlOiByZXF1aXJlKCJAL3BvcnRhbC9hc3NldHMvaW1nL2NlbnNlX2xvZ28ucG5nIiksCiAgICAgICAgLy8gIm9yZGVyX2lkIjogdGhpcy5vcmRlcl9pZCwgLy9UaGlzIGlzIGEgc2FtcGxlIE9yZGVyIElELiBQYXNzIHRoZSBgaWRgIG9idGFpbmVkIGluIHRoZSByZXNwb25zZSBvZiBTdGVwIDEKICAgICAgICBoYW5kbGVyOiBmdW5jdGlvbiBoYW5kbGVyKHJlc3BvbnNlKSB7CiAgICAgICAgICAvLyBjb25zb2xlLmxvZygiRklOQUwgUEFZIiwgcmVzcG9uc2UpOwogICAgICAgICAgdmFyIHJhem9ycGF5X3BheW1lbnRfaWQgPSByZXNwb25zZS5yYXpvcnBheV9wYXltZW50X2lkOyAvLyB2YXIgcmF6b3JwYXlfb3JkZXJfaWQgPSByZXNwb25zZS5yYXpvcnBheV9vcmRlcl9pZDsKCiAgICAgICAgICB2YXIgcmF6b3JwYXlfc3Vic2NyaXB0aW9uX2lkID0gcmVzcG9uc2UucmF6b3JwYXlfc3Vic2NyaXB0aW9uX2lkOwogICAgICAgICAgdmFyIHJhem9ycGF5X3NpZ25hdHVyZSA9IHJlc3BvbnNlLnJhem9ycGF5X3NpZ25hdHVyZTsKICAgICAgICAgIHZtLnBheV9zdWNjZXNzX2RhdGEgPSB7fTsKICAgICAgICAgIHZtLnBheV9zdWNjZXNzX2RhdGEgPSB7CiAgICAgICAgICAgIHJhem9ycGF5X3BheW1lbnRfaWQ6IHJhem9ycGF5X3BheW1lbnRfaWQsCiAgICAgICAgICAgIC8vIHJhem9ycGF5X29yZGVyX2lkOiByYXpvcnBheV9vcmRlcl9pZCwKICAgICAgICAgICAgcmF6b3JwYXlfc3Vic2NyaXB0aW9uX2lkOiByYXpvcnBheV9zdWJzY3JpcHRpb25faWQsCiAgICAgICAgICAgIHJhem9ycGF5X3NpZ25hdHVyZTogcmF6b3JwYXlfc2lnbmF0dXJlLAogICAgICAgICAgICByYXpvcnBheV9jdXN0b21lcl9pZDogdm0uY3VzdG9tZXJfaWQsCiAgICAgICAgICAgIC8vIG9yZGVyX2lkOiB0aGlzLm9yZGVyX2lkLAogICAgICAgICAgICBzdWJzY3JpcHRpb25fc3RhdHVzOiAiYWN0aXZlIiwKICAgICAgICAgICAgc3Vic2NyaXB0aW9uX2lkOiB2bS5zdWJzY3JpcHRpb25faWQsCiAgICAgICAgICAgIHBsYW5faWQ6IHZtLnBsYW5faWQsCiAgICAgICAgICAgIHN1YnNjcmlwdGlvbl90eXBlOiB2bS5zZWxlY3RlZF9zdWJzY3JpcHRpb24sCiAgICAgICAgICAgIHN1YnNjcmlwdGlvbl9wZXJpb2Q6IHZtLnNlbGVjdGVkX3BlcmlvZAogICAgICAgICAgfTsgLy8gY29uc29sZS5sb2coIlBBWU1FTlQgU1VDQ0VTUyBEQVRBIix2bS5wYXlfc3VjY2Vzc19kYXRhKTsKCiAgICAgICAgICBpZiAoT2JqZWN0LmtleXModm0ucGF5X3N1Y2Nlc3NfZGF0YSkubGVuZ3RoICE9IDApIHsKICAgICAgICAgICAgdm0uYWRkX2RldGFpbHNfdG9fc2VydmVyKHZtLnBheV9zdWNjZXNzX2RhdGEpOwogICAgICAgICAgfSBlbHNlIHsvLyBjb25zb2xlLmxvZygiVHJhbnNhY3Rpb24gZGlkIG5vdCBzdWNjZWVkIik7CiAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICAvLyAicHJlZmlsbCI6IHsKICAgICAgICAvLyAgICAgIm5hbWUiOiAiR2F1cmF2IEt1bWFyIiwKICAgICAgICAvLyAgICAgImVtYWlsIjogImdhdXJhdi5rdW1hckBleGFtcGxlLmNvbSIsCiAgICAgICAgLy8gICAgICJjb250YWN0IjogIis5MTk4NzY1NDMyMTAiCiAgICAgICAgLy8gfSwKICAgICAgICBub3RlczogewogICAgICAgICAgYWRkcmVzczogIlJhem9ycGF5IENvcnBvcmF0ZSBPZmZpY2UiCiAgICAgICAgfSwKICAgICAgICB0aGVtZTogewogICAgICAgICAgY29sb3I6ICIjMzM5OWNjIgogICAgICAgIH0KICAgICAgfTsKICAgICAgdmFyIHJ6cDEgPSBuZXcgUmF6b3JwYXkob3B0aW9ucyk7CiAgICAgIHJ6cDEub24oInBheW1lbnQuZmFpbGVkIiwgZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgLy8gY29uc29sZS5sb2coImVycm9yIiwgcmVzcG9uc2UpOwogICAgICAgIGFsZXJ0KHJlc3BvbnNlLmVycm9yLmNvZGUpOwogICAgICAgIGFsZXJ0KHJlc3BvbnNlLmVycm9yLmRlc2NyaXB0aW9uKTsKICAgICAgICBhbGVydChyZXNwb25zZS5lcnJvci5zb3VyY2UpOwogICAgICAgIGFsZXJ0KHJlc3BvbnNlLmVycm9yLnN0ZXApOwogICAgICAgIGFsZXJ0KHJlc3BvbnNlLmVycm9yLnJlYXNvbik7CiAgICAgICAgYWxlcnQocmVzcG9uc2UuZXJyb3IubWV0YWRhdGEub3JkZXJfaWQpOwogICAgICAgIGFsZXJ0KHJlc3BvbnNlLmVycm9yLm1ldGFkYXRhLnBheW1lbnRfaWQpOwogICAgICB9KTsKICAgICAgcnpwMS5vcGVuKCk7IC8vIH0KICAgICAgLy8gfSkKICAgICAgLy8gLmNhdGNoKChlKSA9PiB7CiAgICAgIC8vICAgdGhpcy5zcGlubmVyT24gPSBmYWxzZTsKICAgICAgLy8gICAgIGlmICgKICAgICAgLy8gICAgICAgZS5yZXNwb25zZS5zdGF0dXMgPT09IDQxMCB8fAogICAgICAvLyAgICAgICBlLnJlc3BvbnNlLnN0YXR1cyA9PT0gNDQwIHx8CiAgICAgIC8vICAgICAgIGUucmVzcG9uc2Uuc3RhdHVzID09PSA0MDkKICAgICAgLy8gICAgICkgewogICAgICAvLyAgICAgICB0aGlzLiRyb290LiRlbWl0KCJTZXNzaW9uX0V4cGlyZWQiLCBlLnJlc3BvbnNlLmRhdGEpOwogICAgICAvLyAgICAgfQogICAgICAvLyAgIH0pOwogICAgfSwKICAgIGFkZF9kZXRhaWxzX3RvX3NlcnZlcjogZnVuY3Rpb24gYWRkX2RldGFpbHNfdG9fc2VydmVyKGRhdGEpIHsKICAgICAgdmFyIF90aGlzMTUgPSB0aGlzOwoKICAgICAgaWYgKGRhdGEgIT0gbnVsbCkgewogICAgICAgIGF4aW9zLnBvc3QoYXBpX2NhbGxzLnJhem9ycGF5X2NvbW11bmNhdGlvbigpLCB7CiAgICAgICAgICBjb21wYW55X2lkOiB0aGlzLmNvbXBhbnlpZCwKICAgICAgICAgIGNvbXBhbnlfbmFtZTogdGhpcy5jb21wYW55bmFtZSwKICAgICAgICAgIHZlcmlmeV9zdWJzY3JpcHRpb246IHRydWUsCiAgICAgICAgICBkYXRhOiBkYXRhCiAgICAgICAgfSkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICAgIGlmIChyZXNwb25zZS5kYXRhLm1lc3NhZ2UuTVNHX0NPREUgPT09IF90aGlzMTUuYXBpX3N0YXR1c19jb2RlLlNVQlNDUklQVElPTl9WRVJJRklDQVRJT05fU1VDQ0VTUy5NU0dfQ09ERSkgewogICAgICAgICAgICBTd2FsKHsKICAgICAgICAgICAgICB0aXRsZTogX3RoaXMxNS50bHQoJ2JpbGxpbmdfc3Vic2NyaXB0aW9uX3JlZ2lzdGVyX21zZycpLAogICAgICAgICAgICAgIHR5cGU6ICJzdWNjZXNzIiwKICAgICAgICAgICAgICB0aW1lcjogMjAwMAogICAgICAgICAgICB9KTsKICAgICAgICAgICAgX3RoaXMxNS5wYXlfc3VjY2Vzc19kYXRhID0ge307CiAgICAgICAgICAgIF90aGlzMTUuc3Vic2NyaXB0aW9uX2J0bl9kaXNhYmxlID0gZmFsc2U7CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBTd2FsKHsKICAgICAgICAgICAgICB0aXRsZTogX3RoaXMxNS50bHQoJ2JpbGxpbmdfaW50ZXJuYWxfc2VydmVyX21zZzQnKSwKICAgICAgICAgICAgICB0eXBlOiAiZXJyb3IiLAogICAgICAgICAgICAgIHRleHQ6IF90aGlzMTUudGx0KCdiaWxsaW5nX2Vycm9yX29jY3VyX3N1YnNjcmlwdGlvbl9tc2cnKSwKICAgICAgICAgICAgICB0b2FzdDogdHJ1ZSwKICAgICAgICAgICAgICB0aW1lcjogMjAwMAogICAgICAgICAgICB9KTsKICAgICAgICAgICAgX3RoaXMxNS5wYXlfc3VjY2Vzc19kYXRhID0ge307CiAgICAgICAgICB9CiAgICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKGUpIHsKICAgICAgICAgIGlmIChlLnJlc3BvbnNlLnN0YXR1cyA9PT0gNDEwIHx8IGUucmVzcG9uc2Uuc3RhdHVzID09PSA0NDAgfHwgZS5yZXNwb25zZS5zdGF0dXMgPT09IDQwOSkgewogICAgICAgICAgICBfdGhpczE1LiRyb290LiRlbWl0KCJTZXNzaW9uX0V4cGlyZWQiLCBlLnJlc3BvbnNlLmRhdGEpOwogICAgICAgICAgfQogICAgICAgIH0pOwogICAgICB9CiAgICB9LAogICAgLy8gdG9nZ2xlX2NoYW5nZSh2YWx1ZSkgewogICAgLy8gICBpZiAodmFsdWUgPT0gIklOUiIpIHsKICAgIC8vICAgICB0aGlzLmNvbW1vbl9jdXJyZW5jeSA9IHRoaXMuSU5SOwogICAgLy8gICB9IGVsc2UgewogICAgLy8gICAgIHRoaXMuY29tbW9uX2N1cnJlbmN5ID0gdGhpcy5VU0Q7CiAgICAvLyAgIH0KICAgIC8vICAgaWYgKHZhbHVlID09ICJJTlIiKSB7CiAgICAvLyAgICAgdGhpcy5jb21tb25fY3VycmVuY3kyID0gdGhpcy5JTlIyOwogICAgLy8gICB9IGVsc2UgewogICAgLy8gICAgIHRoaXMuY29tbW9uX2N1cnJlbmN5MiA9IHRoaXMuVVNEMjsKICAgIC8vICAgfQogICAgLy8gfSwKICAgIGRvd25sb2FkX2ludm9pY2U6IGZ1bmN0aW9uIGRvd25sb2FkX2ludm9pY2UobnVtKSB7CiAgICAgIHZhciBfdGhpczE2ID0gdGhpczsKCiAgICAgIHRoaXMuc3Bpbm5lck9uID0gdHJ1ZTsKICAgICAgYXhpb3MoewogICAgICAgIG1ldGhvZDogInBvc3QiLAogICAgICAgIHVybDogYXBpX2NhbGxzLmJpbGxpbmdfaW52b2ljZSgpLAogICAgICAgIHJlc3BvbnNlVHlwZTogImJsb2IiLAogICAgICAgIGRhdGE6IHsKICAgICAgICAgIGNvbXBhbnlfaWQ6IHRoaXMuJHNlc3Npb24uZ2V0KCJVc2VySW5mb3JtYXRpb24iKS5jb21wYW55X2lkLAogICAgICAgICAgY29tcGFueV9uYW1lOiB0aGlzLiRzZXNzaW9uLmdldCgiVXNlckluZm9ybWF0aW9uIikuY29tcGFueV9uYW1lLAogICAgICAgICAgZW1haWw6IHRoaXMuJHNlc3Npb24uZ2V0KCJVc2VySW5mb3JtYXRpb24iKS5lbWFpbCwKICAgICAgICAgIGxpY2Vuc2Vfa2V5OiB0aGlzLiRzZXNzaW9uLmdldCgiVXNlckluZm9ybWF0aW9uIikubGljZW5zZV9rZXksCiAgICAgICAgICB0b2tlbjogdGhpcy4kc2Vzc2lvbi5nZXQoIlVzZXJJbmZvcm1hdGlvbiIpLnRva2VucywKICAgICAgICAgIGRvd25sb2FkX2ZpbGU6IHRydWUsCiAgICAgICAgICBmaWxlX25hbWU6IHRoaXMuaW52b2ljZV9kZXRhaWxzW251bV0KICAgICAgICB9LAogICAgICAgIGhlYWRlcnM6IHsKICAgICAgICAgIEF1dGhvcml6YXRpb246ICJCZWFyZXIgIi5jb25jYXQodGhpcy4kc2Vzc2lvbi5nZXQoImF0IikpCiAgICAgICAgfQogICAgICB9KS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgIF90aGlzMTYuc3Bpbm5lck9uID0gZmFsc2U7CgogICAgICAgIGlmIChyZXNwb25zZS5kYXRhLm1lc3NhZ2UuTVNHX0NPREUgPT09IF90aGlzMTYuYXBpX3N0YXR1c19jb2RlLklOVEVSTkFMX1NFUlZFUl9FUlJPUi5NU0dfQ09ERSkgewogICAgICAgICAgX3RoaXMxNi5zcGlubmVyT24gPSBmYWxzZTsKICAgICAgICAgIHRvYXN0ci5lcnJvcihfdGhpczE2LnRsdCgnYmlsbGluZ19kb3dubG9hZF9pbnZvaWNlX21zZycpKTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgX3RoaXMxNi5zcGlubmVyT24gPSBmYWxzZTsKICAgICAgICAgIHZhciB1cmwgPSB3aW5kb3cuVVJMLmNyZWF0ZU9iamVjdFVSTChuZXcgQmxvYihbcmVzcG9uc2UuZGF0YS5kYXRhXSkpOwogICAgICAgICAgdmFyIGxpbmsgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJhIik7CiAgICAgICAgICBsaW5rLmhyZWYgPSB1cmw7CiAgICAgICAgICBsaW5rLnNldEF0dHJpYnV0ZSgiZG93bmxvYWQiLCAiQXNoaXNoIiArICIucGRmIik7CiAgICAgICAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKGxpbmspOwogICAgICAgICAgbGluay5jbGljaygpOwogICAgICAgIH0KICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKGUpIHsKICAgICAgICBpZiAoZS5yZXNwb25zZS5zdGF0dXMgPT09IDQxMCB8fCBlLnJlc3BvbnNlLnN0YXR1cyA9PT0gNDQwIHx8IGUucmVzcG9uc2Uuc3RhdHVzID09PSA0MDkpIHsKICAgICAgICAgIF90aGlzMTYuJHJvb3QuJGVtaXQoIlNlc3Npb25fRXhwaXJlZCIsIGUucmVzcG9uc2UuZGF0YSk7CiAgICAgICAgfQogICAgICB9KTsKICAgIH0sCiAgICBjYWxsX3BheW1lbnQ6IGZ1bmN0aW9uIGNhbGxfcGF5bWVudCh0eXBlKSB7CiAgICAgIHZhciBfdGhpczE3ID0gdGhpczsKCiAgICAgIHZhciBkID0gbmV3IERhdGUoKTsgLy8gY29uc29sZS5sb2coZCk7CgogICAgICB2YXIgdm0gPSB0aGlzOwogICAgICB2YXIgb3B0aW9ucyA9IHt9OwoKICAgICAgaWYgKHR5cGUgPT0gImNvdW50cnlfc2VsZWN0ZWQiKSB7CiAgICAgICAgaWYgKHRoaXMuY291bnRyeV9uYW1lLmNvZGUgPT0gIiIpIHsKICAgICAgICAgIGFsZXJ0KHRoaXMudGx0KCdiaWxsaW5nX3NlbGVjdF9jb3VudHJ5X21zZycpKTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgdGhpcy5zcGlubmVyT24gPSB0cnVlOwogICAgICAgICAgYXhpb3MucG9zdChhcGlfY2FsbHMuZWRpdF9wcm9maWxlX3VybCgpLCB7CiAgICAgICAgICAgIGNvbXBhbnlfaWQ6IHRoaXMuJHNlc3Npb24uZ2V0KCJVc2VySW5mb3JtYXRpb24iKS5jb21wYW55X2lkLAogICAgICAgICAgICBjb21wYW55X25hbWU6IHRoaXMuJHNlc3Npb24uZ2V0KCJVc2VySW5mb3JtYXRpb24iKS5jb21wYW55X25hbWUsCiAgICAgICAgICAgIGVtYWlsOiB0aGlzLiRzZXNzaW9uLmdldCgiVXNlckluZm9ybWF0aW9uIikuZW1haWwsCiAgICAgICAgICAgIGxpY2Vuc2Vfa2V5OiB0aGlzLiRzZXNzaW9uLmdldCgiVXNlckluZm9ybWF0aW9uIikubGljZW5zZV9rZXksCiAgICAgICAgICAgIHRva2VuOiB0aGlzLiRzZXNzaW9uLmdldCgiVXNlckluZm9ybWF0aW9uIikudG9rZW5zLAogICAgICAgICAgICBmaXJzdF9uYW1lOiB0aGlzLiRzZXNzaW9uLmdldCgiVXNlckluZm9ybWF0aW9uIikuZmlyc3RfbmFtZSwKICAgICAgICAgICAgbGFzdF9uYW1lOiB0aGlzLiRzZXNzaW9uLmdldCgiVXNlckluZm9ybWF0aW9uIikubGFzdF9uYW1lLAogICAgICAgICAgICBjb3VudHJ5X25hbWU6IHRoaXMuY291bnRyeV9uYW1lLmNvZGUsCiAgICAgICAgICAgIHBob25lX251bWJlcjogdGhpcy4kc2Vzc2lvbi5nZXQoIlVzZXJJbmZvcm1hdGlvbiIpLnBob25lX25vCiAgICAgICAgICB9LCB7CiAgICAgICAgICAgIGhlYWRlcnM6IHsKICAgICAgICAgICAgICBBdXRob3JpemF0aW9uOiAiQmVhcmVyICIuY29uY2F0KHRoaXMuJHNlc3Npb24uZ2V0KCJhdCIpKQogICAgICAgICAgICB9CiAgICAgICAgICB9KS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgICAgICBfdGhpczE3LnNwaW5uZXJPbiA9IGZhbHNlOwoKICAgICAgICAgICAgaWYgKHJlc3BvbnNlLmRhdGEubWVzc2FnZS5NU0dfQ09ERSA9PT0gX3RoaXMxNy5hcGlfc3RhdHVzX2NvZGUuUFJPRklMRV9VUERBVEVELk1TR19DT0RFKSB7CiAgICAgICAgICAgICAgLy8gICBTd2FsKHsKICAgICAgICAgICAgICAvLyAgIHRpdGxlOiAiVXBkYXRlZCBTdWNjZXNzZnVsbHkhISIsCiAgICAgICAgICAgICAgLy8gICB0eXBlOiAic3VjY2VzcyIsCiAgICAgICAgICAgICAgLy8gICB0ZXh0OiAiWW91ciBwcm9maWxlIGhhcyBiZWVuIHVwZGF0ZWQgc3VjY2Vzc2Z1bGx5LiIsCiAgICAgICAgICAgICAgLy8gICB0aW1lcjoyMDAwLAogICAgICAgICAgICAgIC8vIH0pOwogICAgICAgICAgICAgIHRvYXN0ci5zdWNjZXNzKF90aGlzMTcudGx0KCdiaWxsaW5nX3Byb2ZpbGVfdXBkYXRlZF9tc2cnKSk7CgogICAgICAgICAgICAgIF90aGlzMTcuJHNlc3Npb24uc2V0KCJjb3VudHJ5X25hbWUiLCBfdGhpczE3LmNvdW50cnlfbmFtZS5jb2RlKTsKCiAgICAgICAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgICBfdGhpczE3LiRyb3V0ZXIuZ28oKTsKICAgICAgICAgICAgICB9LCAyNTAwKTsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgJCgiI2NvdW50cnltb2RhbCIpLm1vZGFsKCJoaWRlIik7CiAgICAgICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZSkgewogICAgICAgICAgICBpZiAoZS5yZXNwb25zZS5zdGF0dXMgPT09IDQxMCB8fCBlLnJlc3BvbnNlLnN0YXR1cyA9PT0gNDQwIHx8IGUucmVzcG9uc2Uuc3RhdHVzID09PSA0MDkpIHsKICAgICAgICAgICAgICBfdGhpczE3LiRyb290LiRlbWl0KCJTZXNzaW9uX0V4cGlyZWQiLCBlLnJlc3BvbnNlLmRhdGEpOwogICAgICAgICAgICB9CiAgICAgICAgICB9KTsKICAgICAgICB9CiAgICAgIH0gZWxzZSBpZiAoZXZlbnQudGFyZ2V0LmlubmVyVGV4dCA9PSAiUGF5IikgewogICAgICAgIGlmICh0aGlzLnZhbHVlX2N1cnJlbmN5X3RvcF91cCA9PSAiIikgewogICAgICAgICAgdG9hc3RyLmVycm9yKHRoaXMudGx0KCdiaWxsaW5nX3NlbGVjdF9hbW91bnRfbXNnMScpKTsKICAgICAgICB9IGVsc2UgaWYgKHRoaXMucGF5bWVudF9jdXJyZW5jeSA9PSAiSU5SIikgewogICAgICAgICAgdGhpcy52YWx1ZV9jdXJyZW5jeV90b3BfdXAgPSB0aGlzLnZhbHVlX2N1cnJlbmN5X3RvcF91cC5zbGljZSgyLCAtMTApOwogICAgICAgICAgdGhpcy5jdXJyZW5jeV9hbW91bnQgPSB0aGlzLnZhbHVlX2N1cnJlbmN5X3RvcF91cCAqIDExODsKICAgICAgICAgIHRoaXMudG9wX3VwX2Ftb3VudCA9IHRoaXMudmFsdWVfY3VycmVuY3lfdG9wX3VwOwoKICAgICAgICAgIGlmICh0aGlzLnBheW1lbnRfY3VycmVuY3kgPT0gIklOUiIpIHsKICAgICAgICAgICAgdGhpcy50b3BfdXBfYW1vdW50IC89IDcwOwogICAgICAgICAgfQoKICAgICAgICAgIHBheV9hbW91bnQodGhpcy5jdXJyZW5jeV9hbW91bnQsIHRoaXMucGF5bWVudF9jdXJyZW5jeSwgIlRvcCBVcCIpOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICB0aGlzLnZhbHVlX2N1cnJlbmN5X3RvcF91cCA9IHRoaXMudmFsdWVfY3VycmVuY3lfdG9wX3VwLnNsaWNlKDIpOwogICAgICAgICAgdGhpcy5jdXJyZW5jeV9hbW91bnQgPSB0aGlzLnZhbHVlX2N1cnJlbmN5X3RvcF91cCAqIDEwMDsKICAgICAgICAgIHRoaXMudG9wX3VwX2Ftb3VudCA9IHRoaXMudmFsdWVfY3VycmVuY3lfdG9wX3VwOwogICAgICAgICAgcGF5X2Ftb3VudCh0aGlzLmN1cnJlbmN5X2Ftb3VudCwgdGhpcy5wYXltZW50X2N1cnJlbmN5LCAiVG9wIFVwIik7CiAgICAgICAgfQogICAgICB9IGVsc2UgaWYgKGV2ZW50LnRhcmdldC5pbm5lclRleHQgPT0gIlN1YnNjcmliZSIpIHsKICAgICAgICB0aGlzLnNwaW5uZXJPbiA9IHRydWU7CgogICAgICAgIGlmICh0aGlzLnZhbHVlX2N1cnJlbmN5X3N1YnNjcmlwdGlvbiA9PSAiIikgewogICAgICAgICAgdG9hc3RyLmVycm9yKHRoaXMudGx0KCdiaWxsaW5nX3NlbGVjdF9hbW91bnRfbXNnMicpKTsKICAgICAgICB9IGVsc2UgaWYgKHRoaXMucGF5bWVudF9jdXJyZW5jeSA9PSAiSU5SIikgewogICAgICAgICAgdGhpcy52YWx1ZV9jdXJyZW5jeV9zdWJzY3JpcHRpb24gPSB0aGlzLnZhbHVlX2N1cnJlbmN5X3N1YnNjcmlwdGlvbi5zbGljZSgyLCAtMTApOwogICAgICAgICAgdGhpcy5jdXJyZW5jeV9hbW91bnQgPSB0aGlzLnZhbHVlX2N1cnJlbmN5X3N1YnNjcmlwdGlvbiAqIDExODsKICAgICAgICAgIHRoaXMudG9wX3VwX2Ftb3VudCA9IHRoaXMudmFsdWVfY3VycmVuY3lfc3Vic2NyaXB0aW9uOwoKICAgICAgICAgIGlmICh0aGlzLnBheW1lbnRfY3VycmVuY3kgPT0gIklOUiIpIHsKICAgICAgICAgICAgdGhpcy50b3BfdXBfYW1vdW50IC89IDcwOwogICAgICAgICAgfQoKICAgICAgICAgIGF4aW9zLnBvc3QoYXBpX2NhbGxzLmJpbGxpbmdfc3Vic2NyaXB0aW9uX3VybCgpLCB7CiAgICAgICAgICAgIGNvbXBhbnlfaWQ6IHRoaXMuJHNlc3Npb24uZ2V0KCJVc2VySW5mb3JtYXRpb24iKS5jb21wYW55X2lkLAogICAgICAgICAgICBjb21wYW55X25hbWU6IHRoaXMuJHNlc3Npb24uZ2V0KCJVc2VySW5mb3JtYXRpb24iKS5jb21wYW55X25hbWUsCiAgICAgICAgICAgIGVtYWlsOiB0aGlzLiRzZXNzaW9uLmdldCgiVXNlckluZm9ybWF0aW9uIikuZW1haWwsCiAgICAgICAgICAgIGxpY2Vuc2Vfa2V5OiB0aGlzLiRzZXNzaW9uLmdldCgiVXNlckluZm9ybWF0aW9uIikubGljZW5zZV9rZXksCiAgICAgICAgICAgIHRva2VuOiB0aGlzLiRzZXNzaW9uLmdldCgiVXNlckluZm9ybWF0aW9uIikudG9rZW5zLAogICAgICAgICAgICBQbGFuQW1vdW50OiB0aGlzLnRvcF91cF9hbW91bnQKICAgICAgICAgIH0sIHsKICAgICAgICAgICAgaGVhZGVyczogewogICAgICAgICAgICAgIEF1dGhvcml6YXRpb246ICJCZWFyZXIgIi5jb25jYXQodGhpcy4kc2Vzc2lvbi5nZXQoImF0IikpCiAgICAgICAgICAgIH0KICAgICAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgICAgIGlmIChyZXNwb25zZS5kYXRhLlN1YnNjcmlwdGlvbklkKSB7CiAgICAgICAgICAgICAgcGF5X2Ftb3VudChyZXNwb25zZS5kYXRhLlN1YnNjcmlwdGlvbklkLCAiIiwgIlN1YnNjcmliZSIpOwogICAgICAgICAgICB9IGVsc2UgaWYgKHJlc3BvbnNlLmRhdGEuRXJyb3IpIHsKICAgICAgICAgICAgICB0b2FzdHIuZXJyb3IocmVzcG9uc2UuZGF0YS5FcnJvcik7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uIChlKSB7CiAgICAgICAgICAgIGlmIChlLnJlc3BvbnNlLnN0YXR1cyA9PT0gNDEwIHx8IGUucmVzcG9uc2Uuc3RhdHVzID09PSA0NDAgfHwgZS5yZXNwb25zZS5zdGF0dXMgPT09IDQwOSkgewogICAgICAgICAgICAgIF90aGlzMTcuJHJvb3QuJGVtaXQoIlNlc3Npb25fRXhwaXJlZCIsIGUucmVzcG9uc2UuZGF0YSk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0pOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICB0aGlzLnZhbHVlX2N1cnJlbmN5X3N1YnNjcmlwdGlvbiA9IHRoaXMudmFsdWVfY3VycmVuY3lfc3Vic2NyaXB0aW9uLnNsaWNlKDIpOwogICAgICAgICAgdGhpcy5jdXJyZW5jeV9hbW91bnQgPSB0aGlzLnZhbHVlX2N1cnJlbmN5X3N1YnNjcmlwdGlvbiAqIDEwMDsKICAgICAgICAgIHRoaXMudG9wX3VwX2Ftb3VudCA9IHRoaXMudmFsdWVfY3VycmVuY3lfc3Vic2NyaXB0aW9uOwogICAgICAgICAgdGhpcy5zcGlubmVyT24gPSB0cnVlOwogICAgICAgICAgYXhpb3MucG9zdChhcGlfY2FsbHMuYmlsbGluZ19zdWJzY3JpcHRpb25fdXJsKCksIHsKICAgICAgICAgICAgY29tcGFueV9pZDogdGhpcy4kc2Vzc2lvbi5nZXQoIlVzZXJJbmZvcm1hdGlvbiIpLmNvbXBhbnlfaWQsCiAgICAgICAgICAgIGNvbXBhbnlfYm90bmFtZTogdGhpcy4kc2Vzc2lvbi5nZXQoIlVzZXJJbmZvcm1hdGlvbiIpLmNvbXBhbnlfbmFtZSwKICAgICAgICAgICAgZW1haWw6IHRoaXMuJHNlc3Npb24uZ2V0KCJVc2VySW5mb3JtYXRpb24iKS5lbWFpbCwKICAgICAgICAgICAgbGljZW5zZV9rZXk6IHRoaXMuJHNlc3Npb24uZ2V0KCJVc2VySW5mb3JtYXRpb24iKS5saWNlbnNlX2tleSwKICAgICAgICAgICAgdG9rZW46IHRoaXMuJHNlc3Npb24uZ2V0KCJVc2VySW5mb3JtYXRpb24iKS50b2tlbnMsCiAgICAgICAgICAgIFBsYW5BbW91bnQ6IHRoaXMuY3VycmVuY3lfYW1vdW50CiAgICAgICAgICB9LCB7CiAgICAgICAgICAgIGhlYWRlcnM6IHsKICAgICAgICAgICAgICBBdXRob3JpemF0aW9uOiAiQmVhcmVyICIuY29uY2F0KHRoaXMuJHNlc3Npb24uZ2V0KCJhdCIpKQogICAgICAgICAgICB9CiAgICAgICAgICB9KS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgICAgICBfdGhpczE3LnNwaW5uZXJPbiA9IGZhbHNlOwoKICAgICAgICAgICAgaWYgKHJlc3BvbnNlLmRhdGEuU3Vic2NyaXB0aW9uSWQpIHsKICAgICAgICAgICAgICBwYXlfYW1vdW50KHJlc3BvbnNlLmRhdGEuU3Vic2NyaXB0aW9uSWQsICIiLCAiU3Vic2NyaWJlIik7CiAgICAgICAgICAgIH0gZWxzZSBpZiAocmVzcG9uc2UuZGF0YS5FcnJvcikgewogICAgICAgICAgICAgIHRvYXN0ci5lcnJvcihyZXNwb25zZS5kYXRhLkVycm9yKTsKICAgICAgICAgICAgfQogICAgICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKGUpIHsKICAgICAgICAgICAgaWYgKGUucmVzcG9uc2Uuc3RhdHVzID09PSA0MTAgfHwgZS5yZXNwb25zZS5zdGF0dXMgPT09IDQ0MCB8fCBlLnJlc3BvbnNlLnN0YXR1cyA9PT0gNDA5KSB7CiAgICAgICAgICAgICAgX3RoaXMxNy4kcm9vdC4kZW1pdCgiU2Vzc2lvbl9FeHBpcmVkIiwgZS5yZXNwb25zZS5kYXRhKTsKICAgICAgICAgICAgfQogICAgICAgICAgfSk7CiAgICAgICAgfQogICAgICB9CgogICAgICBmdW5jdGlvbiBwYXlfYW1vdW50KGFtb3VudCwgY3VycmVuY3lfdHlwZSwgcGF5bWVudF90eXBlKSB7CiAgICAgICAgaWYgKHBheW1lbnRfdHlwZSA9PSAiU3Vic2NyaWJlIikgewogICAgICAgICAgb3B0aW9ucyA9IHsKICAgICAgICAgICAga2V5OiAicnpwX3Rlc3RfU25EVGFQbm5jZmxpRHQiLAogICAgICAgICAgICBzdWJzY3JpcHRpb25faWQ6IGFtb3VudCwKICAgICAgICAgICAgLy9UaGlzIGlzIGFjdHVhbGx5IHN1YnNjcmlwdGlvbiBJRAogICAgICAgICAgICAvLyBzdWJzY3JpcHRpb25fY2FyZF9jaGFuZ2U6IDEsCiAgICAgICAgICAgIG5hbWU6ICJDZW5zZSBBSSIsCiAgICAgICAgICAgIGRlc2NyaXB0aW9uOiAiSW5zdGlsbCBJbnRlbGxpZ2VuY2UiLAogICAgICAgICAgICBpbWFnZTogIi9pbWcvY2Vuc2VfaW1hZ2UucG5nIiwKICAgICAgICAgICAgLy8gQ09NUEFOWSBMT0dPCiAgICAgICAgICAgIGhhbmRsZXI6IGZ1bmN0aW9uIGhhbmRsZXIocmVzcG9uc2UpIHsKICAgICAgICAgICAgICAvLyBjb25zb2xlLmxvZyhyZXNwb25zZS5yYXpvcnBheV9wYXltZW50X2lkKTsKICAgICAgICAgICAgICAvLyB2YXIgY29udGFjdCA9ICQoJyNjb250YWN0W3R5cGU9InRlbCJdJykudmFsdWU7CiAgICAgICAgICAgICAgLy8gdmFyIGVtYWlsID0gJCgnI2VtYWlsW3R5cGU9ImVtYWlsIl0nKS52YWx1ZTsKICAgICAgICAgICAgICB2bS5wYXltZW50aWQgPSByZXNwb25zZS5yYXpvcnBheV9wYXltZW50X2lkOwogICAgICAgICAgICAgIHZtLnZhbHVlX2N1cnJlbmN5X3N1YnNjcmlwdGlvbiA9ICIiOwogICAgICAgICAgICB9LAogICAgICAgICAgICBwcmVmaWxsOiB7CiAgICAgICAgICAgICAgbmFtZTogIiIsCiAgICAgICAgICAgICAgLy8gcGFzcyBjdXN0b21lciBuYW1lCiAgICAgICAgICAgICAgZW1haWw6ICIiLAogICAgICAgICAgICAgIC8vIGN1c3RvbWVyIGVtYWlsCiAgICAgICAgICAgICAgY29udGFjdDogIiIgLy9jdXN0b21lciBwaG9uZSBuby4KCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIG5vdGVzOiB7CiAgICAgICAgICAgICAgYWRkcmVzczogImFkZHJlc3MiIC8vY3VzdG9tZXIgYWRkcmVzcwoKICAgICAgICAgICAgfSwKICAgICAgICAgICAgdGhlbWU6IHsKICAgICAgICAgICAgICBjb2xvcjogIiMyODM3NzciIC8vIHNjcmVlbiBjb2xvcgoKICAgICAgICAgICAgfQogICAgICAgICAgfTsKICAgICAgICAgIGxvYWRfY2hlY2tvdXQoKTsKICAgICAgICB9IGVsc2UgaWYgKHBheW1lbnRfdHlwZSA9PSAiUGF5IikgewogICAgICAgICAgb3B0aW9ucyA9IHsKICAgICAgICAgICAga2V5OiAicnpwX3Rlc3RfU25EVGFQbm5jZmxpRHQiLAogICAgICAgICAgICBhbW91bnQ6IGFtb3VudCwKICAgICAgICAgICAgLy8gRXhhbXBsZTogMjAwMCBwYWlzZSA9IElOUiAyMAogICAgICAgICAgICBjdXJyZW5jeTogY3VycmVuY3lfdHlwZSwKICAgICAgICAgICAgbmFtZTogIkNlbnNlIEFJIiwKICAgICAgICAgICAgZGVzY3JpcHRpb246ICJJbnN0aWxsIEludGVsbGlnZW5jZSIsCiAgICAgICAgICAgIGltYWdlOiAiL2ltZy9jZW5zZV9pbWFnZS5wbmciLAogICAgICAgICAgICAvLyBDT01QQU5ZIExPR08KICAgICAgICAgICAgaGFuZGxlcjogZnVuY3Rpb24gaGFuZGxlcihyZXNwb25zZSkgewogICAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKHJlc3BvbnNlLnJhem9ycGF5X3BheW1lbnRfaWQpOwogICAgICAgICAgICAgIHZhciBjb250YWN0ID0gJCgnI2NvbnRhY3RbdHlwZT0idGVsIl0nKS52YWx1ZTsKICAgICAgICAgICAgICB2YXIgZW1haWwgPSAkKCcjZW1haWxbdHlwZT0iZW1haWwiXScpLnZhbHVlOwogICAgICAgICAgICAgIHZtLnBheW1lbnRpZCA9IHJlc3BvbnNlLnJhem9ycGF5X3BheW1lbnRfaWQ7CiAgICAgICAgICAgICAgdm0udmFsdWVfY3VycmVuY3lfdG9wX3VwID0gIiI7CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIHByZWZpbGw6IHsKICAgICAgICAgICAgICBuYW1lOiAiIiwKICAgICAgICAgICAgICAvLyBwYXNzIGN1c3RvbWVyIG5hbWUKICAgICAgICAgICAgICBlbWFpbDogIiIsCiAgICAgICAgICAgICAgLy8gY3VzdG9tZXIgZW1haWwKICAgICAgICAgICAgICBjb250YWN0OiAiIiAvL2N1c3RvbWVyIHBob25lIG5vLgoKICAgICAgICAgICAgfSwKICAgICAgICAgICAgbm90ZXM6IHsKICAgICAgICAgICAgICBhZGRyZXNzOiAiYWRkcmVzcyIgLy9jdXN0b21lciBhZGRyZXNzCgogICAgICAgICAgICB9LAogICAgICAgICAgICB0aGVtZTogewogICAgICAgICAgICAgIGNvbG9yOiAiIzI4Mzc3NyIgLy8gc2NyZWVuIGNvbG9yCgogICAgICAgICAgICB9CiAgICAgICAgICB9OwogICAgICAgICAgbG9hZF9jaGVja291dCgpOwogICAgICAgIH0KICAgICAgfQoKICAgICAgZnVuY3Rpb24gbG9hZF9jaGVja291dCgpIHsKICAgICAgICB2YXIgcnpwMSA9IG5ldyBSYXpvcnBheShvcHRpb25zKTsKICAgICAgICByenAxLm9wZW4oKTsKICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpOwogICAgICB9CiAgICB9LAogICAgY2hlY2tfcmV0YWlsX3BsYW46IGZ1bmN0aW9uIGNoZWNrX3JldGFpbF9wbGFuKHZhbHVlLCBpZCkgewogICAgICB0aGlzLnJldGFpbF9wYXltZW50X3R5cGUgPSBudWxsOwogICAgfSwKICAgIHN1YnNjcmliZV9yZXRhaWxfcGxhbjogZnVuY3Rpb24gc3Vic2NyaWJlX3JldGFpbF9wbGFuKCkgewogICAgICB2YXIgX3RoaXMxOCA9IHRoaXM7CgogICAgICAvLyBsZXQgc3Vic2NyaXB0aW9uX2RhdGEgPSB7CiAgICAgIC8vICAgc3Vic2NyaXB0aW9uX3BsYW46IHRoaXMucmV0YWlsX3BsYW5fY3VycmVudCwKICAgICAgLy8gICBiaWxsaW5nX2N5Y2xlOiB0aGlzLnJldGFpbF9wYXltZW50X3R5cGUsCiAgICAgIC8vIH07CiAgICAgIGlmICh0aGlzLmNoZWNrX3JldGFpbF9zaG9waWZ5X2Zvcm1fdmFsaWRhdGlvbnMpIHsKICAgICAgICB0aGlzLnNwaW5uZXJPbiA9IHRydWU7CiAgICAgICAgYXhpb3MucG9zdChhcGlfY2FsbHMuc3Vic2NyaWJlX3Nob3BpZnlfYmlsbGluZygpLCB7CiAgICAgICAgICBzdWJzY3JpcHRpb25fcGxhbjogdGhpcy5yZXRhaWxfcGxhbl9jdXJyZW50LAogICAgICAgICAgYmlsbGluZ19jeWNsZTogdGhpcy5yZXRhaWxfcGF5bWVudF90eXBlLAogICAgICAgICAgY29tcGFueV9pZDogdGhpcy5jb21wYW55aWQsCiAgICAgICAgICBjb21wYW55X25hbWU6IHRoaXMuY29tcGFueW5hbWUsCiAgICAgICAgICBpc19wYWlkX3BsYW46IHRoaXMucmV0YWlsX3BsYW5fY3VycmVudC5pc19jaGFyZ2VhYmxlLAogICAgICAgICAgZW1haWw6IHRoaXMuJHNlc3Npb24uZ2V0KCJVc2VySW5mb3JtYXRpb24iKS5lbWFpbAogICAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgICBfdGhpczE4LnNwaW5uZXJPbiA9IGZhbHNlOwoKICAgICAgICAgIGlmIChyZXNwb25zZS5kYXRhLm1lc3NhZ2UuTVNHX0NPREUgPT09IF90aGlzMTguYXBpX3N0YXR1c19jb2RlLlNUQVRVU19TVUNDRVNTX01PREVMUy5NU0dfQ09ERSkgewogICAgICAgICAgICBpZiAoX3RoaXMxOC5yZXRhaWxfcGF5bWVudF90eXBlID09ICJBbm51YWwiKSB7CiAgICAgICAgICAgICAgaWYgKEJvb2xlYW4ocmVzcG9uc2UuZGF0YS5kYXRhKSAmJiBCb29sZWFuKHJlc3BvbnNlLmRhdGEuZGF0YS5kYXRhLmFwcFN1YnNjcmlwdGlvbkNyZWF0ZSkpIHsKICAgICAgICAgICAgICAgIFN3YWwoewogICAgICAgICAgICAgICAgICB0aXRsZTogX3RoaXMxOC50bHQoJ2JpbGxpbmdfcmVkaXJlY3Rfc2hvcGlmeV9tZXJjaGFudF9tc2cnKSwKICAgICAgICAgICAgICAgICAgdG9hc3Q6IHRydWUsCiAgICAgICAgICAgICAgICAgIHNob3dDYW5jZWxCdXR0b246IGZhbHNlLAogICAgICAgICAgICAgICAgICB0eXBlOiAiaW5mbyIsCiAgICAgICAgICAgICAgICAgIHNob3dDb25maXJtQnV0dG9uOiBmYWxzZQogICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgICAgICAgd2luZG93LmxvY2F0aW9uID0gcmVzcG9uc2UuZGF0YS5kYXRhLmRhdGEuYXBwU3Vic2NyaXB0aW9uQ3JlYXRlLmNvbmZpcm1hdGlvblVybDsKICAgICAgICAgICAgICAgIH0sIDEwMDApOwoKICAgICAgICAgICAgICAgIF90aGlzMTguJHJvb3QuJGVtaXQoIkRhc2hib2FyZFNpZGViYXJEaXNhYmxlIiwgZmFsc2UpOwoKICAgICAgICAgICAgICAgIF90aGlzMTguJHNlc3Npb24uc2V0KCJTZXR0aW5nVG9wbmF2YmFyRGlzYWJsZSIsIGZhbHNlKTsKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0gZWxzZSBpZiAoX3RoaXMxOC5yZXRhaWxfcGF5bWVudF90eXBlID09ICJNb250aGx5IikgewogICAgICAgICAgICAgIGlmIChCb29sZWFuKHJlc3BvbnNlLmRhdGEuZGF0YS5jb25maXJtYXRpb25fdXJsKSkgewogICAgICAgICAgICAgICAgLy8gU3dhbCh7CiAgICAgICAgICAgICAgICAvLyAgIHRpdGxlOiAiUGxlYXNlIHdhaXQgd2hpbGUgd2UgcmVkaXJlY3QgWW91IHRvIHRoZSBTaG9waWZ5IE1lcmNoYW50IFVJISIsCiAgICAgICAgICAgICAgICAvLyAgIHRvYXN0OiB0cnVlLAogICAgICAgICAgICAgICAgLy8gICB0eXBlOiAiaW5mbyIsCiAgICAgICAgICAgICAgICAvLyAgIHNob3dDYW5jZWxCdXR0b246IGZhbHNlLAogICAgICAgICAgICAgICAgLy8gICBzaG93Q29uZmlybUJ1dHRvbjogZmFsc2UKICAgICAgICAgICAgICAgIC8vIH0pCiAgICAgICAgICAgICAgICBfdGhpczE4LiRyb290LiRlbWl0KCJEYXNoYm9hcmRTaWRlYmFyRGlzYWJsZSIsIGZhbHNlKTsKCiAgICAgICAgICAgICAgICBfdGhpczE4LiRzZXNzaW9uLnNldCgiU2V0dGluZ1RvcG5hdmJhckRpc2FibGUiLCBmYWxzZSk7CgogICAgICAgICAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgICAgIHdpbmRvdy5sb2NhdGlvbiA9IHJlc3BvbnNlLmRhdGEuZGF0YS5jb25maXJtYXRpb25fdXJsOwogICAgICAgICAgICAgICAgfSwgMTAwMCk7CiAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIFN3YWwoewogICAgICAgICAgICAgICAgICB0aXRsZTogX3RoaXMxOC50bHQoJ2JpbGxpbmdfZXJyb3Jfb2NjdXJyZWRfbXNnNScpLAogICAgICAgICAgICAgICAgICB0ZXh0OiBfdGhpczE4LnRsdCgnYmlsbGluZ19zd2FsX3RyeV9hZ2Fpbl9tc2cxJyksCiAgICAgICAgICAgICAgICAgIHR5cGU6ICJlcnJvciIsCiAgICAgICAgICAgICAgICAgIHNob3dDYW5jZWxCdXR0b246IGZhbHNlCiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0gZWxzZSBpZiAoX3RoaXMxOC5yZXRhaWxfcGxhbl9jdXJyZW50LmlzX2NoYXJnZWFibGUgPT09IGZhbHNlKSB7CiAgICAgICAgICAgICAgU3dhbCh7CiAgICAgICAgICAgICAgICB0aXRsZTogX3RoaXMxOC50bHQoJ2JpbGxpbmdfc3dhbF9zdWNjZXNzX21zZycpLAogICAgICAgICAgICAgICAgdHlwZTogInN1Y2Nlc3MiLAogICAgICAgICAgICAgICAgdGV4dDogX3RoaXMxOC50bHQoJ2JpbGxpbmdfc3Vic2NyaWJlX2ZyZWVfcGxhbl9tc2cnKQogICAgICAgICAgICAgIH0pOwogICAgICAgICAgICB9CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBTd2FsLmZpcmUoewogICAgICAgICAgICAgIHRpdGxlOiByZXNwb25zZS5kYXRhLm1lc3NhZ2UuTVNHX0NPREUsCiAgICAgICAgICAgICAgdGV4dDogcmVzcG9uc2UuZGF0YS5tZXNzYWdlLk1TRywKICAgICAgICAgICAgICBzaG93Q2FuY2VsQnV0dG9uOiBmYWxzZSwKICAgICAgICAgICAgICBzaG93Q29uZmlybUJ1dHRvbjogZmFsc2UsCiAgICAgICAgICAgICAgdGltZXI6IDI1MDAsCiAgICAgICAgICAgICAgdHlwZTogImVycm9yIgogICAgICAgICAgICB9KTsKICAgICAgICAgIH0KICAgICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZSkgewogICAgICAgICAgX3RoaXMxOC5zcGlubmVyT24gPSBmYWxzZTsKICAgICAgICAgIGNvbnNvbGUubG9nKGUpOwogICAgICAgICAgU3dhbCh7CiAgICAgICAgICAgIHRpdGxlOiBfdGhpczE4LnRsdCgnYmlsbGluZ19lcnJvcl9vY2N1cnJlZF9tc2c2JyksCiAgICAgICAgICAgIHRleHQ6IF90aGlzMTgudGx0KCdiaWxsaW5nX3N3YWxfdHJ5X2FnYWluX21zZzInKSwKICAgICAgICAgICAgdHlwZTogImVycm9yIiwKICAgICAgICAgICAgc2hvd0NhbmNlbEJ1dHRvbjogZmFsc2UKICAgICAgICAgIH0pOwogICAgICAgIH0pOwogICAgICB9IGVsc2UgewogICAgICAgIFN3YWwoewogICAgICAgICAgdGl0bGU6IHRoaXMudGx0KCdiaWxsaW5nX3NlbGVjdF9hbGxfcmVxdWlyZWRfdmFsdWVfbXNnJyksCiAgICAgICAgICB0eXBlOiAiZXJyb3IiLAogICAgICAgICAgdG9hc3Q6IHRydWUsCiAgICAgICAgICBzaG93Q2FuY2VsQnV0dG9uOiBmYWxzZSwKICAgICAgICAgIHNob3dDb25maXJtQnV0dG9uOiBmYWxzZSwKICAgICAgICAgIHRpbWVyOiAzMDAwCiAgICAgICAgfSk7CiAgICAgIH0KICAgIH0sCiAgICBzdWJtaXRfc3RyaXBlX2NoZWNrb3V0OiBmdW5jdGlvbiBzdWJtaXRfc3RyaXBlX2NoZWNrb3V0KCkgewogICAgICB2YXIgX3RoaXMxOSA9IHRoaXM7CgogICAgICBpZiAodGhpcy5yZXRhaWxfcGxhbl9jdXJyZW50ICE9PSBudWxsICYmIHRoaXMucmV0YWlsX3BheW1lbnRfdHlwZSAhPT0gbnVsbCkgewogICAgICAgIC8vIGxldCBjaG9zZW5fcGxhbl9kYXRhID0gdGhpcy5yZXRhaWxfcGF5bWVudF90eXBlPT09Ik1vbnRobHkiIHx8IHRoaXMucmV0YWlsX3BsYW5fY3VycmVudC5uYW1lPT09IldoYXRzQXBwIiA/IHRoaXMuc3RyaXBlX3N1YnNjcmlwdGlvbl9wbGFucy5maW5kKChpdGVtID0+IChpdGVtLmFtb3VudC8xMDAgPT09IHRoaXMucmV0YWlsX3BsYW5fY3VycmVudC5tb250aGx5X2NoYXJnZSkgJiYgKGl0ZW0uY3VycmVuY3kgPT09IHRoaXMuc2hvcF9iYXNlX2N1cnJlbmN5KSkpICA6IHRoaXMuc3RyaXBlX3N1YnNjcmlwdGlvbl9wbGFucy5maW5kKChpdGVtID0+IChpdGVtLmFtb3VudC8xMDAgPT09IHRoaXMucmV0YWlsX3BsYW5fY3VycmVudC5hbm51YWxfY2hhcmdlLmFjdHVhbF9jaGFyZ2UpICYmICAoaXRlbS5jdXJyZW5jeSA9PT0gdGhpcy5zaG9wX2Jhc2VfY3VycmVuY3kpKSkgCiAgICAgICAgLy8gY29uc29sZS5sb2coInJldGFpbF9wYXltZW50X3R5cGUiLHRoaXMucmV0YWlsX3BheW1lbnRfdHlwZSk7CiAgICAgICAgdmFyIGNob3Nlbl9wbGFuX2RhdGEgPSB7CiAgICAgICAgICAicGxhbl9uYW1lIjogdGhpcy5yZXRhaWxfcGxhbl9jdXJyZW50LAogICAgICAgICAgInR5cGUiOiB0aGlzLnJldGFpbF9wYXltZW50X3R5cGUudHlwZSwKICAgICAgICAgICJuaWNrbmFtZSI6IHRoaXMucmV0YWlsX3BheW1lbnRfdHlwZS5uaWNrbmFtZSwKICAgICAgICAgICJwcmljZSI6IHRoaXMucmV0YWlsX3BheW1lbnRfdHlwZS5wcmljZSwKICAgICAgICAgICJjdXJyZW5jeSI6IHRoaXMucmV0YWlsX3BheW1lbnRfdHlwZS5jdXJyZW5jeSwKICAgICAgICAgICJpZCI6IHRoaXMucmV0YWlsX3BheW1lbnRfdHlwZS5wcmljZV9pZAogICAgICAgIH07CiAgICAgICAgdGhpcy5zcGlubmVyT24gPSB0cnVlOwogICAgICAgIGF4aW9zLnBvc3QoYXBpX2NhbGxzLnN0cmlwZV9wYXltZW50X2dhdGV3YXkoKSwgewogICAgICAgICAgZ2VuZXJhdGVfbmV3X3JlcXVlc3Q6IHRydWUsCiAgICAgICAgICBjaG9zZW5fcGxhbl9kYXRhOiBjaG9zZW5fcGxhbl9kYXRhLAogICAgICAgICAgY29tcGFueV9pZDogdGhpcy5jb21wYW55aWQsCiAgICAgICAgICBjb21wYW55X25hbWU6IHRoaXMuY29tcGFueW5hbWUsCiAgICAgICAgICByZXF1ZXN0X3R5cGU6ICJQbGFuIiwKICAgICAgICAgIGVtYWlsOiB0aGlzLiRzZXNzaW9uLmdldCgiVXNlckluZm9ybWF0aW9uIikuZW1haWwKICAgICAgICB9KS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgICAgX3RoaXMxOS5zcGlubmVyT24gPSBmYWxzZTsKCiAgICAgICAgICBpZiAocmVzcG9uc2UuZGF0YS5tZXNzYWdlLk1TR19DT0RFID09PSBfdGhpczE5LmFwaV9zdGF0dXNfY29kZS5EQVRBX0FWQUlMQUJMRS5NU0dfQ09ERSkgewogICAgICAgICAgICB3aW5kb3cubG9jYXRpb24gPSByZXNwb25zZS5kYXRhLmRhdGE7CgogICAgICAgICAgICBfdGhpczE5LiRyb290LiRlbWl0KCJEYXNoYm9hcmRTaWRlYmFyRGlzYWJsZSIsIGZhbHNlKTsKCiAgICAgICAgICAgIF90aGlzMTkuJHNlc3Npb24uc2V0KCJTZXR0aW5nVG9wbmF2YmFyRGlzYWJsZSIsIGZhbHNlKTsKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIFN3YWwoewogICAgICAgICAgICAgIC8vIHRpdGxlOiB0aGlzLnRsdCgnYmlsbGluZ19lcnJvcl9vY2N1cnJlZF9tc2c3JyksCiAgICAgICAgICAgICAgdGl0bGU6IHJlc3BvbnNlLmRhdGEubWVzc2FnZS5NU0dfQ09ERSwKICAgICAgICAgICAgICB0ZXh0OiByZXNwb25zZS5kYXRhLm1lc3NhZ2UuTVNHLAogICAgICAgICAgICAgIHNob3dDYW5jZWxCdXR0b246IGZhbHNlLAogICAgICAgICAgICAgIHNob3dDb25maXJtQnV0dG9uOiBmYWxzZSwKICAgICAgICAgICAgICB0aW1lcjogMjUwMCwKICAgICAgICAgICAgICB0eXBlOiAiZXJyb3IiCiAgICAgICAgICAgIH0pOwogICAgICAgICAgfSAvLyBjb25zb2xlLmxvZyhyZXNwb25zZS5kYXRhKTsKCiAgICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKGUpIHsKICAgICAgICAgIF90aGlzMTkuc3Bpbm5lck9uID0gZmFsc2U7CiAgICAgICAgICBjb25zb2xlLmxvZyhlKTsKICAgICAgICAgIFN3YWwoewogICAgICAgICAgICB0aXRsZTogX3RoaXMxOS50bHQoJ2JpbGxpbmdfZXJyb3Jfb2NjdXJyZWRfbXNnOCcpLAogICAgICAgICAgICB0eXBlOiAiZXJyb3IiCiAgICAgICAgICB9KTsKICAgICAgICB9KTsKICAgICAgfSBlbHNlIHsKICAgICAgICBTd2FsKHsKICAgICAgICAgIHRpdGxlOiB0aGlzLnRsdCgnYmlsbGluZ19zZWxlY3RfYWxsX2ZpZWxkX21zZycpLAogICAgICAgICAgdHlwZTogImVycm9yIiwKICAgICAgICAgIHNob3dDYW5jZWxCdXR0b246IGZhbHNlCiAgICAgICAgfSk7CiAgICAgIH0KICAgIH0sCiAgICBzdWJtaXRfc3RyaXBlX2FkZG9uX2NoZWNrb3V0OiBmdW5jdGlvbiBzdWJtaXRfc3RyaXBlX2FkZG9uX2NoZWNrb3V0KCkgewogICAgICB2YXIgX3RoaXMyMCA9IHRoaXM7CgogICAgICBpZiAodGhpcy5zZWxlY3RlZF9hZGRvbl90eXBlID09PSBudWxsIHx8IHRoaXMuc2VsZWN0ZWRfYWRkb25fcGxhbiA9PT0gbnVsbCkgewogICAgICAgIFN3YWwoewogICAgICAgICAgdGl0bGU6IHRoaXMudGx0KCdiaWxsaW5nX3NlbGVjdF9hbGxfZmllbGRfbXNnMScpLAogICAgICAgICAgdHlwZTogImVycm9yIgogICAgICAgIH0pOwogICAgICAgIHJldHVybjsKICAgICAgfQoKICAgICAgdmFyIGNob3Nlbl9wbGFuX2RhdGEgPSB7CiAgICAgICAgInBsYW5fbmFtZSI6IHRoaXMuc2VsZWN0ZWRfYWRkb25fcGxhbi5UeXBlLAogICAgICAgICJwcmljZSI6IHRoaXMuc2VsZWN0ZWRfYWRkb25fdHlwZS5wcmljZSwKICAgICAgICAiY3VycmVuY3kiOiB0aGlzLnNlbGVjdGVkX2FkZG9uX3R5cGUuY3VycmVuY3ksCiAgICAgICAgImlkIjogdGhpcy5zZWxlY3RlZF9hZGRvbl90eXBlLnByaWNlX2lkCiAgICAgIH07CiAgICAgIHRoaXMuc3Bpbm5lck9uID0gdHJ1ZTsKICAgICAgYXhpb3MucG9zdChhcGlfY2FsbHMuc3RyaXBlX3BheW1lbnRfZ2F0ZXdheSgpLCB7CiAgICAgICAgZ2VuZXJhdGVfbmV3X3JlcXVlc3Q6IHRydWUsCiAgICAgICAgY2hvc2VuX3BsYW5fZGF0YTogY2hvc2VuX3BsYW5fZGF0YSwKICAgICAgICBjb21wYW55X2lkOiB0aGlzLmNvbXBhbnlpZCwKICAgICAgICBjb21wYW55X25hbWU6IHRoaXMuY29tcGFueW5hbWUsCiAgICAgICAgcmVxdWVzdF90eXBlOiAiQWRkT24iCiAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgX3RoaXMyMC5zcGlubmVyT24gPSBmYWxzZTsKCiAgICAgICAgaWYgKHJlc3BvbnNlLmRhdGEubWVzc2FnZS5NU0dfQ09ERSA9PT0gX3RoaXMyMC5hcGlfc3RhdHVzX2NvZGUuREFUQV9BVkFJTEFCTEUuTVNHX0NPREUpIHsKICAgICAgICAgIHdpbmRvdy5sb2NhdGlvbiA9IHJlc3BvbnNlLmRhdGEuZGF0YTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgU3dhbCh7CiAgICAgICAgICAgIC8vIHRpdGxlOiB0aGlzLnRsdCgnYmlsbGluZ19lcnJvcl9vY2N1cnJlZF9tc2c5JyksCiAgICAgICAgICAgIHRpdGxlOiByZXNwb25zZS5kYXRhLm1lc3NhZ2UuTVNHX0NPREUsCiAgICAgICAgICAgIHRleHQ6IHJlc3BvbnNlLmRhdGEubWVzc2FnZS5NU0csCiAgICAgICAgICAgIHNob3dDYW5jZWxCdXR0b246IGZhbHNlLAogICAgICAgICAgICBzaG93Q29uZmlybUJ1dHRvbjogZmFsc2UsCiAgICAgICAgICAgIHRpbWVyOiAyNTAwLAogICAgICAgICAgICB0eXBlOiAiZXJyb3IiCiAgICAgICAgICB9KTsKICAgICAgICB9IC8vIGNvbnNvbGUubG9nKHJlc3BvbnNlLmRhdGEpOwoKICAgICAgfSkuY2F0Y2goZnVuY3Rpb24gKGUpIHsKICAgICAgICBfdGhpczIwLnNwaW5uZXJPbiA9IGZhbHNlOwogICAgICAgIGNvbnNvbGUubG9nKGUpOwogICAgICAgIFN3YWwoewogICAgICAgICAgdGl0bGU6IF90aGlzMjAudGx0KCdiaWxsaW5nX2Vycm9yX29jY3VycmVkX21zZzEwJyksCiAgICAgICAgICB0eXBlOiAiZXJyb3IiCiAgICAgICAgfSk7CiAgICAgIH0pOwogICAgfSwKICAgIGdldF9zaG9wX2Jhc2VfY3VycmVuY3k6IGZ1bmN0aW9uIGdldF9zaG9wX2Jhc2VfY3VycmVuY3koKSB7CiAgICAgIHZhciBfdGhpczIxID0gdGhpczsKCiAgICAgIGF4aW9zLnBvc3QoYXBpX2NhbGxzLnByb2R1Y3Rfc2V0dGluZ3MoKSwgewogICAgICAgIGNvbXBhbnlfbmFtZTogdGhpcy5jb21wYW55bmFtZSwKICAgICAgICBjb21wYW55X2lkOiB0aGlzLmNvbXBhbnlpZCwKICAgICAgICBlbWFpbDogdGhpcy4kc2Vzc2lvbi5nZXQoIlVzZXJJbmZvcm1hdGlvbiIpLmVtYWlsLAogICAgICAgIGxpY2Vuc2Vfa2V5OiB0aGlzLiRzZXNzaW9uLmdldCgiVXNlckluZm9ybWF0aW9uIikubGljZW5zZV9rZXksCiAgICAgICAgdG9rZW46IHRoaXMuJHNlc3Npb24uZ2V0KCJVc2VySW5mb3JtYXRpb24iKS50b2tlbnMsCiAgICAgICAgaXNfZ2V0OiB0cnVlCiAgICAgIH0sIHsKICAgICAgICBoZWFkZXJzOiB7CiAgICAgICAgICBBdXRob3JpemF0aW9uOiAiQmVhcmVyICIuY29uY2F0KHRoaXMuJHNlc3Npb24uZ2V0KCJhdCIpKQogICAgICAgIH0KICAgICAgfSkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICB2YXIgd2ViX2ZyYW1ld29yayA9IF90aGlzMjEucmV0YWlsX3dlYl9mcmFtZXdvcms7CgogICAgICAgIGlmIChyZXNwb25zZS5kYXRhLm1lc3NhZ2UuTVNHX0NPREUgIT0gX3RoaXMyMS5hcGlfc3RhdHVzX2NvZGUuSU5URVJOQUxfU0VSVkVSX0VSUk9SLk1TR19DT0RFICYmIHJlc3BvbnNlLmRhdGEubWVzc2FnZS5NU0dfQ09ERSAhPSBfdGhpczIxLmFwaV9zdGF0dXNfY29kZS5OT19EQVRBX0FWQUlMQUJMRS5NU0dfQ09ERSkgewogICAgICAgICAgX3RoaXMyMS5zaG9wX2Jhc2VfY3VycmVuY3kgPSByZXNwb25zZS5kYXRhLmRhdGFbd2ViX2ZyYW1ld29yayArICdfZGV0YWlscyddLmJhc2VfY3VycmVuY3kudmFsdWU7CiAgICAgICAgICBfdGhpczIxLnNob3BfYmFzZV9jdXJyZW5jeSA9IF90aGlzMjEuYWNjZXB0YWJsZV9zaG9wX2Jhc2VfY3VycmVuY2llcy5pbmNsdWRlcyhfdGhpczIxLnNob3BfYmFzZV9jdXJyZW5jeSkgPyBfdGhpczIxLnNob3BfYmFzZV9jdXJyZW5jeS50b0xvd2VyQ2FzZSgpIDogJ3VzZCc7CiAgICAgICAgfQogICAgICB9KS5jYXRjaChmdW5jdGlvbiAoZSkgewogICAgICAgIF90aGlzMjEuc2hvcF9iYXNlX2N1cnJlbmN5ID0gJ3VzZCc7CiAgICAgIH0pOwogICAgfQogIH0KfTs="},{"version":3,"sources":["Billing.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <div class=\"spinner\" id=\"spinner\" v-show=\"spinnerOn\"></div>\n    <!-- <div class=\"dash-cont\"> -->\n    <div class=\"card dash-card\">\n      <div v-if=\"!show_subscription \"  >\n        <div class=\"card-header flex-wrap justify-content-between\">\n          <h4 class=\"mb-0\">{{tlt('subscribe_plan_header')}}</h4>\n          <p v-if=\"stripe_subscription_plans_details.subscription_type === 'Free'\">\n            {{tlt('subscribe_plan_help_text')}}\n          </p> \n        </div>\n        <div style=\"padding-left: 25px\"  v-if=\"retail_shopify_company\">\n          <div class=\"row mb-2\">\n            <div class=\"col-sm-4\">\n              <span> {{tlt('select_plan_label')}} </span>\n              <multiselect\n                track-by=\"name\"\n                label=\"label\"\n                :options=\"retail_shopify_subscription_plans_custom_currency\"\n                v-model=\"retail_plan_current\"\n                :searchable=\"false\"\n                :allow-empty=\"false\"\n                @input=\"check_retail_plan\"\n                :placeholder=\"tlt('select_plan')\"\n                :show-labels=\"false\"\n              ></multiselect>\n              <span>\n                <!-- {{ current_retail_plan_charges }} -->\n              </span>\n            </div>\n            <div class=\"col-sm-4\">\n              <span> {{tlt('select_billing_cycle_label')}} </span> \n              <multiselect\n                :options=\"retail_payment_types\"\n                v-model=\"retail_payment_type\"\n                :searchable=\"false\"\n                :allow-empty=\"false\"\n                :show-labels=\"false\"\n                :disabled=\"check_retail_payment_type_disabled\"\n                :placeholder=\"retail_payment_placeholder\"\n              >\n              </multiselect>\n            </div>\n          </div>\n          <div class=\"row mb-2\">\n            <div class=\"col-sm-12\" style=\"margin:4px 0px;\">\n              <button\n                type=\"button\"\n                class=\"darkblue-btn\"\n                style=\"padding: 6px 15px\"\n                @click=\"subscribe_retail_plan()\"\n              >\n                {{tlt('subscribe_btn_label')}}\n              </button>\n               <button\n                  @click=\"show_subscription=!show_subscription\"       \n                  type=\"button\"\n                  class=\"red-btn\"                  \n                  style=\"padding: 6px 15px\"\n                >\n                  {{tlt('go_back_btn_label')}}\n            </button>\n            </div>\n          </div>\n        </div>\n        <div style=\"padding-left: 25px\" v-else>\n            <div class=\"row mb-2\">\n            <div class=\"col-sm-4\">\n              <span> {{tlt('select_plan1_label')}} </span>\n              <multiselect\n                :options=\"first_step\"\n                v-model=\"retail_plan_current\"\n                :searchable=\"false\"\n                :allow-empty=\"false\"\n                @input=\"check_retail_plan\"\n                :placeholder=\"tlt('select_plan')\"\n                :show-labels=\"false\"\n              ></multiselect>\n              <span>\n                <!-- {{ current_retail_plan_charges }} -->\n              </span>\n            </div>\n            <div class=\"col-sm-4\">\n              <span> {{tlt('select_billing_cycle1_label')}} </span>\n              <multiselect\n                label=\"label\"\n                :options=\"second_step\"\n                v-model=\"retail_payment_type\"\n                :searchable=\"false\"\n                :allow-empty=\"false\"\n                :disabled=\"check_retail_payment_type_disabled\"\n                :placeholder=\"retail_payment_placeholder\"\n              >\n              </multiselect>\n            </div>\n          </div>\n            <div class=\"row mb-2\">\n              <div class=\"col-sm-12\" style=\"margin:4px 0px;\">\n                <button\n                  type=\"button\"\n                  class=\"darkblue-btn\"\n                  style=\"padding: 6px 15px\"\n                  @click=\"submit_stripe_checkout\"\n                >\n                  {{tlt('subscribe_btn1_label')}}\n                </button>\n                <button\n                  @click=\"show_subscription=!show_subscription\"       \n                  type=\"button\"\n                  class=\"red-btn\"                  \n                  style=\"padding: 6px 15px\"\n                >\n                  {{tlt('go_back_btn1_label')}}\n                </button>\n              </div>\n          </div>\n        </div>\n      </div>\n      <div v-show=\"show_subscription\" style=\"margin:10px\">\n        <div style=\"margin:10px;margin-left: 27\">\n          <h4 class=\"mb-0\">{{tlt('subscription_plan_header')}}</h4>\n          <br>\n          <p> {{tlt('current_subscribe_plan_text')}} <strong>{{stripe_subscription_plans_details.subscription_type}}</strong> &nbsp; &nbsp;\n             <span v-if=\"hide_button !=='Free'\">{{tlt('current_subscribe_plan_text2')}} <strong>{{get_subscription_valid_till(stripe_subscription_plans_details.subscription_valid_till)}}.</strong></span>\n             <span v-else>{{tlt('current_subscribe_plan_text3')}} <strong>{{get_subscription_valid_till(stripe_subscription_plans_details.subscription_valid_till)}}.</strong></span>\n          </p>\n          <button\n            type=\"button\"\n            class=\"darkblue-btn\"\n            style=\"padding: 6px 15px\"\n            @click=\"show_subscription = !show_subscription\"\n            v-if=\"stripe_subscription_plans_details.subscription_type !== 'Premium'\"\n          >\n             {{tlt('upgrade_btn_label')}}\n          </button>\n          <button\n            type=\"button\"\n            class=\"darkblue-btn\"\n            style=\"padding: 6px 15px\"\n            @click=\"show_subscription = !show_subscription\"\n            v-else\n          >\n            {{tlt('downgrade_btn_label')}}\n          </button>\n          <button\n            v-if=\"hide_button !=='Free'\"\n            type=\"button\"\n            class=\"red-btn\"\n            style=\"padding: 6px 15px\"\n            @click=\"show_swal_notification\"\n          >\n            {{tlt('cancel_btn_label')}}\n          </button>\n        </div>\n      </div>\n    </div>\n    <div class=\"card dash-card\" v-if=\"stripe_addon_plans.length > 0 \">\n      <div style=\"margin:10px\">\n        <div style=\"margin:10px;margin-left: 27\">\n          <h4 class=\"mb-0\">{{tlt('purchase_addons_header')}}</h4>\n          <br>\n\n          <p v-if=\"credits_balance != null\">\n\n            {{tlt('current_sms_credit_text')}} <strong> {{tlt('current_sms_credit_text2')}} : {{credits_balance[\"us\"]}} | {{tlt('current_sms_credit_text3')}}\n              : {{credits_balance.non_us}}\n            </strong>\n          </p>\n            <div class=\"row mb-2\">\n            <div class=\"col-sm-4\">\n              <span> {{tlt('select_addon_label')}} </span>\n              <multiselect\n                label=\"Type\"\n                :options=\"stripe_addon_plans\"\n                 v-model=\"selected_addon_plan\"\n                :placeholder=\"tlt('select_one')\"\n              ></multiselect>\n              <!-- <span>\n                {{ current_retail_plan_charges }}\n              </span> -->\n            </div>\n            <div class=\"col-sm-4\">\n              <span> {{tlt('select_option_label')}} </span>\n              <multiselect\n                label=\"label\"\n                :options=\"second_step_addon_plans\"\n                v-model=\"selected_addon_type\"\n                :placeholder=\"tlt('select_one')\"\n              ></multiselect>\n              <!-- <span>\n                {{ current_retail_plan_charges }}\n              </span> -->\n            </div>\n          </div>\n          <button\n            type=\"button\"\n            class=\"darkblue-btn\"\n            style=\"padding: 6px 15px\"\n            @click=\"submit_stripe_addon_checkout\"\n          >\n            {{tlt('purchase_btn_label')}}\n          </button>\n        </div>\n      </div>\n    </div>\n    <div class=\"container-fluid\" id=\"dashboard-chart\" style=\"padding: 0\">\n      <div class=\"card dash-card\">\n        <div class=\"card-header d-flex flex-wrap justify-content-between\">\n          <h4>{{tlt('cost_for_month_header')}} {{ concurrent_users_month }}</h4>\n          <div class=\"card-act\"></div>\n        </div>\n        <div class=\"card-body\">\n          <div class=\"chart-box\">\n            <area-chart\n              :labels=\"Concurrent_Users_Data.labels\"\n              :data=\"Concurrent_Users_Data.data\"\n            ></area-chart>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div\n      class=\"modal fade dash-modal\"\n      id=\"countrymodal\"\n      tabindex=\"-1\"\n      role=\"dialog\"\n      aria-labelledby=\"countrymodaltitle\"\n      aria-hidden=\"true\"\n    >\n      <div class=\"modal-dialog modal-dialog-centered\" role=\"document\">\n        <div class=\"modal-content\">\n          <div class=\"modal-body\">\n            <div class=\"modal-head d-flex align-items-center\">\n              <div class=\"head-icn\">\n                <img src=\"/img/msg-blue.png\" alt style=\"width: auto\" />\n              </div>\n              <h6>\n                {{tlt('company_registered_msg')}}\n              </h6>\n            </div>\n            <button\n              type=\"button\"\n              class=\"close\"\n              data-dismiss=\"modal\"\n              aria-label=\"Close\"\n            >\n              <img src=\"/img/close-icn.png\" alt />\n            </button>\n            <form @submit.prevent=\"call_payment('country_selected')\">\n              <div class=\"form-group\">\n                <!-- <select class=\"form-control\" v-model=\"country_name\">\n                  <option\n                    :value=\"country.code\"\n                    v-for=\"(country, index) in country_list\"\n                    :key=\"index\"\n                  >\n                    {{ country.name }}\n                  </option>\n                </select>{{this.country_name}} -->\n                <multiselect\n                  v-model=\"country_name\"\n                  :options=\"country_list\"\n                  :searchable=\"true\"\n                  :close-on-select=\"true\"\n                  :taggable=\"false\"\n                  :multiple=\"false\"\n                  :placeholder=\"tlt('country_name_label')\"\n                  :max-height=\"200\"\n                  track-by=\"code\"\n                  label=\"name\"\n                >\n                  <!-- <span>{{ country_name }}</span> -->\n                </multiselect>\n              </div>\n              <div class=\"btn-wrap text-right\">\n                <button\n                  type=\"button\"\n                  @click=\"country_name = ''\"\n                  class=\"btn btn-link\"\n                  data-dismiss=\"modal\"\n                >\n                  {{tlt('cancel_btn')}}\n                </button>\n                <button type=\"submit\" class=\"darkblue-btn\">{{tlt('save_btn')}}</button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n<script>\nimport Swal from \"sweetalert2\";\nimport countries from \"@/portal/components/Countries\";\nimport axios from \"axios\";\nimport { bus } from \"@/portal/main\";\nimport api_calls from \"@/portal/api_calls\";\nimport AreaChart from \"@/portal/components/AreaChart.vue\";\nimport Multiselect from \"vue-multiselect\";\n// import { StripeCheckout } from \"@vue-stripe/vue-stripe\";\nimport moment from \"moment\";\nimport { update_sidebar_menu, update_restriction_list} from \"@/portal/mixins\";\n\nexport default {\n  name: \"Billing\",\n  components: {\n    AreaChart,\n    Multiselect,\n    // StripeCheckout,\n  },\n  mixins: [\n    update_sidebar_menu,\n    update_restriction_list\n  ],\n  data() {\n    return {\n      select_subscription_plan: [\"Silver\", \"Gold\", \"Plantinum\", \"Enterprise\"],\n      selected_subscription: \"\",\n      subscription_id: \"\",\n      plan_id: \"\",\n      customer_id: \"\",\n      plan_period: [\"Monthly\", \"Yearly\"],\n      selected_period: \"\",\n      order_id: \"\",\n      amount: \"\",\n      pay_success_data: {},\n      subscription_btn_disable: false,\n      country_list: countries,\n      paymentid: \"\",\n      barChart: \"\",\n      backgroundColor: [\"#e67e22\", \"#16a085\", \"#2980b9\"],\n      labels: [\n        \"Exchange of Messages\",\n        \"Execution of Tasks\",\n        \"Audio/Video Interaction\",\n        \"Storage\",\n      ],\n      companyid: null,\n      companyname: null,\n      country_name: \"\",\n      payment_currency: \"\",\n      value_currency_top_up: \"\",\n      value_currency_subscription: \"\",\n      INR: [3500, 7000, 14000, 35000],\n      USD: [50, 100, 200, 500],\n      common_currency: [],\n      currency_amount: null,\n      top_up_amount: null,\n      piechart_data: [],\n      user_role: this.$session.get(\"UserInformation\").role,\n      concurrent_users_month: \"\",\n      Concurrent_Users_Data: {\n        labels: [],\n        data: [],\n      },\n      months: [\n        \"Jan\",\n        \"Feb\",\n        \"Mar\",\n        \"Apr\",\n        \"May\",\n        \"June\",\n        \"July\",\n        \"Aug\",\n        \"Sept\",\n        \"Oct\",\n        \"Nov\",\n        \"Dec\",\n      ],\n      invoice_details: [],\n      invoice_details_copy: [],\n      total_year: [],\n      year_selected: \"\",\n      spinnerOn: false,\n      //harsh\n      common_currency2: [],\n      INR2: [3500, 7000, 14000, 35000],\n      USD2: [100, 300, 500],\n      retail_shopify_company: false,\n      // addon_plans: [\n      //   {\n      //       \"Type\": \"SmsAddOn\",\n      //       \"Price\": 15.0,\n      //       \"Service\": \"SMS\",\n      //       \"PriceOptions\": [\n      //           {\n      //               \"price\": 15.0,\n      //               \"currency\": \"usd\",\n      //               \"id\": \"12425648325414353413235234134\",\n      //               \"type\": \"us\",\n      //               \"count\": 1000,\n      //               \"key\": \"sms_count.add_on.us\",\n      //               \"label\": \"$15 (1000 sms for US region)\"\n      //           },\n      //           {\n      //               \"price\": 15.0,\n      //               \"currency\": \"usd\",\n      //               \"id\": \"12425648325414353413235234134\",\n      //               \"type\": \"non_us\",\n      //               \"count\": 500,\n      //               \"key\": \"sms_count.add_on.non_us\",\n      //               \"label\": \"$15 (500 sms for Non-US region)\"\n      //           }\n      //       ],\n      //       \"Options\": [\n      //           {\n      //               \"type\": \"us\",\n      //               \"count\": 1000\n      //           },\n      //           {\n      //               \"type\": \"non_us\",\n      //               \"count\": 500\n      //           }\n      //       ],\n      //       \"IsActive\": true,\n      //       \"IsAddOn\": true\n      //   },\n      //   {\n      //       \"Type\": \"ConversationAddOn\",\n      //       \"Service\": \"WhatsappConversation\",\n      //       \"PriceOptions\": [\n      //           {\n      //               \"price\": 29.0,\n      //               \"currency\": \"usd\",\n      //               \"id\": \"12425648325414353413235234134\",\n      //               \"type\": \"conversations\",\n      //               \"count\": 2000,\n      //               \"key\": \"whatsapp_conversations_count.add_on\",\n      //               \"label\": \"$29 (2000 conversations)\"\n      //           },\n      //           {\n      //               \"price\": 2000.0,\n      //               \"currency\": \"inr\",\n      //               \"id\": \"12425648325414363452920845234\",\n      //               \"type\": \"conversations\",\n      //               \"count\": 2000,\n      //               \"key\": \"whatsapp_conversations_count.add_on\",\n      //               \"label\": \"₹2000 (2000 conversations)\"\n      //           }\n      //       ],\n      //       \"IsActive\": true,\n      //       \"IsAddOn\": true\n      //   }\n      // ],\n\n      // plans: [\n      // {\n      //     \"Type\" : \"Starter\",\n      //     \"IsActive\" : true,\n      //     \"PriceOptions\" : [ \n      //         {\n      //             \"price\" : 29.0,\n      //             \"currency\" : \"usd\",\n      //             \"price_id\" : \"price_1JzZy2GTZ7JdmVusyUqjOtj7\",\n      //             \"nickname\" : \"Starter-Test\",\n      //             \"label\" : \"$29/month\",\n      //             \"type\" : \"monthly\"\n      //         }, \n      //         {\n      //             \"price\" : 2000.0,\n      //             \"currency\" : \"inr\",\n      //             \"price_id\" : \"price_1KdYOPGTZ7JdmVusDYtT3ry8\",\n      //             \"nickname\" : \"Starter-Test-INR\",\n      //             \"label\" : \"₹2000/month\",\n      //             \"type\" : \"monthly\"\n      //         }, \n      //         {\n      //             \"price\" : 290.0,\n      //             \"currency\" : \"usd\",\n      //             \"price_id\" : \"price_1K28jJGTZ7JdmVusaHhK4tOF\",\n      //             \"nickname\" : \"Starter-Test-Yearly\",\n      //             \"label\" : \"$290/yearly\",\n      //             \"type\" : \"yearly\"\n      //         }, \n      //         {\n      //             \"price\" : 20000.0,\n      //             \"currency\" : \"inr\",\n      //             \"price_id\" : \"price_1KdYT4GTZ7JdmVusY4nETGHH\",\n      //             \"nickname\" : \"Starter-Test-Yearly-INR\",\n      //             \"label\" : \"₹20000/yearly\",\n      //             \"type\" : \"yearly\"\n      //         }\n      //     ],    \n      // },\n      // {\n      //     \"Type\" : \"Premium\",\n      //     \"PriceOptions\" : [ \n      //         {\n      //             \"price\" : 99.0,\n      //             \"currency\" : \"usd\",\n      //             \"price_id\" : \"price_1JzZyjGTZ7JdmVus2KHdL8XE\",\n      //             \"nickname\" : \"Premium-Test\",\n      //             \"label\" : \"$99/month\",\n      //             \"type\" : \"monthly\"\n      //         }, \n      //         {\n      //             \"price\" : 7000.0,\n      //             \"currency\" : \"inr\",\n      //             \"price_id\" : \"price_1KdYSEGTZ7JdmVusZwKTAUV6\",\n      //             \"nickname\" : \"Premium-Test-INR\",\n      //             \"label\" : \"₹7000/month\",\n      //             \"type\" : \"monthly\"\n      //         }, \n      //         {\n      //             \"price\" : 990.0,\n      //             \"currency\" : \"usd\",\n      //             \"price_id\" : \"price_1K28hTGTZ7JdmVus1wWct9PT\",\n      //             \"nickname\" : \"Premium-Test-Yearly\",\n      //             \"label\" : \"$990/year\",\n      //             \"type\" : \"yearly\"\n      //         }, \n      //         {\n      //             \"price\" : 70000.0,\n      //             \"currency\" : \"inr\",\n      //             \"price_id\" : \"price_1KdYTZGTZ7JdmVusSJIcEGnz\",\n      //             \"nickname\" : \"Premium-Test-Yearly-INR\",\n      //             \"label\" : \"₹70000/year\",\n      //             \"type\" : \"yearly\"\n      //         }\n      //     ],\n      // }],\n      retail_shopify_subscription_plans: [\n        // {\n        //   name: \"Free\",\n        //   is_chargeable: false,\n        // },\n        {\n          name: \"Starter\",\n          label:\"Starter ($29/month or $290/year)\",\n          is_chargeable: true,\n          monthly_charge: 29,\n          annual_charge: {\n            per_month_effective: 24.17,\n            actual_charge: 290,\n          },\n          currency: \"usd\"\n        },\n        {\n          name: \"Premium\",\n          label: \"Premium ($99/month or $990/year)\", \n          is_chargeable: true,\n          monthly_charge: 99,\n          annual_charge: {\n            per_month_effective: 82.5,\n            actual_charge: 990,\n          },\n          currency: \"usd\"\n        },\n        {\n          name: \"Starter\",\n          label:\"Starter (₹2000/month or ₹20000/year)\",\n          is_chargeable: true,\n          monthly_charge: 2000,\n          annual_charge: {\n            per_month_effective: 24.17,\n            actual_charge: 20000,\n          },\n           currency: \"inr\"\n        },\n        {\n          name: \"Premium\",\n          label: \"Premium (₹7000/month or ₹70000/year)\", \n          is_chargeable: true,\n          monthly_charge: 7000,\n          annual_charge: {\n            per_month_effective: 82.5,\n            actual_charge: 70000,\n          },\n          currency: \"inr\"\n        },\n        {\n          name: \"WhatsApp\",\n          label: \"WhatsApp ($29/month)\", \n          is_chargeable: true,\n          monthly_charge: 29,\n          currency: \"usd\"\n        },\n        {\n          name: \"WhatsApp\",\n          label: \"WhatsApp (₹2000/month)\", \n          is_chargeable: true,\n          monthly_charge: 2000,\n          currency: \"inr\"\n        },\n      ],\n      retail_plan_current: null,\n      payment_types: [\"Annual\", \"Monthly\"],\n      retail_payment_type: null,\n      stripe_subscription_plans: null,\n      stripe_subscription_plans_details: {},\n      stripe_addon_plans: [],\n      show_subscription:false,\n      selected_addon_plan: null,\n      hide_button:'Free',\n      credits_balance: null,\n      retail_web_framework: this.$session.get(\"retail_web_framework\"),\n      shop_base_currency: 'usd',\n      acceptable_shop_base_currencies: ['INR', 'USD', 'inr', 'usd'],\n      stripe_addon_type: [],\n      selected_addon_type: null,\n    };\n  },\n  created() { \n    this.retail_web_framework = this.$session.get(\"retail_web_framework\");\n    this.country_list = countries;\n    if (\n      !this.$session.has(\"CompanyId\") &&\n      this.$session.get(\"UserInformation\").role == \"SuperAdmin\"\n    ) {\n      toastr.warning(tlt('billing_select_company_name_msg'));\n    }\n    if (this.user_role == \"SuperAdmin\") {\n      if (this.$session.has(\"CompanyId\")) {\n        this.companyid = this.$session.get(\"CompanyId\");\n        this.companyname = this.$session.get(\"CompanyName\");\n      } else {\n        this.companyid = this.$session.get(\"UserInformation\").company_id;\n        this.companyname = this.$session.get(\"UserInformation\").company_name;\n      }\n    } else {\n      this.companyid = this.$session.get(\"UserInformation\").company_id;\n      this.companyname = this.$session.get(\"UserInformation\").company_name;\n    }\n    if (\n      this.$session.get(\"UserInformation\").country_name == \"\" &&\n      !this.$session.has(\"country_name\")\n    ) {\n    } else {\n      axios\n        .get(api_calls.billing_invoice(), {\n          headers: {\n            Authorization: `Bearer ${this.$session.get(\"at\")}`,\n          },\n        })\n        .then((response) => {\n          if (response.data.message.MSG_CODE === this.api_status_code.DATA_AVAILABLE.MSG_CODE) {\n              this.total_year = response.data.data.YearList;\n              this.year_selected = this.total_year[0];         \n          }else {\n            Swal({\n              title: response.data.message.MSG_CODE,\n              text: response.data.message.MSG,\n              showCancelButton: false,\n              showConfirmButton: false,\n              timer: 2500,\n              type: \"error\"\n            })\n          }\n\n        })\n        .catch((e) => {\n          if (\n            e.response.status === 410 ||\n            e.response.status === 440 ||\n            e.response.status === 409\n          ) {\n            this.$root.$emit(\"Session_Expired\", e.response.data);\n          }\n        });\n      axios\n        .post(\n          api_calls.billing_invoice(),\n          {\n            company_id: this.$session.get(\"UserInformation\").company_id,\n            company_name: this.$session.get(\"UserInformation\").company_name,\n            email: this.$session.get(\"UserInformation\").email,\n            license_key: this.$session.get(\"UserInformation\").license_key,\n            token: this.$session.get(\"UserInformation\").tokens,\n            download_file: false,\n            year: this.year_selected,\n          },\n          {\n            headers: {\n              Authorization: `Bearer ${this.$session.get(\"at\")}`,\n            },\n          }\n        )\n        .then((response) => {\n          if (response.data.message.MSG_CODE === this.api_status_code.DATA_AVAILABLE.MSG_CODE) {\n              this.invoice_details = response.data.data.Bucket_list;\n              for (var i = 0; i < this.invoice_details.length; i++) {\n                this.invoice_details_copy[i] = this.invoice_details[i].slice(8);\n              }\n          }else {\n            Swal({\n              title: response.data.message.MSG_CODE,\n              text: response.data.message.MSG,\n              showCancelButton: false,\n              showConfirmButton: false,\n              timer: 2500,\n              type: \"error\"\n            })\n          }\n          // console.log(this.invoice_details_copy);\n        })\n        .catch((e) => {\n          console.log(e,'rr');\n          if (\n            e.response.status === 410 ||\n            e.response.status === 440 ||\n            e.response.status === 409\n          ) {\n            this.$root.$emit(\"Session_Expired\", e.response.data);\n          }\n        });\n    }\n    let is_shopify = this.retail_web_framework;\n    if (Boolean(is_shopify) && is_shopify === \"shopify\") {\n      this.retail_shopify_company = true;\n    }\n    this.get_shop_base_currency();\n    this.check_addons_balance();\n  },\n   watch: {\n    selected_addon_plan(){\n      this.stripe_addon_type = [];\n      this.selected_addon_type= null;\n      if(this.selected_addon_plan !== null){\n        this.stripe_addon_type = this.selected_addon_plan.Options;\n      }\n    }\n  },\n  mounted() { \n\n    this.get_plans_from_db(); // Get plans from db\n    this.get_addon_details(); // Get Add Ons from cense db\n    this.get_current_subscription_details(); // get subscription details from cense_db\n    if (\n      this.$session.get(\"UserInformation\").country_name == \"\" &&\n      !this.$session.has(\"country_name\")\n    ) {\n      $(\"#countrymodal\")\n        .modal({\n          backdrop: \"static\",\n        })\n        .on(\"hidden.bs.modal\", (e) => {\n          if (!this.$session.has(\"country_name\")) {\n            $(\"#countrymodal\").modal(\"hide\");\n            this.$router.push(\"/bot/dashboard\");\n            this.$root.$emit(\"change_sidebar_main_menu\", \"Dashboard\");\n          }\n        });\n    }\n  },\n  computed: {\n    check_retail_payment_type_disabled() {\n      if (\n        Boolean(this.retail_plan_current) &&\n        this.retail_plan_current.is_chargeable === false\n      ) {\n        return true;\n      }\n      return false;\n    },\n    retail_payment_placeholder() {\n      if (this.check_retail_payment_type_disabled) {\n        return this.tlt('no_billing_cycle_msg');\n      }\n      return this.tlt('pick_one_msg');\n    },\n    current_retail_plan_charges() {\n      // if(this.retail_shopify_company) {\n      return Boolean(this.retail_plan_current)\n        ? this.retail_plan_current.is_chargeable\n          ? `$${this.retail_plan_current.monthly_charge}/month  or $${this.retail_plan_current.annual_charge.per_month_effective}/month billed at $${this.retail_plan_current.annual_charge.actual_charge} once per year`\n          : null\n        : null;\n      // } else {\n      //   return Boolean(this.retail_plan_current)\n      //   ? this.retail_plan_current.is_chargeable\n      //     ? `$${this.retail_plan_current.monthly_charge}/month`\n      //     : null\n      //   : null;\n      // }\n    },\n    check_retail_shopify_form_validations() {\n      if (\n        this.retail_plan_current !== null &&\n        this.retail_payment_type !== null\n      ) {\n        return true;\n      } else if (\n        this.retail_plan_current !== null &&\n        this.retail_payment_type == null &&\n        this.retail_plan_current.is_chargeable === false\n      ) {\n        return true;\n      }\n      return false;\n    },\n    first_step() {\n      if(this.stripe_subscription_plans) {\n        return this.stripe_subscription_plans.filter(plans => plans.Type !== 'Free').map(plans => plans.Type);\n      }else {\n        return [];\n      }\n    },\n    retail_shopify_subscription_plans_custom_currency(){\n      if(this.stripe_subscription_plans_details.subscription_type !== 'Premium'){\n        return this.retail_shopify_subscription_plans.filter((item) => item.currency === this.shop_base_currency)\n      }else {\n        return this.retail_shopify_subscription_plans.filter((item) => (item.currency === this.shop_base_currency && (item.name === \"Starter\" || item.name === \"WhatsApp\") ) )\n      }\n    },\n    // retail_shopify_subscription_plans_check_currentplan(){\n    //   if(this.stripe_subscription_plans_details.subscription_type !== 'Premium'){\n    //     return this.retail_shopify_subscription_plans\n    //   }else{\n    //     return this.retail_shopify_subscription_plans.filter((item) =>  item.name === \"Starter\")\n    //   }\n    // },\n    second_step(){\n      var temp = []\n      if(this.stripe_subscription_plans && this.retail_plan_current) {\n        temp = this.stripe_subscription_plans.filter(plans => plans.Type == this.retail_plan_current);\n        var sorted =  (temp[0].PriceOptions).filter(abc =>  abc.currency === this.shop_base_currency);\n        return sorted;\n      }\n      return temp;\n    },\n    first_step_addon_plans(){\n      if(this.stripe_addon_plans) {\n        return this.stripe_addon_plans.map(plans => plans.Type);\n      }\n    },\n    second_step_addon_plans(){\n      // console.log(\"selected_addon_plan\",this.selected_addon_plan);\n      if(this.selected_addon_plan) {\n        var check = this.selected_addon_plan['PriceOptions'].filter(plan => plan.currency == this.shop_base_currency);\n        return check;\n      }\n      return [];\n    },\n    retail_payment_types(){\n     \n      if (this.retail_plan_current == null) {\n        return this.payment_types;\n      }else if (this.retail_plan_current.name == this.stripe_subscription_plans_details.subscription_type) {\n         let sub_type = this.stripe_subscription_plans_details.subscription_period == 'Yearly'?'Annual': 'Monthly'\n        return this.payment_types.filter((item)=> item != sub_type); \n      }else if (this.retail_plan_current.name == 'WhatsApp'){\n        return this.payment_types.filter((item)=> item != 'Annual');\n      } else {\n        return this.payment_types;\n      }\n    }\n  },\n  methods: {\n  // nameWithLang ({ type, count }) {\n  //   return `${type} ${this.selected_addon_plan.Service}[${count}]`\n  // },\n  // namewithPrice({name,Price}){\n  //   return `${name} ($${Price})`\n  // },\n  show_swal_notification(){\n      Swal.fire({\n          title: this.tlt('billing_swal_alert_msg'),\n          text: this.tlt('billing_unsubscribe_plan_msg'),\n          icon: 'warning',\n          showCancelButton: true,\n          confirmButtonColor: '#3085d6',\n          cancelButtonColor: '#d33',\n          confirmButtonText: this.tlt('billing_swal_yes_btn')\n      }).then((result) => {\n        if (result.value == true) {\n          this.update_subscription_plan_free()\n          Swal.fire(\n           this.tlt('billing_swal_unsubscribed_msg'),\n           this.tlt('billing_subscribe_cancel_msg'),\n            'success'\n          )\n        }\n      })\n  },\n  get_subscription_valid_till(sub_date){\n      return moment.utc(sub_date).format(\"Do MMMM YYYY\");\n  },\n  update_subscription_plan_free(){\n       axios\n        .post(\n          api_calls.stripe_payment_gateway(),\n          {\n            company_id: this.companyid,\n            company_name: this.companyname,\n            unsubscribe_plan: true,    \n            email: this.$session.get(\"UserInformation\").email\n          }\n        )\n        .then((response) => {\n          if (response.data.message.MSG_CODE === this.api_status_code.DATA_AVAILABLE.MSG_CODE)\n          {\n            let message = response.data.data.UserMenu;\n            this.update_sidebar_menu(message);\n            this.$root.$emit(\"SideBarMenuUpdated\", true);\n            //  console.log(\"update successfully\")\n            this.update_restriction_list(response.data.data.RestrictionList, response.data.data.SubscribedPlan)\n            this.get_current_subscription_details()\n            this.$router.push(\"/bot/subscription-renewal\");\n          } else {\n            Swal({\n              // title: this.tlt('billing_error_occurred_msg9'),\n              title: response.data.message.MSG_CODE,\n              text: response.data.message.MSG,\n              showCancelButton: false,\n              showConfirmButton: false,\n              timer: 2500,\n              type: \"error\"\n          });\n          }\n        })\n        .catch((e) => {\n          if (\n            e.response.status === 410 ||\n            e.response.status === 440 ||\n            e.response.status === 409\n          ) {\n            this.$root.$emit(\"Session_Expired\", e.response.data);\n          }\n        });\n  },\n  get_plans_from_db() {\n    this.spinnerOn = true;\n      axios\n        .post(api_calls.stripe_payment_gateway(), {\n          company_id: this.companyid,\n          company_name: this.companyname,\n          get_plans_from_db: true,\n        })\n        .then((response) => {\n          if (response.data.message.MSG_CODE === this.api_status_code.DATA_AVAILABLE.MSG_CODE)\n          {\n            this.spinnerOn = false;\n            this.stripe_subscription_plans = response.data.data;\n            this.show_subscription = true;\n          } else {\n            this.stripe_subscription_plans_details = [];\n          }\n        })\n        .catch((e) => {\n          this.spinnerOn = false;\n          Swal.fire({\n            title: this.tlt('billing_error_occurred_msg2'),\n            type: \"error\",\n          });\n        });\n  },\n  get_current_subscription_details() {\n    this.spinnerOn = true;\n      axios\n        .post(api_calls.stripe_payment_gateway(), {\n          company_id: this.companyid,\n          company_name: this.companyname,\n          get_active_plan: true,\n        })\n        .then((response) => {\n          if (response.data.message.MSG_CODE === this.api_status_code.DATA_AVAILABLE.MSG_CODE)\n          {\n            this.spinnerOn = false;\n            this.stripe_subscription_plans_details = response.data.data.Data.current_subscription;\n            this.hide_button = response.data.data.Data.current_subscription.subscription_type;\n            this.show_subscription = true;\n          } else {\n            this.stripe_subscription_plans_details = [];\n              Swal({\n              title:response.data.message.MSG_CODE,\n              text: response.data.message.MSG,\n              showCancelButton: false,\n              showConfirmButton: false,\n              timer: 2500,\n              type: \"error\"\n            });\n          }\n        })\n        .catch((e) => {\n          this.spinnerOn = false;\n          console.log(e ,'eee');\n          Swal.fire({\n            title: this.tlt('billing_error_occurred_msg2'),\n            type: \"error\",\n          });\n        });\n  },\n  // get_current_subscription() {\n  //   axios\n  //     .post(api_calls.razorpay_communcation(), {\n  //       company_id: this.companyid,\n  //       company_name: this.companyname,\n  //       is_get: true,\n  //     })\n  //     .then((response) => {\n  //       // console.log(\"CURRENT PLAN DETAILS\",response);\n  //       if (response.data == null) {\n  //         this.subscription_btn_disable = true;\n  //         Swal({\n  //           title: this.tlt('billing_no_active_subscription_msg1'),\n  //           type: \"error\",\n  //           toast: true,\n  //           showConfirmButton: false,\n  //           timer: 2000,\n  //         });\n  //       } else if (response.data.MSG == \"Current Subscription Plan\") {\n  //         this.selected_subscription =\n  //           response.data.subscription.subscription_type;\n  //         this.selected_period = response.data.subscription.period;\n  //         this.customer_id = response.data.customer_id;\n  //         this.subscription_btn_disable = false;\n  //       } else if (response.data.MSG == \"No Active Subscription plan found\") {\n  //         this.customer_id = response.data.customer_id;\n  //         Swal({\n  //           title: this.tlt('billing_no_active_subscription_msg2'),\n  //           type: \"warning\",\n  //           toast: true,\n  //           showConfirmButton: false,\n  //           timer: 2000,\n  //         });\n  //         this.subscription_btn_disable = true;\n  //       }\n  //     })\n  //     .catch((e) => {\n  //       this.spinnerOn = false;\n  //       if (\n  //         e.response.status === 410 ||\n  //         e.response.status === 440 ||\n  //         e.response.status === 409\n  //       ) {\n  //         this.$root.$emit(\"Session_Expired\", e.response.data);\n  //       }\n  //     });\n  // },\n  check_addons_balance() {\n    this.spinnerOn = true;\n    axios.post(\n      api_calls.check_addons_balance(),\n      {\n        company_name: this.companyname,\n        company_id: this.companyid,\n        check_balance: true\n      },\n      {\n          headers: {\n            Authorization: `Bearer ${this.$session.get(\"at\")}`,\n          },\n        }\n    )\n    .then((response) =>{\n      // console.log(response);\n      this.spinnerOn = false;\n      if(response.data.message.MSG_CODE === this.api_status_code.CHECK_BALANCE.MSG_CODE){\n        if(Boolean(response.data.data.credits.sms_count) == true) {\n          var sms_count = response.data.data.credits.sms_count;\n          this.credits_balance = sms_count;\n          // this.credits_balance = this.tlt('current_sms_credit_text') + \"<strong> \"+ this.tlt('current_sms_credit_text2') + \": \" + sms_count.us + \" | \" + this.tlt('current_sms_credit_text3') + \": \" + sms_count.non_us + \"</strong>\"\n        }else {\n          Swal.fire({\n            title: response.data.message.MSG_CODE,\n            text: response.data.message.MSG,\n            showCancelButton: false,\n            showConfirmButton: false,\n            type: \"error\"\n          });\n        }\n      }\n      })\n      .catch((e) => {\n        this.spinnerOn = false;\n        if (\n          e.response.status === 410 ||\n          e.response.status === 440 ||\n          e.response.status === 409\n        ) {\n          this.$root.$emit(\"Session_Expired\", e.response.data);\n        }\n      });\n  },\n  get_addon_details() {\n    axios\n      .post(api_calls.stripe_payment_gateway(), {\n        get_add_ons: true,\n      })\n      .then((response) => {\n        if (response.data.message.MSG_CODE === this.api_status_code.NO_ADD_ONS_FOUND.MSG_CODE) {\n          this.stripe_addon_plans = [];\n          return;\n        }else if (response.data.message.MSG_CODE === this.api_status_code.DATA_AVAILABLE.MSG_CODE){ \n          if (Boolean(response.data.data) != false ) {\n            this.stripe_addon_plans = response.data.data;\n          }\n      }  else {\n          Swal({\n            title:response.data.message.MSG_CODE,\n            text:response.data.message.MSG,\n            showCancelButton: false,\n            showConfirmButton: false,\n            timer: 2500,\n            type: \"error\"\n          })\n        }\n      })\n      .catch((e) => {\n        console.log(e);\n        Swal.fire({\n          title: this.tlt('billing_error_occurred_msg3'),\n          type: \"error\",\n        });\n      });\n  },\n  // get_subscription_details() {\n  //   axios\n  //     .post(api_calls.stripe_payment_gateway(), {\n  //       company_id: this.companyid,\n  //       company_name: this.companyname,\n  //       get_plans: true,\n  //     })\n  //     .then((response) => {\n  //       // console.log(response.data);\n  //       if (\n  //         response.data.Status === \"Success\" &&\n  //         response.data.Data.data.length > 0\n  //       ) {\n  //         this.stripe_subscription_plans = response.data.Data.data;\n  //       } else {\n  //         this.stripe_subscription_plans = [];\n  //       }\n  //     })\n  //     .catch((e) => {\n  //       console.log(e);\n  //       Swal.fire({\n  //         title: this.tlt('billing_error_occurred_msg4'),\n  //         type: \"error\",\n  //       });\n  //     });\n  // },\n  cancel_subscription() {\n    axios\n      .post(api_calls.razorpay_communcation(), {\n        is_cancel: true,\n        subscription_id: this.subscription_id,\n      })\n      .then((response) => {\n        if (response.data.message.MSG_CODE === this.api_status_code.SUBSCRIPTION_CANCEL_SUCCESS.MSG_CODE) {\n          this.subscription_btn_disable = true;\n        } else {\n          Swal({\n            title: this.tlt('billing_internal_server_msg1'),\n            type: \"error\",\n            showConfirmButton: false,\n            timer: 2000,\n          });\n        }\n      })\n      .catch((e) => {\n        this.spinnerOn = false;\n        if (\n          e.response.status === 410 ||\n          e.response.status === 440 ||\n          e.response.status === 409\n        ) {\n          this.$root.$emit(\"Session_Expired\", e.response.data);\n        }\n      });\n  },\n  create_customer() {\n    if (this.selected_subscription == \"\" || this.selected_period == \"\") {\n      Swal({\n        type: \"info\",\n        text: this.tlt('billing_subscribe_plan_period_msg'),\n        toast: true,\n        position: \"top-right\",\n        showConfirmButton: false,\n        timer: 2000,\n      });\n      return;\n    }\n    var period = this.selected_period.toLowerCase();\n    for (var i in this.subscription_plans) {\n      if (period == this.subscription_plans[i].period) {\n        if (\n          this.selected_subscription == this.subscription_plans[i].item.name\n        ) {\n          this.plan_id = this.subscription_plans[i].id;\n          // console.log(\"PLAN NAME:\", this.subscription_plans[i].item.name);\n          // console.log(\"PLAN ID:\", this.subscription_plans[i].id);\n        }\n      }\n    }\n    if (this.plan_id == \"\") {\n      Swal({\n        title: this.tlt('billing_plan_not_found_msg'),\n        type: \"error\",\n        text: this.tlt('billing_contact_cense_admin_msg'),\n        showConfirmButton: false,\n        timer: 2000,\n      });\n      return;\n    }\n    if (this.customer_id == \"\") {\n      var cust_data = {\n        name: this.companyname,\n        contact: \"\",\n        email: this.$session.get(\"UserInformation\").email,\n        notes: { Extra: \"Details related to customer\" },\n      };\n      axios\n        .post(api_calls.razorpay_communcation(), {\n          company_id: this.companyid,\n          company_name: this.companyname,\n          create_customer_id: true,\n          data: cust_data,\n        })\n        .then((response) => {\n          if (data.message.MSG_CODE === this.api_status_code.STATUS_SUCCESS.MSG_CODE) {\n            var customer_detail = response.data.data.Customer_Detail;\n            this.customer_id = response.data.data.Customer_Detail.id;\n            // console.log(\"customer id\",this.customer_id);\n            this.create_subscription(this.plan_id, this.customer_id);\n          } else {\n            Swal({\n              title: this.tlt('billing_internal_server_msg2'),\n              type: \"error\",\n              text: this.tlt('billing_error_creating_cust_id_msg'),\n              timer: 2000,\n            });\n          }\n        })\n        .catch((e) => {\n          if (\n            e.response.status === 410 ||\n            e.response.status === 440 ||\n            e.response.status === 409\n          ) {\n            this.$root.$emit(\"Session_Expired\", e.response.data);\n          }\n        });\n    } else {\n      this.create_subscription(this.plan_id, this.customer_id);\n    }\n  },\n  create_subscription(plan_id, customer_id) {\n    var sub_data = {\n      plan_id: plan_id,\n      customer_id: customer_id,\n    };\n    axios\n      .post(api_calls.razorpay_communcation(), {\n        create_subscription: true,\n        data: sub_data,\n      })\n      .then((response) => {\n        if (response.data.message.MSG_CODE === this.api_status_code.STATUS_SUCCESS.MSG_CODE ) {\n          this.subscription_id = response.data.data.Subscription_Detail.id;\n          // console.log(\"Subscription id\", response);\n          this.start_payment(this.subscription_id);\n        } else {\n          Swal({\n            title: this.tlt('billing_internal_server_msg3'),\n            type: \"error\",\n            text: this.tlt('billing_error_creating_subscription_msg'),\n            timer: 2000,\n          });\n        }\n      })\n      .catch((e) => {\n        if (\n          e.response.status === 410 ||\n          e.response.status === 440 ||\n          e.response.status === 409\n        ) {\n          this.$root.$emit(\"Session_Expired\", e.response.data);\n        }\n      });\n  },\n  start_payment(subscription_id) {\n    var vm = this;\n    // start_payment(){\n    //   var vm = this;\n    //   var data = {\n    //     order_amount: 50000,\n    //     order_currency: 'INR',\n    //     order_receipt: 'order_rcptid_11',\n    //     payment_capture: 1,\n    //     notes: {'Shipping address': 'Bommanahalli, Bangalore'}\n    //   }\n    //   axios.\n    //     post(\n    //       api_calls.razorpay_communcation(),\n    //       {\n    //         generate_order_id: true,\n    //         data: data\n    //       }).then((response) => {\n    //       if(response.data.MSG == \"Order ID created\"){\n    //         console.log(response.data.Order_Detail);\n    //         vm.order_id = response.data.Order_Detail.id;\n    //         vm.amount = response.data.Order_Detail.amount;\n    //         console.log(\"reached\");\n    var options = {\n      key: process.env.VUE_APP_RAZORPAY_KEY, // Enter the Key ID generated from the Dashboard\n      subscription_id: subscription_id, // You dont need amount/currency/order_id when submitting subscription id\n      // \"amount\": this.amount, // Amount is in currency subunits. Default currency is INR. Hence, 50000 refers to 50000 paise\n      // \"currency\": \"INR\",\n      name: \"Cense AI\",\n      description: \"Test Transaction\",\n      image: require(\"@/portal/assets/img/cense_logo.png\"),\n      // \"order_id\": this.order_id, //This is a sample Order ID. Pass the `id` obtained in the response of Step 1\n      handler: function (response) {\n        // console.log(\"FINAL PAY\", response);\n        var razorpay_payment_id = response.razorpay_payment_id;\n        // var razorpay_order_id = response.razorpay_order_id;\n        var razorpay_subscription_id = response.razorpay_subscription_id;\n        var razorpay_signature = response.razorpay_signature;\n        vm.pay_success_data = {};\n        vm.pay_success_data = {\n          razorpay_payment_id: razorpay_payment_id,\n          // razorpay_order_id: razorpay_order_id,\n          razorpay_subscription_id: razorpay_subscription_id,\n          razorpay_signature: razorpay_signature,\n          razorpay_customer_id: vm.customer_id,\n          // order_id: this.order_id,\n          subscription_status: \"active\",\n          subscription_id: vm.subscription_id,\n          plan_id: vm.plan_id,\n          subscription_type: vm.selected_subscription,\n          subscription_period: vm.selected_period,\n        };\n        // console.log(\"PAYMENT SUCCESS DATA\",vm.pay_success_data);\n        if (Object.keys(vm.pay_success_data).length != 0) {\n          vm.add_details_to_server(vm.pay_success_data);\n        } else {\n          // console.log(\"Transaction did not succeed\");\n        }\n      },\n      // \"prefill\": {\n      //     \"name\": \"Gaurav Kumar\",\n      //     \"email\": \"gaurav.kumar@example.com\",\n      //     \"contact\": \"+919876543210\"\n      // },\n      notes: {\n        address: \"Razorpay Corporate Office\",\n      },\n      theme: {\n        color: \"#3399cc\",\n      },\n    };\n    var rzp1 = new Razorpay(options);\n    rzp1.on(\"payment.failed\", function (response) {\n      // console.log(\"error\", response);\n      alert(response.error.code);\n      alert(response.error.description);\n      alert(response.error.source);\n      alert(response.error.step);\n      alert(response.error.reason);\n      alert(response.error.metadata.order_id);\n      alert(response.error.metadata.payment_id);\n    });\n    rzp1.open();\n    // }\n    // })\n    // .catch((e) => {\n    //   this.spinnerOn = false;\n    //     if (\n    //       e.response.status === 410 ||\n    //       e.response.status === 440 ||\n    //       e.response.status === 409\n    //     ) {\n    //       this.$root.$emit(\"Session_Expired\", e.response.data);\n    //     }\n    //   });\n  },\n  add_details_to_server(data) {\n    if (data != null) {\n      axios\n        .post(api_calls.razorpay_communcation(), {\n          company_id: this.companyid,\n          company_name: this.companyname,\n          verify_subscription: true,\n          data: data,\n        })\n        .then((response) => {\n          if (response.data.message.MSG_CODE === this.api_status_code.SUBSCRIPTION_VERIFICATION_SUCCESS.MSG_CODE) {\n            Swal({\n              title: this.tlt('billing_subscription_register_msg'),\n              type: \"success\",\n              timer: 2000,\n            });\n            this.pay_success_data = {};\n            this.subscription_btn_disable = false;\n          } else {\n            Swal({\n              title: this.tlt('billing_internal_server_msg4'),\n              type: \"error\",\n              text: this.tlt('billing_error_occur_subscription_msg'),\n              toast: true,\n              timer: 2000,\n            });\n            this.pay_success_data = {};\n          }\n        })\n        .catch((e) => {\n          if (\n            e.response.status === 410 ||\n            e.response.status === 440 ||\n            e.response.status === 409\n          ) {\n            this.$root.$emit(\"Session_Expired\", e.response.data);\n          }\n        });\n    }\n  },\n  // toggle_change(value) {\n  //   if (value == \"INR\") {\n  //     this.common_currency = this.INR;\n  //   } else {\n  //     this.common_currency = this.USD;\n  //   }\n  //   if (value == \"INR\") {\n  //     this.common_currency2 = this.INR2;\n  //   } else {\n  //     this.common_currency2 = this.USD2;\n  //   }\n  // },\n  download_invoice(num) {\n    this.spinnerOn = true;\n    axios({\n      method: \"post\",\n      url: api_calls.billing_invoice(),\n      responseType: \"blob\",\n      data: {\n        company_id: this.$session.get(\"UserInformation\").company_id,\n        company_name: this.$session.get(\"UserInformation\").company_name,\n        email: this.$session.get(\"UserInformation\").email,\n        license_key: this.$session.get(\"UserInformation\").license_key,\n        token: this.$session.get(\"UserInformation\").tokens,\n        download_file: true,\n        file_name: this.invoice_details[num],\n      },\n      headers: {\n        Authorization: `Bearer ${this.$session.get(\"at\")}`,\n      },\n    })\n      .then((response) => {\n        this.spinnerOn = false;\n        if (response.data.message.MSG_CODE === this.api_status_code.INTERNAL_SERVER_ERROR.MSG_CODE) {\n          this.spinnerOn = false;\n          toastr.error(\n            this.tlt('billing_download_invoice_msg')\n          );\n        } else {\n          this.spinnerOn = false;\n          var url = window.URL.createObjectURL(new Blob([response.data.data]));\n          var link = document.createElement(\"a\");\n          link.href = url;\n          link.setAttribute(\"download\", \"Ashish\" + \".pdf\");\n          document.body.appendChild(link);\n          link.click();\n        }\n      })\n      .catch((e) => {\n        if (\n          e.response.status === 410 ||\n          e.response.status === 440 ||\n          e.response.status === 409\n        ) {\n          this.$root.$emit(\"Session_Expired\", e.response.data);\n        }\n      });\n  },\n  call_payment(type) {\n    var d = new Date();\n    // console.log(d);\n    var vm = this;\n    var options = {};\n    if (type == \"country_selected\") {\n      if (this.country_name.code == \"\") {\n        alert(this.tlt('billing_select_country_msg'));\n      } else {\n        this.spinnerOn = true;\n        axios\n          .post(\n            api_calls.edit_profile_url(),\n            {\n              company_id: this.$session.get(\"UserInformation\").company_id,\n              company_name: this.$session.get(\"UserInformation\").company_name,\n              email: this.$session.get(\"UserInformation\").email,\n              license_key: this.$session.get(\"UserInformation\").license_key,\n              token: this.$session.get(\"UserInformation\").tokens,\n              first_name: this.$session.get(\"UserInformation\").first_name,\n              last_name: this.$session.get(\"UserInformation\").last_name,\n              country_name: this.country_name.code,\n              phone_number: this.$session.get(\"UserInformation\").phone_no,\n            },\n            {\n              headers: {\n                Authorization: `Bearer ${this.$session.get(\"at\")}`,\n              },\n            }\n          )\n          .then((response) => {\n            this.spinnerOn = false;\n            if (response.data.message.MSG_CODE === this.api_status_code.PROFILE_UPDATED.MSG_CODE ) {\n              //   Swal({\n              //   title: \"Updated Successfully!!\",\n              //   type: \"success\",\n              //   text: \"Your profile has been updated successfully.\",\n              //   timer:2000,\n              // });\n              toastr.success(this.tlt('billing_profile_updated_msg'));\n              this.$session.set(\"country_name\", this.country_name.code);\n              setTimeout(() => {\n                this.$router.go();\n              }, 2500);\n            }\n            $(\"#countrymodal\").modal(\"hide\");\n          })\n          .catch((e) => {\n            if (\n              e.response.status === 410 ||\n              e.response.status === 440 ||\n              e.response.status === 409\n            ) {\n              this.$root.$emit(\"Session_Expired\", e.response.data);\n            }\n          });\n      }\n    } else if (event.target.innerText == \"Pay\") {\n      if (this.value_currency_top_up == \"\") {\n        toastr.error(this.tlt('billing_select_amount_msg1'));\n      } else if (this.payment_currency == \"INR\") {\n        this.value_currency_top_up = this.value_currency_top_up.slice(2, -10);\n        this.currency_amount = this.value_currency_top_up * 118;\n        this.top_up_amount = this.value_currency_top_up;\n        if (this.payment_currency == \"INR\") {\n          this.top_up_amount /= 70;\n        }\n        pay_amount(this.currency_amount, this.payment_currency, \"Top Up\");\n      } else {\n        this.value_currency_top_up = this.value_currency_top_up.slice(2);\n        this.currency_amount = this.value_currency_top_up * 100;\n        this.top_up_amount = this.value_currency_top_up;\n\n        pay_amount(this.currency_amount, this.payment_currency, \"Top Up\");\n      }\n    } else if (event.target.innerText == \"Subscribe\") {\n      this.spinnerOn = true;\n      if (this.value_currency_subscription == \"\") {\n        toastr.error(this.tlt('billing_select_amount_msg2'));\n      } else if (this.payment_currency == \"INR\") {\n        this.value_currency_subscription =\n          this.value_currency_subscription.slice(2, -10);\n        this.currency_amount = this.value_currency_subscription * 118;\n        this.top_up_amount = this.value_currency_subscription;\n        if (this.payment_currency == \"INR\") {\n          this.top_up_amount /= 70;\n        }\n        axios\n          .post(\n            api_calls.billing_subscription_url(),\n            {\n              company_id: this.$session.get(\"UserInformation\").company_id,\n              company_name: this.$session.get(\"UserInformation\").company_name,\n              email: this.$session.get(\"UserInformation\").email,\n              license_key: this.$session.get(\"UserInformation\").license_key,\n              token: this.$session.get(\"UserInformation\").tokens,\n              PlanAmount: this.top_up_amount,\n            },\n            {\n              headers: {\n                Authorization: `Bearer ${this.$session.get(\"at\")}`,\n              },\n            }\n          )\n          .then((response) => {\n            if (response.data.SubscriptionId) {\n              pay_amount(response.data.SubscriptionId, \"\", \"Subscribe\");\n            } else if (response.data.Error) {\n              toastr.error(response.data.Error);\n            }\n          })\n          .catch((e) => {\n            if (\n              e.response.status === 410 ||\n              e.response.status === 440 ||\n              e.response.status === 409\n            ) {\n              this.$root.$emit(\"Session_Expired\", e.response.data);\n            }\n          });\n      } else {\n        this.value_currency_subscription =\n          this.value_currency_subscription.slice(2);\n        this.currency_amount = this.value_currency_subscription * 100;\n        this.top_up_amount = this.value_currency_subscription;\n        this.spinnerOn = true;\n        axios\n          .post(\n            api_calls.billing_subscription_url(),\n            {\n              company_id: this.$session.get(\"UserInformation\").company_id,\n              company_botname: this.$session.get(\"UserInformation\").company_name,\n              email: this.$session.get(\"UserInformation\").email,\n              license_key: this.$session.get(\"UserInformation\").license_key,\n              token: this.$session.get(\"UserInformation\").tokens,\n              PlanAmount: this.currency_amount,\n            },\n            {\n              headers: {\n                Authorization: `Bearer ${this.$session.get(\"at\")}`,\n              },\n            }\n          )\n          .then((response) => {\n            this.spinnerOn = false;\n            if (response.data.SubscriptionId) {\n              pay_amount(response.data.SubscriptionId, \"\", \"Subscribe\");\n            } else if (response.data.Error) {\n              toastr.error(response.data.Error);\n            }\n          })\n          .catch((e) => {\n            if (\n              e.response.status === 410 ||\n              e.response.status === 440 ||\n              e.response.status === 409\n            ) {\n              this.$root.$emit(\"Session_Expired\", e.response.data);\n            }\n          });\n      }\n    }\n    function pay_amount(amount, currency_type, payment_type) {\n      if (payment_type == \"Subscribe\") {\n        options = {\n          key: \"rzp_test_SnDTaPnncfliDt\",\n          subscription_id: amount, //This is actually subscription ID\n          // subscription_card_change: 1,\n          name: \"Cense AI\",\n          description: \"Instill Intelligence\",\n          image: \"/img/cense_image.png\", // COMPANY LOGO\n          handler: function (response) {\n            // console.log(response.razorpay_payment_id);\n            // var contact = $('#contact[type=\"tel\"]').value;\n            // var email = $('#email[type=\"email\"]').value;\n            vm.paymentid = response.razorpay_payment_id;\n            vm.value_currency_subscription = \"\";\n          },\n          prefill: {\n            name: \"\", // pass customer name\n            email: \"\", // customer email\n            contact: \"\", //customer phone no.\n          },\n          notes: {\n            address: \"address\", //customer address\n          },\n          theme: {\n            color: \"#283777\", // screen color\n          },\n        };\n        load_checkout();\n      } else if (payment_type == \"Pay\") {\n        options = {\n          key: \"rzp_test_SnDTaPnncfliDt\",\n          amount: amount, // Example: 2000 paise = INR 20\n          currency: currency_type,\n          name: \"Cense AI\",\n          description: \"Instill Intelligence\",\n          image: \"/img/cense_image.png\", // COMPANY LOGO\n\n          handler: function (response) {\n            // console.log(response.razorpay_payment_id);\n            var contact = $('#contact[type=\"tel\"]').value;\n            var email = $('#email[type=\"email\"]').value;\n            vm.paymentid = response.razorpay_payment_id;\n            vm.value_currency_top_up = \"\";\n          },\n          prefill: {\n            name: \"\", // pass customer name\n            email: \"\", // customer email\n            contact: \"\", //customer phone no.\n          },\n          notes: {\n            address: \"address\", //customer address\n          },\n          theme: {\n            color: \"#283777\", // screen color\n          },\n        };\n        load_checkout();\n      }\n    }\n    function load_checkout() {\n      var rzp1 = new Razorpay(options);\n      rzp1.open();\n      event.preventDefault();\n    }\n  },\n  check_retail_plan(value, id) {\n    this.retail_payment_type = null;\n  },\n  subscribe_retail_plan() {\n    // let subscription_data = {\n    //   subscription_plan: this.retail_plan_current,\n    //   billing_cycle: this.retail_payment_type,\n    // };\n    if (this.check_retail_shopify_form_validations) {\n      this.spinnerOn = true;\n      axios\n        .post(api_calls.subscribe_shopify_billing(), {\n          subscription_plan: this.retail_plan_current,\n          billing_cycle: this.retail_payment_type,\n          company_id: this.companyid,\n          company_name: this.companyname,\n          is_paid_plan: this.retail_plan_current.is_chargeable,\n          email: this.$session.get(\"UserInformation\").email,\n        })\n        .then((response) => {\n          this.spinnerOn = false;\n          if (response.data.message.MSG_CODE === this.api_status_code.STATUS_SUCCESS_MODELS.MSG_CODE) {\n            if (this.retail_payment_type == \"Annual\") {\n              if (\n                Boolean(response.data.data) &&\n                Boolean(response.data.data.data.appSubscriptionCreate)\n              ) {\n                Swal({\n                  title:\n                    this.tlt('billing_redirect_shopify_merchant_msg'),\n                  toast: true,\n                  showCancelButton: false,\n                  type: \"info\",\n                  showConfirmButton: false,\n                });\n                setTimeout(() => {\n                  window.location =\n                    response.data.data.data.appSubscriptionCreate.confirmationUrl;\n                }, 1000);\n                this.$root.$emit(\"DashboardSidebarDisable\",false);\n                this.$session.set(\"SettingTopnavbarDisable\",false);\n              }\n            } else if (this.retail_payment_type == \"Monthly\") {\n              if (Boolean(response.data.data.confirmation_url)) {\n                // Swal({\n                //   title: \"Please wait while we redirect You to the Shopify Merchant UI!\",\n                //   toast: true,\n                //   type: \"info\",\n                //   showCancelButton: false,\n                //   showConfirmButton: false\n                // })\n                this.$root.$emit(\"DashboardSidebarDisable\",false);\n                this.$session.set(\"SettingTopnavbarDisable\",false);\n                setTimeout(() => {\n                  window.location = response.data.data.confirmation_url;\n                }, 1000);\n              } else {\n                Swal({\n                  title: this.tlt('billing_error_occurred_msg5'),\n                  text: this.tlt('billing_swal_try_again_msg1'),\n                  type: \"error\",\n                  showCancelButton: false,\n                });\n              }\n            } else if (this.retail_plan_current.is_chargeable === false) {\n              Swal({\n                title: this.tlt('billing_swal_success_msg'),\n                type: \"success\",\n                text: this.tlt('billing_subscribe_free_plan_msg'),\n              });\n            }\n          }else {\n            Swal.fire({\n              title:response.data.message.MSG_CODE,\n              text:response.data.message.MSG,\n              showCancelButton: false,\n              showConfirmButton: false,\n              timer: 2500,\n              type: \"error\"\n            });\n          }\n        })\n        .catch((e) => {\n          this.spinnerOn = false;\n          console.log(e);\n          Swal({\n            title: this.tlt('billing_error_occurred_msg6'),\n            text: this.tlt('billing_swal_try_again_msg2'),\n            type: \"error\",\n            showCancelButton: false,\n          });\n        });\n    } else {\n      Swal({\n        title: this.tlt('billing_select_all_required_value_msg'),\n        type: \"error\",\n        toast: true,\n        showCancelButton: false,\n        showConfirmButton: false,\n        timer:3000\n      });\n    }\n  },\n  submit_stripe_checkout() {\n    if(this.retail_plan_current !== null && this.retail_payment_type !== null){\n      // let chosen_plan_data = this.retail_payment_type===\"Monthly\" || this.retail_plan_current.name===\"WhatsApp\" ? this.stripe_subscription_plans.find((item => (item.amount/100 === this.retail_plan_current.monthly_charge) && (item.currency === this.shop_base_currency)))  : this.stripe_subscription_plans.find((item => (item.amount/100 === this.retail_plan_current.annual_charge.actual_charge) &&  (item.currency === this.shop_base_currency))) \n      // console.log(\"retail_payment_type\",this.retail_payment_type);\n      \n      var chosen_plan_data = {\n        \"plan_name\" : this.retail_plan_current,\n        \"type\": this.retail_payment_type.type,\n        \"nickname\" : this.retail_payment_type.nickname,\n        \"price\" : this.retail_payment_type.price,\n        \"currency\": this.retail_payment_type.currency,\n        \"id\": this.retail_payment_type.price_id\n      }\n      this.spinnerOn = true;\n      axios\n        .post(api_calls.stripe_payment_gateway(), {\n          generate_new_request: true,\n          chosen_plan_data: chosen_plan_data,\n          company_id: this.companyid,\n          company_name: this.companyname,\n          request_type: \"Plan\",\n          email: this.$session.get(\"UserInformation\").email,\n        })\n        .then((response) => {\n          this.spinnerOn = false;\n          if (response.data.message.MSG_CODE === this.api_status_code.DATA_AVAILABLE.MSG_CODE) {\n            window.location = response.data.data;\n             this.$root.$emit(\"DashboardSidebarDisable\",false);\n             this.$session.set(\"SettingTopnavbarDisable\",false);\n          } else {\n            Swal({\n              // title: this.tlt('billing_error_occurred_msg7'),\n              title: response.data.message.MSG_CODE,\n              text: response.data.message.MSG,\n              showCancelButton: false,\n              showConfirmButton: false,\n              timer: 2500,\n              type: \"error\"\n            });\n          }\n          // console.log(response.data);\n        })\n        .catch((e) => {\n          this.spinnerOn = false;\n          console.log(e);\n          Swal({\n            title: this.tlt('billing_error_occurred_msg8'),\n            type: \"error\",\n          });\n        });\n    }else {\n      Swal({\n        title: this.tlt('billing_select_all_field_msg'),\n        type: \"error\",\n        showCancelButton: false\n      });\n    }\n  },\n  submit_stripe_addon_checkout() {\n    if(this.selected_addon_type === null ||this.selected_addon_plan === null ){\n    Swal({\n        title: this.tlt('billing_select_all_field_msg1'),\n        type: \"error\",\n      });\n      return;\n    }\n\n    var chosen_plan_data = {\n      \"plan_name\" : this.selected_addon_plan.Type ,\n      \"price\" : this.selected_addon_type.price,\n      \"currency\": this.selected_addon_type.currency,\n      \"id\": this.selected_addon_type.price_id\n    }\n\n    this.spinnerOn = true;\n      axios\n        .post(api_calls.stripe_payment_gateway(), {\n          generate_new_request: true,\n          chosen_plan_data: chosen_plan_data,\n          company_id: this.companyid,\n          company_name: this.companyname,\n          request_type: \"AddOn\"\n        })\n        .then((response) => {\n          this.spinnerOn = false;\n          if (response.data.message.MSG_CODE === this.api_status_code.DATA_AVAILABLE.MSG_CODE) {\n            window.location = response.data.data;\n          } else {\n            Swal({\n              // title: this.tlt('billing_error_occurred_msg9'),\n              title: response.data.message.MSG_CODE,\n              text: response.data.message.MSG,\n              showCancelButton: false,\n              showConfirmButton: false,\n              timer: 2500,\n              type: \"error\"\n            });\n          }\n          // console.log(response.data);\n        })\n        .catch((e) => {\n          this.spinnerOn = false;\n          console.log(e);\n          Swal({\n            title: this.tlt('billing_error_occurred_msg10'),\n            type: \"error\",\n          });\n        });\n  },\n  get_shop_base_currency(){\n    axios\n      .post(\n        api_calls.product_settings(),\n        {\n          company_name: this.companyname,\n          company_id: this.companyid,\n          email: this.$session.get(\"UserInformation\").email,\n          license_key: this.$session.get(\"UserInformation\").license_key,\n          token: this.$session.get(\"UserInformation\").tokens,\n          is_get: true\n        },\n        {\n          headers: {\n            Authorization: `Bearer ${this.$session.get(\"at\")}`\n          }\n        }\n      ).then((response) => {\n        let web_framework = this.retail_web_framework;\n        if (\n            response.data.message.MSG_CODE != this.api_status_code.INTERNAL_SERVER_ERROR.MSG_CODE &&\n            response.data.message.MSG_CODE != this.api_status_code.NO_DATA_AVAILABLE.MSG_CODE\n        ) {\n          this.shop_base_currency = response.data.data[web_framework + '_details'].base_currency.value;\n          this.shop_base_currency = this.acceptable_shop_base_currencies.includes(this.shop_base_currency) ?  this.shop_base_currency.toLowerCase() : 'usd'\n        }\n      }).catch((e) => {\n        this.shop_base_currency = 'usd';\n      })\n  },\n  },\n};\n</script>\n<style scoped>\n.red-btn{\n    font-size: 14px;\n    color: #fff;\n    background: #F23D3D;;\n    border: solid 1px #F23D3D;;\n    padding: 6px 15px;\n    font-weight: 400;\n    line-height: 20px;\n    display: inline-block;\n    border-radius: 4px;\n    cursor: pointer;\n    margin-left: 18px\n\n}\n.red-btn:hover {\n  background: none;\n  color: #273679;\n}\n\n.dash-card .card-body {\n  min-height: fit-content;\n}\n.col-lg-2 {\n  width: 100%;\n  margin-bottom: 1%;\n}\n#year_select_id {\n  padding: 5px 5px 5px 5px;\n}\n#payment_btn {\n  margin-left: auto;\n  width: auto;\n  text-align: center;\n  padding: 6px 15px;\n}\n.table td,\n.table th {\n  vertical-align: baseline;\n}\n</style>\n\n<style>\n/* .multiselect__tags {\n  min-height: 38px !important;\n  max-height: 42px !important;\n  height: 42px;\n} */\n</style>"],"sourceRoot":"src/portal/Chatbot/Dashboard/Account"}]}