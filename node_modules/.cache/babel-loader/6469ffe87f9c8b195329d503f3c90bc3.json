{"remainingRequest":"/home/vimalesh/Learning/devops_ui/node_modules/babel-loader/lib/index.js!/home/vimalesh/Learning/devops_ui/node_modules/eslint-loader/index.js??ref--13-0!/home/vimalesh/Learning/devops_ui/src/portal/mixins/ResponseBot/start_voice_communication.js","dependencies":[{"path":"/home/vimalesh/Learning/devops_ui/src/portal/mixins/ResponseBot/start_voice_communication.js","mtime":1655466509209},{"path":"/home/vimalesh/Learning/devops_ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vimalesh/Learning/devops_ui/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/vimalesh/Learning/devops_ui/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:ZXhwb3J0IGRlZmF1bHQgewogIG1ldGhvZHM6IHsKICAgIHZvaWNlX2NvbW11bmljYXRpb246IGZ1bmN0aW9uIHZvaWNlX2NvbW11bmljYXRpb24oKSB7CiAgICAgIGlmICgvQ2hyb21pdW0vaS50ZXN0KG5hdmlnYXRvci51c2VyQWdlbnQpKSB7CiAgICAgICAgdGhpcy5jYWxsX2Nsb3VkX2FwaSgpOwogICAgICB9IGVsc2UgaWYgKHdpbmRvdy5TcGVlY2hSZWNvZ25pdGlvbiAhPSB1bmRlZmluZWQpIHsKICAgICAgICB0aGlzLnJlY29nbml0aW9uID0gbmV3IHdpbmRvdy5TcGVlY2hSZWNvZ25pdGlvbigpOwogICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoIiNtaWNyb3Bob25lIikuY2xhc3NMaXN0LmFkZCgidm9pY2Utb24iKTsKCiAgICAgICAgdGhpcy5yZWNvZ25pdGlvbi5vbnJlc3VsdCA9IGZ1bmN0aW9uIChlKSB7CiAgICAgICAgICB2YXIgc3BlZWNoVG9UZXh0ID0gZS5yZXN1bHRzWzBdWzBdLnRyYW5zY3JpcHQ7CiAgICAgICAgfTsKCiAgICAgICAgdGhpcy5yZWNvZ25pdGlvbi5vbmVuZCA9IGZ1bmN0aW9uICgpIHsKICAgICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoIiNtaWNyb3Bob25lIikuY2xhc3NMaXN0LnJlbW92ZSgidm9pY2Utb24iKTsgLy9BZ2FpbiDigJMgZ2l2ZSB0aGUgdXNlciBmZWVkYmFjayB0aGF0IHlvdSBhcmUgbm90IGxpc3RlbmluZyBhbnltb3JlLiBJZiB5b3Ugd2lzaCB0byBhY2hpZXZlIGNvbnRpbnVvdXMgcmVjb2duaXRpb24g4oCTIHlvdSBjYW4gd3JpdGUgYSBzY3JpcHQgdG8gc3RhcnQgdGhlIHJlY29nbml6ZXIgYWdhaW4gaGVyZS4KICAgICAgICB9OwoKICAgICAgICB2YXIgdm0gPSB0aGlzOwoKICAgICAgICB0aGlzLnJlY29nbml0aW9uLm9ucmVzdWx0ID0gZnVuY3Rpb24gKGV2ZW50KSB7CiAgICAgICAgICBpZiAodHlwZW9mIGV2ZW50LnJlc3VsdHMgPT09ICJ1bmRlZmluZWQiKSB7CiAgICAgICAgICAgIC8vU29tZXRoaW5nIGlzIHdyb25n4oCmCiAgICAgICAgICAgIHRoaXMucmVjb2duaXRpb24uc3RvcCgpOwogICAgICAgICAgICByZXR1cm47CiAgICAgICAgICB9CgogICAgICAgICAgZm9yICh2YXIgaSA9IGV2ZW50LnJlc3VsdEluZGV4OyBpIDwgZXZlbnQucmVzdWx0cy5sZW5ndGg7ICsraSkgewogICAgICAgICAgICBpZiAoZXZlbnQucmVzdWx0c1tpXS5pc0ZpbmFsKSB7CiAgICAgICAgICAgICAgLy9GaW5hbCByZXN1bHRzCiAgICAgICAgICAgICAgdm0uJGVtaXQoJ2FuYWx5dGljc19zZWFyY2hfYmFyX3ZvaWNlX3Jlc3VsdCcsIGV2ZW50LnJlc3VsdHNbaV1bMF0udHJhbnNjcmlwdCk7CiAgICAgICAgICAgICAgdm0udG9fc2VuZCA9IGV2ZW50LnJlc3VsdHNbaV1bMF0udHJhbnNjcmlwdDsKICAgICAgICAgICAgICBjb25zb2xlLmxvZygiZmluYWwgcmVzdWx0czogIiArIGV2ZW50LnJlc3VsdHNbaV1bMF0udHJhbnNjcmlwdCk7IC8vT2YgY291cnNlIOKAkyBoZXJlIGlzIHRoZSBwbGFjZSB0byBkbyB1c2VmdWwgdGhpbmdzIHdpdGggdGhlIHJlc3VsdHMuCiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgLy9pLmUuIGludGVyaW0uLi4KICAgICAgICAgICAgICBjb25zb2xlLmxvZygiaW50ZXJpbSByZXN1bHRzOiAiICsgZXZlbnQucmVzdWx0c1tpXVswXS50cmFuc2NyaXB0KTsgLy9Zb3UgY2FuIHVzZSB0aGVzZSByZXN1bHRzIHRvIGdpdmUgdGhlIHVzZXIgbmVhciByZWFsIHRpbWUgZXhwZXJpZW5jZS4KICAgICAgICAgICAgfQogICAgICAgICAgfSAvL2VuZCBmb3IgbG9vcAoKICAgICAgICB9OwoKICAgICAgICB0aGlzLnJlY29nbml0aW9uLnN0YXJ0KCk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgdGhpcy5jYWxsX2Nsb3VkX2FwaSgpOwogICAgICB9CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["/home/vimalesh/Learning/devops_ui/src/portal/mixins/ResponseBot/start_voice_communication.js"],"names":["methods","voice_communication","test","navigator","userAgent","call_cloud_api","window","SpeechRecognition","undefined","recognition","document","querySelector","classList","add","onresult","e","speechToText","results","transcript","onend","remove","vm","event","stop","i","resultIndex","length","isFinal","$emit","to_send","console","log","start"],"mappings":"AAAA,eAAe;AACbA,EAAAA,OAAO,EAAE;AACPC,IAAAA,mBADO,iCACgB;AACrB,UAAI,YAAYC,IAAZ,CAAiBC,SAAS,CAACC,SAA3B,CAAJ,EAA2C;AACzC,aAAKC,cAAL;AACD,OAFD,MAEO,IAAIC,MAAM,CAACC,iBAAP,IAA4BC,SAAhC,EAA2C;AAChD,aAAKC,WAAL,GAAmB,IAAIH,MAAM,CAACC,iBAAX,EAAnB;AACAG,QAAAA,QAAQ,CAACC,aAAT,CAAuB,aAAvB,EAAsCC,SAAtC,CAAgDC,GAAhD,CAAoD,UAApD;;AACA,aAAKJ,WAAL,CAAiBK,QAAjB,GAA4B,UAAAC,CAAC,EAAI;AAC/B,cAAMC,YAAY,GAAGD,CAAC,CAACE,OAAF,CAAU,CAAV,EAAa,CAAb,EAAgBC,UAArC;AACD,SAFD;;AAGA,aAAKT,WAAL,CAAiBU,KAAjB,GAAyB,YAAY;AACnCT,UAAAA,QAAQ,CAACC,aAAT,CAAuB,aAAvB,EAAsCC,SAAtC,CAAgDQ,MAAhD,CAAuD,UAAvD,EADmC,CAEnC;AACD,SAHD;;AAIA,YAAIC,EAAE,GAAG,IAAT;;AACA,aAAKZ,WAAL,CAAiBK,QAAjB,GAA4B,UAAUQ,KAAV,EAAiB;AAC3C,cAAI,OAAOA,KAAK,CAACL,OAAb,KAAyB,WAA7B,EAA0C;AACxC;AACA,iBAAKR,WAAL,CAAiBc,IAAjB;AACA;AACD;;AACD,eAAK,IAAIC,CAAC,GAAGF,KAAK,CAACG,WAAnB,EAAgCD,CAAC,GAAGF,KAAK,CAACL,OAAN,CAAcS,MAAlD,EAA0D,EAAEF,CAA5D,EAA+D;AAC7D,gBAAIF,KAAK,CAACL,OAAN,CAAcO,CAAd,EAAiBG,OAArB,EAA8B;AAC5B;AACAN,cAAAA,EAAE,CAACO,KAAH,CAAS,mCAAT,EAA8CN,KAAK,CAACL,OAAN,CAAcO,CAAd,EAAiB,CAAjB,EAAoBN,UAAlE;AACAG,cAAAA,EAAE,CAACQ,OAAH,GAAaP,KAAK,CAACL,OAAN,CAAcO,CAAd,EAAiB,CAAjB,EAAoBN,UAAjC;AACAY,cAAAA,OAAO,CAACC,GAAR,CAAY,oBAAoBT,KAAK,CAACL,OAAN,CAAcO,CAAd,EAAiB,CAAjB,EAAoBN,UAApD,EAJ4B,CAIqC;AAClE,aALD,MAKO;AACL;AACAY,cAAAA,OAAO,CAACC,GAAR,CAAY,sBAAsBT,KAAK,CAACL,OAAN,CAAcO,CAAd,EAAiB,CAAjB,EAAoBN,UAAtD,EAFK,CAE8D;AACpE;AACF,WAhB0C,CAgBzC;;AACH,SAjBD;;AAkBA,aAAKT,WAAL,CAAiBuB,KAAjB;AACD,OA9BM,MA8BA;AACL,aAAK3B,cAAL;AACD;AACF;AArCM;AADI,CAAf","sourcesContent":["export default {\n  methods: {\n    voice_communication () {\n      if (/Chromium/i.test(navigator.userAgent)) {\n        this.call_cloud_api();\n      } else if (window.SpeechRecognition != undefined) {\n        this.recognition = new window.SpeechRecognition();\n        document.querySelector(\"#microphone\").classList.add(\"voice-on\");\n        this.recognition.onresult = e => {\n          const speechToText = e.results[0][0].transcript;\n        };\n        this.recognition.onend = function () {\n          document.querySelector(\"#microphone\").classList.remove(\"voice-on\");\n          //Again – give the user feedback that you are not listening anymore. If you wish to achieve continuous recognition – you can write a script to start the recognizer again here.\n        };\n        var vm = this;\n        this.recognition.onresult = function (event) {\n          if (typeof event.results === \"undefined\") {\n            //Something is wrong…\n            this.recognition.stop();\n            return;\n          }\n          for (var i = event.resultIndex; i < event.results.length; ++i) {\n            if (event.results[i].isFinal) {\n              //Final results\n              vm.$emit('analytics_search_bar_voice_result', event.results[i][0].transcript )\n              vm.to_send = event.results[i][0].transcript;\n              console.log(\"final results: \" + event.results[i][0].transcript); //Of course – here is the place to do useful things with the results.\n            } else {\n              //i.e. interim...\n              console.log(\"interim results: \" + event.results[i][0].transcript); //You can use these results to give the user near real time experience.\n            }\n          } //end for loop\n        };\n        this.recognition.start();\n      } else {\n        this.call_cloud_api();\n      }\n    },\n  },\n}\n"]}]}