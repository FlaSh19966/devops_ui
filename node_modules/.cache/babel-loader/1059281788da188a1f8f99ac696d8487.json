{"remainingRequest":"/home/vimalesh/CENSE/chatbot-portal/node_modules/babel-loader/lib/index.js!/home/vimalesh/CENSE/chatbot-portal/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/vimalesh/CENSE/chatbot-portal/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/vimalesh/CENSE/chatbot-portal/src/portal/analytics/components/StackedBarchartNonTime.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/vimalesh/CENSE/chatbot-portal/src/portal/analytics/components/StackedBarchartNonTime.vue","mtime":1643027096188},{"path":"/home/vimalesh/CENSE/chatbot-portal/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vimalesh/CENSE/chatbot-portal/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/vimalesh/CENSE/chatbot-portal/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vimalesh/CENSE/chatbot-portal/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["StackedBarchartNonTime.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n<div>\n  <div id=\"stackedbarnontime\" style=\"display:flex\">\n      <svg id=\"StackedBarChartNonTime\" width=\"800\" height=\"650\"></svg>\n    <div id=\"legend_div\"></div>\n  </div>\n</div>\n</template>\n\n<script>\nconst d3 = require(\"d3\");\nexport default {\n    name: \"StackedBarChartNonTime\",\n    props: {\n        data: Array,\n        xKey: String,\n        yKey: String,\n        primary_col: String,  \n        secondary_col: String,\n        currency_key: String\n    },\n  mounted () {\n    // console.log(this.currency_key)\n    var vm = this;\n    var map = this.data.reduce((r, i) => ((r[i[vm.primary_col]] = r[i[vm.primary_col]] || []).push({\n        date : i[vm.secondary_col],\n        sales: i[vm.yKey]\n             // i\n    }), r), {});\n    var entries = Object.entries(map);\n    const second_data = [];\n    for(let i =0; i < entries.length; i++) {\n            second_data.push({\n            State : entries[i][0],\n        })\n        for(let j =0 ; j < entries[i][1].length; j++) {\n            var temp = Object.values(entries[i][1][j]);\n            var a = temp[0],\n                b = temp[1];\n            second_data[i][a] = b;\n        }\n    }\n\n    var  data = [];\n    data = second_data;\n    let key_data_temp = [],\n    key_data_temp_length = [];\n    for(let i = 0; i < data.length; i++){\n        key_data_temp.push(d3.keys(data[i]).slice(1))\n        key_data_temp_length.push(d3.keys(data[i]).slice(1).length)\n    }\n\n    // console.log(key_data_temp);\n    // console.log(key_data_temp_length);\n    // console.log(Math.max(...key_data_temp_length))\n    // console.log(indexOfMax(key_data_temp_length))\n    var keys = key_data_temp[indexOfMax(key_data_temp_length)]\n    function indexOfMax(arr) {\n    if (arr.length === 0) {\n        return -1;\n    }\n\n    var max = arr[0];\n    var maxIndex = 0;\n\n    for (var i = 1; i < arr.length; i++) {\n        if (arr[i] > max) {\n            maxIndex = i;\n            max = arr[i];\n        }\n    }\n\n    return maxIndex;\n    }\n    let key_data_temp_2 = [];\n    for(let i =0; i < key_data_temp.length; i++){\n        for(let j = 0; j < key_data_temp[i].length; j++){\n            key_data_temp_2.push(key_data_temp[i][j])\n        }\n    }\n    // var keys = d3.keys(data[0]).slice(1);\n    // console.log(key_data_temp);\n    // console.log(key_data_temp_2, \"HERRREEE\");\n    // var xyz = key_data_temp_2.filter((value,index) => key_data_temp_2.indexOf(value) === index);\n    var xyz = key_data_temp_2.reduce(function(a,b){\n        if(a.indexOf(b) < 0 ) a.push(b);\n        return a;\n    }, [])\n    // console.log(xyz, 'HERE FOR DISTINCT')\n    // console.log(data);\n    // console.log(keys);\n    // var keys = xyz;\n    // var keys = [\"OPEN\", \"ARBITRATION\", \"DENIED\", \"Dropped\"\n    // , \"PAID\", \"Paid In Full\"]\n    //  \"Stopped\", \"To Litigate\", \"Transfered KH\", \"DISCHARGED\", \"STOPPED\", \"Lien\", \"SENT TO LITIGATION\", \"Transferred to KH \", \"Paid In Full\", \n    // \"Do Not Bill\", \"Transfered\", \"COLLECT\", \"DATA ENTRY\", \"Collect\", \"Write off\"];\n    // console.log(keys);\n    for(let i= 0; i< data.length; i++){\n        for (var j = 0, t = 0; j < keys.length; ++j) {\n            t += data[i][keys[j]] = +data[i][keys[j]];\n        }\n    data[i].total = t;\n    }\n    var isScrollDisplayed =  false,\n    numBars = 25;\n    var marginOverview = {top: 30, right: 10, bottom: 20, left: 70};\n    var heightOverview = 80 - marginOverview.top - marginOverview.bottom;\n    if(entries.length > 25 ) { isScrollDisplayed = true; }\n    // console.log(data)\n\n\n    var svg = d3.select(\"#StackedBarChartNonTime\"),\n        margin = {top: 10, right: 0, bottom: 10, left: 30},\n        width = +svg.attr(\"width\") - margin.left - margin.right,\n        height = +svg.attr(\"height\") - margin.top - margin.bottom,\n        g = svg.append(\"g\").attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n    // set x scale\n    var x = d3.scaleBand()\n        .rangeRound([50, (width- (.15 * width ))])\n        .paddingInner(0.05)\n        .align(0.1);\n\n    // set y scale\n    var y = d3.scaleLinear()\n        .rangeRound([height-150, 0]);\n\n    // set the colors\n    // var z = d3.scaleOrdinal()\n    //         .range([\"#98abc5\", \"#8a89a6\", \"#7b6888\", \"#6b486b\", \"#a05d56\", \"#d0743c\", \"#ff8c00\"]);\n    \n    // var z = d3.scaleOrdinal()\n    //         .range([\"#5d62b5\", \"#29c3be\", \"#f1726e\", \"#fbc53f\", \"#62b58f\", \"#d0743c\", \"#ff8c00\",\"#ca0020\",\"#f4a582\",\"#d5d5d5\",\"#92c5de\",\"#0571b0\",\"#0519b0\"]);\n\n    // var z = d3.scaleOrdinal()\n    //         .range([\"#FF9750\",\"#3FBC11\", \"#5d62b5\", \"#29c3be\", \"#f1726e\", \"#fbc53f\", \"#62b58f\", \"#d0743c\",\"#ca0020\",\"#f4a582\",\"#92c5de\",\"#0571b0\", \"#d3fe14\", \"#fec7f8\", \"#0b7b3e\", \"#0bf0e9\",'#E666B3', '#33991A', '#CC9999', '#B3B31A', '#00E680',\n    //         '#FF9AA2', '#FFB7B2', '#FFDAC1', '#B5EAD7', '#63d2a8', \"#225a4b\", \"#e5df73\", '#6666FF','#ff0000\t','#a2798f','#d7c6cf','#e88758','#b13a15','#6d3656','#fffa90','#a4ffaa','#a6cbff','#8500f9','#b077ba','\t#765284','#984b67','#9c624e','#feb8ff','#9be3bd','#775934','#008385','#6a2ca1','#e60e68','#ff6d01','#fee9d3'\n    //         ]);\n    var z = d3.scaleOrdinal()\n            .range([\"#FBB317\",\"#FF9750\",\"#3FBC11\",\"#00C7E6\",\"#EA3379\",\"#0165fc\",\"#41fdfe\",\"#24a0ed\",\"#1ac1dd\",\"#7df9ff\",\"#3f00ff\",\"#08ff08\",\"#aeff6e\",\"#56fca2\",\"#45cea2\",\"#06c2ac\",\"#fe6700\",\"#ff3503\",\"#d90166\",\"#be03fd\",\"#ad0afd\",\"#6600ff\",\"#d01c1f\",\"#f1172f\",\"#fff600\",\"#fcd116\",\"#cfff04\",\"#ffc324\",\"#f4c430\",\"#FE7D68\",\"#710193\",\n            \"#0492C2\",\"#9897A9\",\"#632A0D\",\"#9A794E\",\"#151E3D\",\"#59788D\",\"#1E456E\",\"#016064\",\"#48AAAD\",\"#7E7D9C\",\"#303150\",\"#609D9E\",\"#287E9E\",\"#E4A834\",\"#028910\",\n            \"#373737\",\"#6C626D\",\"#584D5B\",\"#4D4C5C\"]);\n\n    // var z = [\"#5d62b5\", \"#29c3be\", \"#f1726e\", \"#fbc53f\", \"#62b58f\", \"#d0743c\",\"#ca0020\",\"#f4a582\",\"#92c5de\",\"#0571b0\", \"#d3fe14\", \"#fec7f8\", \"#0b7b3e\", \"#0bf0e9\",'#E666B3', '#33991A', '#CC9999', '#B3B31A', '#00E680',\n    // '#FF9AA2', '#FFB7B2', '#FFDAC1', '#B5EAD7', '#63d2a8', \"#225a4b\", \"#e5df73\", '#6666FF','\t#ff0000\t','#a2798f','#d7c6cf','#e88758','#b13a15','#6d3656','#fffa90','#a4ffaa','#a6cbff','#8500f9','#b077ba','\t#765284','#984b67','#9c624e','#feb8ff','#9be3bd','#775934','#008385','#6a2ca1','#e60e68','#ff6d01','#fee9d3'\n    // ];\n\n    // var z =  d3.scaleOrdinal()\n    //    .domain(data.map(d => d[\"Outcome\"]))\n    //    .range(d3.quantize(t => d3.interpolateSpectral  (t * 0.8 + 0.1), data.length).reverse());\n\n\n    data.sort(function(a, b) { return b.total - a.total; });\n    if(isScrollDisplayed) {\n        x.domain(data.slice(0,numBars).map(function(d) { return d.State; }));\n    } else {\n        x.domain(data.map(function(d) { return d.State; }));\n    }\n    y.domain([0, d3.max(data, function(d) { return d.total; })]).nice();\n    z.domain(keys);\n\n    if(isScrollDisplayed) {\n        \n       var stacks = g.append(\"g\")\n        .attr(\"class\", \"stacks\")\n        .selectAll(\"g\")\n        .data(d3.stack().keys(keys)(data.slice(0,numBars)))\n        .enter().append(\"g\")\n        .attr(\"class\", \".bar-positive-stack\")\n        .attr(\"fill\", function(d) { return z(d.key); })\n        .selectAll(\"rect\")\n        .data(function(d) { return d; })\n        .enter().append(\"rect\")\n        .attr(\"class\", \".bar-positive-rect\")\n        .attr(\"x\", function(d) { return x(d.data.State); })\n        .attr(\"height\", function(d) { return (isNaN(y(d[0]) - y(d[1])) ? 0 : (y(d[0]) - y(d[1])) ); })\n        .attr(\"width\", x.bandwidth())\n        .attr(\"y\", function(d,i) {return i * 100; })\n        // .attr(\"y\", function(d) {return y(d[1]); })\n\n\n        .on(\"mouseover\", function() { tooltip.style(\"display\", null); })\n        .on(\"mouseout\", function() { tooltip.style(\"display\", \"none\"); })\n        .on(\"mousemove\", function(d) {\n        var xPosition = d3.mouse(this)[0] - 5;\n        var yPosition = d3.mouse(this)[1] - 5;\n       \n        var current_val =  (d[1]-d[0]);\n        var data_length = Object.values(d.data).length, groupname;\n        for(let i = 0; i < data_length; i++) {\n            if(Object.values(d.data)[i] === current_val) {\n                  groupname = Object.keys(d.data)[i];\n                //   break;\n            }\n        }\n        tooltip\n         .style(\"left\", d3.event.pageX - 400 + \"px\")\n              .style(\"top\", d3.event.pageY - 270 + \"px\")\n              .style(\"display\", \"inline-block\")\n              .html( (Number.isInteger((d[1]-d[0])) ? vm.currency_key+(d[1]-d[0]) : vm.currency_key+(d[1]-d[0]).toFixed(2)) + \"<br>\"  + d.data.State + \"<br> <em> <b>\" + groupname +\"<b></em>\" );\n\n        });\n\n\n        stacks\n        .transition()\n        .delay((d,i)=> i * 150)\n        .duration(800)\n        .attr(\"y\", function(d) {return y(d[1]); })\n\n\n        var xOverview = d3.scaleBand()\n                        .domain(data.map(function (d) { return d.label; }))\n                        .range([0, width], .2);\n        var yOverview = d3.scaleLinear().range([heightOverview, 0]);\n        yOverview.domain(y.domain());\n\n        var displayed = d3.scaleQuantize()\n                  .domain([0, width])\n                  .range(d3.range(data.length));\n                   svg.append(\"g\").append(\"rect\")\n                  .attr(\"transform\", \"translate(55, \" + (height - 134) + \")\")\n                  .attr(\"class\", \"mover\")\n                  .attr(\"x\", 0)\n                  .attr(\"y\", 0)\n                  .attr(\"rx\",5)\n                  .attr(\"ry\",10)\n                  .attr(\"height\", 10)\n                  .attr(\"width\",Math.round(parseFloat(numBars * width)/data.length))\n                  .attr(\"pointer-events\", \"all\")\n                  .attr(\"cursor\", \"ew-resize\")\n                  .call(d3.drag().on(\"drag\", display));\n\n    } else {\n     var stacks =  g.append(\"g\")\n        .attr(\"class\", \"stacks\")\n        .selectAll(\"g\")\n        .data(d3.stack().keys(keys)(data))\n        .enter().append(\"g\")\n        .attr(\"class\", \".bar-positive-stack\")\n        .attr(\"fill\", function(d) { return z(d.key); })\n        .selectAll(\"rect\")\n        .data(function(d) { return d; })\n        .enter().append(\"rect\")\n        .attr(\"x\", function(d) { return x(d.data.State); })\n        // .attr(\"y\", function(d) {return y(d[1]); })\n        .attr(\"y\", function(d,i) { return i * 100; })\n        .attr(\"height\", function(d) { return (isNaN(y(d[0]) - y(d[1])) ? 0 : (y(d[0]) - y(d[1])) ); })\n        .attr(\"width\", x.bandwidth())\n        .on(\"mouseover\", function() { tooltip.style(\"display\", null); })\n        .on(\"mouseout\", function() { tooltip.style(\"display\", \"none\"); })\n        .on(\"mousemove\", function(d) {\n        // console.log(d);\n        var xPosition = d3.mouse(this)[0] - 5;\n        var yPosition = d3.mouse(this)[1] - 5;\n       \n        var current_val =  (d[1]-d[0]);\n        // console.log(current_val);\n        var data_length = Object.values(d.data).length, groupname;\n        for(let i = 0; i < data_length; i++) {\n            if(Object.values(d.data)[i] === current_val) {\n                groupname = Object.keys(d.data)[i];\n                break;\n            }\n        }\n        tooltip\n         .style(\"left\", d3.event.pageX - 400 + \"px\")\n              .style(\"top\", d3.event.pageY - 270 + \"px\")\n              .style(\"display\", \"inline-block\")\n              .html(  (Number.isInteger((d[1]-d[0])) ? vm.currency_key+(d[1]-d[0]) : vm.currency_key+(d[1]-d[0]).toFixed(2)) + \"<br>\"  + d.data.State + \"<br> <em> <b>\" + groupname +\"<b></em>\" );\n\n        });\n\n        stacks\n        .transition()\n        .delay((d,i)=> i * 150)\n        .duration(800)\n        .attr(\"y\", function(d) { \n            // console.log(d[1], y(d[1])); \n            if(isNaN(d[1])){\n                return 0;\n            } else if(isNaN(y(d[1]))){ \n                return 0;\n            } else{\n                return y(d[1]); \n            }\n            })\n\n    }\n    if(this.data.length > 14){\n        g.append(\"g\")\n        .attr(\"class\", \"axis\")\n        .attr(\"transform\", \"translate(0,\" + (height-140) + \")\")\n        .call(d3.axisBottom(x))\n        .selectAll(\"text\")\n        .attr(\"y\", 0)\n        .attr(\"x\", -10)\n        .attr(\"dy\", \".35em\")\n        .attr(\"transform\", \"rotate(-70)\")\n        .style(\"text-anchor\", \"end\");\n          \n\n    } else {\n         g.append(\"g\")\n        .attr(\"class\", \"axis\")\n        .attr(\"transform\", \"translate(0,\" + (height-140) + \")\")\n        .call(d3.axisBottom(x))\n         d3.selectAll(\".tick text\")\n          .call(wrap, x.bandwidth())\n           function wrap(text, width) {\n            text.each(function() {\n              var text = d3.select(this),\n                  words = text.text().split(/\\s+/).reverse(),\n                  word,\n                  line = [],\n                  lineNumber = 0,\n                  lineHeight = 1.1, // ems\n                  y = text.attr(\"y\"),\n                  dy = parseFloat(text.attr(\"dy\")),\n                  tspan = text.text(null).append(\"tspan\").attr(\"x\", 0).attr(\"y\", y).attr(\"dy\", dy + \"em\");\n              while (word = words.pop()) {\n                line.push(word);\n                tspan.text(line.join(\" \"));\n                if (tspan.node().getComputedTextLength() > width) {\n                  line.pop();\n                  tspan.text(line.join(\" \"));\n                  line = [word];\n                  tspan = text.append(\"tspan\").attr(\"x\", 0).attr(\"y\", y).attr(\"dy\", ++lineNumber * lineHeight + dy + \"em\").text(word)\n              \n                }\n              }\n            });\n          }  \n    }\n\n    g.append(\"g\")\n        .attr(\"class\", \"axis\")\n        .attr(\"transform\", \"translate(30,0)\")\n        .call(d3.axisLeft(y).ticks(null, \"s\"))\n        .append(\"text\")\n        .attr(\"x\", 2)\n        .attr(\"y\", function(){ return y(y.ticks().pop()) + 0.5;})\n        .attr(\"dy\", \"0.32em\")\n        .attr(\"fill\", \"#000\")\n        .attr(\"font-weight\", \"bold\")\n        .attr(\"text-anchor\", \"start\");\n\n    \n    if(keys.length > 10 ){\n        var legend_div = d3.select(\"#legend_div\").append(\"svg\").style(\"width\",\"200%\").style(\"height\",\"250%\");\n    } else {\n        var legend_div = d3.select(\"#legend_div\").append(\"svg\").style(\"width\",\"200%\").style(\"height\",\"100%\");\n    }\n    var legend_g =  legend_div.append(\"g\").attr(\"transform\", \"translate(0,0)\");\n    var legend = legend_g.append(\"g\")\n        .attr(\"font-family\", \"sans-serif\")\n        .attr(\"font-size\", 10)\n        .attr(\"text-anchor\", \"end\")\n        .selectAll(\"g\")\n        // .data(keys.slice().reverse())\n        .data(keys.slice())\n        .enter().append(\"g\")\n        // .attr(\"transform\", function(d, i) { return \"translate(0,0)\"; });\n        .attr(\"transform\", function(d, i) { return \"translate(0,\" + i * 20 + \")\"; });\n\n    legend.append(\"rect\")\n        .attr(\"x\", 0)\n        .attr(\"width\", 19)\n        .attr(\"height\", 19)\n        .attr(\"fill\", z);\n\n    legend.append(\"text\")\n        .attr(\"x\", 25)\n        .attr(\"y\", 9.5)\n        .attr(\"class\", \"legend_text\")\n        .attr(\"dy\", \"0.32em\")\n        .text(function(d) {\n            // return d;\n            if(d.length > 25){\n                return d.substring(0,25).toUpperCase()+'...';\n            } else {\n            return d.toUpperCase()\n            }\n        })\n        .style(\"text-anchor\", \"start\")\n    \n     d3.selectAll('.legend_text').call(show_long_labels);\n        function show_long_labels(selection) {\n            selection.on('mouseenter', function (d,i) { \n                if(d.length > 25){\n                  tooltip\n                    .style(\"left\", d3.event.pageX - 400 + \"px\")\n                    .style(\"top\", d3.event.pageY - 290 + \"px\")\n                    .style(\"display\", \"inline-block\")\n                    .html(d.toUpperCase());\n            }\n            });\n\n            selection.on(\"mouseout\", function(d,i) {\n                // d3.selectAll(\".toolTip\").remove();\n                tooltip.style(\"display\", \"none\"); // hide tooltip for that element\n            });\n\n            selection.on(\"mousemove\", function(d) {\n                tooltip\n                .style(\"top\", d3.event.layerY + 10 + \"px\") \n                .style(\"left\", d3.event.layerX + 410 + \"px\"); \n            });\n        }\n    // Prep the tooltip bits, initial display is hidden\n    var tooltip = \n        d3.select(\"#stackedbarnontime\").append(\"div\").attr(\"class\", \"toolTip\")\n\n    // d3.selectAll(\".tick text\")\n    //   .on(\"mouseover\", function() {  })\n    //     .on(\"mouseout\", function() {  })\n    //     .on(\"mousemove\", function(d) { console.log(d); });\n\n    var text_wrap = function() {\n        var self = d3.select(this),\n            textLength = self.node().getComputedTextLength(),\n            text = self.text();\n        while (textLength > (50) && text.length > 0) {\n            text = text.slice(0, -1);\n            self.text(text + '...');\n            textLength = self.node().getComputedTextLength();\n        }\n    };\n    \n    function display () {\n     // debugger;\n        var xy = parseInt(d3.select(this).attr(\"x\")),\n            nx = xy + d3.event.dx,\n            w = parseInt(d3.select(this).attr(\"width\")),\n            f, nf, new_data, rects;\n\n        if ( nx < 0 || nx + w > (width*0.9) ) return;\n\n        d3.select(this).attr(\"x\", nx);\n\n        f = displayed(xy);\n        nf = displayed(nx);\n\n        if ( f === nf ) return;\n\n        new_data = data.slice(nf, nf + numBars);\n\n        x.domain(new_data.map(function (d) { return d.State; }));\n\n        if(numBars > 8 ){\n            svg.select(\".axis\")\n            .call(d3.axisBottom(x))\n            .selectAll(\"text\")\n          .attr(\"y\", 0)\n          .attr(\"x\", -10)\n          .attr(\"dy\", \".35em\")\n          .attr(\"transform\", \"rotate(-70)\")\n          .style(\"text-anchor\", \"end\");\n        } else {\n            svg.select(\".axis\")\n            .call(d3.axisBottom(x))\n            d3.selectAll(\".tick text\")\n            .call(wrap, x.bandwidth())\n            function wrap(text, width) {\n                text.each(function() {\n              var text = d3.select(this),\n                  words = text.text().split(/\\s+/).reverse(),\n                  word,\n                  line = [],\n                  lineNumber = 0,\n                  lineHeight = 1.1, // ems\n                  y = text.attr(\"y\"),\n                  dy = parseFloat(text.attr(\"dy\")),\n                  tspan = text.text(null).append(\"tspan\").attr(\"x\", 0).attr(\"y\", y).attr(\"dy\", dy + \"em\");\n                 while (word = words.pop()) {\n                line.push(word);\n                tspan.text(line.join(\" \"));\n                if (tspan.node().getComputedTextLength() > width) {\n                  line.pop();\n                  tspan.text(line.join(\" \"));\n                  line = [word];\n                  tspan = text.append(\"tspan\").attr(\"x\", 0).attr(\"y\", y).attr(\"dy\", ++lineNumber * lineHeight + dy + \"em\").text(word)\n              \n                }\n              }\n            });\n          }  \n        }\n        \n        d3.selectAll(\".bar-positive-stack\").remove();\n        d3.selectAll(\".stacks\").remove();\n        rects = svg.selectAll(\".bar-positive-stack\")\n        .data(new_data, function (d) {return d.label; });\n          rects.attr(\"x\", function (d) { return x(d.data.State); });\n\n        // rects\n        g.append(\"g\")\n        .attr(\"class\", \"stacks\")\n        .selectAll(\"g\")\n        .data(d3.stack().keys(keys)(new_data))\n        .enter().append(\"g\")\n        .attr(\"class\", \".bar-positive-stack\")\n        .attr(\"fill\", function(d) { return z(d.key); })\n        .selectAll(\"rect\")\n        .data(function(d) { return d; })\n        .enter().append(\"rect\")\n        .attr(\"x\", function(d) { return x(d.data.State); })\n        .attr(\"y\", function(d) {return y(d[1]); })\n        // .attr(\"height\", function(d) { return y(d[0]) - y(d[1]); })\n        .attr(\"height\", function(d) { return (isNaN(y(d[0]) - y(d[1])) ? 0 : (y(d[0]) - y(d[1])) ); })\n        .attr(\"width\", x.bandwidth())\n        .on(\"mouseover\", function() { tooltip.style(\"display\", null); })\n        .on(\"mouseout\", function() { tooltip.style(\"display\", \"none\"); })\n        .on(\"mousemove\", function(d) {\n        // console.log(d);\n        var xPosition = d3.mouse(this)[0] - 5;\n        var yPosition = d3.mouse(this)[1] - 5;\n       \n        var current_val =  (d[1]-d[0]);\n        var data_length = Object.values(d.data).length, groupname;\n        for(let i = 0; i < data_length; i++) {\n            if(Object.values(d.data)[i] === current_val) {\n                  groupname = Object.keys(d.data)[i]\n                //   break;   \n            }\n        }\n        tooltip\n         .style(\"left\", d3.event.pageX - 400 + \"px\")\n              .style(\"top\", d3.event.pageY - 270 + \"px\")\n              .style(\"display\", \"inline-block\")\n              .html( (Number.isInteger((d[1]-d[0])) ? vm.currency_key+(d[1]-d[0]) : vm.currency_key+(d[1]-d[0]).toFixed(2)) +  \"<br>\"  + d.data.State + \"<br> <em> <b>\" + groupname +\"<b></em>\" );\n\n        });\n        rects.exit().remove();\n    };\n  }\n}\n</script>"],"sourceRoot":"src/portal/analytics/components"}]}