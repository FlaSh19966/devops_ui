{"remainingRequest":"/home/vimalesh/CENSE/chatbot-portal/node_modules/babel-loader/lib/index.js!/home/vimalesh/CENSE/chatbot-portal/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/vimalesh/CENSE/chatbot-portal/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/vimalesh/CENSE/chatbot-portal/src/portal/Chatbot/Dashboard/Data Inputs/NER.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/vimalesh/CENSE/chatbot-portal/src/portal/Chatbot/Dashboard/Data Inputs/NER.vue","mtime":1663910265462},{"path":"/home/vimalesh/CENSE/chatbot-portal/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vimalesh/CENSE/chatbot-portal/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/vimalesh/CENSE/chatbot-portal/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vimalesh/CENSE/chatbot-portal/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["NER.vue"],"names":[],"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","sourcesContent":["<template>\n  <div class=\"dash-cont\">\n    <div class=\"spinner\" v-show=\"spinnerOn\"></div>\n    <div id=\"popover_content\" class=\"d-none\">\n      <select\n        class=\"form-control\"\n        v-show=\"word_selected == true\"\n        v-model=\"drop_down_select\"\n        @change=\"entity_selected(drop_down_select)\"\n        style=\"height: 25px; padding-left: 10px; padding-right: 10px\"\n      >\n        <option\n          v-for=\"(word, index2) in word_info\"\n          :key=\"index2\"\n          data-role=\"tagsinput\"\n          :value=\"word\"\n        >\n          {{ word }}\n        </option>\n      </select>\n    </div>\n    <div class=\"container-fluid\">\n      <div class=\"card dash-card\">\n        <div\n          class=\"card-header d-block d-sm-flex flex-wrap justify-content-between\"\n        >\n          <h4 class=\"mb-sm-0\">{{tlt('ner_page_title')}}</h4>\n          <div class=\"card-act d-flex flex-wrap\">\n            <input\n              class=\"form-control search-bar\"\n              id=\"search_bar\"\n              style=\"width: 150px !important;\"\n              :placeholder=\"tlt('search_here')\"\n              v-model.trim=\"search_name\"\n              @keydown.enter=\"search_ner_statment\"\n            />\n            <a type=\"button\" v-if=\"isVisibleSearchClear\" class=\"btn bg-transparent mt-auto mb-auto py-0\" @click=\"clear_search_name\" style=\"margin-left: -40px; z-index: 10;\">\n              <img src=\"/img/close-icn.png\" alt />\n            </a>\n            <a\n              href=\"#\"\n              class=\"darkblue-btn\"\n              @click=\"search_ner_statment\"\n              id=\"search_btn\"\n            >\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n                width=\"14\"\n                height=\"14\"\n              >\n                <path\n                  d=\"M13.809011327100071,12.965505435601472 L9.30910012117823,8.49330664854199 C10.007392079586584,7.596111589605521 10.38512817619458,6.499157170138106 10.38512817619458,5.345374656726532 c0,-1.3810948891881802 -0.5423458634784514,-2.676086605733705 -1.523073527148749,-3.6524965835014083 c-0.9807276636702976,-0.9764099777677033 -2.287209392305289,-1.5136937750578685 -3.6751296371814526,-1.5136937750578685 s-2.6944019735111544,0.5390058607430178 -3.6751296371814526,1.5136937750578685 C0.5293349766245179,2.667565987539975 -0.011278152465820316,3.9642797675383576 -0.011278152465820316,5.345374656726532 c0,1.3793728257353273 0.5423458634784514,2.6778086691865575 1.523073527148749,3.6524965835014083 C2.492523038353222,9.974281217995648 3.7972720326001044,10.51156501528581 5.18692501186438,10.51156501528581 c1.160932040033745,0 2.2629511108717475,-0.37540983272197437 3.165705727077092,-1.0676793407689171 l4.499911205921844,4.470476723606628 a0.1420842198250257,0.14120920313395363 0 0 0 0.20099718902076805,0 l0.7554721932159904,-0.7490976019910955 a0.1420842198250257,0.14120920313395363 0 0 0 0,-0.19975936053095905 zM7.931576282630728,8.073123166045836 C7.196896902072058,8.80155600660269 6.2231001759542055,9.20279679111746 5.18692501186438,9.20279679111746 s-2.0099718902076775,-0.4012407845147706 -2.744651270766347,-1.1296736250716286 C1.709327094927478,7.342968262036121 1.3055999824978375,6.37516860153268 1.3055999824978375,5.345374656726532 s0.4037271124296458,-1.99931566876244 1.1366737586002036,-2.727748509319298 C3.1769531216567026,1.8891933068503817 4.150749847774562,1.4879525223356067 5.18692501186438,1.4879525223356067 s2.0117046245957884,0.3995187210619175 2.744651270766347,1.1296736250716286 S9.06825004123093,4.315580711920385 9.06825004123093,5.345374656726532 s-0.4037271124296458,1.99931566876244 -1.1366737586002036,2.727748509319298 z\"\n                  fill=\"#fff\"\n                />\n              </svg>\n            </a>\n            <a\n              href=\"#\"\n              class=\"darkblue-btn\"\n              :class=\"ner_model_inprogress === true ? 'disabled_btn' : ''\"\n              id=\"ner_add_tag_btn\"\n              @click=\"add_ner_tag()\"\n            >\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"14\"\n                height=\"13.997\"\n                viewBox=\"0 0 14 13.997\"\n              >\n                <path\n                  id=\"Union_13\"\n                  data-name=\"Union 13\"\n                  d=\"M-12684,2058v-5h-5a1,1,0,0,1-1-1,1,1,0,0,1,1-1h5v-5a1,1,0,0,1,1-1,1,1,0,0,1,1,1v5h5a1,1,0,0,1,1,1,1,1,0,0,1-1,1h-5v5a1,1,0,0,1-1,1A1,1,0,0,1-12684,2058Z\"\n                  transform=\"translate(12690.001 -2045.002)\"\n                  fill=\"#fff\"\n                />\n              </svg>\n              {{tlt('ner_page_add_ner_tag_btn')}}\n            </a>\n            <a\n              id=\"ner_add_statement_btn\"\n              href=\"#\"\n              class=\"darkblue-btn\"\n              :class=\"ner_model_inprogress === true ? 'disabled_btn' : ''\"\n              @click=\"add_ner_statemnent()\"\n              data-toggle=\"modal\"\n              data-target=\"#statementmodal\"\n            >\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"14\"\n                height=\"13.997\"\n                viewBox=\"0 0 14 13.997\"\n              >\n                <path\n                  id=\"Union_13\"\n                  data-name=\"Union 13\"\n                  d=\"M-12684,2058v-5h-5a1,1,0,0,1-1-1,1,1,0,0,1,1-1h5v-5a1,1,0,0,1,1-1,1,1,0,0,1,1,1v5h5a1,1,0,0,1,1,1,1,1,0,0,1-1,1h-5v5a1,1,0,0,1-1,1A1,1,0,0,1-12684,2058Z\"\n                  transform=\"translate(12690.001 -2045.002)\"\n                  fill=\"#fff\"\n                />\n              </svg>\n              {{tlt('ner_page_add_statement_btn')}}\n            </a>\n            <a\n              id=\"ner_upload_btn\"\n              href=\"#\"\n              class=\"darkblue-btn\"\n              :class=\"ner_model_inprogress === true ? 'disabled_btn' : ''\"\n              @click=\"upload_ner_file()\"\n              data-toggle=\"modal\"\n              data-target=\"#upload_csv_file\"\n            >\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"14\"\n                height=\"13.997\"\n                viewBox=\"0 0 14 13.997\"\n              >\n                <path\n                  id=\"Union_13\"\n                  data-name=\"Union 13\"\n                  d=\"M-12684,2058v-5h-5a1,1,0,0,1-1-1,1,1,0,0,1,1-1h5v-5a1,1,0,0,1,1-1,1,1,0,0,1,1,1v5h5a1,1,0,0,1,1,1,1,1,0,0,1-1,1h-5v5a1,1,0,0,1-1,1A1,1,0,0,1-12684,2058Z\"\n                  transform=\"translate(12690.001 -2045.002)\"\n                  fill=\"#fff\"\n                />\n              </svg>\n              {{tlt('ner_page_upload_file_btn')}}\n            </a>\n            <!-- <a\n              href=\"#\"\n              class=\"darkblue-btn\"\n              @click=\"start_tagging\"\n              id=\"start_tagging_id\"\n            >\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"14\"\n                height=\"13.997\"\n                viewBox=\"0 0 14 13.997\"\n              >\n                <path\n                  id=\"Union_13\"\n                  data-name=\"Union 13\"\n                  d=\"M-12684,2058v-5h-5a1,1,0,0,1-1-1,1,1,0,0,1,1-1h5v-5a1,1,0,0,1,1-1,1,1,0,0,1,1,1v5h5a1,1,0,0,1,1,1,1,1,0,0,1-1,1h-5v5a1,1,0,0,1-1,1A1,1,0,0,1-12684,2058Z\"\n                  transform=\"translate(12690.001 -2045.002)\"\n                  fill=\"#fff\"\n                />\n              </svg>\n              Start Tagging\n            </a> -->\n            <button\n              class=\"darkblue-btn\"\n              @click=\"train_ner_model\"\n              v-show=\"role == 'Admin' || role == 'SuperAdmin'\"\n              id=\"ner_train_model_btn\"\n              :disabled=\"ner_model_inprogress == true\"\n              :style=\"show_model_progress('style')\"\n              :title=\"show_model_progress('title')\">\n              <i class=\"fa fa-spinner fa-spin\" v-show=\"ner_model_inprogress\"></i>\n              {{tlt('ner_page_train_ner_btn')}}</button\n            >\n            <a\n              href=\"javascript:void(0)\"\n              class=\"red-btn\"\n              :class=\"ner_model_inprogress === true ? 'disabled_btn' : ''\"\n              @click=\"delete_ner_multiple\"\n            >\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"14\"\n                height=\"14\"\n                viewBox=\"0 0 14 14\"\n              >\n                <path\n                  id=\"trash-can-outline\"\n                  d=\"M8.375,3v.778H4V5.333h.875V15.444A1.661,1.661,0,0,0,6.625,17h8.75a1.661,1.661,0,0,0,1.75-1.556V5.333H18V3.778H13.625V3H8.375M6.625,5.333h8.75V15.444H6.625V5.333m1.75,1.556v7h1.75v-7H8.375m3.5,0v7h1.75v-7Z\"\n                  transform=\"translate(-4 -3)\"\n                  fill=\"#fff\"\n                />\n              </svg>\n              {{tlt('ner_page_delete_btn')}}\n            </a>\n          </div>\n        </div>\n        <div class=\"card-body\" id=\"page\">\n          <div class=\"table-box\">\n            <div class=\"table-responsive\">\n              <table class=\"table\">\n                <thead>\n                  <tr>\n                    <th scope=\"col\">\n                      <div class=\"form-check checkbox checkbox-success\">\n                        <label class=\"form-check-label\">\n                          <input\n                            class=\"form-check-input\"\n                            id=\"selectall\"\n                            type=\"checkbox\"\n                            @click=\"selected_statements('all')\"\n                          />\n                          <span class=\"icn\"></span>\n                        </label>\n                      </div>\n                    </th>\n                    <th scope=\"col\" style=\"width: 10%\">{{tlt('ner_page_action_th')}}\n                      <a>\n                        <i\n                          class=\"fa fa-info-circle\"\n                          aria-hidden=\"true\"\n                          title=\"Start by adding a statement, \nthen select the part of statement you \nwish to tag with your mouse and select \nthe respective tag then save it\"\n                          style=\"font-size: 16px\"\n                        >\n                        </i>\n                      </a>\n                    </th>\n                    <th scope=\"col\" style=\"width: 40%\">\n                      {{tlt('ner_page_statement_th')}}\n                    </th>\n                    <th scope=\"col\">{{tlt('ner_page_tag_th')}}</th>\n                    <th scope=\"col\" style=\"width: 1%\">{{tlt('ner_page_untag_th')}}</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr\n                    v-for=\"(statement, index) in statements\"\n                    :key=\"index\"\n                    id=\"list-group\"\n                  >\n                    <th scope=\"row\">\n                      <div class=\"form-check checkbox checkbox-success\">\n                        <label class=\"form-check-label\">\n                          <input\n                            class=\"form-check-input\"\n                            type=\"checkbox\"\n                            @change=\"selected_statements(index)\"\n                          />\n                          <span class=\"icn\"></span>\n                        </label>\n                      </div>\n                    </th>\n                    <td\n                      class=\"action\"\n                      style=\"padding: 10px 0px 10px 5px; text-align: center\"\n                    >\n                      <!-- <i class=\"fas fa-info-circle\"></i> -->\n                      <a @click=\"save_statement(index)\">\n                      <i\n                        v-if='statement.IsTagCompleted == \"YES\"' \n                        class=\"fa fa-save fa-lg\" \n                        aria-hidden=\"true\"\n                        title=\"Save\"\n                        style=\"cursor: pointer; position: relative; top: 2px;\">\n                      </i>\n                      <i\n                        v-else\n                        class=\"fa fa-save fa-lg fa-pulse\" \n                        aria-hidden=\"true\"\n                        title=\"Save\"\n                        style=\"cursor: pointer; position: relative; top: 2px;\">\n                      </i>\n                      </a>\n                      <a \n                      href=\"#\" \n                      title=\"Edit\"\n                      @click=\"assign_variable(index)\"\n                      :class=\"ner_model_inprogress === true ? 'disabled_btn' : ''\"\n\n                      data-toggle=\"modal\"\n                      data-target=\"#editstatementmodal\"\n                      >\n                        <svg\n                          xmlns=\"http://www.w3.org/2000/svg\"\n                          width=\"15.392\"\n                          height=\"15.392\"\n                          viewBox=\"0 0 15.392 15.392\"\n                          data-toggle=\"modal\"\n                          data-target=\"#\"\n                        >\n                          <path\n                            id=\"square-edit-outline\"\n                            d=\"M4.71,3A1.7,1.7,0,0,0,3,4.71V16.682a1.71,1.71,0,0,0,1.71,1.71H16.682a1.71,1.71,0,0,0,1.71-1.71V10.7h-1.71v5.986H4.71V4.71H10.7V3H4.71m10.928.855a.591.591,0,0,0-.41.171L14.185,5.061,16.322,7.2l1.043-1.035a.578.578,0,0,0,0-.812L16.04,4.026a.571.571,0,0,0-.4-.171M13.578,5.668l-6.3,6.311v2.138H9.413l6.3-6.311Z\"\n                            transform=\"translate(-3 -3)\"\n                            fill=\"#9499ae\"\n                          />\n                        </svg>\n                      </a>\n                      <a\n                        href=\"#\"\n                        @click=\"delete_ner(index)\"\n                        title=\"Delete\"\n                         :class=\"ner_model_inprogress === true ? 'disabled_btn' : ''\"\n                        id=\"single_delete_id\"\n                      >\n                        <svg\n                          xmlns=\"http://www.w3.org/2000/svg\"\n                          width=\"13.682\"\n                          height=\"15.392\"\n                          viewBox=\"0 0 13.682 15.392\"\n                        >\n                          <path\n                            id=\"trash-can-outline\"\n                            d=\"M8.276,3v.855H4v1.71h.855V16.682a1.71,1.71,0,0,0,1.71,1.71h8.551a1.71,1.71,0,0,0,1.71-1.71V5.565h.855V3.855H13.406V3H8.276M6.565,5.565h8.551V16.682H6.565V5.565m1.71,1.71v7.7h1.71v-7.7H8.276m3.42,0v7.7h1.71v-7.7Z\"\n                            transform=\"translate(-4 -3)\"\n                            fill=\"#f23d3d\"\n                          />\n                        </svg>\n                      </a>\n                    </td>\n                    <td @mouseup=\"selected_text(index)\">\n                      {{ statement.Statement }}\n                    </td>\n                    <td>\n                      <span\n                        v-for=\"(selection, idx) in statements[index]\n                          .selected_list\"\n                        :key=\"idx\"\n                      >\n                        <!-- <span\n                        v-for=\"(selection, idx) in statement.selected_list\"\n                        :key=\"idx\"\n                      > -->\n                        <!-- <span style=\"width: 100%\"\n                          >{{ selection.text }},{{ selection.word_type }};</span\n                        > -->\n                        <span style=\"width: 100%\">\n                          <!-- {{ statements[index].selected_list[idx].text }},{{ statements[index].selected_list[idx].word_type }}; -->\n                          {{ statements[index].selected_list[idx].text }},{{\n                            statements[index].selected_list[idx].word_type\n                          }};\n                        </span>\n                      </span>\n                    </td>\n                    <td style=\"cursor: pointer;text-align: center;\" @click=\"remove_tag(index)\">\n                      <!-- X -->\n                      &times;\n                    </td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n          </div>\n          <!-- <button\n            type=\"submit\"\n            class=\"darkblue-btn\"\n            @click=\"submit_ner_model\"\n            style=\"padding: 10px 20px; float: right; margin-top: 18px\"\n            v-show=\"statements.length > 0\"\n          >\n            Save\n          </button> -->\n          <div class=\"pagin-table\" style=\"margin-top: 2%\">\n              <nav aria-label=\"Page navigation example\">\n                <ul class=\"pagination justify-content-center\">\n                  <li class=\"page-item\">\n                    <a\n                      class=\"page-link\"\n                      href=\"#\"\n                      @click=\"page_require(page_no - 1)\"\n                    >\n                      <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        width=\"8.667\"\n                        height=\"15.204\"\n                        viewBox=\"0 0 8.667 15.204\"\n                      >\n                        <g\n                          id=\"arrow-point-to-left\"\n                          transform=\"translate(105.806 15.204) rotate(180)\"\n                        >\n                          <path\n                            id=\"Path_1136\"\n                            data-name=\"Path 1136\"\n                            d=\"M105.493,8.354l-6.537,6.537a1.065,1.065,0,1,1-1.506-1.506L103.235,7.6,97.45,1.817A1.065,1.065,0,0,1,98.956.312l6.537,6.537a1.065,1.065,0,0,1,0,1.505Z\"\n                            transform=\"translate(0 0)\"\n                            fill=\"#9499ae\"\n                          />\n                        </g>\n                      </svg>\n                    </a>\n                  </li>\n                  <li\n                    :class=\"'page-item ' + pagination_class(pageno)\"\n                    v-for=\"pageno in page_array\"\n                    :key=\"pageno\"\n                  >\n                    <a\n                      v-if=\"pageno == '...s' || pageno == '...l'\"\n                      class=\"page-link\"\n                      href=\"#\"\n                      @click=\"page_require(pageno)\"\n                      >...</a\n                    >\n                    <a\n                      v-if=\"pageno != '...s' && pageno != '...l'\"\n                      class=\"page-link\"\n                      href=\"#\"\n                      @click=\"page_require(pageno)\"\n                      >{{ pageno }}</a\n                    >\n                  </li>\n                  <li class=\"page-item\">\n                    <a\n                      class=\"page-link\"\n                      href=\"#\"\n                      @click=\"page_require(page_no + 1)\"\n                    >\n                      <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        width=\"8.667\"\n                        height=\"15.204\"\n                        viewBox=\"0 0 8.667 15.204\"\n                      >\n                        <g\n                          id=\"arrow-point-to-right\"\n                          transform=\"translate(-97.139 0)\"\n                        >\n                          <path\n                            id=\"Path_1136\"\n                            data-name=\"Path 1136\"\n                            d=\"M105.493,8.354l-6.537,6.537a1.065,1.065,0,1,1-1.506-1.506L103.235,7.6,97.45,1.817A1.065,1.065,0,0,1,98.956.312l6.537,6.537a1.065,1.065,0,0,1,0,1.505Z\"\n                            transform=\"translate(0 0)\"\n                            fill=\"#9499ae\"\n                          />\n                        </g>\n                      </svg>\n                    </a>\n                  </li>\n                </ul>\n              </nav>\n            </div>\n        </div>\n      </div>\n      <div>\n        <div class=\"popoverDiv\">\n          <select\n            class=\"form-control\"\n            v-show=\"word_selected == true\"\n            v-model=\"drop_down_select\"\n            @change=\"entity_selected(drop_down_select)\"\n            style=\"height: 25px; padding-left: 10px; padding-right: 10px\"\n          >\n            <option\n              v-for=\"(word, index2) in word_info\"\n              :key=\"index2\"\n              :value=\"word\"\n            >\n              {{ word }}&nbsp;\n            </option>\n          </select>\n        </div>\n      </div>\n      <div\n        class=\"modal fade dash-modal\"\n        id=\"exampleModalCenter\"\n        tabindex=\"-1\"\n        role=\"dialog\"\n        aria-labelledby=\"exampleModalCenterTitle\"\n        aria-hidden=\"true\"\n      >\n        <div class=\"modal-dialog modal-dialog-centered\" role=\"document\">\n          <div class=\"modal-content\">\n            <div class=\"modal-body\">\n              <div class=\"modal-head d-flex align-items-center\">\n                <div class=\"head-icn\">\n                  <img src=\"/img/msg-blue.png\" alt />\n                </div>\n                <h3>{{tlt('ner_model_ner_tag_header')}}</h3>\n              </div>\n              <button\n                type=\"button\"\n                class=\"close\"\n                data-dismiss=\"modal\"\n                aria-label=\"Close\"\n              >\n                <img src=\"/img/close-icn.png\" alt />\n              </button>\n              <form @submit=\"comma_to_list\">\n                <div class=\"form-group\">\n                  <label\n                    >{{tlt('ner_model_ner_tag_text')}}</label\n                  >\n                  <input\n                    class=\"form-control\"\n                    :placeholder=\"tlt('enter_entities')\"\n                    v-model=\"entities_list_string\"\n                    id=\"entity_list_id\"\n                  />\n                </div>\n                <label v-if=\"word_info.length > 0\">{{tlt('ner_model_add_tags_label')}}</label>\n                <br />\n                <div>\n                  <div\n                    class=\"bootstrap-tagsinput\"\n                    v-for=\"(word, index) in word_info\"\n                    :key=\"index\"\n                    style=\"margin-bottom: 10px\"\n                  >\n                    <span class=\"badge\">\n                      {{ word }}\n                      <span\n                        data-role=\"remove\"\n                        @click=\"delete_tags(index)\"\n                      ></span>\n                    </span>\n                  </div>\n                </div>\n                <div class=\"btn-wrap text-right\">\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-link\"\n                    data-dismiss=\"modal\"\n                  >\n                    {{tlt('ner_page_add_ner_tag_cancel_btn')}}\n                  </button>\n                  <button type=\"submit\" class=\"darkblue-btn\" id=\"save_ner\">\n                    {{tlt('ner_page_save_btn')}}\n                  </button>\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div\n        class=\"modal fade dash-modal\"\n        id=\"editstatementmodal\"\n        tabindex=\"-1\"\n        role=\"dialog\"\n        aria-labelledby=\"exampleModalCenterTitle\"\n        aria-hidden=\"true\"\n      >\n        <div class=\"modal-dialog modal-dialog-centered\" role=\"document\">\n          <div class=\"modal-content\">\n            <div class=\"modal-body\">\n              <div class=\"modal-head d-flex align-items-center\">\n                <div class=\"head-icn\">\n                  <img src=\"/img/msg-blue.png\" alt />\n                </div>\n                <h3>{{tlt('ner_model_edit_statement_label')}}</h3>\n              </div>\n              <button\n                type=\"button\"\n                class=\"close\"\n                data-dismiss=\"modal\"\n                aria-label=\"Close\"\n              >\n                <img src=\"/img/close-icn.png\" alt />\n              </button>\n              <!-- <form class=\"upload-form\"> -->\n                <div class=\"card-body\" style=\"padding: 0px 10px;\">\n                  <!-- <h6>\n                    Add NER tags first, then add a new statement\n                  </h6> -->\n                  <br />\n                  <div class=\"form-group\">\n                    <input\n                      type=\"text\"\n                      v-model=\"edit_statement\"\n                      class=\"form-control\"\n                      :placeholder=\"tlt('enter_statement')\"\n                    />\n                  </div>\n                  <div class=\"btn-wrap text-right\">\n                    <button\n                      type=\"button\"\n                      class=\"btn btn-link\"\n                      data-dismiss=\"modal\"\n                      @click=\"empty_variable\"\n                    >\n                      {{tlt('ner_page_edit_ner_cancel_btn')}}\n                    </button>\n                    <button @click=\"edit_statements\" id=\"edit_btn\" class=\"darkblue-btn\">{{tlt('ner_page_edit_submit_btn')}}</button>\n                  </div>\n                </div>\n              <!-- </form> -->\n            </div>\n          </div>\n        </div>\n      </div>\n      <div\n        class=\"modal fade dash-modal\"\n        id=\"statementmodal\"\n        tabindex=\"-1\"\n        role=\"dialog\"\n        aria-labelledby=\"exampleModalCenterTitle\"\n        aria-hidden=\"true\"\n      >\n        <div class=\"modal-dialog modal-dialog-centered\" role=\"document\">\n          <div class=\"modal-content\">\n            <div class=\"modal-body\">\n              <div class=\"modal-head d-flex align-items-center\">\n                <div class=\"head-icn\">\n                  <img src=\"/img/msg-blue.png\" alt />\n                </div>\n                <h3>{{tlt('ner_model_add_statement_label')}}</h3>\n              </div>\n              <button\n                type=\"button\"\n                class=\"close\"\n                data-dismiss=\"modal\"\n                aria-label=\"Close\"\n              >\n                <img src=\"/img/close-icn.png\" alt />\n              </button>\n              <!-- <form class=\"upload-form\"> -->\n                <div class=\"card-body\" style=\"padding: 0px 10px;\">\n                  <h6>\n                    {{tlt('ner_model_add_statement_text')}}\n                  </h6>\n                  <br />\n                  <div class=\"form-group\">\n                    <input\n                      type=\"text\"\n                      v-model=\"new_statement\"\n                      class=\"form-control\"\n                      :placeholder=\"tlt('enter_statement')\"\n                    />\n                  </div>\n                  <div class=\"btn-wrap text-right\" style=\"border: none; padding: 0px;\">\n                    <button\n                      type=\"button\"\n                      class=\"btn btn-link\"\n                      data-dismiss=\"modal\"\n                      @click=\"empty_variable\"\n                    >\n                      {{tlt('ner_page_add_statement_cancel_btn')}}\n                    </button>\n                    <button @click=\"add_statement\" id=\"add_statement_btn\" class=\"darkblue-btn\">{{tlt('ner_page_add_btn')}}</button>\n                  </div>\n                </div>\n              <!-- </form> -->\n            </div>\n          </div>\n        </div>\n      </div>\n      <div\n        class=\"modal fade dash-modal\"\n        id=\"upload_csv_file\"\n        tabindex=\"-1\"\n        role=\"dialog\"\n        aria-labelledby=\"exampleModalCenterTitle\"\n        aria-hidden=\"true\"\n      >\n        <div class=\"modal-dialog modal-dialog-centered\" role=\"document\">\n          <div class=\"modal-content\">\n            <div class=\"modal-body\">\n              <div class=\"modal-head d-flex align-items-center\">\n                <div class=\"head-icn\">\n                  <img src=\"/img/msg-blue.png\" alt />\n                </div>\n                <h3>{{tlt('ner_model_upload_file_label')}}</h3>\n              </div>\n              <button\n                type=\"button\"\n                class=\"close\"\n                data-dismiss=\"modal\"\n                aria-label=\"Close\"\n              >\n                <img src=\"/img/close-icn.png\" alt />\n              </button>\n              <form class=\"upload-form\" >\n                <div class=\"card-body\">\n                  <h6>\n                    {{tlt('ner_model_upload_file_text')}}\n                  </h6>\n                  <br />\n                  <div class=\"form-group\">\n                    <div class=\"custom-file\">\n                      <input\n                        type=\"file\"\n                        accept=\".csv\"\n                        @change=\"fileinput\"\n                        class=\"custom-file-input\"\n                        id=\"inputGroupFile01\"\n                        aria-describedby=\"inputGroupFileAddon01\"\n                      />\n                      <label\n                        style=\"height: 100%;font-weight: 400; line-height: 15px; padding: 9px\"\n                        class=\"custom-file-label form-control\"\n                        for=\"file\"\n                        >{{ file_label }}</label\n                      >\n                    </div>\n                  </div>\n                  <div class=\"btn-wrap text-right\">\n                    <a href=\"#\" @click=\"download_sample\">\n                      {{tlt('ner_model_download_sample_ner_label')}}\n                      <i class=\"fa fa-spinner fa-spin\" v-show=\"spinnerOn\"></i>\n                    </a>\n                    <button\n                      type=\"button\"\n                      class=\"btn btn-link\"\n                      data-dismiss=\"modal\"\n                    >\n                      {{tlt('ner_page_upload_file_cancel_btn')}}\n                    </button>\n                    <button type=\"submit\" id=\"upload_btn\" class=\"darkblue-btn\" @click=\"send_csv\">{{tlt('ner_page_file_submit_btn')}}</button>\n                  </div>\n                  <!-- <button type=\"submit\" class=\"darkblue-btn\">Submit</button> -->\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n<script>\nimport axios from \"axios\";\nimport Swal from \"sweetalert2\";\nimport api_calls from \"@/portal/api_calls\";\nimport { setTimeout } from \"timers\";\nimport { freeze_portal,show_subscription_expired_swal , close_modal} from \"@/portal/mixins\";\nimport swal from 'sweetalert2';\n\nexport default {\n  name: \"NerTrainingPage\",\n  mixins: [\n    freeze_portal,\n    show_subscription_expired_swal,\n    close_modal\n  ],\n  data() {\n    return {\n      sub_entities: {\n        start: 0,\n        end: 0,\n        value: \"\",\n        entity: \"\",\n      },\n      page_no: 1,\n      per_page: 15,\n      total_pages: null,\n      page_array: [],\n      pageno: \"\",\n      number_of_rows: null,\n      drop_down_select: \"\",\n      word_selected: false,\n      highlighted_text: \"\",\n      statements: [],\n      selected_statement: \"\",\n      statement_array: [],\n      master_statements_list: [],\n      current_page: 1,\n      done_entities: [],\n      entities_list: [],\n      entities_list_string: \"\",\n      file_label: \"Choose file\",\n      csv_file: \"\",\n      spinnerOn: false,\n      word_info: [],\n      checked_list: [],\n      buffer_word_list: [],\n      delete_ner_tags: [],\n      role: this.$session.get(\"UserInformation\").role,\n      company_name: this.$session.get(\"UserInformation\").company_name,\n      notTrainedQuestions: [],\n      info_icon: require(\"@/portal/assets/img/info_icon.svg\"),\n      new_statement: \"\",\n      edit_statement: \"\",\n      want_status: true,\n      ner_model_inprogress: false,\n      current_selected: null,\n      search_name: \"\",\n      isVisibleSearchClear: false,\n      disable_btn_expired:false\n    };\n  },\n  components: {},\n  created() {\n    this.load_ner_statements();\n    // axios\n    //   .get(api_calls.get_ner_tag(), {\n    //     params: {\n    //       companyname: this.$session.get(\"UserInformation\").company_name,\n    //       companyid: this.$session.get(\"UserInformation\").company_id,\n    //       email: this.$session.get(\"UserInformation\").email,\n    //       license_key: this.$session.get(\"UserInformation\").license_key,\n    //       token: this.$session.get(\"UserInformation\").tokens,\n    //       subscription: this.$session.get(\"UserInformation\").subscription,\n    //     },\n    //     headers: {\n    //       Authorization: `Bearer ${this.$session.get(\"at\")}`,\n    //     },\n    //   })\n    //   .then((response) => {\n    //     if (response.data !== null) {\n    //       this.word_info = response.data;\n    //       this.buffer_word_list = response.data;\n    //     }\n    //   });\n      this.check_ner_model_status();\n    // axios\n    //   .post(\n    //     api_calls.load_tag_url(),\n    //     {\n    //       companyid: this.$session.get(\"UserInformation\").company_id,\n    //       companyname: this.$session.get(\"UserInformation\").company_name,\n    //       email: this.$session.get(\"UserInformation\").email,\n    //       license_key: this.$session.get(\"UserInformation\").license_key,\n    //       token: this.$session.get(\"UserInformation\").tokens,\n    //       get_tagged_statements: true,\n    //     },\n    //     {\n    //       headers: {\n    //         Authorization: `Bearer ${this.$session.get(\"at\")}`,\n    //       },\n    //     }\n    //   )\n    //   .then((response) => {\n    //     if (response.data !== null) {\n    //       if (response.data.MSG == \"Ner Tag Completed\") {\n    //         // this.load_statements(response.data.Response);\n    //         this.notTrainedQuestions = response.data.Response;\n    //       }\n    //       // else if (response.data.MSG == \"Assign Ner Tag\") {\n    //       //   this.spinnerOn = false;\n    //       // } else if (response.data.MSG == \"No Data Available\") {\n    //       //   this.spinnerOn = false;\n    //       // } else if (response.data == \"Internal Server Error\") {\n    //       //   this.spinnerOn = false;\n    //       // }\n    //     }\n    //   })\n    //   .catch((e) => {\n    //     this.spinnerOn = false;\n    //     if (\n    //       e.response.status === 410 ||\n    //       e.response.status === 440 ||\n    //       e.response.status === 409\n    //     ) {\n    //       this.$root.$emit(\"Session_Expired\", e.response.data);\n    //     }\n    //   });\n  },\n  mounted() {\n    setTimeout(() => {\n      this.freeze_portal();\n    }, 1000);\n    this.$root.$on(\"NerTrainingPageDisabled\", (data) =>{\n      if(data===true){\n        this.disable_btn_expired = true;\n      }\n    })\n    $('[data-toggle=\"popover\"]')\n      .popover({\n        html: true,\n        content: $(\"#popover_content\"),\n      })\n      .on(\"show.bs.popover\", function () {\n        $(\"#popover_content\").addClass(\"d-block\");\n      })\n      .on(\"shown.bs.popover\", function () {})\n      .on(\"hide.bs.popover\", function () {\n        $(\"#popover_content\").addClass(\"d-none\");\n      });\n    $(\"#popover_content\").css(\"zIndex\", 9999);\n    var vm = this;\n    $(\"#selectall\").click(function () {\n      if ($(this).is(\":checked\")) {\n        $(\"input:checkbox\").prop(\"checked\", true);\n      } else {\n        vm.checked_list = [];\n        $(\"input:checkbox\").prop(\"checked\", false);\n      }\n    });\n      this.$root.$on(\"send_model_status\", data =>{\n      if (data == true){\n        this.check_ner_model_status();\n      }\n    });\n   \n  },\n  watch: {\n    search_name() {\n      if (this.search_name === \"\") {\n        this.load_ner_statements();\n        this.isVisibleSearchClear = false;\n      } else if (this.search_name !== \"\") {\n        this.isVisibleSearchClear = true;\n      }\n    },\n    \n    \n\n  },\n  methods: {\n    upload_ner_file(){\n      if(!this.disable_btn_expired){\n        $(\"#upload_csv_file\").modal('show')\n      } else {\n        this.show_subscription_expired_swal();\n      }\n    },\n    add_ner_statemnent(){\n      if(!this.disable_btn_expired){\n        $(\"#statementmodal\").modal('show')\n      } else {\n        this.show_subscription_expired_swal();\n      }\n    },\n    add_ner_tag(){\n      if(!this.disable_btn_expired){\n        $(\"#exampleModalCenter\").modal('show')\n      } else {\n        this.show_subscription_expired_swal();\n      }\n    },\n    load_ner_statements(){\n      $(\"input:checkbox\").prop(\"checked\", false);\n      this.checked_list = [];\n      this.spinnerOn = true;\n      axios\n        .get(api_calls.get_ner_tag(), {\n          params: {\n            company_name: this.$session.get(\"UserInformation\").company_name,\n            company_id: this.$session.get(\"UserInformation\").company_id,\n            email: this.$session.get(\"UserInformation\").email,\n            license_key: this.$session.get(\"UserInformation\").license_key,\n            token: this.$session.get(\"UserInformation\").tokens,\n            subscription: this.$session.get(\"UserInformation\").subscription,\n          },\n          headers: {\n            Authorization: `Bearer ${this.$session.get(\"at\")}`,\n          },\n        })\n        .then((response) => {\n          this.spinnerOn = false;\n          if (this.api_status_code.DATA_AVAILABLE.MSG_CODE == response.data.message.MSG_CODE) {\n            this.word_info = response.data.data;\n            this.buffer_word_list = response.data.data;\n          }\n          else if(this.api_status_code.NER_TAGS_NOT_FOUND.MSG_CODE == response.data.message.MSG_CODE){\n            swal.fire({\n              type:'warning',\n              text:'No ner tags found',\n              toast:true,\n              position: \"top-end\",\n              showConfirmButton: false,\n              timer: 2500\n            });\n            this.word_info = [];\n            this.buffer_word_list = [];\n          }\n         \n        })\n        .catch((e) => {\n          this.spinnerOn = false;\n          if (\n            e.response.status === 410 ||\n            e.response.status === 440 ||\n            e.response.status === 409\n          ) {\n            this.$root.$emit(\"Session_Expired\", e.response.data);\n          }\n        });\n      this.spinnerOn = true;\n      axios\n      .post(\n        api_calls.load_tag_url(),\n        {\n          company_id: this.$session.get(\"UserInformation\").company_id,\n          company_name: this.$session.get(\"UserInformation\").company_name,\n          email: this.$session.get(\"UserInformation\").email,\n          license_key: this.$session.get(\"UserInformation\").license_key,\n          token: this.$session.get(\"UserInformation\").tokens,\n          get_all_ner_statements: true,\n          per_page: this.per_page,\n          page_no: this.page_no,\n        },\n        {\n          headers: {\n            Authorization: `Bearer ${this.$session.get(\"at\")}`,\n          },\n        }\n      )\n      .then((response) => {\n        this.spinnerOn = false;\n          if (this.api_status_code.DATA_AVAILABLE.MSG_CODE == response.data.message.MSG_CODE) {\n            this.load_statements(response.data.data.response);\n            this.number_of_rows = response.data.pagination.total_data;\n            this.total_pages = response.data.pagination.total_page;\n            this.setpagination(this.page_no);\n            this.notTrainedQuestions = response.data.data.response;\n          } else if (this.api_status_code.NER_TAG_ASSIGN.MSG_CODE == response.data.message.MSG_CODE) {\n            this.spinnerOn = false;\n          } else if (this.api_status_code.EMPTY_DATA.MSG_CODE ==  response.data.message.MSG_CODE) {\n            this.spinnerOn = false;\n          } else if (this.api_status_code.EMPTY_DATA.MSG_CODE == response.data.message.MSG_CODE) {\n            this.spinnerOn = false;\n            swal.fire({\n              type:'warning',\n              text:'No Data Available',\n              toast:true,\n              position: \"top-end\",\n              showConfirmButton: false,\n              timer: 2500\n            });\n            this.master_statements_list = [];\n          this.statements = [];\n          } else if (this.api_status_code.INTERNAL_SERVER_ERROR.MSG_CODE == response.data.message.MSG_CODE) {\n            swal({\n              type: \"error\",\n              title: \"Error\",\n              text: \"Internal server error\",\n              timer: 2500,\n            })\n          } else {\n            this.spinnerOn = false;\n            Swal({\n              title: response.data.message.MSG_CODE,\n              text: response.data.message.MSG,\n              showCancelButton: false,\n              showConfirmButton: false,\n              type: \"error\",\n              timer: 2500\n            })\n          }\n      })\n      .catch((e) => {\n        this.spinnerOn = false;\n        if (\n          e.response.status === 410 ||\n          e.response.status === 440 ||\n          e.response.status === 409\n        ) {\n          this.$root.$emit(\"Session_Expired\", e.response.data);\n        }\n      });\n    },\n    empty_variable(){\n      this.new_statement = \"\";\n      this.edit_statement = \"\";\n      this.current_selected = null;\n      this.entities_list_string = \"\";\n    },\n    assign_variable(index){\n      this.edit_statement = this.statements[index].Statement;\n      this.current_selected = this.statements[index];\n    },\n    check_ner_model_status(){\n    this.model_status = this.$session.get(\"ModelStatus\");\n    if (this.model_status == \"No Failure\"){\n    this.ner_model_inprogress = false;\n    }\n    else if (Boolean(this.model_status.ner_model) === true){\n     if(this.model_status.ner_model == \"InProgress\"){\n       this.ner_model_inprogress = true;\n     }\n     else{\n       this.ner_model_inprogress = false;\n     }\n    }\n    else{\n      this.ner_model_inprogress = false; \n    }\n    },\n    show_model_progress(index){\n      if(this.ner_model_inprogress == true){\n         if (index == 'style'){\n            return \"cursor: not-allowed\";\n          }\n          else if(index == 'title'){\n              return this.tlt('ner_page_training_progress_msg');\n          }\n      }\n      else{\n        return null;\n      }\n    },\n    add_statement() {\n   \n      if (this.new_statement.trim() == \"\") {\n        Swal({\n          text: this.tlt('ner_page_enter_statement_msg'),\n          toast: true,\n          position: \"top-end\",\n          type: \"warning\",\n          showConfirmButton: false,\n          timer: 2500,\n        });\n        return;\n      } else {\n        this.spinnerOn = true;\n        axios\n          .post(api_calls.add_ner_statement(), {\n            company_id: this.$session.get(\"UserInformation\").company_id,\n            company_name: this.$session.get(\"UserInformation\").company_name,\n            email: this.$session.get(\"UserInformation\").email,\n            license_key: this.$session.get(\"UserInformation\").license_key,\n            token: this.$session.get(\"UserInformation\").tokens,\n            new_statement: this.new_statement,\n          },\n          {\n            headers: {\n              Authorization: `Bearer ${this.$session.get(\"at\")}`,\n            },\n          })\n          .then((response) => {\n            this.spinnerOn = false;\n            if (this.api_status_code.SUCCESSFUL_DB_QUERY.MSG_CODE == response.data.message.MSG_CODE) {\n              Swal({\n                type: \"success\",\n                text: this.tlt('ner_page_statement_added_msg'),\n                timer: 2500,\n              }).then((result) => {\n     \n                this.empty_variable();\n                this.load_ner_statements();\n                // this.page_require(1);\n                // this.$router.go();\n                \n              });\n            } else if (this.api_status_code.ADD_STATEMENT_ERROR.MSG_CODE == response.data.message.MSG_CODE) {\n              Swal({\n                type: \"error\",\n                text: this.tlt('ner_page_wrong_msg'),\n                timer: 2500,\n              });\n            }else if (response.data.Msg == \"Statement already exists\") {\n              Swal({\n                type: \"error\",\n                text: this.tlt('ner_page_statement_already_exists_msg'),\n                timer: 2500,\n              });\n            }\n          })\n          .catch((e) => {\n            this.spinnerOn = false;\n            if (\n              e.response.status === 410 ||\n              e.response.status === 440 ||\n              e.response.status === 409\n            ) {\n              this.$root.$emit(\"Session_Expired\", e.response.data);\n            }\n          });\n          this.close_modal('add_statement_btn')\n      }\n    },\n    edit_statements() {\n      if(this.edit_statement == this.current_selected.Statement){\n        Swal.fire({\n          text: this.tlt('ner_page_modify_statement_msg'),\n          toast: true,\n          position: \"top-end\",\n          type: \"warning\",\n          showConfirmButton: false,\n          timer: 2500,\n        });\n      }\n      else {\n        var final_statements_list = [];\n        // console.log(\"statement index before---\", this.current_selected);\n        var valid_statement = Object.assign({}, this.current_selected);\n        var key = valid_statement.key;\n        valid_statement.IsTagCompleted = \"NO\";\n        valid_statement.Statement = this.edit_statement;\n        valid_statement.Tag = [];\n        delete valid_statement.key;\n        delete valid_statement.selected_list;\n        delete valid_statement.words_list;\n        final_statements_list.push({\n          [key]: valid_statement,\n        });\n        this.spinnerOn = true;\n        axios\n          .post(\n            api_calls.tag_sentences_url(),\n            {\n              company_id: this.$session.get(\"UserInformation\").company_id,\n              company_name: this.$session.get(\"UserInformation\").company_name,\n              email: this.$session.get(\"UserInformation\").email,\n              license_key: this.$session.get(\"UserInformation\").license_key,\n              token: this.$session.get(\"UserInformation\").tokens,\n              ner_tag_statement: final_statements_list,\n            },\n            {\n              headers: {\n                Authorization: `Bearer ${this.$session.get(\"at\")}`,\n              },\n            }\n          )\n          .then((response) => {\n            this.spinnerOn = false;\n            if (this.api_status_code.SUCCESSFUL_DB_QUERY.MSG_CODE == response.data.message.MSG_CODE) {\n              Swal({\n                text: this.tlt('ner_page_tag_submit_msg'),\n                // toast: true,\n                // position: \"top-end\",\n                type: \"success\",\n                showConfirmButton: true,\n                timer: 5500,\n              });\n                this.empty_variable();\n                this.load_ner_statements();\n                // this.page_require(1);\n                // this.$router.go();\n            } else {\n              Swal({\n                title: response.data.message.MSG_CODE,\n                text: response.data.message.MSG,\n                showCancelButton: false,\n                showConfirmButton: false,\n                type: \"error\"\n              })\n            }\n          })\n          .catch((e) => {\n            this.spinnerOn = false;\n            if (\n              e.response.status === 410 ||\n              e.response.status === 440 ||\n              e.response.status === 409\n            ) {\n              this.$root.$emit(\"Session_Expired\", e.response.data);\n            }\n          });\n          console.log(\"---\")\n          this.close_modal('edit_btn')\n      }\n    },\n    delete_tags(index) {\n      Swal.fire({\n        title: this.tlt('ner_page_swal_alert_msg'),\n        text: this.tlt('ner_page_swal_revert_msg'),\n        type: \"warning\",\n        showCancelButton: true,\n        confirmButtonColor: \"#3085d6\",\n        cancelButtonColor: \"#d33\",\n        confirmButtonText: this.tlt('ner_page_swal_delete_msg'),\n      }).then((result) => {\n        if (result.value) {\n          $(\"#exampleModalCenter\").modal(\"hide\");\n          this.spinnerOn = true;\n          this.delete_ner_tags.push(this.word_info[index]);\n          this.word_info.splice(index, 1);\n          axios\n            .post(\n              api_calls.delete_ner_tags(),\n              {\n                company_id: this.$session.get(\"UserInformation\").company_id,\n                company_name: this.$session.get(\"UserInformation\").company_name,\n                email: this.$session.get(\"UserInformation\").email,\n                license_key: this.$session.get(\"UserInformation\").license_key,\n                token: this.$session.get(\"UserInformation\").tokens,\n                tag_name: this.delete_ner_tags,\n              },\n              {\n                headers: {\n                  Authorization: `Bearer ${this.$session.get(\"at\")}`,\n                },\n              }\n            )\n            .then((response) => {\n              this.spinnerOn = false;\n              if (this.api_status_code.SUCCESSFUL_DB_QUERY.MSG_CODE == response.data.message.MSG_CODE) {\n                toastr.success(this.tlt('ner_page_tag_removed_msg'));\n                // setTimeout(() => {\n                  this.delete_ner_tags = [];\n                  // this.$router.go();\n                  this.load_ner_statements();\n                // }, 500);\n              } else {\n                Swal({\n                  title: response.data.message.MSG_CODE,\n                  text: response.data.message.MSG,\n                  showCancelButton: false,\n                  showConfirmButton: false,\n                  type: \"error\"\n                })\n                toastr.error(this.tlt('ner_page_some_error_msg1'));\n                this.delete_ner_tags = [];\n              }\n            })\n            .catch((e) => {\n              this.spinnerOn = false;\n              toastr.error(this.tlt('ner_page_some_error_msg2'));\n              this.delete_ner_tags = [];\n              if (\n                e.response.status === 410 ||\n                e.response.status === 440 ||\n                e.response.status === 409\n              ) {\n                this.$root.$emit(\"Session_Expired\", e.response.data);\n              }\n            });\n        }\n      });\n    },\n    start_tagging() {\n      this.spinnerOn = true;\n      axios\n        .post(\n          api_calls.load_tag_url(),\n          {\n            company_id: this.$session.get(\"UserInformation\").company_id,\n            company_name: this.$session.get(\"UserInformation\").company_name,\n            email: this.$session.get(\"UserInformation\").email,\n            license_key: this.$session.get(\"UserInformation\").license_key,\n            token: this.$session.get(\"UserInformation\").tokens,\n            getTag: false,\n          },\n          {\n            headers: {\n              Authorization: `Bearer ${this.$session.get(\"at\")}`,\n            },\n          }\n        )\n        .then((response) => {\n          this.spinnerOn = false;\n          if (this.api_status_code.NER_TAG_STATUS.MSG_CODE == response.data.message.MSG_CODE) {\n            toastr.error(this.tlt('ner_page_tags_alert_msg'));\n            this.spinnerOn = false;\n          } else if (this.api_status_code.NER_TAG_STATUS.MSG_CODE == response.data.message.MSG_CODE) {\n            // setTimeout(() => {\n              // this.$router.go();\n              this.load_ner_statements();\n            // }, 1500);\n          } else if (this.api_status_code.EMPTY_DATA.MSG_CODE == response.data.message.MSG_CODE) {\n            toastr.error(\n              this.tlt('ner_page_tags_alert_msg1')\n            );\n            this.spinnerOn = false;\n          } else if (this.api_status_code.INTERNAL_SERVER_ERROR.MSG_CODE == response.data.message.MSG_CODE) {\n            toastr.error(\n              this.tlt('ner_page_tags_alert_msg3')\n            );\n            this.spinnerOn = false;\n          } else {\n            Swal({\n              title: response.data.message.MSG_CODE,\n              text: response.data.message.MSG,\n              showCancelButton: false,\n              showConfirmButton: false,\n              type: \"error\"\n            })\n          }\n        })\n        .catch((e) => {\n          this.spinnerOn = false;\n          if (\n            e.response.status === 410 ||\n            e.response.status === 440 ||\n            e.response.status === 409\n          ) {\n            this.$root.$emit(\"Session_Expired\", e.response.data);\n          }\n        });\n    },\n    page_require(page) {\n      $(\"input:checkbox\").prop(\"checked\", false);\n      this.checked_list = [];\n      if (page == 0 || page == this.total_pages + 1) {\n      } else {\n        if (this.search_name != \"\") {\n          if (page == \"...s\") {\n            this.page_no = Math.ceil((1 + this.page_no) / 2);\n          } else if (page == \"...l\") {\n            this.page_no = Math.ceil((this.total_pages + this.page_no) / 2);\n          } else {\n            this.page_no = page;\n          }\n          $(\"input:checkbox\").prop(\"checked\", false);\n          this.spinnerOn = true;\n          this.search_ner_statment_page_change();\n        }\n        else{\n          $(\"input:checkbox\").prop(\"checked\", false);\n          if (page == \"...s\") {\n            this.page_no = Math.ceil((1 + this.page_no) / 2);\n          } else if (page == \"...l\") {\n            this.page_no = Math.ceil((this.total_pages + this.page_no) / 2);\n          } else {\n            this.page_no = page;\n          }\n          this.spinnerOn = true;\n          axios\n            .post(\n              api_calls.load_tag_url(),\n              {\n                company_id: this.$session.get(\"UserInformation\").company_id,\n                company_name: this.$session.get(\"UserInformation\").company_name,\n                email: this.$session.get(\"UserInformation\").email,\n                license_key: this.$session.get(\"UserInformation\").license_key,\n                token: this.$session.get(\"UserInformation\").tokens,\n                get_all_ner_statements: true,\n                per_page: this.per_page,\n                page_no: this.page_no,\n              },\n              {\n                headers: {\n                  Authorization: `Bearer ${this.$session.get(\"at\")}`,\n                },\n              }\n            )\n            .then((response) => {\n              if (response.data !== null) {\n                if (this.api_status_code.DATA_AVAILABLE.MSG_CODE == response.data.message.MSG_CODE) {\n                  this.statements = [];\n                  this.load_statements(response.data.data.response);\n                  // this.number_of_rows = response.data.pagecount;\n                  // this.total_pages = Math.ceil(this.number_of_rows / this.per_page);\n                  this.setpagination(this.page_no);\n                } else if (this.api_status_code.NER_TAG_ALL.MSG_CODE == response.data.message.MSG_CODE) {\n                  this.statements = [];\n                  this.load_statements(response.data.data.response);\n                  // this.number_of_rows = response.data.pagecount;\n                  // this.total_pages = Math.ceil(this.number_of_rows / this.per_page);\n                  this.setpagination(this.page_no);\n                  this.notTrainedQuestions = response.data.data.response;\n                } else if (this.api_status_code.NER_TAG_ASSIGN.MSG_CODE == response.data.message.MSG_CODE) {\n                  this.spinnerOn = false;\n                } else if (this.api_status_code.EMPTY_DATA.MSG_CODE == response.data.message.MSG_CODE) {\n                  this.spinnerOn = false;\n                } else if (response.data == \"Internal Server Error\") {\n                  this.spinnerOn = false;\n                }\n              }else {\n                this.spinnerOn = false;\n                Swal({\n                  title: response.data.message.MSG_CODE,\n                  text: response.data.message.MSG,\n                  showCancelButton: false,\n                  showConfirmButton: false,\n                  type: \"error\"\n                })\n              }\n            })\n            .catch((e) => {\n              this.spinnerOn = false;\n              if (\n                e.response.status === 410 ||\n                e.response.status === 440 ||\n                e.response.status === 409\n              ) {\n                this.$root.$emit(\"Session_Expired\", e.response.data);\n              }\n            });\n        }\n      }\n    },\n    clear_search_name() {\n      this.search_name = \"\";\n      this.page_require(1);\n    },\n    search_ner_statment() {\n      if (this.search_name != \"\"){\n        $(\"input:checkbox\").prop(\"checked\", false);\n        this.checked_list = [];\n        this.page_no = 1\n        this.spinnerOn = true;\n        axios\n        .post(\n          api_calls.load_tag_url(),\n          {\n            company_id: this.$session.get(\"UserInformation\").company_id,\n            company_name: this.$session.get(\"UserInformation\").company_name,\n            email: this.$session.get(\"UserInformation\").email,\n            license_key: this.$session.get(\"UserInformation\").license_key,\n            token: this.$session.get(\"UserInformation\").tokens,\n            is_search: true,\n            search_term: this.search_name,\n            per_page: this.per_page,\n            page_no: this.page_no,\n          },\n          {\n            headers: {\n              Authorization: `Bearer ${this.$session.get(\"at\")}`,\n            },\n          }\n        )\n        .then((response) => {\n          if (response.data !== null) {\n            if(this.api_status_code.DATA_AVAILABLE.MSG_CODE == response.data.message.MSG_CODE){\n              this.load_statements(response.data.data.response);\n              // this.number_of_rows = response.data.pagecount;\n              this.total_pages = response.data.pagination.total_page;\n              this.setpagination(this.page_no);\n            }\n            else if (this.api_status_code.NER_TAG_ALL.MSG_CODE == response.data.message.MSG_CODE) {\n              this.load_statements(response.data.data.response);\n              // this.number_of_rows = response.data.pagecount;\n              this.total_pages = response.data.pagination.total_page;\n              this.setpagination(this.page_no);\n            } else if (this.api_status_code.NER_TAG_ASSIGN.MSG_CODE == response.data.message.MSG_CODE) {\n              this.spinnerOn = false;\n            } else if (this.api_status_code.EMPTY_DATA.MSG_CODE == response.data.message.MSG_CODE) {\n                Swal.fire({\n                  position:\"top-end\",\n                  text: this.tlt('ner_page_no_ner_msg'),\n                  toast: true,\n                  type: \"warning\",\n                  showConfirmButton: false,\n                  timer: 2500,\n                });\n              this.statements = [];\n              this.total_pages = 1;\n              this.setpagination(this.page_no);\n              this.spinnerOn = false;\n            } else if (this.api_status_code.INTERNAL_SERVER_ERROR.MSG_CODE == response.data.message.MSG_CODE) {\n              this.statements = [];\n              this.total_pages = 1;\n              this.setpagination(this.page_no);\n              this.spinnerOn = false;\n              Swal.fire({\n                  text: \"Internal Server Error\",\n                  type: \"error\",\n                  showConfirmButton: false,\n                  timer: 2500,\n                });\n            } \n          }else {\n            this.spinnerOn = false;\n            Swal({\n              title: response.data.message.MSG_CODE,\n              text: response.data.message.MSG,\n              showCancelButton: false,\n              showConfirmButton: false,\n              type: \"error\"\n            })\n          }\n        })\n        .catch((e) => {\n          this.spinnerOn = false;\n          if (\n            e.response.status === 410 ||\n            e.response.status === 440 ||\n            e.response.status === 409\n          ) {\n            this.$root.$emit(\"Session_Expired\", e.response.data);\n          }\n        });\n      }\n      else {\n        Swal({\n          text: this.tlt('ner_page_search_alert_msg'),\n          toast: true,\n          position: \"top-end\",\n          type: \"warning\",\n          showConfirmButton: false,\n          timer: 2500,\n        });\n        return;}\n    },\n    search_ner_statment_page_change() {\n      if (this.search_name != \"\"){\n        this.spinnerOn = true;\n        axios\n        .post(\n          api_calls.load_tag_url(),\n          {\n            company_id: this.$session.get(\"UserInformation\").company_id,\n            company_name: this.$session.get(\"UserInformation\").company_name,\n            email: this.$session.get(\"UserInformation\").email,\n            license_key: this.$session.get(\"UserInformation\").license_key,\n            token: this.$session.get(\"UserInformation\").tokens,\n            is_search: true,\n            search_term: this.search_name,\n            per_page: this.per_page,\n            page_no: this.page_no,\n          },\n          {\n            headers: {\n              Authorization: `Bearer ${this.$session.get(\"at\")}`,\n            },\n          }\n        )\n        .then((response) => {\n          if (response.data !== null) {\n            if (this.api_status_code.NER_TAG_ALL.MSG_CODE == response.data.message.MSG_CODE) {\n              this.load_statements(response.data.Response);\n              // this.number_of_rows = response.data.pagecount;\n              this.total_pages = response.data.pagecount;\n              this.setpagination(this.page_no);\n            } else if (this.api_status_code.NER_TAG_ASSIGN.MSG_CODE == response.data.message.MSG_CODE) {\n              this.spinnerOn = false;\n            } else if (this.api_status_code.EMPTY_DATA.MSG_CODE == response.data.message.MSG_CODE) {\n              this.statements = [];\n              this.total_pages = 1;\n              this.setpagination(this.page_no);\n              this.spinnerOn = false;\n            } else if (this.api_status_code.INTERNAL_SERVER_ERROR.MSG_CODE == response.data.message.MSG_CODE) {\n              this.statements = [];\n              this.total_pages = 1;\n              this.setpagination(this.page_no);\n              this.spinnerOn = false;\n            } \n          }else {\n            this.spinnerOn = false;\n            Swal({\n              title: response.data.message.MSG_CODE,\n              text: response.data.message.MSG,\n              showCancelButton: false,\n              showConfirmButton: false,\n              type: \"error\"\n            })\n          }\n        })\n        .catch((e) => {\n          this.spinnerOn = false;\n          if (\n            e.response.status === 410 ||\n            e.response.status === 440 ||\n            e.response.status === 409\n          ) {\n            this.$root.$emit(\"Session_Expired\", e.response.data);\n          }\n        });\n      }\n      else {\n        Swal({\n          text: this.tlt('ner_page_search_alert_msg2'),\n          toast: true,\n          position: \"top-end\",\n          type: \"warning\",\n          showConfirmButton: false,\n          timer: 2500,\n        });\n        return;}\n    },\n    setpagination(page_no) {\n      this.page_array = [];\n      if (this.total_pages <= 7) {\n        for (let i = 0; i < this.total_pages; i++) {\n          this.page_array.push(i + 1);\n        }\n      } else if (page_no == 1) {\n        for (let i = 0; i < 4; i++) {\n          this.page_array.push(i + 1);\n        }\n        this.page_array.push(\"...l\");\n        this.page_array.push(this.total_pages);\n      } else if (page_no == this.total_pages) {\n        this.page_array.push(1);\n        this.page_array.push(\"...s\");\n        for (let i = this.total_pages - 4; i < this.total_pages; i++) {\n          this.page_array.push(i + 1);\n        }\n      } else if (page_no <= 4) {\n        for (let i = 0; i < page_no + 3; i++) {\n          this.page_array.push(i + 1);\n        }\n        this.page_array.push(\"...l\");\n        this.page_array.push(this.total_pages);\n      } else if (page_no >= this.total_pages - 4) {\n        this.page_array.push(1);\n        this.page_array.push(\"...s\");\n        for (let i = page_no - 4; i < this.total_pages; i++) {\n          this.page_array.push(i + 1);\n        }\n      } else {\n        this.page_array.push(1);\n        this.page_array.push(\"...s\");\n        for (let i = page_no - 3; i <= page_no + 3; i++) {\n          this.page_array.push(i);\n        }\n        this.page_array.push(\"...l\");\n        this.page_array.push(this.total_pages);\n      }\n    },\n    pagination_class(index) {\n      if (index == this.page_no) {\n        return \" active\";\n      } else {\n        return \"\";\n      }\n    },\n    load_statements(statements) {\n      this.master_statements_list = [];\n      this.statements = [];\n      // console.log(this.statements);\n      for (var i in statements) {\n        var key = Object.keys(statements[i])[0];\n\n        if (statements[i][key].IsTagCompleted != \"YES\") {\n          var key = Object.keys(statements[i])[0];\n          \n          this.master_statements_list.push(statements[i][key]);\n\n          this.master_statements_list[\n            i\n          ].words_list = this.master_statements_list[i].Statement.split(\" \");\n\n          this.master_statements_list[i].key = key;\n        }\n        if (statements[i][key].IsTagCompleted != \"NO\") {\n          var key = Object.keys(statements[i])[0];\n          this.master_statements_list.push(statements[i][key]);\n          this.master_statements_list[\n            i\n          ].words_list = this.master_statements_list[i].Statement.split(\" \");\n\n          let desc = [];\n          var values;\n          var index;\n\n          for (var a = 0; a < this.master_statements_list[i].Tag.length; a++) {\n            if (this.master_statements_list[i].Tag[a] != \"O\") {\n              var check = this.master_statements_list[i].Tag.indexOf(\n                this.master_statements_list[i].Tag[a]\n              );\n\n              if (this.master_statements_list[i].Tag[a].includes(\"B-\")) {\n                // console.log(\"current\", this.master_statements_list[i].Tag[a]);\n                // console.log(\"next\", this.master_statements_list[i].Tag[a + 1]);\n                if (this.master_statements_list[i].Tag[a + 1] != undefined) {\n                  if (\n                    check < this.master_statements_list[i].Tag.length - 1 &&\n                    this.master_statements_list[i].Tag[a + 1].includes(\"I-\")\n                  ) {\n                    index = a;\n                    // console.log(\"index\", index);\n                    values = this.master_statements_list[i].words_list[index];\n                  } else {\n                    values = null;\n                    index = null;\n                    index = a;\n                    values = this.master_statements_list[i].words_list[index];\n                    desc.push({\n                      text: values,\n                      word_type: this.master_statements_list[i].Tag[a].slice(2),\n                    });\n                    // //console.log(desc);\n                  }\n                } else {\n                  values = null;\n                  index = null;\n                  index = a;\n                  values = this.master_statements_list[i].words_list[index];\n                  desc.push({\n                    text: values,\n                    word_type: this.master_statements_list[i].Tag[a].slice(2),\n                  });\n                }\n              } else if (this.master_statements_list[i].Tag[a].includes(\"I-\")) {\n                var check = this.master_statements_list[i].Tag.indexOf(\n                  this.master_statements_list[i].Tag[a]\n                );\n                index = a;\n                if (this.master_statements_list[i].Tag[a + 1] != undefined) {\n                  if (\n                    this.master_statements_list[i].Tag[a + 1].includes(\"I-\")\n                  ) {\n                    values =\n                      values +\n                      \" \" +\n                      this.master_statements_list[i].words_list[index];\n                  } else {\n                    values =\n                      values +\n                      \" \" +\n                      this.master_statements_list[i].words_list[index];\n                    desc.push({\n                      text: values,\n                      word_type: this.master_statements_list[i].Tag[a].slice(2),\n                    });\n                    index = null;\n                    values = null;\n                  }\n                } else {\n                  values =\n                    values +\n                    \" \" +\n                    this.master_statements_list[i].words_list[index];\n                  desc.push({\n                    text: values,\n                    word_type: this.master_statements_list[i].Tag[a].slice(2),\n                  });\n                  index = null;\n                  values = null;\n                }\n              }\n            }\n          }\n          this.master_statements_list[i][\"selected_list\"] = desc;\n\n          this.master_statements_list[i].key = key;\n        }\n      }\n      for (let i = 0; i < this.master_statements_list.length; i++) {\n        this.statements.push(this.master_statements_list[i]);\n      }\n      this.spinnerOn = false;\n      //console.log(this.master_statements_list , \"Mster statements loaded\")\n      //console.log(this.statements , \" statements loaded\")\n    },\n    load_popover(target) {\n      $(\".popoverDiv\").css(\"display\", \"block\");\n      $(\".popoverDiv\").css(\"position\", \"absolute\");\n      $(\".popoverDiv\").css(\"left\", target.clientX);\n      $(\".popoverDiv\").css(\"top\", target.clientY+ window.pageYOffset);\n    },\n    selected_text(index) {\n      if (window.getSelection) {\n        if (\n          window.getSelection().toString() != \"\" &&\n          window.getSelection().toString().split(\" \").join(\"\") != \"\"\n        ) {\n          this.highlighted_text = window.getSelection().toString().trim();\n          this.word_selected = true;\n          this.selected_statement = this.statements[index].Statement;\n          this.load_popover(event);\n        } else {\n          this.highlighted_text = \"\";\n          $(\".popoverDiv\").css(\"display\", \"none\");\n        }\n      } else if (document.selection) {\n        document.selection.createRange().text;\n      }\n    },\n    update_statements(entity) {\n      var words_list = entity.value.split(\" \");\n      var tags = [];\n      for (var i in this.statements) {\n        var master_words_list = this.statements[i].Statement.split(\" \");\n        if (this.statements[i].selected_list == undefined) {\n          this.statements[i].selected_list = [];\n        }\n        if (this.statements[i].Tag.length == 0) {\n          for (var j in master_words_list) {\n            this.statements[i].Tag.push(\"\");\n          }\n        }\n        if (this.statements[i].Statement == this.selected_statement) {\n          this.statements[i].IsTagCompleted = \"NO\";\n          this.statements[i].selected_list.push({\n            text: entity.value,\n            word_type: entity.entity,\n          });\n          for (var j in master_words_list) {\n            if (words_list.includes(master_words_list[j])) {\n              var index = words_list.indexOf(master_words_list[j]);\n              if (index == 0) {\n                this.statements[i].Tag[j] = \"B-\" + entity.entity;\n              } else {\n                this.statements[i].Tag[j] = \"I-\" + entity.entity;\n              }\n            } else {\n              if (this.statements[i].Tag[j] == \"\") {\n                this.statements[i].Tag[j] = \"O\";\n              }\n            }\n          }\n        }\n      }\n    },\n    entity(value1, value2) {\n      for (var i in event.target.parentElement.children) {\n        if (event.target.parentElement.children[i].style != undefined) {\n          event.target.parentElement.children[i].style.backgroundColor = \"\";\n          event.target.children[0].style.backgroundColor = \"\";\n        }\n      }\n      if (event.target.style.backgroundColor == \"yellow\") {\n        event.target.style.backgroundColor = \"\";\n      } else {\n        event.target.style.backgroundColor = \"yellow\";\n        var flag = false;\n        if (this.done_entities.length != 0) {\n          for (var i = 0; i < this.done_entities.length; i++) {\n            if (this.done_entities[i].value == value1) {\n              flag = true;\n            }\n          }\n        }\n        if (flag == false) {\n          this.word_selected = true;\n          this.sub_entities.value = value1;\n          this.statement_array = value2;\n          var joint = this.statement_array.join();\n          var a = joint.lastIndexOf(value1);\n          var b = value1.length + a - 2;\n          this.sub_entities.start = a;\n          this.sub_entities.end = b;\n        }\n      }\n    },\n    save_statement(index) {\n      if(this.statements[index].Tag.length == 0) {\n        Swal({\n          text: this.tlt('ner_page_add_tags_msg'),\n          toast: true,\n          position: \"top-end\",\n          type: \"warning\",\n          showConfirmButton: false,\n          timer: 2500,\n        });\n        return;\n      }else {\n        var final_statements_list = [];\n        var valid_statement = this.statements[index];\n        // console.log(\"before---\", this.statements[index]);\n        var key = valid_statement.key;\n        valid_statement.IsTagCompleted = \"YES\";\n        delete valid_statement.key;\n        delete valid_statement.selected_list;\n        delete valid_statement.words_list;\n        final_statements_list.push({\n          [key]: valid_statement,\n        });\n        // console.log(\"singular final\",final_statements_list);\n        this.spinnerOn = true;\n        axios\n          .post(\n            api_calls.tag_sentences_url(),\n            {\n              company_id: this.$session.get(\"UserInformation\").company_id,\n              company_name: this.$session.get(\"UserInformation\").company_name,\n              email: this.$session.get(\"UserInformation\").email,\n              license_key: this.$session.get(\"UserInformation\").license_key,\n              token: this.$session.get(\"UserInformation\").tokens,\n              ner_tag_statement: final_statements_list,\n            },\n            {\n              headers: {\n                Authorization: `Bearer ${this.$session.get(\"at\")}`,\n              },\n            }\n          )\n          .then((response) => {\n            this.spinnerOn = false;\n            if (this.api_status_code.SUCCESSFUL_DB_QUERY.MSG_CODE == response.data.message.MSG_CODE) {\n              Swal({\n                text: this.tlt('ner_page_tags_submit_msg'),\n                // toast: true,\n                // position: \"top-end\",\n                type: \"success\",\n                showConfirmButton: true,\n                timer: 3500,\n              });\n              // this.page_require(1);\n              this.load_ner_statements();\n            } else {\n              Swal({\n                title: response.data.message.MSG_CODE,\n                text: response.data.message.MSG,\n                showCancelButton: false,\n                showConfirmButton: false,\n                type: \"error\"\n              })\n            }\n          })\n          .catch((e) => {\n            this.spinnerOn = false;\n            if (\n              e.response.status === 410 ||\n              e.response.status === 440 ||\n              e.response.status === 409\n            ) {\n              this.$root.$emit(\"Session_Expired\", e.response.data);\n            }\n          });\n      }\n    },\n    submit_ner_model() {\n      this.spinnerOn = true;\n      var final_statements_list = [];\n      var valid_list = this.statements.filter((statement) => {\n        return statement.IsTagCompleted != \"\";\n      });\n      if (valid_list.length == 0) {\n        this.spinnerOn = false;\n        toastr.error(\n          this.tlt('ner_page_submit_alert_msg')\n        );\n      } else if (valid_list.length < 5 && this.statements.length > 5) {\n        this.spinnerOn = false;\n        toastr.error(\n          this.tlt('ner_page_submit_alert_msg1')\n        );\n      } else {\n        for (var i in valid_list) {\n          var key = valid_list[i].key;\n          delete valid_list[i].key;\n          delete valid_list[i].selected_list;\n          delete valid_list[i].words_list;\n          final_statements_list.push({\n            [key]: valid_list[i],\n          });\n        }\n        // console.log(final_statements_list);\n        if (window.getSelection().empty) {\n          window.getSelection().empty();\n        } else if (window.getSelection().removeAllRanges) {\n          window.getSelection().removeAllRanges();\n        }\n        // axios\n        //   .post(\n        //     api_calls.tag_sentences_url(),\n        //     {\n        //       companyid: this.$session.get(\"UserInformation\").company_id,\n        //       companyname: this.$session.get(\"UserInformation\").company_name,\n        //       email: this.$session.get(\"UserInformation\").email,\n        //       license_key: this.$session.get(\"UserInformation\").license_key,\n        //       token: this.$session.get(\"UserInformation\").tokens,\n        //       ner_tag_statement: final_statements_list,\n        //     },\n        //     {\n        //       headers: {\n        //         Authorization: `Bearer ${this.$session.get(\"at\")}`,\n        //       },\n        //     }\n        //   )\n        //   .then((response) => {\n        //     this.spinnerOn = false;\n        //     if (response.data == \"Query Executed Successfully\") {\n        //       toastr.success(\"All your tags have been submitted successfully.\");\n        //       setTimeout(() => {\n        //         this.$router.go();\n        //       }, 2000);\n        //     } else if (response.data == \"Internal Server Error\") {\n        //       toastr.error(\"Internal Server Error\");\n        //     }\n        //     if (window.getSelection().empty) {\n        //       window.getSelection().empty();\n        //     } else if (window.getSelection().removeAllRanges) {\n        //       window.getSelection().removeAllRanges();\n        //     }\n        //   })\n        //   .catch(() => {\n        //     this.spinnerOn = false;\n        //     toastr.error(\"Internal Server Error\");\n        //   });\n      }\n    },\n    remove_tag(index) {\n      if(this.statements[index].Tag.length == 0) {\n        Swal({\n          text: this.tlt('ner_page_no_tags_msg'),\n          toast: true,\n          position: \"top-end\",\n          type: \"warning\",\n          showConfirmButton: false,\n          timer: 2500,\n        });\n        return;\n      }\n      Swal.fire({\n        title: this.tlt('ner_page_swal_msg'),\n        text: this.tlt('ner_page_untag_statement_msg'),\n        type: \"warning\",\n        showCancelButton: true,\n        confirmButtonColor: \"#3085d6\",\n        cancelButtonColor: \"#d33\",\n        confirmButtonText: this.tlt('ner_page_swal_delete_msg'),\n      }).then((result) => {\n        // console.log(result);\n        if (result.dismiss) {\n          return;\n        }\n        this.statements[index].IsTagCompleted = \"NO\";\n        this.statements[index].Tag = [];\n        this.statements[index].selected_list = [];\n        this.$set(this.statements, index, this.statements[index]);\n\n        var final_statements_list = [];\n        var valid_statement = this.statements[index];\n        var key = valid_statement.key;\n        delete valid_statement.key;\n        delete valid_statement.selected_list;\n        delete valid_statement.words_list;\n        final_statements_list.push({\n          [key]: valid_statement,\n        });\n        // console.log(\"singular final\",final_statements_list);\n        this.spinnerOn = true;\n        axios\n          .post(\n            api_calls.tag_sentences_url(),\n            {\n              company_id: this.$session.get(\"UserInformation\").company_id,\n              company_name: this.$session.get(\"UserInformation\").company_name,\n              email: this.$session.get(\"UserInformation\").email,\n              license_key: this.$session.get(\"UserInformation\").license_key,\n              token: this.$session.get(\"UserInformation\").tokens,\n              ner_tag_statement: final_statements_list,\n            },\n            {\n              headers: {\n                Authorization: `Bearer ${this.$session.get(\"at\")}`,\n              },\n            }\n          )\n          .then((response) => {\n            this.spinnerOn = false;\n            if (this.api_status_code.SUCCESSFUL_DB_QUERY.MSG_CODE == response.data.message.MSG_CODE) {\n              Swal({\n                text: this.tlt('ner_page_tag_removed_msg'),\n                // toast: true,\n                // position: \"top-end\",\n                type: \"success\",\n                showConfirmButton: true,\n                timer: 3500,\n              });\n            } else {\n              Swal({\n                title: response.data.message.MSG_CODE,\n                text: response.data.message.MSG,\n                showCancelButton: false,\n                showConfirmButton: false,\n                type: \"error\"\n              })\n            }\n          })\n          .catch((e) => {\n            this.spinnerOn = false;\n            if (\n              e.response.status === 410 ||\n              e.response.status === 440 ||\n              e.response.status === 409\n            ) {\n              this.$root.$emit(\"Session_Expired\", e.response.data);\n            }\n          });\n      });\n    },\n    entity_selected(word) {\n      if (this.highlighted_text != \"\") {\n        this.sub_entities.value = this.highlighted_text;\n      }\n      var popover_id =\n        event.target.parentElement.parentElement.parentElement.id;\n      // this.word_selected = false;\n      this.sub_entities.entity = this.drop_down_select;\n      this.done_entities.push(this.sub_entities);\n      $(\"#\" + popover_id).popover(\"hide\");\n      $(\".popoverDiv\").css(\"display\", \"none\");\n      this.drop_down_select = \"\";\n      this.highlighted_text = \"\";\n      this.update_statements(this.sub_entities);\n      this.sub_entities = {};\n      if (window.getSelection().empty) {\n        window.getSelection().empty();\n      } else if (window.getSelection().removeAllRanges) {\n        window.getSelection().removeAllRanges();\n      }\n    },\n    fileinput(e) {\n      let files = e.target.files || e.dataTransfer.files;\n      //console.log(files)\n      if (files[0].size < 1000000) {\n        if (\n          files[0].name.includes(\"csv\") ||\n          files[0].name.includes(\"txt\") ||\n          files[0].name.includes(\"xls\") ||\n          files[0].type.includes(\"text\")\n        ) {\n          //console.log(this.file_label)\n          this.file_label = files[0].name;\n          this.createCSV(files[0]);\n          //console.log(this.file_label)\n        }\n      } else {\n        toastr.error(this.tlt('ner_page_file_size_alert'));\n      }\n      if (!files.length) return;\n    },\n    createCSV(file, type) {\n      let reader = new FileReader();\n      reader.onload = (e) => {\n        this.csv_file = e.target.result.split(\"base64\")[1];\n      };\n      reader.readAsDataURL(file);\n    },\n    send_csv() {\n      //console.log($(\"#inputGroupFile01\").val())\n      event.preventDefault();\n      if ($(\"#inputGroupFile01\").val() == '') {\n        Swal.fire({\n          title: this.tlt('ner_page_input_field_msg'),\n          text: this.tlt('ner_page_upload_file_msg'),\n          type: \"warning\",\n          showConfirmButton: false,\n          timer: 2500,\n        });\n      }else{\n        this.spinnerOn = true;\n        //console.log(this.file_label)\n        axios\n          .post(\n            api_calls.upload_ner_file_url(),\n            {\n              company_name: this.$session.get(\"UserInformation\").company_name,\n              company_id: this.$session.get(\"UserInformation\").company_id,\n              email: this.$session.get(\"UserInformation\").email,\n              token: this.$session.get(\"UserInformation\").tokens,\n              license_key: this.$session.get(\"UserInformation\").license_key,\n              file_data: this.csv_file,\n              file_name: this.file_label,\n            },\n            {\n              headers: {\n                Authorization: `Bearer ${this.$session.get(\"at\")}`,\n              },\n            }\n          )\n          .then((response) => {\n            this.spinnerOn = false;\n            if (this.api_status_code.ERROR_UPLOAD.MSG_CODE == response.data.message.MSG_CODE) {\n              toastr.error(this.tlt('ner_page_error_upload_alert'));\n              this.file_label = \"Choose file\";\n              this.csv_file = \"\";\n              document.getElementById(\"inputGroupFile01\").value=\"\";\n            } else if (this.api_status_code.NER_TAG_STATUS.MSG_CODE == response.data.message.MSG_CODE) {\n              toastr.error(\n                this.tlt('ner_page_tags_assign_msg')\n              );\n              this.file_label = \"Choose file\";\n              this.csv_file = \"\";\n              document.getElementById(\"inputGroupFile01\").value=\"\";\n            } else if (this.api_status_code.INVALID_HEADING.MSG_CODE == response.data.message.MSG_CODE) {\n              toastr.error(this.tlt('ner_page_invalid_header_msg'));\n              this.file_label = \"Choose file\";\n              this.csv_file = \"\";\n              document.getElementById(\"inputGroupFile01\").value=\"\";\n            } else if (this.api_status_code.FAILED_TO_ADD_TAGS.MSG_CODE == response.data.message.MSG_CODE) {\n              // toastr.error(\"Unknown Tags found! Statements has been uploaded, Please tag the statements manually.\")\n             Swal({\n                text: this.tlt('ner_page_tags_found_alert_msg'),\n                type: \"error\",\n                showConfirmButton: true,\n                timer: 10000,\n              });\n              this.file_label = \"Choose file\";\n              this.csv_file = \"\";\n              document.getElementById(\"inputGroupFile01\").value=\"\";\n              // setTimeout(() => {\n                // this.$router.go();\n                this.load_ner_statements();\n              // }, 2500); \n            } else if (this.api_status_code.INCORRECT_FILE_FORMAT.MSG_CODE == response.data.message.MSG_CODE) {\n              toastr.error(this.tlt('ner_page_file_format_msg'));\n              this.file_label = \"Choose file\";\n              this.csv_file = \"\";\n              document.getElementById(\"inputGroupFile01\").value=\"\";\n            } else if (this.api_status_code.INVALID_FILE_TYPE.MSG_CODE == response.data.message.MSG_CODE) {\n              toastr.error(this.tlt('ner_page_file_type_msg'));\n              this.file_label = \"Choose file\";\n              this.csv_file = \"\";\n              document.getElementById(\"inputGroupFile01\").value=\"\";\n            } else if (this.api_status_code.FILE_UPLOAD.MSG_CODE == response.data.message.MSG_CODE) {\n              toastr.success(this.tlt('ner_page_upload_success_alert_msg'));\n             // setTimeout(() => {\n                // this.$router.go();\n                this.load_ner_statements();\n              // }, 2500);\n            } else if (this.api_status_code.INTERNAL_SERVER_ERROR.MSG_CODE == response.data.message.MSG_CODE){\n              Swal({\n                title: response.data.message.MSG_CODE,\n                text: response.data.message.MSG,\n                showCancelButton: false,\n                showConfirmButton: false,\n                type: \"info\"\n              })\n            }\n            else {\n              Swal({\n                title: response.data.message.MSG_CODE,\n                text: response.data.message.MSG,\n                showCancelButton: false,\n                showConfirmButton: false,\n                type: \"error\"\n              })\n            }\n            // else if (response.data == \"Internal Server Error\") {\n            //   this.file_label = \"Choose file\";\n            //   this.csv_file = \"\";\n            //   toastr.error(\n            //     \"Due to some internal server error, we were unable to process this request. Please try later.\"\n            //   );\n            // }\n            $(\"#upload_csv_file\").modal(\"hide\");\n          })\n          .catch((e) => {\n            this.spinnerOn = false;\n            if (\n              e.response.status === 410 ||\n              e.response.status === 440 ||\n              e.response.status === 409\n            ) {\n              this.$root.$emit(\"Session_Expired\", e.response.data);\n            }\n          });\n          this.close_modal('upload_btn')\n        }\n    },\n    comma_to_list() {\n      event.preventDefault();\n      if (this.entities_list_string == \"\") {\n        Swal({\n          text: this.tlt('ner_page_ner_tag_msg'),\n          toast: true,\n          position: \"top-end\",\n          type: \"warning\",\n          showConfirmButton: false,\n          timer: 2500,\n        });\n      }\n      this.entities_list = this.entities_list_string.split(\",\");\n      if (this.entities_list_string != \"\") {\n        $(\"#exampleModalCenter\").modal(\"hide\");\n        this.spinnerOn = true;\n        axios\n          .post(\n            api_calls.add_ner_tag(),\n            {\n              company_name: this.$session.get(\"UserInformation\").company_name,\n              company_id: this.$session.get(\"UserInformation\").company_id,\n              email: this.$session.get(\"UserInformation\").email,\n              token: this.$session.get(\"UserInformation\").tokens,\n              license_key: this.$session.get(\"UserInformation\").license_key,\n              taglist: this.entities_list,\n            },\n            {\n              headers: {\n                Authorization: `Bearer ${this.$session.get(\"at\")}`,\n              },\n            }\n          )\n          .then((response) => {\n            this.spinnerOn = false;\n            if (this.api_status_code.NER_TAG_ADD.MSG_CODE == response.data.message.MSG_CODE) {\n              toastr.success(this.tlt('ner_page_tag_added_alert_msg'));\n            } else if(this.api_status_code.UNSUCCESSFUL_DB_QUERY.MSG_CODE == response.data.message.MSG_CODE){\n              Swal({\n                title: response.data.message.MSG_CODE,\n                text: response.data.message.MSG,\n                showCancelButton: false,\n                showConfirmButton: false,\n                type: \"error\"\n              })\n            }\n            else {\n              Swal({\n                title: response.data.message.MSG_CODE,\n                text: response.data.message.MSG,\n                showCancelButton: false,\n                showConfirmButton: false,\n                type: \"error\"\n              })\n            } \n            this.empty_variable();\n          })\n          .catch((e) => {\n            this.spinnerOn = false;\n            toastr.error(this.tlt('ner_page_some_error_alert2'));\n            this.spinnerOn = false;\n            if (\n              e.response.status === 410 ||\n              e.response.status === 440 ||\n              e.response.status === 409\n            ) {\n              this.$root.$emit(\"Session_Expired\", e.response.data);\n            }\n          });\n      }\n      if (this.delete_ner_tags.length > 0) {\n        // axios\n        //   .post(api_calls.delete_ner_tags(), {\n        //     companyid: this.$session.get(\"UserInformation\").company_id,\n        //     companyname: this.$session.get(\"UserInformation\").company_name,\n        //     email: this.$session.get(\"UserInformation\").email,\n        //     license_key: this.$session.get(\"UserInformation\").license_key,\n        //     token: this.$session.get(\"UserInformation\").tokens,\n        //     tag_name: this.delete_ner_tags,\n        //   })\n        //   .then((response) => {\n        //     if (response.data.Msg == \"Query Executed Successfully\") {\n        //       toastr.success(\"Your tag has been removed successfully.\");\n        //       setTimeout(() => {\n        //         this.$router.go();\n        //       }, 2500);\n        //     }\n        //   });\n      } else {\n        // setTimeout(() => {\n          // this.$router.go();\n          this.load_ner_statements();\n        // }, 2500);\n      }\n    },\n    delete_ner(index) {\n      // console.log(\"statements length\",this.statements.length);\n      var delete_statement_list = [];\n      var valid_list = this.statements.filter((statement) => {\n        return statement.Statement == this.statements[index].Statement;\n      });\n      // console.log(valid_list);\n      for (var i in valid_list) {\n        var key = valid_list[i].key;\n        delete valid_list[i].key;\n        delete valid_list[i].selected_list;\n        delete valid_list[i].words_list;\n        delete_statement_list.push({\n          [key]: valid_list[i],\n        });\n      }\n      // console.log(delete_statement_list);\n      Swal.fire({\n        title: this.tlt('ner_swal_alert_msg'),\n        text: this.tlt('ner_swal_revert_msg'),\n        type: \"warning\",\n        showCancelButton: true,\n        confirmButtonColor: \"#3085d6\",\n        cancelButtonColor: \"#d33\",\n        confirmButtonText: this.tlt('ner_swal_confirm_msg'),\n      }).then((result) => {\n        if (result.value) {\n          this.spinnerOn = true;\n          axios\n            .post(\n              api_calls.delete_ner(),\n              {\n                company_id: this.$session.get(\"UserInformation\").company_id,\n                company_name: this.$session.get(\"UserInformation\").company_name,\n                license_key: this.$session.get(\"UserInformation\").license_key,\n                email: this.$session.get(\"UserInformation\").email,\n                token: this.$session.get(\"UserInformation\").tokens,\n                ner_tag_statment: delete_statement_list,\n              },\n              {\n                headers: {\n                  Authorization: `Bearer ${this.$session.get(\"at\")}`,\n                },\n              }\n            )\n            .then((response) => {\n              this.spinnerOn = false;\n              if (this.api_status_code.SUCCESSFUL_DB_QUERY.MSG_CODE == response.data.message.MSG_CODE) {\n                // toastr.success(\"Your NER tag deleted successfully\");\n                Swal({\n                    text: this.tlt('ner_tag_delete_msg'),\n                    toast: true,\n                    position: \"top-end\",\n                    type: \"success\",\n                    showConfirmButton: false,\n                    timer: 5500,\n                  });\n                if((this.statements.length === 1 && \n                  delete_statement_list.length === 1) &&\n                  this.page_no > 1){\n                    this.page_no = this.page_no - 1;\n                }\n                this.clear_fields();\n                // setTimeout(() => {\n                  // this.$router.go();\n                  this.load_ner_statements();\n                // }, 1500);\n              } else {\n                Swal({\n                  title: response.data.message.MSG_CODE,\n                  text: response.data.message.MSG,\n                  showCancelButton: false,\n                  showConfirmButton: false,\n                  type: \"error\"\n                })\n              }\n            })\n            .catch((e) => {\n              this.spinnerOn = false;\n              if (\n                e.response.status === 410 ||\n                e.response.status === 440 ||\n                e.response.status === 409\n              ) {\n                this.$root.$emit(\"Session_Expired\", e.response.data);\n              }\n            });\n        }\n      });\n    },\n    selected_statements(index) {\n      if (index == \"all\") {\n        this.checked_list = [];\n        var role_length = this.statements.length;\n        for (var i = 0; i < role_length; i++) {\n          this.checked_list.push(this.statements[i]);\n        }\n        //console.log(this.checked_list)\n      } else {\n        if (event.target.checked == true) {\n          if (!this.checked_list.includes(index)) {\n            this.checked_list.push(this.statements[index]);\n          }\n        } else if (event.target.checked == false) {\n          var selectall = document.querySelector(\"#selectall\");\n          if (selectall.checked == true) {\n            selectall.checked = false;\n          }\n          var temp = this.checked_list.filter((role)=> {\n            return role !== this.statements[index];\n          });\n          this.checked_list = temp;\n        }\n      }\n    },\n    delete_ner_multiple() {\n      // console.log(this.statements,\"statements in delete function\")\n      // console.log(this.master_statements_list,\"Master statements in delete function\")\n      \n      var num = this.checked_list.length;\n      var multiple_delete_statement_list = [];\n      if (this.checked_list.length == 0) {\n        Swal.fire({\n          title: this.tlt('ner_no_statement_alert_msg'),\n          text: \"\",\n          type: \"error\",\n          timer: 2000,\n        });\n      } else if (this.checked_list.length > 0) {\n        let dlt_list=[];\n        for (var i in this.checked_list) {\n          // var valid_list = this.statements.filter((statement) => {\n\n            \n            // return statement.Statement == this.checked_list[i].Statement;\n          // });\n          \n          // console.log(valid_list,\"list\")\n          \n          // console.log(valid_list[0],\"list\")\n          var key = this.checked_list[i].key;\n          dlt_list.push(key)\n          \n\n          multiple_delete_statement_list.push({ [key]: this.checked_list[i] });\n     \n          \n        }\n        Swal.fire({\n          title: this.tlt('ner_swal_alert_msg2'),\n          text: this.tlt('ner_swal_revert_msg2'),\n          type: \"warning\",\n          showCancelButton: true,\n          confirmButtonColor: \"#3085d6\",\n          cancelButtonColor: \"#d33\",\n          confirmButtonText: this.tlt('ner_swal_confirm_msg2'),\n        }).then((result) => {\n          if (result.value) {\n            this.spinnerOn = true;\n            axios\n              .post(\n                api_calls.delete_ner(),\n                {\n                  company_id: this.$session.get(\"UserInformation\").company_id,\n                  company_name: this.$session.get(\"UserInformation\")\n                    .company_name,\n                  license_key: this.$session.get(\"UserInformation\").license_key,\n                  email: this.$session.get(\"UserInformation\").email,\n                  token: this.$session.get(\"UserInformation\").tokens,\n                  ner_tag_statment: multiple_delete_statement_list,\n                },\n                {\n                  headers: {\n                    Authorization: `Bearer ${this.$session.get(\"at\")}`,\n                  },\n                }\n              )\n              .then((response) => {\n                this.spinnerOn = false;\n                if (this.api_status_code.SUCCESSFUL_DB_QUERY.MSG_CODE == response.data.message.MSG_CODE) {\n                  Swal({\n                    text: this.tlt('ner_tag_delete_msg2'),\n                    toast: true,\n                    position: \"top-end\",\n                    type: \"success\",\n                    showConfirmButton: false,\n                    timer: 5500,\n                  });\n                  if(multiple_delete_statement_list.length === this.statements.length && \n                    this.page_no >1){\n                      this.page_no = this.page_no - 1;\n                  }\n                  this.clear_fields();\n                  // setTimeout(() => {\n                    // this.$router.go();\n                    //console.log(\"RANNNN\")\n                    this.load_ner_statements();\n                  // }, 1500);\n                } else {\n                  this.clear_fields();\n                  Swal({\n                    title: response.data.message.MSG_CODE,\n                    text: response.data.message.MSG,\n                    showCancelButton: false,\n                    showConfirmButton: false,\n                    type: \"error\"\n                  })\n                }\n              })\n              .catch((e) => {\n                this.spinnerOn = false;\n                if (\n                  e.response.status === 410 ||\n                  e.response.status === 440 ||\n                  e.response.status === 409\n                ) {\n                  this.$root.$emit(\"Session_Expired\", e.response.data);\n                }\n              });\n          }\n        });\n      }\n    },\n    train_ner_model() {\n      if(!this.disable_btn_expired){\n      if (this.notTrainedQuestions.length > 0) {\n        Swal.fire({\n          title: this.tlt('ner_setup_translate_msg'),\n          text: this.tlt('ner_training_time_msg'),\n          type: \"warning\",\n          showCancelButton: true,\n          confirmButtonColor: \"#3085d6\",\n          cancelButtonColor: \"#d33\",\n          confirmButtonText: this.tlt('ner_train_entity_model_msg'),\n          cancelButtonText: this.tlt('ner_go_back_msg'),\n        }).then((result) => {\n          if (result.value) {\n            // if (this.statements.length > 0) {\n            // axios\n            //   .post(api_calls.notify_superadmin_url(), {\n            //     companyname: this.companyname,\n            //     companyid: this.companyid,\n            //     notify_type: \"NerModel\",\n            //     email: this.$session.get(\"UserInformation\").email,\n            //     token: this.$session.get(\"UserInformation\").tokens,\n            //     license_key: this.$session.get(\"UserInformation\").license_key,\n            //     subject: \"Notification to train the ner model\",\n            //     body:\n            //       this.companyname +\n            //       \"has requested to train the ner model of entities.\",\n            //   })\n            //   .then((response) => {\n            //     alert(response.data.Msg);\n            //     if (response.data.Msg == \"A mail has been sent to your email\") {\n            //       toastr.success(\n            //         \"Your Ner  model is successfully scheduled for further training.\"\n            //       );\n            //       this.new_questions = 0;\n            //     }\n            //   });\n            axios\n              .post(api_calls.train_ner_models(), {\n                company_name: this.$session.get(\"UserInformation\").company_name,\n                company_id: this.$session.get(\"UserInformation\").company_id,\n                email: this.$session.get(\"UserInformation\").email,\n                license_key: this.$session.get(\"UserInformation\").license_key,\n                token: this.$session.get(\"UserInformation\").tokens,\n                subscription: this.$session.get(\"UserInformation\").subscription,\n                company_details: {\n                  company_name: this.$session.get(\"UserInformation\")\n                    .company_name,\n                  company_id: this.$session.get(\"UserInformation\").company_id,\n                },\n                // epochs: 100,\n                // batch_size: 64\n              })\n              .then((response) => {\n                this.want_status = true;\n                this.$root.$emit(\"want_model_status\",this.want_status);\n                this.check_ner_model_status();\n                if (response.data.message.MSG_CODE === 20000111) {\n                  toastr.success(response.data.message.MSG);\n                } else {\n                  Swal({\n                    title: response.data.message.MSG_CODE,\n                    text: response.data.message.MSG,\n                    showCancelButton: false,\n                    showConfirmButton: false,\n                    type: \"error\"\n                  })\n                }\n              })\n              .catch((e) => {\n                toastr.error(this.tlt('ner_internal_server_alert2'));\n                if (\n                  e.response.status === 410 ||\n                  e.response.status === 440 ||\n                  e.response.status === 409\n                ) {\n                  this.$root.$emit(\"Session_Expired\", e.response.data);\n                }\n              });\n            // } else {\n            //   toastr.error(\"There are no tags to train. Please add some tags and\");\n            // }\n          }\n        });\n      } else {\n        toastr.error(\n          this.tlt('ner_no_tags_train_msg')\n        );\n      }}else{\n        this.show_subscription_expired_swal();\n      }\n    },\n    clear_fields() {\n      this.word_info = this.buffer_word_list;\n      this.entities_list_string = \"\";\n      this.checked_list = [];\n    },\n    download_sample() {\n      // console.log(this.companyname);\n      event.preventDefault();\n      this.spinnerOn = true;\n      axios({\n        method: \"post\",\n        url: api_calls.file_download(),\n        responseType: \"blob\",\n        data: {\n          company_id: this.$session.get(\"UserInformation\").company_id,\n          company_name: this.$session.get(\"UserInformation\").company_name,\n          license_key: this.$session.get(\"UserInformation\").license_key,\n          token: this.$session.get(\"UserInformation\").tokens,\n          email: this.$session.get(\"UserInformation\").email,\n          sample_file: \"ner\",\n        },\n        headers: {\n          Authorization: `Bearer ${this.$session.get(\"at\")}`,\n        },\n      })\n        .then((response) => {\n          this.spinnerOn = false;\n          if (response.data.message === \"Not able to download file\") {\n            Swal.fire({\n              title: this.tlt('ner_download_sample_alert'),\n              type: \"error\",\n              timer: 2500,\n            });\n          } else {\n            var url = window.URL.createObjectURL(new Blob([response.data]));\n            var link = document.createElement(\"a\");\n            link.href = url;\n            // console.log(this.companyname)\n            link.setAttribute(\"download\", this.company_name + \"NerFile.csv\");\n            document.body.appendChild(link);\n            link.click();\n          }\n        })\n        .catch((e) => {\n          this.spinnerOn = false;\n          Swal.fire({\n            title: this.tlt('ner_download_sample_alert2'),\n            type: \"error\",\n            timer: 2500,\n          });\n          if (\n            e.response.status === 410 ||\n            e.response.status === 440 ||\n            e.response.status === 409\n          ) {\n            this.$root.$emit(\"Session_Expired\", e.response.data);\n          }\n        });\n    },\n  },\n};\n</script>\n<style scoped>\n.fa-pulse {\n  animation: a 4s infinite steps(8);\n}\n.arrow-up {\n  width: 0;\n  height: 0;\n  border-left: 5px solid transparent;\n  border-right: 5px solid transparent;\n\n  border-bottom: 5px solid black;\n}\n.popoverDiv {\n  display: none;\n  width: 200px;\n  z-index: 101;\n  background-color: #fff;\n  border: 3px solid #666;\n  padding: 12px 12px 12px 12px;\n  border-radius: 0px 0px 0px 0px;\n}\n.tags-list {\n  background-color: #283879;\n  color: #fff;\n  margin-left: 3%;\n  width: auto;\n  border-radius: 5px;\n  flex: auto;\n}\n.disabled_btn{\n  pointer-events: none;\n  opacity: 0.5;\n\n  \n}\n\n</style>\n\n</style>\n"],"sourceRoot":"src/portal/Chatbot/Dashboard/Data Inputs"}]}