{"remainingRequest":"/home/vimalesh/Learning/devops_ui/node_modules/babel-loader/lib/index.js!/home/vimalesh/Learning/devops_ui/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/vimalesh/Learning/devops_ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/vimalesh/Learning/devops_ui/src/portal/Chatbot/Dashboard/ActionForm.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/vimalesh/Learning/devops_ui/src/portal/Chatbot/Dashboard/ActionForm.vue","mtime":1659525100364},{"path":"/home/vimalesh/Learning/devops_ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vimalesh/Learning/devops_ui/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/vimalesh/Learning/devops_ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vimalesh/Learning/devops_ui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0IjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwIjsKaW1wb3J0IF90b0NvbnN1bWFibGVBcnJheSBmcm9tICIvaG9tZS92aW1hbGVzaC9MZWFybmluZy9kZXZvcHNfdWkvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL3RvQ29uc3VtYWJsZUFycmF5IjsKLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IFNpbXBsZUZsb3djaGFydCBmcm9tICJ2dWUtc2ltcGxlLWZsb3djaGFydCI7CmltcG9ydCAidnVlLXNpbXBsZS1mbG93Y2hhcnQvZGlzdC92dWUtZmxvd2NoYXJ0LmNzcyI7CmltcG9ydCBheGlvcyBmcm9tICJheGlvcyI7CmltcG9ydCBhcGlfY2FsbHMgZnJvbSAiQC9wb3J0YWwvYXBpX2NhbGxzIjsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJhcHAiLAogIGNvbXBvbmVudHM6IHsKICAgIFNpbXBsZUZsb3djaGFydDogU2ltcGxlRmxvd2NoYXJ0CiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgZGF0YV9zZXQ6IFtdLAogICAgICBzY2VuZTogewogICAgICAgIGNlbnRlclg6IDEwMjQsCiAgICAgICAgY2VudGVyWTogMTQwLAogICAgICAgIHNjYWxlOiAxLAogICAgICAgIG5vZGVzOiBbXSwKICAgICAgICBsaW5rczogW10KICAgICAgfSwKICAgICAgbGV2ZWxfY291bnQ6IDAsCiAgICAgIG5ld05vZGVUeXBlOiAwLAogICAgICBuZXdOb2RlVmFsdWU6ICIiLAogICAgICBub2RlQ2F0ZWdvcnk6IFsiUHJvbXB0IiwgIkJ1dHRvbiIsICJIeXBlcmxpbmsiLCAiVmlkZW8iLCAiVGV4dCIsICJVc2VyIFJlcGx5Il0KICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICBkYXRhX21hbmFnZW1lbnQ6IGZ1bmN0aW9uIGRhdGFfbWFuYWdlbWVudChub2RlLCBwYXJlbnRfbGFiZWwsIHBhcmVudF90eXBlKSB7CiAgICAgIHZhciBsZXZlbF9jb3VudCA9IHRoaXMubm9kZXNfbGV2ZWxfY291bnQobm9kZVswXS5pZCk7CgogICAgICBpZiAodGhpcy5kYXRhX3NldC5sZW5ndGggPD0gbGV2ZWxfY291bnQpIHsKICAgICAgICB0aGlzLmRhdGFfc2V0LnB1c2goW10pOwogICAgICB9CgogICAgICB2YXIgaXNFeGlzdHMgPSB0aGlzLmRhdGFfc2V0W2xldmVsX2NvdW50XS5maWx0ZXIoZnVuY3Rpb24gKHJlcXVpcmVkX25vZGUpIHsKICAgICAgICByZXR1cm4gcmVxdWlyZWRfbm9kZS5sYWJlbCA9PSBub2RlWzBdLmxhYmVsOwogICAgICB9KTsKCiAgICAgIGlmIChpc0V4aXN0cy5sZW5ndGggPT0gMCkgewogICAgICAgIHRoaXMuZGF0YV9zZXRbbGV2ZWxfY291bnRdLnB1c2goewogICAgICAgICAgbGFiZWw6IG5vZGVbMF0ubGFiZWwsCiAgICAgICAgICB0eXBlOiBub2RlWzBdLnR5cGUsCiAgICAgICAgICBwYXJlbnRfbGFiZWw6IHBhcmVudF9sYWJlbCwKICAgICAgICAgIHBhcmVudF90eXBlOiBwYXJlbnRfdHlwZQogICAgICAgIH0pOwogICAgICB9CiAgICB9LAogICAgZGF0YV9maWx0ZXI6IGZ1bmN0aW9uIGRhdGFfZmlsdGVyKHN0YXJ0X2luZGV4LCBsYWJlbCwgdHlwZSkge30sCiAgICBub2Rlc19sZXZlbF9jb3VudDogZnVuY3Rpb24gbm9kZXNfbGV2ZWxfY291bnQodG8pIHsKICAgICAgdmFyIGxvY2FsX3RvID0gdG87CiAgICAgIHZhciBicmFuY2g7CiAgICAgIHZhciBsZXZlbF9jb3VudCA9IDA7CgogICAgICBmb3IgKHZhciBpIGluIHRoaXMuc2NlbmUubGlua3MpIHsKICAgICAgICBicmFuY2ggPSB0aGlzLnNjZW5lLmxpbmtzLmZpbHRlcihmdW5jdGlvbiAobGluaykgewogICAgICAgICAgcmV0dXJuIGxpbmsudG8gPT0gbG9jYWxfdG87CiAgICAgICAgfSk7CgogICAgICAgIGlmIChicmFuY2gubGVuZ3RoID49IDEpIHsKICAgICAgICAgIGxldmVsX2NvdW50ICs9IDE7CiAgICAgICAgICBsb2NhbF90byA9IGJyYW5jaFswXS5mcm9tOwogICAgICAgIH0gZWxzZSB7fQogICAgICB9CgogICAgICByZXR1cm4gbGV2ZWxfY291bnQ7CiAgICB9LAogICAgY2FudmFzQ2xpY2s6IGZ1bmN0aW9uIGNhbnZhc0NsaWNrKGUpIHsvLyBjb25zb2xlLmxvZygiY2FudmFzIENsaWNrLCBldmVudDoiLCBlKTsKICAgIH0sCiAgICBhZGROb2RlOiBmdW5jdGlvbiBhZGROb2RlKCkgewogICAgICBpZiAodGhpcy5uZXdOb2RlVmFsdWUgPT0gIiIpIHsKICAgICAgICB0b2FzdHIuZXJyb3IoIlBsZWFzZSBlbnRlciBhIHZhbHVlLiIpOwogICAgICB9IGVsc2UgewogICAgICAgIHZhciBtYXhJRCA9IE1hdGgubWF4LmFwcGx5KE1hdGgsIFswXS5jb25jYXQoX3RvQ29uc3VtYWJsZUFycmF5KHRoaXMuc2NlbmUubm9kZXMubWFwKGZ1bmN0aW9uIChsaW5rKSB7CiAgICAgICAgICByZXR1cm4gbGluay5pZDsKICAgICAgICB9KSkpKTsKICAgICAgICB0aGlzLnNjZW5lLm5vZGVzLnB1c2goewogICAgICAgICAgaWQ6IG1heElEICsgMSwKICAgICAgICAgIHg6IC00MDAsCiAgICAgICAgICB5OiA1MCwKICAgICAgICAgIHR5cGU6IHRoaXMubm9kZUNhdGVnb3J5W3RoaXMubmV3Tm9kZVR5cGVdLAogICAgICAgICAgbGFiZWw6IHRoaXMubmV3Tm9kZVZhbHVlID8gdGhpcy5uZXdOb2RlVmFsdWUgOiAidGVzdCIuY29uY2F0KG1heElEICsgMSkKICAgICAgICB9KTsKICAgICAgICB0aGlzLm5ld05vZGVWYWx1ZSA9ICIiOwogICAgICB9CiAgICB9LAogICAgbm9kZUNsaWNrOiBmdW5jdGlvbiBub2RlQ2xpY2soaWQpIHsvLyBjb25zb2xlLmxvZygibm9kZSBjbGljayIsIGlkKTsKICAgIH0sCiAgICBub2RlRGVsZXRlOiBmdW5jdGlvbiBub2RlRGVsZXRlKGlkKSB7Ly8gY29uc29sZS5sb2coIm5vZGUgZGVsZXRlIiwgaWQpOwogICAgfSwKICAgIHN1Ym1pdF90ZW1wbGF0ZTogZnVuY3Rpb24gc3VibWl0X3RlbXBsYXRlKCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgaWYgKHRoaXMuZGF0YV9zZXQubGVuZ3RoID09IDApIHsKICAgICAgICB0b2FzdHIuZXJyb3IoIlBsZWFzZSBjcmVhdGUgYSB2YWxpZCB0cmVlLiIpOwogICAgICB9IGVsc2UgewogICAgICAgIGF4aW9zLnBvc3QoYXBpX2NhbGxzLnN1Ym1pdF9jbG9zZWRfZm9ybV91cmwoKSwgewogICAgICAgICAgY29tcGFueV9pZDogdGhpcy4kc2Vzc2lvbi5nZXQoIlVzZXJJbmZvcm1hdGlvbiIpLmNvbXBhbnlfaWQsCiAgICAgICAgICBjb21wYW55X25hbWU6IHRoaXMuJHNlc3Npb24uZ2V0KCJVc2VySW5mb3JtYXRpb24iKS5jb21wYW55X25hbWUsCiAgICAgICAgICBlbWFpbDogdGhpcy4kc2Vzc2lvbi5nZXQoIlVzZXJJbmZvcm1hdGlvbiIpLmVtYWlsLAogICAgICAgICAgdG9rZW46IHRoaXMuJHNlc3Npb24uZ2V0KCJVc2VySW5mb3JtYXRpb24iKS50b2tlbnMsCiAgICAgICAgICBsaWNlbnNlX2tleTogdGhpcy4kc2Vzc2lvbi5nZXQoIlVzZXJJbmZvcm1hdGlvbiIpLmxpY2Vuc2Vfa2V5LAogICAgICAgICAgdHJlZTogdGhpcy5kYXRhX3NldAogICAgICAgIH0pLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgICBfdGhpcy5kYXRhX3NldCA9IFtdOwoKICAgICAgICAgIGlmIChyZXNwb25zZS5kYXRhID09ICJRdWVyeSBFeGVjdXRlZCBTdWNjZXNzZnVsbHkiKSB7fQogICAgICAgIH0pOwogICAgICB9CiAgICB9LAogICAgbGlua0JyZWFrOiBmdW5jdGlvbiBsaW5rQnJlYWsoaWQpIHsKICAgICAgdmFyIGNoaWxkX25vZGUgPSB0aGlzLnNjZW5lLm5vZGVzLmZpbHRlcihmdW5jdGlvbiAobm9kZSkgewogICAgICAgIHJldHVybiBub2RlLmlkID09IGlkLnRvOwogICAgICB9KTsKICAgICAgdmFyIGNoaWxkcmVuX2NvdW50ID0gdGhpcy5zY2VuZS5saW5rcy5maWx0ZXIoZnVuY3Rpb24gKGxpbmspIHsKICAgICAgICByZXR1cm4gbGluay5mcm9tID09IGlkLnRvOwogICAgICB9KTsKICAgICAgdmFyIGxldmVsX2NvdW50ID0gdGhpcy5ub2Rlc19sZXZlbF9jb3VudChpZC50byk7CgogICAgICBpZiAoY2hpbGRfbm9kZVswXS50eXBlICE9PSAiUHJvbXB0IiAmJiBsZXZlbF9jb3VudCA9PSAwICYmIGNoaWxkcmVuX2NvdW50Lmxlbmd0aCA+IDApIHsKICAgICAgICB0b2FzdHIuZXJyb3IoIk9ubHkgcHJvbXB0cyBjYW4gYmUgcm9vdCBub2Rlcy4iKTsKICAgICAgICB0aGlzLnNjZW5lLmxpbmtzLnB1c2goaWQpOwogICAgICB9IGVsc2UgewogICAgICAgIHRoaXMuZGF0YV9maWx0ZXIobGV2ZWxfY291bnQsIGNoaWxkX25vZGVbMF0ubGFiZWwsIGNoaWxkX25vZGVbMF0udHlwZSk7CiAgICAgIH0KICAgIH0sCiAgICBsaW5rQWRkZWQ6IGZ1bmN0aW9uIGxpbmtBZGRlZChsaW5rKSB7CiAgICAgIHZhciBub2RlID0gdGhpcy5zY2VuZS5ub2Rlcy5maWx0ZXIoZnVuY3Rpb24gKG5vZGUpIHsKICAgICAgICByZXR1cm4gbm9kZS5pZCA9PSBsaW5rLmZyb207CiAgICAgIH0pOwogICAgICB2YXIgbm9kZV9saW5rID0gdGhpcy5zY2VuZS5saW5rcy5maWx0ZXIoZnVuY3Rpb24gKHRlbXBfbGluaykgewogICAgICAgIHJldHVybiB0ZW1wX2xpbmsudG8gPT0gbm9kZVswXS5pZDsKICAgICAgfSk7CgogICAgICBpZiAobm9kZVswXS50eXBlICE9ICJQcm9tcHQiICYmIG5vZGVfbGluay5sZW5ndGggPT0gMCkgewogICAgICAgIHRvYXN0ci5lcnJvcigiT25seSBwcm9tcHRzIGNhbiBiZSByb290IG5vZGVzLiIpOwogICAgICAgIHRoaXMuc2NlbmUubGlua3MgPSB0aGlzLnNjZW5lLmxpbmtzLmZpbHRlcihmdW5jdGlvbiAodGVtcF9saW5rKSB7CiAgICAgICAgICByZXR1cm4gdGVtcF9saW5rLmZyb20gIT0gbGluay5mcm9tOwogICAgICAgIH0pOwogICAgICB9IGVsc2UgewogICAgICAgIHZhciBwYXJlbnRfbm9kZSA9IHRoaXMuc2NlbmUubm9kZXMuZmlsdGVyKGZ1bmN0aW9uIChub2RlKSB7CiAgICAgICAgICByZXR1cm4gbm9kZS5pZCA9PSBsaW5rLmZyb207CiAgICAgICAgfSk7CiAgICAgICAgdmFyIGNoaWxkX25vZGUgPSB0aGlzLnNjZW5lLm5vZGVzLmZpbHRlcihmdW5jdGlvbiAobm9kZSkgewogICAgICAgICAgcmV0dXJuIG5vZGUuaWQgPT0gbGluay50bzsKICAgICAgICB9KTsKICAgICAgICB0aGlzLmRhdGFfbWFuYWdlbWVudChwYXJlbnRfbm9kZSwgIlJvb3QiLCAiUm9vdCIpOwogICAgICAgIHRoaXMuZGF0YV9tYW5hZ2VtZW50KGNoaWxkX25vZGUsIHBhcmVudF9ub2RlWzBdLmxhYmVsLCBwYXJlbnRfbm9kZVswXS50eXBlKTsKICAgICAgfQogICAgfQogIH0KfTs="},{"version":3,"sources":["ActionForm.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div>\n    <div class=\"dash-cont\">\n      <div class=\"container-fluid\" id=\"dashboard-chart\">\n        <div class=\"card dash-card\">\n          <div class=\"card-header d-flex flex-wrap justify-content-between\">\n            <h4 class=\"mab-3 mb-md-0\">Action Form Creator</h4>\n            <div class=\"card-act d-flex flex-wrap\">\n              <div class=\"form-group mb-0\">\n                <select v-model=\"newNodeType\" class=\"form-control\">\n                  <option v-for=\"(item, index) in nodeCategory\" :key=\"index\" :value=\"index\">{{item}}</option>\n                </select>\n              </div>\n              <div class=\"form-group mb-0\">\n                <input\n                  class=\"form-control\"\n                  type=\"text\"\n                  v-model=\"newNodeValue\"\n                  placeholder=\"Enter node value\"\n                >\n              </div>\n              <button type=\"submit\" @click=\"addNode\" class=\"darkblue-btn\">Add</button>\n              <button type=\"submit\" @click=\"submit_template\" class=\"darkblue-btn\">Submit</button>\n            </div>\n          </div>\n          <div class=\"card-body\">\n            <simple-flowchart\n              :scene.sync=\"scene\"\n              @nodeClick=\"nodeClick\"\n              @nodeDelete=\"nodeDelete\"\n              @linkBreak=\"linkBreak\"\n              @linkAdded=\"linkAdded\"\n              @canvasClick=\"canvasClick\"\n              :height=\"800\"\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <!-- <div id=\"app\">\n    <h1>simple flowchart</h1>\n    <div class=\"tool-wrapper\">\n    </div>\n  </div>-->\n</template>\n\n<script>\nimport SimpleFlowchart from \"vue-simple-flowchart\";\nimport \"vue-simple-flowchart/dist/vue-flowchart.css\";\nimport axios from \"axios\";\nimport api_calls from \"@/portal/api_calls\";\nexport default {\n  name: \"app\",\n  components: {\n    SimpleFlowchart\n  },\n  data() {\n    return {\n      data_set: [],\n      scene: {\n        centerX: 1024,\n        centerY: 140,\n        scale: 1,\n        nodes: [],\n        links: []\n      },\n      level_count: 0,\n      newNodeType: 0,\n      newNodeValue: \"\",\n      nodeCategory: [\"Prompt\", \"Button\", \"Hyperlink\", \"Video\", \"Text\", \"User Reply\"]\n    };\n  },\n  methods: {\n    data_management(node, parent_label, parent_type) {\n      var level_count = this.nodes_level_count(node[0].id);\n      if (this.data_set.length <= level_count) {\n        this.data_set.push([]);\n      }\n      var isExists = this.data_set[level_count].filter(required_node => {\n        return required_node.label == node[0].label;\n      });\n      if (isExists.length == 0) {\n        this.data_set[level_count].push({\n          label: node[0].label,\n          type: node[0].type,\n          parent_label: parent_label,\n          parent_type: parent_type\n        });\n      }\n    },\n    data_filter(start_index, label, type) {},\n    nodes_level_count(to) {\n      var local_to = to;\n      var branch;\n      var level_count = 0;\n      for (var i in this.scene.links) {\n        branch = this.scene.links.filter(link => {\n          return link.to == local_to;\n        });\n        if (branch.length >= 1) {\n          level_count += 1;\n          local_to = branch[0].from;\n        } else {\n        }\n      }\n      return level_count;\n    },\n    canvasClick(e) {\n      // console.log(\"canvas Click, event:\", e);\n    },\n    addNode() {\n      if (this.newNodeValue == \"\") {\n        toastr.error(\"Please enter a value.\");\n      } else {\n        let maxID = Math.max(\n          0,\n          ...this.scene.nodes.map(link => {\n            return link.id;\n          })\n        );\n        this.scene.nodes.push({\n          id: maxID + 1,\n          x: -400,\n          y: 50,\n          type: this.nodeCategory[this.newNodeType],\n          label: this.newNodeValue ? this.newNodeValue : `test${maxID + 1}`\n        });\n        this.newNodeValue = \"\";\n      }\n    },\n    nodeClick(id) {\n      // console.log(\"node click\", id);\n    },\n    nodeDelete(id) {\n      // console.log(\"node delete\", id);\n    },\n    submit_template() {\n      if (this.data_set.length == 0) {\n        toastr.error(\"Please create a valid tree.\");\n      } else {\n        axios\n          .post(api_calls.submit_closed_form_url(), {\n            company_id: this.$session.get(\"UserInformation\").company_id,\n            company_name: this.$session.get(\"UserInformation\").company_name,\n            email: this.$session.get(\"UserInformation\").email,\n            token: this.$session.get(\"UserInformation\").tokens,\n            license_key: this.$session.get(\"UserInformation\").license_key,\n            tree: this.data_set\n          })\n          .then(response => {\n            this.data_set = [];\n            if (response.data == \"Query Executed Successfully\") {\n            }\n          });\n      }\n    },\n    linkBreak(id) {\n      var child_node = this.scene.nodes.filter(node => {\n        return node.id == id.to;\n      });\n      var children_count = this.scene.links.filter(link => {\n        return link.from == id.to;\n      });\n      var level_count = this.nodes_level_count(id.to);\n      if (\n        child_node[0].type !== \"Prompt\" &&\n        level_count == 0 &&\n        children_count.length > 0\n      ) {\n        toastr.error(\"Only prompts can be root nodes.\");\n        this.scene.links.push(id);\n      } else {\n        this.data_filter(level_count, child_node[0].label, child_node[0].type);\n      }\n    },\n    linkAdded(link) {\n      var node = this.scene.nodes.filter(node => {\n        return node.id == link.from;\n      });\n      var node_link = this.scene.links.filter(temp_link => {\n        return temp_link.to == node[0].id;\n      });\n      if (node[0].type != \"Prompt\" && node_link.length == 0) {\n        toastr.error(\"Only prompts can be root nodes.\");\n        this.scene.links = this.scene.links.filter(temp_link => {\n          return temp_link.from != link.from;\n        });\n      } else {\n        var parent_node = this.scene.nodes.filter(node => {\n          return node.id == link.from;\n        });\n        var child_node = this.scene.nodes.filter(node => {\n          return node.id == link.to;\n        });\n        this.data_management(parent_node, \"Root\", \"Root\");\n        this.data_management(\n          child_node,\n          parent_node[0].label,\n          parent_node[0].type\n        );\n      }\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n#app {\n  font-family: \"Avenir\", Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin: 0;\n  overflow: hidden;\n  height: 800px;\n  .tool-wrapper {\n    position: relative;\n  }\n}\n.node-main > .node-type {\n  background: #293978 !important;\n}\n</style>\n"],"sourceRoot":"src/portal/Chatbot/Dashboard"}]}