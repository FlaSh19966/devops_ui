{"remainingRequest":"/home/vimalesh/Learning/devops_ui/node_modules/babel-loader/lib/index.js!/home/vimalesh/Learning/devops_ui/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/vimalesh/Learning/devops_ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/vimalesh/Learning/devops_ui/src/portal/components/BillingChart.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/vimalesh/Learning/devops_ui/src/portal/components/BillingChart.vue","mtime":1643027096288},{"path":"/home/vimalesh/Learning/devops_ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vimalesh/Learning/devops_ui/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/vimalesh/Learning/devops_ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vimalesh/Learning/devops_ui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsbCI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCB7IGJ1cyB9IGZyb20gIkAvcG9ydGFsL21haW4iOwppbXBvcnQgQ2hhcnQgZnJvbSAiY2hhcnQuanMiOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogImJpbGxpbmctY2hhcnQiLAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBCYXJDaGFydDogbnVsbAogICAgfTsKICB9LAogIHByb3BzOiB7CiAgICBDYWxsc0NvdW50OiB7CiAgICAgIHR5cGU6IEFycmF5LAogICAgICBkZWZhdWx0OiBbXQogICAgfSwKICAgIE1zZ0V4Y2hhbmdlOiB7CiAgICAgIHR5cGU6IEFycmF5LAogICAgICBkZWZhdWx0OiBbXQogICAgfSwKICAgIFRhc2tzRXhlY3V0ZWQ6IHsKICAgICAgdHlwZTogQXJyYXksCiAgICAgIGRlZmF1bHQ6IFtdCiAgICB9LAogICAgbGFiZWxzOiB7CiAgICAgIHR5cGU6IEFycmF5LAogICAgICBkZWZhdWx0OiBbXQogICAgfSwKICAgIHNjYWxlTGFiZWw6IHsKICAgICAgdHlwZTogU3RyaW5nLAogICAgICBkZWZhdWx0OiAnTGFzdCA3IGRheXMnCiAgICB9CiAgfSwKICB3YXRjaDogewogICAgQ2FsbHNDb3VudDogZnVuY3Rpb24gQ2FsbHNDb3VudChuZXdWYWwpIHsKICAgICAgdGhpcy5CYXJDaGFydC5jb25maWcuZGF0YS5kYXRhc2V0c1swXS5kYXRhID0gbmV3VmFsOwogICAgICB0aGlzLkJhckNoYXJ0LnVwZGF0ZSgpOwogICAgfSwKICAgIE1zZ0V4Y2hhbmdlOiBmdW5jdGlvbiBNc2dFeGNoYW5nZShuZXdWYWwpIHsKICAgICAgdGhpcy5CYXJDaGFydC5jb25maWcuZGF0YS5kYXRhc2V0c1sxXS5kYXRhID0gbmV3VmFsOwogICAgICB0aGlzLkJhckNoYXJ0LnVwZGF0ZSgpOwogICAgfSwKICAgIFRhc2tzRXhlY3V0ZWQ6IGZ1bmN0aW9uIFRhc2tzRXhlY3V0ZWQobmV3VmFsKSB7CiAgICAgIHRoaXMuQmFyQ2hhcnQuY29uZmlnLmRhdGEuZGF0YXNldHNbMl0uZGF0YSA9IG5ld1ZhbDsKICAgICAgdGhpcy5CYXJDaGFydC51cGRhdGUoKTsKICAgIH0sCiAgICBsYWJlbHM6IGZ1bmN0aW9uIGxhYmVscyhuZXdWYWwpIHsKICAgICAgdGhpcy5CYXJDaGFydC5jb25maWcuZGF0YS5sYWJlbHMgPSBuZXdWYWw7CiAgICAgIHRoaXMuQmFyQ2hhcnQudXBkYXRlKCk7CiAgICB9LAogICAgc2NhbGVMYWJlbDogZnVuY3Rpb24gc2NhbGVMYWJlbChuZXdWYWwpIHsKICAgICAgdGhpcy5CYXJDaGFydC5vcHRpb25zLnNjYWxlcy54QXhlc1swXS5zY2FsZUxhYmVsLmxhYmVsU3RyaW5nID0gbmV3VmFsOwogICAgICB0aGlzLkJhckNoYXJ0LnVwZGF0ZSgpOwogICAgfQogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIHZhciBjaGFydENvbG9ycyA9IHsKICAgICAgcmVkOiAicmdiKDI1NSwgOTksIDEzMikiLAogICAgICBvcmFuZ2U6ICJyZ2IoMjU1LCAxNTksIDY0KSIsCiAgICAgIHllbGxvdzogInJnYigyNTUsIDIxNiwgNjIpIiwKICAgICAgZ3JlZW46ICJyZ2IoODMsIDE4NSwgOTkpIiwKICAgICAgYmx1ZTogInJnYigyOSwgMTcwLCAyMjUpIiwKICAgICAgcHVycGxlOiAicmdiKDE1MywgMTAyLCAyNTUpIiwKICAgICAgZ3JleTogInJnYigyMzEsMjMzLDIzNykiCiAgICB9OwoKICAgIENoYXJ0LmhlbHBlcnMuZHJhd1JvdW5kZWRUb3BSZWN0YW5nbGUgPSBmdW5jdGlvbiAoY3R4LCB4LCB5LCB3aWR0aCwgaGVpZ2h0LCByYWRpdXMpIHsKICAgICAgY3R4LmJlZ2luUGF0aCgpOwogICAgICBjdHgubW92ZVRvKHggKyByYWRpdXMsIHkpOwogICAgICBjdHgubGluZVRvKHggKyB3aWR0aCAtIHJhZGl1cywgeSk7CiAgICAgIGN0eC5xdWFkcmF0aWNDdXJ2ZVRvKHggKyB3aWR0aCwgeSwgeCArIHdpZHRoLCB5ICsgcmFkaXVzKTsKICAgICAgY3R4LmxpbmVUbyh4ICsgd2lkdGgsIHkgKyBoZWlnaHQpOwogICAgICBjdHgubGluZVRvKHgsIHkgKyBoZWlnaHQpOwogICAgICBjdHgubGluZVRvKHgsIHkgKyByYWRpdXMpOwogICAgICBjdHgucXVhZHJhdGljQ3VydmVUbyh4LCB5LCB4ICsgcmFkaXVzLCB5KTsKICAgICAgY3R4LmNsb3NlUGF0aCgpOwogICAgfTsKCiAgICBDaGFydC5kZWZhdWx0cy5nbG9iYWwubGVnZW5kLmxhYmVscy5ib3hXaWR0aCA9IDIwOwogICAgQ2hhcnQuZGVmYXVsdHMuZ2xvYmFsLmxlZ2VuZC5sYWJlbHMucGFkZGluZyA9IDQwOwogICAgQ2hhcnQuZWxlbWVudHMuUm91bmRlZFRvcFJlY3RhbmdsZSA9IENoYXJ0LmVsZW1lbnRzLlJlY3RhbmdsZS5leHRlbmQoewogICAgICBkcmF3OiBmdW5jdGlvbiBkcmF3KCkgewogICAgICAgIHZhciBjdHggPSB0aGlzLl9jaGFydC5jdHg7CiAgICAgICAgdmFyIHZtID0gdGhpcy5fdmlldzsKICAgICAgICB2YXIgbGVmdCwgcmlnaHQsIHRvcCwgYm90dG9tLCBzaWduWCwgc2lnblksIGJvcmRlclNraXBwZWQ7CiAgICAgICAgdmFyIGJvcmRlcldpZHRoID0gdm0uYm9yZGVyV2lkdGg7CgogICAgICAgIGlmICghdm0uaG9yaXpvbnRhbCkgewogICAgICAgICAgbGVmdCA9IHZtLnggLSB2bS53aWR0aCAvIDM7CiAgICAgICAgICByaWdodCA9IHZtLnggKyB2bS53aWR0aCAvIDM7CiAgICAgICAgICB0b3AgPSB2bS55OwogICAgICAgICAgYm90dG9tID0gdm0uYmFzZTsKICAgICAgICAgIHNpZ25YID0gMTsKICAgICAgICAgIHNpZ25ZID0gYm90dG9tID4gdG9wID8gMSA6IC0xOwogICAgICAgICAgYm9yZGVyU2tpcHBlZCA9IHZtLmJvcmRlclNraXBwZWQgfHwgImJvdHRvbSI7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIGxlZnQgPSB2bS5iYXNlOwogICAgICAgICAgcmlnaHQgPSB2bS54OwogICAgICAgICAgdG9wID0gdm0ueSAtIHZtLmhlaWdodCAvIDQ7CiAgICAgICAgICBib3R0b20gPSB2bS55ICsgdm0uaGVpZ2h0IC8gNDsKICAgICAgICAgIHNpZ25YID0gcmlnaHQgPiBsZWZ0ID8gMSA6IC0xOwogICAgICAgICAgc2lnblkgPSAxOwogICAgICAgICAgYm9yZGVyU2tpcHBlZCA9IHZtLmJvcmRlclNraXBwZWQgfHwgImxlZnQiOwogICAgICAgIH0KCiAgICAgICAgaWYgKGJvcmRlcldpZHRoKSB7CiAgICAgICAgICB2YXIgYmFyU2l6ZSA9IE1hdGgubWF4KE1hdGguYWJzKGxlZnQgLSByaWdodCksIE1hdGguYWJzKHRvcCAtIGJvdHRvbSkpOwogICAgICAgICAgYm9yZGVyV2lkdGggPSBib3JkZXJXaWR0aCA+IGJhclNpemUgPyBiYXJTaXplIDogYm9yZGVyV2lkdGg7CiAgICAgICAgICB2YXIgaGFsZlN0cm9rZSA9IGJvcmRlcldpZHRoIC8gNDsKICAgICAgICAgIHZhciBib3JkZXJMZWZ0ID0gbGVmdCArIChib3JkZXJTa2lwcGVkICE9PSAibGVmdCIgPyBoYWxmU3Ryb2tlICogc2lnblggOiAwKTsKICAgICAgICAgIHZhciBib3JkZXJSaWdodCA9IHJpZ2h0ICsgKGJvcmRlclNraXBwZWQgIT09ICJyaWdodCIgPyAtaGFsZlN0cm9rZSAqIHNpZ25YIDogMCk7CiAgICAgICAgICB2YXIgYm9yZGVyVG9wID0gdG9wICsgKGJvcmRlclNraXBwZWQgIT09ICJ0b3AiID8gaGFsZlN0cm9rZSAqIHNpZ25ZIDogMCk7CiAgICAgICAgICB2YXIgYm9yZGVyQm90dG9tID0gYm90dG9tICsgKGJvcmRlclNraXBwZWQgIT09ICJib3R0b20iID8gLWhhbGZTdHJva2UgKiBzaWduWSA6IDApOwoKICAgICAgICAgIGlmIChib3JkZXJMZWZ0ICE9PSBib3JkZXJSaWdodCkgewogICAgICAgICAgICB0b3AgPSBib3JkZXJUb3A7CiAgICAgICAgICAgIGJvdHRvbSA9IGJvcmRlckJvdHRvbTsKICAgICAgICAgIH0KCiAgICAgICAgICBpZiAoYm9yZGVyVG9wICE9PSBib3JkZXJCb3R0b20pIHsKICAgICAgICAgICAgbGVmdCA9IGJvcmRlckxlZnQ7CiAgICAgICAgICAgIHJpZ2h0ID0gYm9yZGVyUmlnaHQ7CiAgICAgICAgICB9CiAgICAgICAgfQoKICAgICAgICB2YXIgYmFyV2lkdGggPSBNYXRoLmFicyhsZWZ0IC0gcmlnaHQpOwogICAgICAgIHZhciByb3VuZG5lc3MgPSB0aGlzLl9jaGFydC5jb25maWcub3B0aW9ucy5iYXJSb3VuZG5lc3MgfHwgMC44OwogICAgICAgIHZhciByYWRpdXMgPSBiYXJXaWR0aCAqIHJvdW5kbmVzcyAqIDAuNTsKICAgICAgICB2YXIgcHJldlRvcCA9IHRvcDsKICAgICAgICB0b3AgPSBwcmV2VG9wICsgcmFkaXVzOwogICAgICAgIHZhciBiYXJSYWRpdXMgPSB0b3AgLSBwcmV2VG9wOwogICAgICAgIGN0eC5iZWdpblBhdGgoKTsKICAgICAgICBjdHguZmlsbFN0eWxlID0gdm0uYmFja2dyb3VuZENvbG9yOwogICAgICAgIGN0eC5zdHJva2VTdHlsZSA9IHZtLmJvcmRlckNvbG9yOwogICAgICAgIGN0eC5saW5lV2lkdGggPSBib3JkZXJXaWR0aDsKICAgICAgICBDaGFydC5oZWxwZXJzLmRyYXdSb3VuZGVkVG9wUmVjdGFuZ2xlKGN0eCwgbGVmdCwgdG9wIC0gYmFyUmFkaXVzICsgMSwgYmFyV2lkdGgsIGJvdHRvbSAtIHByZXZUb3AsIGJhclJhZGl1cyk7CiAgICAgICAgY3R4LmZpbGwoKTsKCiAgICAgICAgaWYgKGJvcmRlcldpZHRoKSB7CiAgICAgICAgICBjdHguc3Ryb2tlKCk7CiAgICAgICAgfQoKICAgICAgICB0b3AgPSBwcmV2VG9wOwogICAgICB9CiAgICB9KTsKICAgIENoYXJ0LmRlZmF1bHRzLnJvdW5kZWRCYXIgPSBDaGFydC5oZWxwZXJzLmNsb25lKENoYXJ0LmRlZmF1bHRzLmJhcik7CiAgICBDaGFydC5jb250cm9sbGVycy5yb3VuZGVkQmFyID0gQ2hhcnQuY29udHJvbGxlcnMuYmFyLmV4dGVuZCh7CiAgICAgIGRhdGFFbGVtZW50VHlwZTogQ2hhcnQuZWxlbWVudHMuUm91bmRlZFRvcFJlY3RhbmdsZQogICAgfSk7CiAgICB2YXIgY3R4ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImNhbnZhczIiKS5nZXRDb250ZXh0KCIyZCIpOwogICAgdGhpcy5CYXJDaGFydCA9IG5ldyBDaGFydChjdHgsIHsKICAgICAgdHlwZTogInJvdW5kZWRCYXIiLAogICAgICBkYXRhOiB7CiAgICAgICAgbGFiZWxzOiB0aGlzLmxhYmVscywKICAgICAgICBkYXRhc2V0czogW3sKICAgICAgICAgIGxhYmVsOiAiQ2FsbHMgQ291bnQiLAogICAgICAgICAgYmFja2dyb3VuZENvbG9yOiBjaGFydENvbG9ycy5ibHVlLAogICAgICAgICAgZGF0YTogdGhpcy5DYWxsc0NvdW50CiAgICAgICAgfSwgewogICAgICAgICAgbGFiZWw6ICJNZXNzYWdlcyBFeGNoYW5nZWQiLAogICAgICAgICAgYmFja2dyb3VuZENvbG9yOiBjaGFydENvbG9ycy5ncmVlbiwKICAgICAgICAgIGRhdGE6IHRoaXMuTXNnRXhjaGFuZ2UKICAgICAgICB9LCB7CiAgICAgICAgICBsYWJlbDogIlRhc2tzIEV4ZWN1dGVkIiwKICAgICAgICAgIGJhY2tncm91bmRDb2xvcjogY2hhcnRDb2xvcnMueWVsbG93LAogICAgICAgICAgZGF0YTogdGhpcy5UYXNrc0V4ZWN1dGVkCiAgICAgICAgfV0KICAgICAgfSwKICAgICAgb3B0aW9uczogewogICAgICAgIHJlc3BvbnNpdmU6IHRydWUsCiAgICAgICAgYmFyUm91bmRuZXNzOiAxLAogICAgICAgIHRpdGxlOiB7CiAgICAgICAgICBkaXNwbGF5OiBmYWxzZQogICAgICAgIH0sCiAgICAgICAgc2NhbGVzOiB7CiAgICAgICAgICB5QXhlczogW3sKICAgICAgICAgICAgcG9zaXRpb246ICJsZWZ0IiwKICAgICAgICAgICAgc2NhbGVMYWJlbDogewogICAgICAgICAgICAgIGRpc3BsYXk6IHRydWUsCiAgICAgICAgICAgICAgZm9udFNpemU6IDE4LAogICAgICAgICAgICAgIGxhYmVsU3RyaW5nOiAiQ291bnQiCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIHRpY2tzOiB7CiAgICAgICAgICAgICAgZGlzcGxheTogdHJ1ZSwKICAgICAgICAgICAgICBiZWdpbkF0WmVybzogdHJ1ZQogICAgICAgICAgICB9CiAgICAgICAgICB9XSwKICAgICAgICAgIHhBeGVzOiBbewogICAgICAgICAgICBwb3NpdGlvbjogImJvdHRvbSIsCiAgICAgICAgICAgIHNjYWxlTGFiZWw6IHsKICAgICAgICAgICAgICBkaXNwbGF5OiB0cnVlLAogICAgICAgICAgICAgIGZvbnRTaXplOiAxOCwKICAgICAgICAgICAgICBsYWJlbFN0cmluZzogdGhpcy5zY2FsZUxhYmVsCiAgICAgICAgICAgIH0KICAgICAgICAgIH1dCiAgICAgICAgfQogICAgICB9CiAgICB9KTsKICB9Cn07"},{"version":3,"sources":["BillingChart.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <canvas\n    height=\"80%\"\n    id=\"canvas2\"\n  ></canvas>\n</template>\n\n<script>\nimport { bus } from \"@/portal/main\";\nimport Chart from \"chart.js\";\nexport default {\n  name: \"billing-chart\",\n  data () {\n    return {\n      BarChart: null\n    };\n  },\n  props: {\n    CallsCount: {\n      type: Array,\n      default: []\n    },\n    MsgExchange: {\n      type: Array,\n      default: []\n    },\n    TasksExecuted: {\n      type: Array,\n      default: []\n    },\n    labels: {\n      type: Array,\n      default: []\n    },\n    scaleLabel: {\n      type: String,\n      default: 'Last 7 days'\n    }\n  },\n  watch: {\n    CallsCount (newVal) {\n      this.BarChart.config.data.datasets[0].data = newVal;\n      this.BarChart.update();\n    },\n    MsgExchange (newVal) {\n      this.BarChart.config.data.datasets[1].data = newVal;\n      this.BarChart.update();\n    },\n    TasksExecuted (newVal) {\n      this.BarChart.config.data.datasets[2].data = newVal;\n      this.BarChart.update();\n    },\n    labels (newVal) {\n      this.BarChart.config.data.labels = newVal;\n      this.BarChart.update();\n    },\n    scaleLabel (newVal) {\n      this.BarChart.options.scales.xAxes[0].scaleLabel.labelString = newVal;\n      this.BarChart.update();\n    }\n  },\n  mounted () {\n    var chartColors = {\n      red: \"rgb(255, 99, 132)\",\n      orange: \"rgb(255, 159, 64)\",\n      yellow: \"rgb(255, 216, 62)\",\n      green: \"rgb(83, 185, 99)\",\n      blue: \"rgb(29, 170, 225)\",\n      purple: \"rgb(153, 102, 255)\",\n      grey: \"rgb(231,233,237)\"\n    };\n\n    Chart.helpers.drawRoundedTopRectangle = function (\n      ctx,\n      x,\n      y,\n      width,\n      height,\n      radius\n    ) {\n      ctx.beginPath();\n      ctx.moveTo(x + radius, y);\n      ctx.lineTo(x + width - radius, y);\n      ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n      ctx.lineTo(x + width, y + height);\n      ctx.lineTo(x, y + height);\n      ctx.lineTo(x, y + radius);\n      ctx.quadraticCurveTo(x, y, x + radius, y);\n      ctx.closePath();\n    };\n    Chart.defaults.global.legend.labels.boxWidth = 20;\n    Chart.defaults.global.legend.labels.padding = 40;\n    Chart.elements.RoundedTopRectangle = Chart.elements.Rectangle.extend({\n      draw: function () {\n        var ctx = this._chart.ctx;\n        var vm = this._view;\n        var left, right, top, bottom, signX, signY, borderSkipped;\n        var borderWidth = vm.borderWidth;\n\n        if (!vm.horizontal) {\n          left = vm.x - vm.width / 3;\n          right = vm.x + vm.width / 3;\n          top = vm.y;\n          bottom = vm.base;\n          signX = 1;\n          signY = bottom > top ? 1 : -1;\n          borderSkipped = vm.borderSkipped || \"bottom\";\n        } else {\n          left = vm.base;\n          right = vm.x;\n          top = vm.y - vm.height / 4;\n          bottom = vm.y + vm.height / 4;\n          signX = right > left ? 1 : -1;\n          signY = 1;\n          borderSkipped = vm.borderSkipped || \"left\";\n        }\n\n        if (borderWidth) {\n          var barSize = Math.max(\n            Math.abs(left - right),\n            Math.abs(top - bottom)\n          );\n          borderWidth = borderWidth > barSize ? barSize : borderWidth;\n          var halfStroke = borderWidth / 4;\n          var borderLeft =\n            left + (borderSkipped !== \"left\" ? halfStroke * signX : 0);\n          var borderRight =\n            right + (borderSkipped !== \"right\" ? -halfStroke * signX : 0);\n          var borderTop =\n            top + (borderSkipped !== \"top\" ? halfStroke * signY : 0);\n          var borderBottom =\n            bottom + (borderSkipped !== \"bottom\" ? -halfStroke * signY : 0);\n          if (borderLeft !== borderRight) {\n            top = borderTop;\n            bottom = borderBottom;\n          }\n          if (borderTop !== borderBottom) {\n            left = borderLeft;\n            right = borderRight;\n          }\n        }\n\n        var barWidth = Math.abs(left - right);\n        var roundness = this._chart.config.options.barRoundness || 0.8;\n        var radius = barWidth * roundness * 0.5;\n\n        var prevTop = top;\n\n        top = prevTop + radius;\n        var barRadius = top - prevTop;\n        ctx.beginPath();\n        ctx.fillStyle = vm.backgroundColor;\n        ctx.strokeStyle = vm.borderColor;\n        ctx.lineWidth = borderWidth;\n\n        Chart.helpers.drawRoundedTopRectangle(\n          ctx,\n          left,\n          top - barRadius + 1,\n          barWidth,\n          bottom - prevTop,\n          barRadius\n        );\n\n        ctx.fill();\n        if (borderWidth) {\n          ctx.stroke();\n        }\n\n        top = prevTop;\n      }\n    });\n    Chart.defaults.roundedBar = Chart.helpers.clone(Chart.defaults.bar);\n\n    Chart.controllers.roundedBar = Chart.controllers.bar.extend({\n      dataElementType: Chart.elements.RoundedTopRectangle\n    });\n    var ctx = document.getElementById(\"canvas2\").getContext(\"2d\");\n    this.BarChart = new Chart(ctx, {\n      type: \"roundedBar\",\n      data: {\n        labels: this.labels,\n        datasets: [\n          {\n            label: \"Calls Count\",\n            backgroundColor: chartColors.blue,\n            data: this.CallsCount\n          },\n          {\n            label: \"Messages Exchanged\",\n            backgroundColor: chartColors.green,\n            data: this.MsgExchange\n          },\n          {\n            label: \"Tasks Executed\",\n            backgroundColor: chartColors.yellow,\n            data: this.TasksExecuted\n          }\n        ]\n      },\n      options: {\n        responsive: true,\n        barRoundness: 1,\n        title: {\n          display: false\n        },\n        scales: {\n          yAxes: [\n            {\n              position: \"left\",\n              scaleLabel: {\n                display: true,\n                fontSize: 18,\n                labelString: \"Count\"\n              },\n              ticks: {\n                display: true,\n                beginAtZero: true\n              }\n            }\n          ],\n          xAxes: [\n            {\n              position: \"bottom\",\n              scaleLabel: {\n                display: true,\n                fontSize: 18,\n                labelString: this.scaleLabel\n              }\n            }\n          ]\n        }\n      }\n    });\n  }\n};\n</script>\n\n"],"sourceRoot":"src/portal/components"}]}