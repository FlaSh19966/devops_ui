{"remainingRequest":"/home/vimalesh/CENSE/chatbot-portal/node_modules/babel-loader/lib/index.js!/home/vimalesh/CENSE/chatbot-portal/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/vimalesh/CENSE/chatbot-portal/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/vimalesh/CENSE/chatbot-portal/src/portal/components/LineChart.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/vimalesh/CENSE/chatbot-portal/src/portal/components/LineChart.vue","mtime":1655807120969},{"path":"/home/vimalesh/CENSE/chatbot-portal/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vimalesh/CENSE/chatbot-portal/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/vimalesh/CENSE/chatbot-portal/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vimalesh/CENSE/chatbot-portal/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["LineChart.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <section data-root>\n    <div data-line-chart :id=\"chartId\" ref=\"chart\" :style=\"chartStyle\">\n      <div v-if=\"!isChartOptionsValid\" class=\"invalid-options\">\n        <div>Line Chart</div>\n        <div v-if=\"!hasData\">No chart data provided</div>\n        <div v-if=\"!hasXKey\">No x-axis key defined for data</div>\n        <div v-if=\"!hasYKey\">No y-axis key defined for data</div>\n      </div>\n    </div>\n    <div data-line-chart-legend>\n      <div class=\"legend-key\">Key</div>\n      <ul>\n        <li class=\"legend-series\" v-for=\"(d,i) in chartData\" :key=\"d.name\">\n          <div class=\"legend-icon\" :style=\"`background-color: ${ordinalColors(i)}`\"></div>\n          <div class=\"legend-text\">{{d.name}}</div>\n        </li>\n      </ul>\n    </div>\n    <div class=\"line-chart-tooltip\" :data-tooltip=\"chartId\"></div>\n  </section>\n</template>\n\n<script>\nimport _ from \"lodash\";\nimport Popper from \"popper.js\";\nimport { scaleTime, scaleLinear, scaleOrdinal } from \"d3-scale\";\nimport { line } from \"d3-shape\";\nimport { select, selectAll, mouse } from \"d3-selection\";\nimport { bisector, extent, max } from \"d3-array\";\nimport { axisBottom, axisLeft } from \"d3-axis\";\nimport { schemeCategory10 } from \"d3-scale-chromatic\";\nimport { transition } from \"d3-transition\";\nimport { timeParse, timeFormat } from \"d3-time-format\";\nimport { format as d3format } from \"d3-format\";\nimport {\n  timeSecond,\n  timeMinute,\n  timeHour,\n  timeDay,\n  timeMonth,\n  timeWeek,\n  timeYear\n} from \"d3-time\";\nconst d3 = {\n  select,\n  selectAll,\n  mouse,\n  bisector,\n  extent,\n  max,\n  axisBottom,\n  axisLeft,\n  transition,\n  timeParse,\n  timeFormat,\n  timeSecond,\n  timeMinute,\n  timeHour,\n  timeDay,\n  timeMonth,\n  timeWeek,\n  timeYear,\n  line,\n  schemeCategory10,\n  scaleTime,\n  scaleLinear,\n  scaleOrdinal,\n  format: d3format\n};\n\nexport default {\n  props: {\n    chartId: {\n      type: String,\n      default: () => `linechart-${Date.now()}`\n    },\n    colors: { type: Array, default: () => d3.schemeCategory10 },\n    width: { type: String, default: \"100%\" },\n    height: { type: String, default: \"300px\" },\n    xAxisLabel: { type: String, default: null },\n    yAxisLabel: { type: String, default: null },\n    xKey: { type: String, required: true /* date */ },\n    yKey: { type: String, required: true /* price */ },\n    interval: { type: String, default: \"year\" },\n    data: {\n      type: Array,\n      default: () => []\n    }\n  },\n  computed: {\n    ordinalColors() {\n      return d3.scaleOrdinal(this.colors);\n    },\n    chartStyle() {\n      return {\n        width: this.width,\n        height: this.height\n      };\n    },\n    hasData() {\n      return this.data.length !== 0;\n    },\n    hasXKey() {\n      return !!this.xKey;\n    },\n    hasYKey() {\n      return !!this.yKey;\n    },\n    isChartOptionsValid() {\n      return this.hasData && this.hasXKey && this.hasYKey;\n    },\n    chartData() {\n      const parseDate = date => {\n        const dateFormat = \"%d/%m/%Y\";\n        const r = d3.timeParse(dateFormat)(date);\n        if (!r) throw Error(`String date format expected: ${dateFormat}`);\n        return r;\n      };\n      return _.map(this.data, o => ({\n        ...o,\n        values: _.map(o.values, d => ({\n          x: parseDate(d[this.xKey]),\n          y: +d[this.yKey]\n        }))\n      }));\n    },\n    chartHeight() {\n      return this.$refs.chart.clientHeight;\n    },\n    chartWidth() {\n      return this.$refs.chart.clientWidth;\n    },\n    tooltipEl() {\n      return document.querySelector(`[data-tooltip='${this.chartId}']`);\n    },\n    xAxisMax() {\n      return _.max(this.chartData.map(({ values }) => values.length));\n    },\n    longestSeries() {\n      return _.find(this.chartData, d => d.values.length === this.xAxisMax);\n    },\n    xAxisTicksByInterval() {\n      const { interval, xAxisMax } = this;\n      const axisBy = {\n        year: d3.timeYear,\n        // day: d3.timeDay,\n        week: d3.timeWeek,\n        month: d3.timeMonth\n      };\n      return axisBy[interval] || xAxisMax;\n    }\n  },\n  watch: {\n    data() {\n      this.renderChart();\n    }\n  },\n  methods: {\n    multiDateFormat(date, i = this.getIndexOfFocusPoint(date)) {\n      // const  formatMillisecond = d3.timeFormat('.%L'),\n      // formatSecond = d3.timeFormat(':%S'),\n      // formatMinute = d3.timeFormat('%I:%M'),\n      // formatHour = d3.timeFormat('%I %p'),\n      // formatWeek = d3.timeFormat('Week %U'),\n      // formatMonth = d3.timeFormat('%B'),\n\n      const formatBy = {\n        day: d3.timeFormat(\"%b %d\"),\n        week: d3.timeFormat(`Week ${i + 1}`),\n        month: d3.timeFormat(\"%B\"),\n        quarter: d3.timeFormat(`Quarter ${i + 1}`),\n        year: d3.timeFormat(\"%Y\")\n      };\n\n      const formatter = formatBy[this.interval];\n      // const formatter =\n      //   (d3.timeSecond(date) < date && formatMillisecond) ||\n      //   (d3.timeMinute(date) < date && formatSecond) ||\n      //   (d3.timeHour(date) < date && formatMinute) ||\n      //   (d3.timeDay(date) < date && formatHour) ||\n      //   (d3.timeMonth(date) < date\n      //     ? (d3.timeWeek(date) < date && formatDay) || formatWeek\n      //     : (d3.timeYear(date) < date && formatMonth) || formatYear);\n\n      // console.log(`${date} formatter:`, formatter);\n      return formatter && _.escape(formatter(date));\n    },\n\n    getDatumInSeries({ series: { values }, xPoint, focusPoint }) {\n      const bisectDate = d3.bisector(d => d.x).left;\n      const i = bisectDate(values, xPoint, 1);\n      const d0 = values[i - 1];\n      const d1 = values[i] || {};\n      const closestD = xPoint - d0.x > d1.x - xPoint ? d1 : d0;\n      const xPointMinusClosestD = Math.abs(xPoint - closestD.x);\n      const focusPointMinusXPoint = Math.abs(xPoint - focusPoint);\n      const r = focusPoint\n        ? xPointMinusClosestD > focusPointMinusXPoint\n          ? null\n          : closestD\n        : closestD;\n      // console.log(`r:`, r);\n      return r;\n    },\n    getDateSansTime(date) {\n      return `${date.getDate()}-${date.getMonth()}-${date.getFullYear()}`;\n    },\n    getIndexOfFocusPoint(focusPoint) {\n      const { getDateSansTime, longestSeries } = this;\n      return _.findIndex(\n        longestSeries.values,\n        d => getDateSansTime(d.x) === getDateSansTime(focusPoint)\n      );\n    },\n    initTooltipPopper(tooltipRefEl, tooltipEl) {\n      return new Popper(tooltipRefEl, tooltipEl, {\n        placement: \"left\",\n        modifiers: {\n          preventOverflow: {\n            boundariesElement: document.querySelector(`#${this.chartId}`)\n          },\n          offset: {\n            offset: \"0, 8px\"\n          },\n          flip: { behavior: [\"left\", \"right\"] }\n        }\n      });\n    },\n    composeTooltipHTML({ focusDataPoints, focusPoint }) {\n      return `\n        <div class=\"line-chart-tooltip-title\">${this.multiDateFormat(\n          focusPoint\n        )}</div>\n        <div class=\"series-container\">\n          ${focusDataPoints\n            .map(\n              d => `\n                <div class=\"series-row\">\n                  <span class=\"color-bar\" style=\"background-color:${_.escape(\n                    d.color\n                  )}\">&nbsp;</span>\n                  <div class=\"series-info\">\n                    <div class=\"series-name\">${_.escape(d.series)}</div>\n                    <div class=\"series-value\">${_.escape(d.y)}</div>\n                  </div>\n                </div>\n              `\n            )\n            .join(\"\")}\n        </div>\n        <div class=\"popper-arrow\" x-arrow=\"\"></div>\n      `;\n    },\n    renderChart() {\n      const c = this;\n      const {\n        ordinalColors: colors,\n        chartData: data,\n        isChartOptionsValid,\n        chartId,\n        chartWidth,\n        chartHeight,\n        getDatumInSeries,\n        tooltipEl,\n        multiDateFormat,\n        longestSeries,\n        xAxisTicksByInterval,\n        initTooltipPopper,\n        composeTooltipHTML,\n        xAxisLabel,\n        yAxisLabel\n      } = c;\n      if (!isChartOptionsValid) return;\n\n      const axisOffset = 16;\n      const labelOffset = 21 * 1.75 + axisOffset;\n\n      const margin = {\n        top: 30,\n        left: 100 + (yAxisLabel ? labelOffset : 0),\n        right: 30,\n        bottom: 30 + (xAxisLabel ? labelOffset : 0)\n      };\n      const width = chartWidth - margin.left - margin.right;\n      const height = chartHeight - margin.top - margin.bottom;\n\n      /* Scales */\n      const xScale = d3\n        .scaleTime()\n        .domain(d3.extent(longestSeries.values, d => d.x))\n        .range([0, width]);\n\n      const yScale = d3\n        .scaleLinear()\n        .domain([0, d3.max(longestSeries.values, d => d.y)])\n        .range([height - 0, 0]);\n\n      /* draw line fn for each series */\n      const drawLine = ({ values }) =>\n        d3\n          .line()\n          .x(d => xScale(d.x))\n          .y(d => yScale(d.y))(values);\n\n      const tooltip = d3.select(tooltipEl);\n\n      /* remove previously rendered, if any */\n      d3.select(`#${chartId} svg`).remove();\n      d3.select(`#${chartId} div`).remove();\n      tooltip.html(\"\");\n\n      /* SVG */\n      const svg = d3\n        .select(`#${chartId}`)\n        .append(\"svg\")\n        .attr(\"width\", width + margin.left + margin.right + \"px\")\n        .attr(\"height\", height + margin.top + margin.bottom + \"px\");\n\n      /* position main g element */\n      const g = svg\n        .append(\"g\")\n        .attr(\"transform\", `translate(${margin.left}, ${margin.top})`);\n\n      /* add axes */\n      const xAxis = d3\n        .axisBottom(xScale)\n        .tickSize(0)\n        .tickFormat(multiDateFormat)\n        .ticks(xAxisTicksByInterval);\n\n      g.append(\"g\")\n        .attr(\"class\", \"x axis\")\n        .attr(\"transform\", `translate(0, ${height})`)\n        .call(xAxis)\n        .selectAll(\"text\")\n        .attr(\"y\", axisOffset);\n\n      const yAxis = d3\n        .axisLeft(yScale)\n        .tickSize(-width)\n        .ticks(5)\n        .tickFormat(d3.format(\"~s\"))\n        .scale(yScale.nice());\n\n      g.append(\"g\")\n        .attr(\"class\", \"y axis\")\n        .call(yAxis)\n        .selectAll(\"text\")\n        .attr(\"x\", -axisOffset);\n\n      // Add X axis label\n      const xAxisTicksApproxHeight = 30;\n      const xLabelOffset = xAxisTicksApproxHeight + 21;\n      svg\n        .select(\".x.axis\")\n        .append(\"text\")\n        .text(xAxisLabel)\n        .attr(\"class\", \"line-graph-label\")\n        .attr(\"transform\", `translate(${width / 2}, ${xLabelOffset})`);\n\n      // Add Y axis label\n      svg\n        .select(\".y.axis\")\n        .append(\"text\")\n        .text(yAxisLabel)\n        .attr(\"class\", \"line-graph-label\")\n        .attr(\n          \"transform\",\n          `translate(${-labelOffset}, ${(height - margin.top) / 2}) rotate(-90)`\n        );\n\n      /* add series lines */\n      const lines = g.append(\"g\").attr(\"class\", \"lines\");\n\n      const series = lines\n        .selectAll(\".line-group\")\n        .data(data)\n        .enter()\n        .append(\"g\")\n        .attr(\"class\", \"line-group\");\n\n      series\n        .append(\"path\")\n        .attr(\"class\", \"line\")\n        .attr(\"d\", d => drawLine(d))\n        .style(\"stroke\", (d, i) => colors(i))\n        .style(\"opacity\", \"0.85\");\n\n      /* Tooltip reference point */\n      const tooltipRef = d3\n        .select(`#${chartId}`)\n        .append(\"div\")\n        .attr(\"class\", \"tooltip-ref\");\n\n      let tooltipPopper; /* init once, reuse popper */\n\n      const overlay = g.append(\"rect\");\n      overlay\n        .attr(\"class\", \"overlay\")\n        .attr(\"width\", width)\n        .attr(\"height\", height)\n        .on(\"mousemove\", function() {\n          const [mouseX] = d3.mouse(this);\n          const xPoint = xScale.invert(mouseX);\n          const focusDataPoints = []; /* all dots on focused xAxis */\n\n          g.selectAll(\".circle\").remove(); /* remove rendered dots */\n\n          /* determine focus point from mouse hover X */\n          const { x: focusPoint } = getDatumInSeries({\n            series: longestSeries,\n            xPoint\n          });\n\n          /* for each series, render dot, push to array for tooltip render */\n          data.forEach((series, i) => {\n            const d = getDatumInSeries({ series, xPoint, focusPoint });\n            if (!d) return; /* skip if not focus point */\n            focusDataPoints.push({\n              ...d,\n              series: series.name,\n              color: colors(i)\n            });\n\n            /* dot on focus point */\n            const circleRadius = 3;\n            g.append(\"g\")\n              .attr(\"class\", \"circle\")\n              .append(\"circle\")\n              .style(\"fill\", colors(i))\n              .attr(\"cx\", xScale(d.x))\n              .attr(\"cy\", yScale(d.y))\n              .attr(\"r\", circleRadius);\n          });\n          /* update tooltip reference position */\n          tooltipRef\n            .style(\"left\", `calc(${xScale(focusPoint)}px + ${margin.left}px)`)\n            .style(\"transform\", `translateY(-50%)`)\n            .style(\"top\", `calc(50% - ${margin.top}px)`);\n\n          /* compose HTML for tooltip */\n          tooltip.style(\"display\", \"inherit\").html(\n            composeTooltipHTML({\n              focusDataPoints,\n              focusPoint\n            })\n          );\n\n          /* init popper once */\n          if (!tooltipPopper) {\n            const [tooltipRefEl] = tooltipRef.nodes();\n            tooltipPopper = initTooltipPopper(tooltipRefEl, tooltipEl);\n          }\n          /* update popper on mousemove */\n          if (tooltipPopper) tooltipPopper.update();\n        })\n        .on(\"mouseout\", function() {\n          const [mouseX, mouseY] = d3.mouse(this);\n          const maxWidth = overlay.node().getAttribute(\"width\");\n          const maxHeight = overlay.node().getAttribute(\"height\");\n          /* remove dots and tooltips */\n          if (\n            mouseX < 0 ||\n            mouseX >= maxWidth ||\n            mouseY < 0 ||\n            mouseY >= maxHeight\n          ) {\n            g.selectAll(\".circle\").remove();\n            tooltip.html(\"\");\n          }\n        });\n    }\n  },\n  mounted() {\n    this.renderChart();\n  }\n};\n</script>\n\n<style lang=\"scss\">\n@import \"@/portal/components/assets/base\";\n@import \"@/portal/components/assets/colors\";\n@import \"@/portal/components/assets/font\";\n\n[data-root] {\n  display: flex;\n  > [data-line-chart-legend],\n  > [data-line-chart] {\n    flex-flow: row wrap;\n  }\n  .line-chart-tooltip {\n    flex-direction: column;\n  }\n  [data-line-chart-legend] {\n    text-align: left;\n    width: 30%;\n    padding: 1.5rem;\n    color: $chart-axis-color;\n    border: 1px solid transparent;\n    border-left-color: $chart-border-color;\n    .legend-key {\n      @include titillium-web-semibold;\n      font-size: 1rem;\n      margin-bottom: 0.875rem;\n    }\n    ul {\n      padding: 0;\n      list-style-type: none;\n      li.legend-series {\n        @include titillium-web-regular;\n        font-size: 0.875rem;\n        margin-bottom: 0.875rem;\n        line-height: 1.3125rem;\n        height: 1.3125rem;\n        &:last-child {\n          margin-bottom: 0;\n        }\n        > div {\n          display: inline-block;\n        }\n        .legend-icon {\n          margin-right: 0.625rem;\n          width: 0.625rem;\n          height: 0.625rem;\n        }\n      }\n    }\n  }\n}\n[data-line-chart] {\n  font-size: 0.875rem;\n  position: relative;\n  .invalid-options {\n    border: 1px solid red;\n    padding: 1rem;\n  }\n  .overlay {\n    fill: none;\n    pointer-events: all;\n  }\n  .line {\n    stroke-width: 2;\n    fill: none;\n  }\n  .tick {\n    line {\n      stroke: $chart-border-color;\n    }\n  }\n  .axis {\n    .tick {\n      text {\n        @include titillium-web-regular;\n        font-size: 0.75rem;\n        fill: $chart-axis-color ;\n      }\n    }\n    &.y .domain {\n      display: none;\n    }\n  }\n  .tooltip-ref {\n    position: absolute;\n  }\n  .line-graph-label {\n    @include titillium-web-semibold;\n    font-size: 0.625rem;\n    text-transform: uppercase;\n    fill: $chart-axis-color;\n  }\n}\n\n$arrow-width: 0.5rem;\n.line-chart-tooltip {\n  @extend %transition-all-ease;\n  filter: drop-shadow(0 0px 2px $shadow-color);\n  display: none;\n  border: 1px solid $chart-border-color;\n  padding: 0;\n  background: $white;\n  // width: auto;\n  max-width: 15rem;\n\n  .popper-arrow {\n    width: 0;\n    height: 0;\n    margin: $arrow-width 0;\n    border: $arrow-width solid $white;\n    border-top-color: transparent;\n    border-bottom-color: transparent;\n    position: absolute;\n    top: calc(50% - #{$arrow-width});\n  }\n  &[x-placement^=\"right\"] {\n    margin-left: $arrow-width;\n    .popper-arrow {\n      border-left-width: 0;\n      left: -#{$arrow-width};\n    }\n  }\n  &[x-placement^=\"left\"] {\n    margin-right: $arrow-width;\n    .popper-arrow {\n      border-right-width: 0;\n      right: -#{$arrow-width};\n    }\n  }\n\n  .line-chart-tooltip-title {\n    @include titillium-web-semibold;\n    font-size: 0.875rem;\n    color: $chart-axis-color;\n    padding: 0.625rem 1rem;\n    line-height: 0.875rem;\n    border-bottom: 1px solid $chart-border-color;\n    text-align: left;\n  }\n\n  .series-container {\n    display: flex;\n    flex-flow: row wrap;\n    padding: 0.96875rem 1rem;\n    .series-row {\n      text-align: left;\n      width: 42%;\n      margin-bottom: 1rem;\n      padding-right: 1rem;\n      display: flex;\n      .color-bar {\n        margin-right: 0.59rem;\n        width: 4px;\n        height: 2rem;\n        line-height: 2rem;\n      }\n      .series-name {\n        @include titillium-web-regular;\n        @extend %truncate;\n        font-size: 0.75rem;\n        line-height: 0.875rem;\n        height: 0.875rem;\n        width: 4.5rem;\n      }\n      .series-value {\n        @include titillium-web-bold;\n        font-size: 1rem;\n        line-height: 0.875rem;\n        height: 0.875rem;\n      }\n    }\n  }\n}\n</style>\n"],"sourceRoot":"src/portal/components"}]}