{"remainingRequest":"/home/vimalesh/Elixir/chatbot-portal/node_modules/babel-loader/lib/index.js!/home/vimalesh/Elixir/chatbot-portal/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/vimalesh/Elixir/chatbot-portal/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/vimalesh/Elixir/chatbot-portal/src/portal/analytics/components/Barchart.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/vimalesh/Elixir/chatbot-portal/src/portal/analytics/components/Barchart.vue","mtime":1643027096188},{"path":"/home/vimalesh/Elixir/chatbot-portal/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vimalesh/Elixir/chatbot-portal/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/vimalesh/Elixir/chatbot-portal/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vimalesh/Elixir/chatbot-portal/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Barchart.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n<div>\n  <div id=\"barchart\">\n\n  </div>\n  <!-- <button id=\"export\">  </button> -->\n</div>\n</template>\n\n<script>\nimport * as d3 from 'd3';\nimport d3_save_pdf from 'd3-save-pdf';\nexport default {\n  name: 'BarChart',\n  props: {\n    xKey: String,\n    yKey: String,\n    data: Array,\n    currency_key: String,\n  },\n  mounted() {\n    var vm = this;\n    this.data.sort(function(a, b) {\n            return b[vm.yKey] - a[vm.yKey];\n      });\n    // console.log(this.data, this.xKey, this.yKey)\n  //#region  - Dimensions and Scales\n    var margin = {top: 10, right: 110, bottom: 220, left: 90},\n        width = 1010 - margin.left - margin.right,\n        height = 570 - margin.top - margin.bottom;\n\n      \n    var marginOverview = {top: 30, right: 10, bottom: 20, left: 40};\n    var heightOverview = 80 - marginOverview.top - marginOverview.bottom;\n    var maxLength = d3.max(this.data.map(function(d){ return d[vm.xKey].length}))\n    // var maxLength = this.data.length;\n    // console.log(maxLength);\n    var barWidth = maxLength * 1.1;\n    var numBars = Math.round(width/barWidth);\n    var isScrollDisplayed = barWidth * this.data.length > width;\n    // console.log(maxLength,barWidth,numBars,barWidth*this.data.length,width);\n\n\n    var x = d3.scaleBand()\n              .range([0, width])\n              .padding(0.1);\n    var y = d3.scaleLinear()\n              .range([height, 0]);\n  //#endregion\n    // console.log(isScrollDisplayed,numBars);\n\n  //#region - Rectangles\n    var svg = d3.select(\"#barchart\").append(\"svg\")\n        .attr(\"width\", width + margin.left + margin.right)\n        .attr(\"height\", height + margin.top + margin.bottom)\n        .append(\"g\")\n        .attr(\"transform\", \n              \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n      if(isScrollDisplayed){\n        x.domain(this.data.slice(0,numBars).map(function(d) { return d[vm.xKey]; }));\n      } else {\n        x.domain(this.data.map(function(d) { return d[vm.xKey]; }));\n      }\n      y.domain([0, d3.max(this.data, function(d) { return d[vm.yKey]; })]);\n      if(isScrollDisplayed){\n        svg.selectAll(\".bar-positive\")\n          .data(this.data.slice(0, numBars), function (d) {return d[vm.xKey]; })\n          .enter().append(\"rect\")\n          .attr(\"class\", \"bar-positive\")\n          .attr(\"id\", function(d, i) {\n            return  d[vm.xKey]\n          })\n          .attr(\"x\", function(d) { return x(d[vm.xKey]); })\n          .attr(\"width\", x.bandwidth() / 1.19)\n          // .attr(\"y\", function(d) { return y(d[vm.yKey]); })\n          // .attr(\"height\", function(d) { return height - y(d[vm.yKey]); });\n          .attr(\"y\", function(d) { return y(0); })\n          .attr(\"height\", function(d) { return height - y(0); });\n        var xOverview = d3.scaleBand()\n                        .domain(this.data.map(function (d) { return d.label; }))\n                        .range([0, width], .2);\n        var yOverview = d3.scaleLinear().range([heightOverview, 0]);\n        yOverview.domain(y.domain());\n\n        var displayed = d3.scaleQuantize()\n                  .domain([0, width])\n                  .range(d3.range(this.data.length));\n        svg.append(\"g\").append(\"rect\")\n                  .attr(\"transform\", \"translate(0, \" + (height+3 ) + \")\")\n                  .attr(\"class\", \"mover\")\n                  .attr(\"x\", 0)\n                  .attr(\"y\", 0)\n                  .attr(\"rx\", 5)\n                  .attr(\"ry\", 10)\n                  .attr(\"height\", 10)\n                  .attr(\"width\",Math.round(parseFloat(numBars * width)/vm.data.length))\n                  .attr(\"pointer-events\", \"all\")\n                  .attr(\"cursor\", \"ew-resize\")\n                  .call(d3.drag().on(\"drag\", display));\n    svg.selectAll(\".bar-positive\")\n    .transition()\n    .duration(800)\n    .attr(\"y\", function(d) {return y(d[vm.yKey]); })\n    .attr(\"height\", function(d) {return height - y(d[vm.yKey]); })\n    .delay(function(d,i){ return(i*100)})\n\n      } else {\n        svg.selectAll(\".bar-positive\")\n          .data(this.data)\n          .enter().append(\"rect\")\n          .attr(\"class\", \"bar-positive\")\n          .attr(\"id\", function(d, i) {\n           return  d[vm.xKey];\n          })\n          .attr(\"x\", function(d) { return x(d[vm.xKey]); })\n          .attr(\"width\", x.bandwidth() / 1.19)\n          // .attr(\"y\", function(d) { return y(d[vm.yKey]); })\n          // .attr(\"height\", function(d) { return height - y(d[vm.yKey]); });\n          .attr(\"y\", function(d) { return y(0); })\n          .attr(\"height\", function(d) { return height - y(0); });\n\n            svg.selectAll(\"rect\")\n            .transition()\n            .duration(800)\n            .attr(\"y\", function(d) {return y(d[vm.yKey]); })\n            .attr(\"height\", function(d) {return height - y(d[vm.yKey]); })\n            .delay(function(d,i){ return(i*100)})\n      }\n  //#endregion\n\n  //#region - Axis\n        if(numBars > 9) {\n          xaxisforlargevalues();\n        } else {\n          xaxisforsmallvalues();\n        }\n        function xaxisforlargevalues() { svg.append(\"g\")\n          .attr(\"id\",\"xaxis\")\n          .attr(\"transform\", \"translate(0,\" + (height+10) + \")\")\n          .call(d3.axisBottom(x))\n          d3.selectAll(\"#xaxis text\")\n          .attr(\"y\", 0)\n          .attr(\"x\", -10)\n          .attr(\"dy\", \".35em\")\n          .attr(\"transform\", \"rotate(-70)\")\n          .style(\"text-anchor\", \"end\")\n       \n        } \n        // else {\n        function xaxisforsmallvalues() {   svg\n          .append(\"g\")\n          .attr(\"id\",\"xaxis\")\n            // .attr(\"class\", \"x axis\")\n          .attr(\"transform\", \"translate(0,\" +(height+10) + \")\")\n          .call(d3.axisBottom(x))\n          d3.selectAll(\".tick text\")\n          .call(wrap, x.bandwidth())\n          function wrap(text, width) {\n            text.each(function() {\n              var text = d3.select(this),\n                  words = text.text().split(/\\s+/).reverse(),\n                  word,\n                  line = [],\n                  lineNumber = 0,\n                  lineHeight = 1.1, // ems\n                  y = text.attr(\"y\"),\n                  dy = parseFloat(text.attr(\"dy\")),\n                  tspan = text.text(null).append(\"tspan\").attr(\"x\", 0).attr(\"y\", y).attr(\"dy\", dy + \"em\");\n              while (word = words.pop()) {\n                line.push(word);\n                tspan.text(line.join(\" \"));\n                if (tspan.node().getComputedTextLength() > width) {\n                  line.pop();\n                  tspan.text(line.join(\" \"));\n                  line = [word];\n                  tspan = text.append(\"tspan\").attr(\"x\", 0).attr(\"y\", y).attr(\"dy\", ++lineNumber * lineHeight + dy + \"em\").text(word)\n              \n                }\n              }\n            });\n          }\n        }\n        // }\n\n        // add the y Axis\n        svg.append(\"g\")\n            .attr(\"class\", \"y axis\")\n            .call(d3.axisLeft(y)\n            // .tickFormat(d3.format(\".0s\")));\n            .ticks(10, \"s\"));\n\n        svg.append(\"text\")\n        .attr(\"class\", \"y label\")\n        .attr(\"text-anchor\", \"end\")\n        .attr(\"y\", -60)\n        .attr(\"dy\", \".75em\")\n        .attr(\"dx\", \"-5.5em\")\n        .attr(\"transform\", \"rotate(-90)\")\n        .text(this.yKey);\n  //#endregion\n\n\n  //#region - ToolTip\n        var tooltip = d3.select(\".card-body\").append(\"div\").attr(\"class\", \"toolTip\");\n          d3.selectAll(\".bar-positive\")\n          .on(\"mouseover\", function(d){\n            var x = d3.select(this).attr('id'),\n              n= vm.data.length,\n              yval\n              for(let i=0;  i < n; i++ ){\n                if(vm.data[i][vm.xKey] === x) {\n                  yval = vm.data[i][vm.yKey]\n                }\n              }\n              // console.log(Number.isInteger(yval))\n                  tooltip\n                  .style(\"left\", event.pageX - 315 + \"px\")\n                  .style(\"top\", event.pageY - 170 + \"px\")\n                  .style(\"display\", \"inline-block\")\n                  // .html((vm.data[x][vm.yKey]) + \"<br>\"  + (vm.data[x][vm.xKey]));\n                  .html( x + \"<br>\"  +vm.currency_key + ' ' +  ((Number.isInteger(yval))? yval : yval.toFixed(2)));\n              })\n              .on(\"mouseout\", function(d){\n                  tooltip.style(\"display\", \"none\");\n              });\n  //#endregion\n\n  //#region - Animation\n    // svg.selectAll(\"rect\")\n    // .transition()\n    // .duration(4800)\n    // .attr(\"y\", function(d) { console.log(d);return y(d[vm.yKey]); })\n    // .attr(\"height\", function(d) { console.log(d);return height - y(d[vm.yKey]); })\n    // .delay(function(d,i){console.log(i) ; return(i*100)})\n  //#endregion\n\n\n   function display () {\n     // debugger;\n        var xy = parseInt(d3.select(this).attr(\"x\")),\n            nx = xy + d3.event.dx,\n            w = parseInt(d3.select(this).attr(\"width\")),\n            f, nf, new_data, rects;\n\n          // console.log('xy'+xy)\n          // console.log('nx'+nx)\n          // console.log('w'+w)\n          // console.log('widht'+ width)\n          \n        if ( nx < 0 || nx + w > width) return;\n\n        d3.select(this).attr(\"x\", nx);\n\n        f = displayed(xy);\n        nf = displayed(nx);\n        // console.log('f'+f)\n        // console.log('nf'+nf)\n\n        if ( f === nf ) return;\n\n        new_data = vm.data.slice(nf, nf + numBars);\n\n        x.domain(new_data.map(function (d) { return d[vm.xKey]; }));\n\n        if(numBars > 8 ){\n          // xaxisforlargevalues();\n          svg.select(\"#xaxis\").call(d3.axisBottom(x))\n        .selectAll(\"#xaxis text\")\n          .attr(\"y\", 0)\n          .attr(\"x\", -10)\n          .attr(\"dy\", \".35em\")\n          .attr(\"transform\", \"rotate(-70)\")\n          .style(\"text-anchor\", \"end\");\n        } else {\n          // xaxisforsmallvalues();\n           svg.select(\"#xaxis\").call(d3.axisBottom(x))\n            d3.selectAll(\".tick text\")\n          .call(wrap, x.bandwidth())\n           function wrap(text, width) {\n            text.each(function() {\n              var text = d3.select(this),\n                  words = text.text().split(/\\s+/).reverse(),\n                  word,\n                  line = [],\n                  lineNumber = 0,\n                  lineHeight = 1.1, // ems\n                  y = text.attr(\"y\"),\n                  dy = parseFloat(text.attr(\"dy\")),\n                  tspan = text.text(null).append(\"tspan\").attr(\"x\", 0).attr(\"y\", y).attr(\"dy\", dy + \"em\");\n              while (word = words.pop()) {\n                line.push(word);\n                tspan.text(line.join(\" \"));\n                if (tspan.node().getComputedTextLength() > width) {\n                  line.pop();\n                  tspan.text(line.join(\" \"));\n                  line = [word];\n                  tspan = text.append(\"tspan\").attr(\"x\", 0).attr(\"y\", y).attr(\"dy\", ++lineNumber * lineHeight + dy + \"em\").text(word)\n              \n                }\n              }\n            });\n          }\n        }\n        \n      // setTimeout(() => {\n        \n     \n        rects = svg.selectAll(\".bar-positive\")\n        .data(new_data, function (d) {return d[vm.xKey]; });\n          rects.attr(\"x\", function (d) { return x(d[vm.xKey]); });\n\n    // \t  rects.attr(\"transform\", function(d) { return \"translate(\" + xscale(d.label) + \",0)\"; })\n\n        rects.enter().append(\"rect\")\n        .attr(\"class\", \"bar-positive\")\n        .attr(\"id\", function(d, i) {\n            return  d[vm.xKey];\n          })\n        .attr(\"x\", function (d) { return x(d[vm.xKey]); })\n        .attr(\"y\", function (d) { return y(d[vm.yKey]); })\n        .attr(\"width\", x.bandwidth()/ 1.19)\n        .attr(\"height\", function (d) { return height - y(d[vm.yKey]); })\n        .on(\"mouseover\", function(d){\n              var x = d3.select(this).attr('id'),\n              n= vm.data.length,\n              yval\n              for(let i=0;  i < n; i++ ){\n                if(vm.data[i][vm.xKey] === x) {\n                  yval = vm.data[i][vm.yKey]\n                }\n              }\n                // console.log(vm.currency_key);\n                  tooltip\n                  .style(\"left\", event.pageX - 315 + \"px\")\n                  .style(\"top\", event.pageY - 170 + \"px\")\n                  .style(\"display\", \"inline-block\")\n                  // .html((vm.data[x][vm.yKey]) + \"<br>\"  + (vm.data[x][vm.xKey]));\n                  .html( x + \"<br>\"  + vm.currency_key + ' ' + ((Number.isInteger(yval))? yval : yval.toFixed(2)));\n              })\n              .on(\"mouseout\", function(d){\n                  tooltip.style(\"display\", \"none\");\n              });\n        rects.exit().remove();\n        //  }, 1000);\n    };\n\n    // d3.select('button#export').on('click', function() {\n    //   var config = {\n    //     filename: 'customFileName',\n    //   }\n    //   d3_save_pdf.save(d3.select('svg').node(), config);\n    //   svg\n    //   .append('g')\n    //   .append('image')\n    //   .attr('xlink:href', 'assets/test.png')\n    //   .attr(\"width\", 100)\n    //   .attr(\"height\", 100)\n    //   .attr(\"x\", (width / 2)  - 50)\n    //   .attr(\"y\", (height / 6) * 5);\n\n    // d3_save_pdf.embedRasterImages(svg.node())\n    // });\n\n  },\n}\n</script>\n\n<style>\n/* .tick line {\n  stroke: #1b139c;\n}\n .y.axis path {\n        display: none;\n    }\n    .y.axis .tick line {\n        display: none;\n    }\n  #xaxis path {\n        display: none;\n    }\n\n    #xaxis .tick line{\n        display: none;\n    }\n.bar-positive {\n   fill: #00C7E6;\n}\n\n.bar-positive:hover {\n  fill: rgb(105, 213, 209);;\n}\n\n.svg-container {\n  display: inline-block;\n  position: relative;\n  width: 100%;\n  padding-bottom: 1%;\n  vertical-align: top;\n  overflow: hidden;\n}\n.toolTip {\n  position: absolute;\n  display: none;\n  min-width: 80px;\n  height: auto;\n  background: none repeat scroll 0 0 #ffffff;\n  border: 1px solid rgba(130, 127, 127, 0.72);\n  padding: 14px;\n  text-align: center;\n  z-index: 1000;\n}\n.subBar { \n  fill: gray;\n  opacity: 0.11;\n}\nrect.mover {\n            stroke: red;\n            stroke-opacity: .1;\n            fill: #505050;\n            fill-opacity: .5;\n            border-radius: 45px;\n        } */\n</style>"],"sourceRoot":"src/portal/analytics/components"}]}