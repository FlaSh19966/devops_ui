{"remainingRequest":"/home/vimalesh/CENSE/chatbot-portal/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/vimalesh/CENSE/chatbot-portal/src/portal/Chatbot/Dashboard/ConversationalFlow/Intents.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/vimalesh/CENSE/chatbot-portal/src/portal/Chatbot/Dashboard/ConversationalFlow/Intents.vue","mtime":1655466542520},{"path":"/home/vimalesh/CENSE/chatbot-portal/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vimalesh/CENSE/chatbot-portal/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/vimalesh/CENSE/chatbot-portal/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vimalesh/CENSE/chatbot-portal/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBheGlvcyBmcm9tICJheGlvcyI7CmltcG9ydCBTd2FsIGZyb20gInN3ZWV0YWxlcnQyIjsKaW1wb3J0IGFwaV9jYWxscyBmcm9tICJAL3BvcnRhbC9hcGlfY2FsbHMiOwppbXBvcnQgVGVtcGxhdGUgZnJvbSAiLi4vVGVtcGxhdGUudnVlIjsKaW1wb3J0IHsgVnVlRWRpdG9yIH0gZnJvbSAidnVlMi1lZGl0b3IiOwppbXBvcnQgeyBmcmVlemVfcG9ydGFsLHNob3dfc3Vic2NyaXB0aW9uX2V4cGlyZWRfc3dhbCB9IGZyb20gIkAvcG9ydGFsL21peGlucyI7CmV4cG9ydCBkZWZhdWx0IHsKICBjb21wb25lbnRzOiB7IFRlbXBsYXRlLCBWdWVFZGl0b3IgfSwKICBuYW1lOiAiaW50ZW50c19jb21wb25lbnQiLAogIG1peGluczogW2ZyZWV6ZV9wb3J0YWwsc2hvd19zdWJzY3JpcHRpb25fZXhwaXJlZF9zd2FsXSwKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgcGVuY2lsX3N2ZzoKICAgICAgICAnIDxzdmcgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB3aWR0aD0iMTUuNTQ2IiBoZWlnaHQ9IjE1LjQ2MSIgdmlld0JveD0iMCAwIDE1LjU0NiAxNS40NjEiPjxkZWZzPjxzdHlsZT4uYXtmaWxsOiM5ZTllOWU7fTwvc3R5bGU+PC9kZWZzPjxnIHRyYW5zZm9ybT0idHJhbnNsYXRlKC03NDcuODg4IC0zNTYuNzY5KSI+PHBhdGggY2xhc3M9ImEiIGQ9Ik03NTkuNDE2LDM1Ni43NjlhMi4zNTgsMi4zNTgsMCwwLDEsMS43NzcuNjYyYy41MzQuNTEzLDEuMDcyLDEuMDI1LDEuNTY3LDEuNTc1YTIuMywyLjMsMCwwLDEtLjA3MSwzLjMyNWMtMi43MzYsMi43Ni01LjQ5NCw1LjUtOC4yMzgsOC4yNTFhMS4zODEsMS4zODEsMCwwLDEtLjc1OC4yODhjLS43MTkuMTc0LTEuNDI5LjM3OS0yLjE0NC41NzItLjkzMi4yNTEtMS44NjIuNS0yLjc5NS43NTEtLjYuMTU4LS45ODktLjIxMy0uODMyLS44MDdxLjY4OS0yLjU5NSwxLjQwNi01LjE4MmExLjE2NCwxLjE2NCwwLDAsMSwuMjg5LS40ODdxNC4wOTEtNC4xMDcsOC4yLTguMkEyLjI2NSwyLjI2NSwwLDAsMSw3NTkuNDE2LDM1Ni43NjlabS0xLjk4OSwyLjk1Ni02LjU0LDYuNTM4LDMuMDI1LDMuMDI0LDYuNTM4LTYuNTM3Wm00LjAyMywyLjE2NWMuMTE4LS4xMzUuMjI1LS4yNjkuMzQzLS4zOTJhMS4xMzQsMS4xMzQsMCwwLDAsMC0xLjczNGMtLjQ2LS40NjYtLjkyNi0uOTI1LTEuMzg4LTEuMzlhMS4xNjYsMS4xNjYsMCwwLDAtLjg2MS0uMzY4Yy0uNTc4LDAtLjg4MS40LTEuMjE0Ljc2Wm0tMTIuMDg0LDguODYzLDMuMi0uODYzLTIuMzM3LTIuMzMxWiIgdHJhbnNmb3JtPSJ0cmFuc2xhdGUoMCkiLz48cGF0aCBjbGFzcz0iYSIgZD0iTTgxMy45NDIsNDIyLjZsLS43ODktLjgsMy44MjEtMy44MTkuNzg0LjhaIiB0cmFuc2Zvcm09InRyYW5zbGF0ZSgtNTkuNjQ4IC01NS45NDcpIi8+PC9nPjwvc3ZnPicsCiAgICAgIHNwaW5uZXJPbjogZmFsc2UsCiAgICAgIG5ld19pbnRlbnRfZGVzY3JpcHRpb246ICIiLAogICAgICBpbnRlbnRfYWxyZWFkeV9leGlzdHM6IGZhbHNlLAogICAgICBpbnRlbnRfYWxyZWFkeV9leGlzdHNfZWRpdDogZmFsc2UsCiAgICAgIHBhZ2Vfbm86IDEsCiAgICAgIHBlcl9wYWdlOiAxNSwKICAgICAgcGFnZV9hcnJheTogW10sCiAgICAgIHRvdGFsX3BhZ2VzOiBudWxsLAogICAgICBudW1iZXJfb2Zfcm93czogbnVsbCwKICAgICAgY2hlY2tlZF9saXN0OiBbXSwKICAgICAgaXNWaXNpYmxlU2VhcmNoQ2xlYXI6IGZhbHNlLAogICAgICBuZXdfaW50ZW50czogIiIsCiAgICAgIGFkZF9xdWVzdGlvbnNfbGlzdDogWyIiXSwKICAgICAgb2xkX2ludGVudF9uYW1lOiAiIiwKICAgICAgb2xkX3F1ZXN0aW9uX2xpc3Q6IFtdLAogICAgICBpbnRlbnRsaXN0OiBbXSwKICAgICAgY29tcGFueW5hbWU6ICIiLAogICAgICBjb21wYW55aWQ6ICIiLAogICAgICBzZWFyY2hfbmFtZTogIiIsCiAgICAgIGlzRWRpdEludGVudDogZmFsc2UsCiAgICAgIHNlbGVjdGVkX2ludGVudF9kZXNjcmlwdGlvbjogIiIsCiAgICAgIGlzX3NlYXJjaF9hY3RpdmU6IGZhbHNlLAogICAgICBzZWxlY3RlZF9pbnRlbnRfcXVlc3Rpb25zOiBbIiJdLAogICAgICBjdXJyZW50X3NlbGVjdGVkX2ludGVudDogIiIsCiAgICAgIGN1cnJlbnRfc2VsZWN0ZWRfaW50ZW50X2luZGV4OiAwLAogICAgICBpbnRlbnRfY29yZV9tb2RlbF9pbnByb2dyZXNzOiBmYWxzZSwKICAgICAgc3Bpbm5lck9uRmlsZURvd25sb2FkOiBmYWxzZSwKICAgICAgZmlsZV9sYWJlbF9jc3Y6ICJDaG9vc2UgZmlsZSIsCiAgICB9OwogIH0sCiAgY3JlYXRlZCgpIHsKICAgIGlmICh0aGlzLiRzZXNzaW9uLmdldCgiVXNlckluZm9ybWF0aW9uIikucm9sZSA9PSAiU3VwZXJBZG1pbiIpIHsKICAgICAgdGhpcy5jb21wYW55aWQgPSB0aGlzLiRzZXNzaW9uLmdldCgiQ29tcGFueUlkIik7CiAgICAgIHRoaXMuY29tcGFueW5hbWUgPSB0aGlzLiRzZXNzaW9uLmdldCgiQ29tcGFueU5hbWUiKTsKICAgIH0gZWxzZSB7CiAgICAgIHRoaXMuY29tcGFueWlkID0gdGhpcy4kc2Vzc2lvbi5nZXQoIlVzZXJJbmZvcm1hdGlvbiIpLmNvbXBhbnlfaWQ7CiAgICAgIHRoaXMuY29tcGFueW5hbWUgPSB0aGlzLiRzZXNzaW9uLmdldCgiVXNlckluZm9ybWF0aW9uIikuY29tcGFueV9uYW1lOwogICAgfQogICAgdGhpcy5sb2FkX2ludGVudCgpOwogICAgdGhpcy5jaGVja19pbnRlbnRfY29yZV9tb2RlbF9zdGF0dXMoKTsKICB9LAogIG1vdW50ZWQoKSB7CiAgICBzZXRUaW1lb3V0KCgpID0+IHsKICAgICAgdGhpcy5mcmVlemVfcG9ydGFsKCk7CiAgICB9LCAxMDAwKTsKICAgIHRoaXMuJHJvb3QuJG9uKCJpbnRlbnRzX2NvbXBvbmVudERpc2FibGVkIiwgKGRhdGEpID0+IHsKICAgICAgaWYoZGF0YT09PXRydWUpewogICAgICAgIHRoaXMuc2hvd19zdWJzY3JpcHRpb25fZXhwaXJlZF9zd2FsKCk7CiAgICAgIH0KICAgIH0pOwogICAgdmFyIHZtID0gdGhpczsKICAgICQoIiNzZWxlY3RhbGwiKS5jbGljayhmdW5jdGlvbiAoKSB7CiAgICAgIGlmICgkKHRoaXMpLmlzKCI6Y2hlY2tlZCIpKSB7CiAgICAgICAgLy8gJCgnZGl2OmlucHV0JykucHJvcCgnY2hlY2tlZCcsdHJ1ZSk7CiAgICAgICAgJCgiaW5wdXQ6Y2hlY2tib3giKS5wcm9wKCJjaGVja2VkIiwgdHJ1ZSk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgdm0uY2hlY2tlZF9saXN0ID0gW107CiAgICAgICAgJCgiaW5wdXQ6Y2hlY2tib3giKS5wcm9wKCJjaGVja2VkIiwgZmFsc2UpOwogICAgICB9CiAgICB9KTsKICAgICQoIiNpbnRlbnRtb2RlbCIpLm9uKCJoaWRkZW4uYnMubW9kYWwiLCBmdW5jdGlvbiAoZSkgewogICAgICB2bS5lbXB0eV92YXJpYWJsZSgpOwogICAgfSk7CiAgICAkKCdhW2RhdGEtdGFyZ2V0PSIjaW50ZW50bW9kZWwiXScpLm9uKCJjbGljayIsIGZ1bmN0aW9uICgpIHsKICAgICAgaWYgKHZtLmlzRWRpdEludGVudCA9PSB0cnVlKSB7CiAgICAgICAgdm0udmVyaWZ5X2NoYW5nZXMoKTsKICAgICAgfSBlbHNlIHsKICAgICAgICB2bS5lbXB0eV92YXJpYWJsZSgpOwogICAgICAgICQoIiNpbnRlbnRtb2RlbCIpLm1vZGFsKCJzaG93Iik7CiAgICAgIH0KICAgIH0pOwogICAgdGhpcy4kcm9vdC4kb24oInNlbmRfbW9kZWxfc3RhdHVzIiwgZGF0YSA9PnsKICAgICAgaWYgKGRhdGEgPT0gdHJ1ZSl7CiAgICAgICAgdGhpcy5jaGVja19pbnRlbnRfY29yZV9tb2RlbF9zdGF0dXMoKTsKICAgICAgfQogICAgfSk7CiAgfSwKICB3YXRjaDogewogICAgc2VhcmNoX25hbWUoKSB7CiAgICAgIGlmICh0aGlzLnNlYXJjaF9uYW1lID09PSAiIikgewogICAgICAgIHRoaXMubG9hZF9pbnRlbnQoKTsKICAgICAgICB0aGlzLmlzVmlzaWJsZVNlYXJjaENsZWFyID0gZmFsc2U7CiAgICAgIH0gZWxzZSBpZiAodGhpcy5zZWFyY2hfbmFtZSAhPT0gIiIpIHsKICAgICAgICB0aGlzLmlzVmlzaWJsZVNlYXJjaENsZWFyID0gdHJ1ZTsKICAgICAgfQogICAgfSwKICAgIG5ld19pbnRlbnRzKHZhbCkgewogICAgICB0aGlzLm5ld19pbnRlbnRzID0gdmFsLnJlcGxhY2UoL1teYS16QS1aMC05XyBdL2csICIiKTsKICAgIH0sCiAgICBjdXJyZW50X3NlbGVjdGVkX2ludGVudCh2YWwpIHsKICAgICAgdGhpcy5jdXJyZW50X3NlbGVjdGVkX2ludGVudCA9IHZhbC5yZXBsYWNlKC9bXmEtekEtWjAtOV8gXS9nLCAiIik7CiAgICB9LAogIH0sCiAgbWV0aG9kczogewogICAgdmVyaWZ5X2NoYW5nZXMoKSB7CiAgICAgIFN3YWwoewogICAgICAgIHRpdGxlOiAiQXJlIHlvdSBzdXJlPyIsCiAgICAgICAgdGV4dDogIklmIHlvdSBoYXZlIG1hZGUgYW55IGNoYW5nZXMgdG8gdGhlIHNlbGVjdGVkIG9iamVjdGl2ZSBwbGVhc2Ugc2F2ZSB0aGVtIGZpcnN0LCBlbHNlIHRoZXkgd2lsbCBkaXNjYXJkZWQhIiwKICAgICAgICB0eXBlOiAid2FybmluZyIsCiAgICAgICAgc2hvd0NhbmNlbEJ1dHRvbjogdHJ1ZSwKICAgICAgICBjb25maXJtQnV0dG9uQ29sb3I6ICIjMzA4NWQ2IiwKICAgICAgICBjYW5jZWxCdXR0b25Db2xvcjogIiNkMzMiLAogICAgICAgIGNvbmZpcm1CdXR0b25UZXh0OiAiU2F2ZSIsCiAgICAgICAgY2FuY2VsQnV0dG9uVGV4dDogIkNhbmNlbCIsCiAgICAgIH0pLnRoZW4oKHJlc3VsdCkgPT4gewogICAgICAgIGlmIChyZXN1bHQudmFsdWUpIHsKICAgICAgICAgIHRoaXMuZWRpdF9pbnRlbnQoKTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgdGhpcy5zaG93X2ludGVudHModGhpcy5jdXJyZW50X3NlbGVjdGVkX2ludGVudF9pbmRleCk7CiAgICAgICAgICB0aGlzLmlzRWRpdEludGVudCA9IGZhbHNlOwogICAgICAgIH0KICAgICAgfSk7CiAgICB9LAogICAgY2FsbHNlYXJjaCgpIHsKICAgICAgaWYgKGV2ZW50LmtleUNvZGUgPT09IDEzKSB7CiAgICAgICAgaWYgKHRoaXMuaXNFZGl0SW50ZW50KSB7CiAgICAgICAgICB0aGlzLnZlcmlmeV9jaGFuZ2VzKCk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIHRoaXMuc2VhcmNoX2ludGVudCgpOwogICAgICAgIH0KICAgICAgfQogICAgfSwKICAgIHNlYXJjaF9pbnRlbnQoY3VycmVudF9zZWxlY3RlZF9pbnRlbnRfaW5kZXgpIHsKICAgICAgaWYgKHRoaXMuc2VhcmNoX25hbWUgIT0gIiIpIHsKICAgICAgICAkKCJpbnB1dDpjaGVja2JveCIpLnByb3AoImNoZWNrZWQiLCBmYWxzZSk7CiAgICAgICAgdGhpcy5jaGVja2VkX2xpc3QgPSBbXTsKICAgICAgICB0aGlzLnNwaW5uZXJPbiA9IHRydWU7CiAgICAgICAgYXhpb3MKICAgICAgICAgIC5wb3N0KAogICAgICAgICAgICBhcGlfY2FsbHMuZm9ybV9hdXRvbWF0aW9uX3NhdmVfaW50ZW50X2V4YW1wbGUoKSwKICAgICAgICAgICAgewogICAgICAgICAgICAgIGNvbXBhbnlfaWQ6IHRoaXMuY29tcGFueWlkLAogICAgICAgICAgICAgIGNvbXBhbnlfbmFtZTogdGhpcy5jb21wYW55bmFtZSwKICAgICAgICAgICAgICBsaWNlbnNlX2tleTogdGhpcy4kc2Vzc2lvbi5nZXQoIlVzZXJJbmZvcm1hdGlvbiIpLmxpY2Vuc2Vfa2V5LAogICAgICAgICAgICAgIGVtYWlsOiB0aGlzLiRzZXNzaW9uLmdldCgiVXNlckluZm9ybWF0aW9uIikuZW1haWwsCiAgICAgICAgICAgICAgdG9rZW46IHRoaXMuJHNlc3Npb24uZ2V0KCJVc2VySW5mb3JtYXRpb24iKS50b2tlbnMsCiAgICAgICAgICAgICAgc3Vic2NyaXB0aW9uOiAiUGxhdGludW0iLAogICAgICAgICAgICAgIGlzX3NlYXJjaDogdHJ1ZSwKICAgICAgICAgICAgICBzZWFyY2hfa2V5OiB0aGlzLnNlYXJjaF9uYW1lLAogICAgICAgICAgICAgIHBlcl9wYWdlOiB0aGlzLnBlcl9wYWdlLAogICAgICAgICAgICAgIHBhZ2Vfbm86IDEsCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICBoZWFkZXJzOiB7CiAgICAgICAgICAgICAgICBBdXRob3JpemF0aW9uOiBgQmVhcmVyICR7dGhpcy4kc2Vzc2lvbi5nZXQoImF0Iil9YCwKICAgICAgICAgICAgICB9LAogICAgICAgICAgICB9CiAgICAgICAgICApCiAgICAgICAgICAudGhlbigocmVzcG9uc2UpID0+IHsKICAgICAgICAgICAgdGhpcy5zcGlubmVyT24gPSBmYWxzZTsKICAgICAgICAgICAgaWYgKHJlc3BvbnNlLmRhdGEuTVNHID09ICJObyBSZXN1bHRzIEZvdW5kIikgewogICAgICAgICAgICAgIFN3YWwoewogICAgICAgICAgICAgICAgdGV4dDogIk5vIFJlc3VsdHMgRm91bmQiLAogICAgICAgICAgICAgICAgdG9hc3Q6IHRydWUsCiAgICAgICAgICAgICAgICBwb3NpdGlvbjogInRvcC1lbmQiLAogICAgICAgICAgICAgICAgdHlwZTogIndhcm5pbmciLAogICAgICAgICAgICAgICAgc2hvd0NvbmZpcm1CdXR0b246IGZhbHNlLAogICAgICAgICAgICAgICAgdGltZXI6IDIwMDAsCiAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIH0gZWxzZSBpZiAoCiAgICAgICAgICAgICAgcmVzcG9uc2UuZGF0YS5NU0cgIT0gIkludGVybmFsIFNlcnZlciBFcnJvciIgJiYKICAgICAgICAgICAgICByZXNwb25zZS5kYXRhLk1TRyAhPSAiTm8gSW50ZW50cyBGb3VuZCIKICAgICAgICAgICAgKSB7CiAgICAgICAgICAgICAgdGhpcy5pbnRlbnRsaXN0ID0gW107CiAgICAgICAgICAgICAgdGhpcy5wYWdlX25vID0gMTsKICAgICAgICAgICAgICBpZiAocmVzcG9uc2UuZGF0YSAhPSAidG9rZW4gaW52YWxpZCIpIHsKICAgICAgICAgICAgICAgIHRoaXMubnVtYmVyX29mX3Jvd3MgPSByZXNwb25zZS5kYXRhLnBhZ2Vjb3VudDsKICAgICAgICAgICAgICAgIHRoaXMudG90YWxfcGFnZXMgPSBNYXRoLmNlaWwoCiAgICAgICAgICAgICAgICAgIHRoaXMubnVtYmVyX29mX3Jvd3MgLyB0aGlzLnBlcl9wYWdlCiAgICAgICAgICAgICAgICApOwogICAgICAgICAgICAgICAgdGhpcy5pbnRlbnRsaXN0ID0gcmVzcG9uc2UuZGF0YS5SZXNwb25zZUxpc3Q7CiAgICAgICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IHRoaXMuaW50ZW50bGlzdC5sZW5ndGg7IGkrKykgewogICAgICAgICAgICAgICAgICB0aGlzLmludGVudGxpc3RbaV0uSW50ZW50ID0gdGhpcy5pbnRlbnRsaXN0W2ldLkludGVudDsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIGlmICh0aGlzLmludGVudGxpc3QubGVuZ3RoID4gMCkgewogICAgICAgICAgICAgICAgICB0aGlzLmlzX3NlYXJjaF9hY3RpdmUgPSB0cnVlOwogICAgICAgICAgICAgICAgICBpZiAoQm9vbGVhbihjdXJyZW50X3NlbGVjdGVkX2ludGVudF9pbmRleCkpIHsKICAgICAgICAgICAgICAgICAgICB0aGlzLnNob3dfaW50ZW50cyhjdXJyZW50X3NlbGVjdGVkX2ludGVudF9pbmRleCk7CiAgICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgdGhpcy5zaG93X2ludGVudHMoMCk7CiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIHRoaXMuc2V0cGFnaW5hdGlvbih0aGlzLnBhZ2Vfbm8pOwogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSBlbHNlIGlmIChyZXNwb25zZS5kYXRhID09ICJJbnRlcm5hbCBTZXJ2ZXIgRXJyb3IiKSB7CiAgICAgICAgICAgICAgU3dhbCh7CiAgICAgICAgICAgICAgICB0ZXh0OiAiSW50ZXJuYWwgU2VydmVyIEVycm9yIiwKICAgICAgICAgICAgICAgIHRvYXN0OiB0cnVlLAogICAgICAgICAgICAgICAgcG9zaXRpb246ICJ0b3AtZW5kIiwKICAgICAgICAgICAgICAgIHR5cGU6ICJ3YXJuaW5nIiwKICAgICAgICAgICAgICAgIHNob3dDb25maXJtQnV0dG9uOiBmYWxzZSwKICAgICAgICAgICAgICAgIHRpbWVyOiAyMDAwLAogICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgIHRoaXMubG9hZF9pbnRlbnQoKTsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICBTd2FsKHsKICAgICAgICAgICAgICAgIHRleHQ6ICJJbnRlcm5hbCBTZXJ2ZXIgRXJyb3IiLAogICAgICAgICAgICAgICAgdG9hc3Q6IHRydWUsCiAgICAgICAgICAgICAgICBwb3NpdGlvbjogInRvcC1lbmQiLAogICAgICAgICAgICAgICAgdHlwZTogIndhcm5pbmciLAogICAgICAgICAgICAgICAgc2hvd0NvbmZpcm1CdXR0b246IGZhbHNlLAogICAgICAgICAgICAgICAgdGltZXI6IDIwMDAsCiAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgdGhpcy5sb2FkX2ludGVudCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9KQogICAgICAgICAgLmNhdGNoKChlKSA9PiB7CiAgICAgICAgICAgIHRoaXMuc3Bpbm5lck9uID0gZmFsc2U7CiAgICAgICAgICAgIGlmICgKICAgICAgICAgICAgICBlLnJlc3BvbnNlLnN0YXR1cyA9PT0gNDEwIHx8CiAgICAgICAgICAgICAgZS5yZXNwb25zZS5zdGF0dXMgPT09IDQ0MCB8fAogICAgICAgICAgICAgIGUucmVzcG9uc2Uuc3RhdHVzID09PSA0MDkKICAgICAgICAgICAgKSB7CiAgICAgICAgICAgICAgdGhpcy4kcm9vdC4kZW1pdCgiU2Vzc2lvbl9FeHBpcmVkIiwgZS5yZXNwb25zZS5kYXRhKTsKICAgICAgICAgICAgfQogICAgICAgICAgfSk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgU3dhbCh7CiAgICAgICAgICB0ZXh0OiAiRW50ZXIgcHJvcGVyIGRhdGEgZm9yIHNlYXJjaGluZyIsCiAgICAgICAgICB0b2FzdDogdHJ1ZSwKICAgICAgICAgIHBvc2l0aW9uOiAidG9wLWVuZCIsCiAgICAgICAgICB0eXBlOiAid2FybmluZyIsCiAgICAgICAgICBzaG93Q29uZmlybUJ1dHRvbjogZmFsc2UsCiAgICAgICAgICB0aW1lcjogMjUwMCwKICAgICAgICB9KTsKICAgICAgfQogICAgfSwKICAgIGNoZWNrX2N1cnJlbnRfaW50ZW50KGluZGV4KSB7CiAgICAgIHZhciByZXR1cm5fdmFyID0gIiI7CiAgICAgIGlmICgKICAgICAgICB0aGlzLmludGVudGxpc3RbaW5kZXhdLkludGVudCA9PSB0aGlzLmN1cnJlbnRfc2VsZWN0ZWRfaW50ZW50X2hpZ2hsaWdodAogICAgICApIHsKICAgICAgICByZXR1cm5fdmFyICs9ICJjdXJyZW50LWFjdGl2ZS1pbnRlbnQiOwogICAgICB9CiAgICAgIHJldHVybiByZXR1cm5fdmFyOwogICAgfSwKICAgIGNsZWFyX3NlYXJjaF9uYW1lKCkgewogICAgICB0aGlzLnNlYXJjaF9uYW1lID0gIiI7CiAgICB9LAogICAgYWRkX3RvX3F1ZXN0aW9uc19saXN0KHR5cGUsIGluZGV4KSB7CiAgICAgIGlmICghdGhpcy5pc0VkaXRJbnRlbnQpIHsKICAgICAgICBpZiAodHlwZSA9PSAiYWRkIikgewogICAgICAgICAgdGhpcy5hZGRfcXVlc3Rpb25zX2xpc3QudW5zaGlmdCgiIik7CiAgICAgICAgfSBlbHNlIGlmICh0eXBlID09ICJyZW1vdmUiKSB7CiAgICAgICAgICB0aGlzLmFkZF9xdWVzdGlvbnNfbGlzdC5zcGxpY2UoaW5kZXgsIDEpOwogICAgICAgIH0KICAgICAgfSBlbHNlIHsKICAgICAgICBpZiAodHlwZSA9PSAiYWRkIikgewogICAgICAgICAgdGhpcy5zZWxlY3RlZF9pbnRlbnRfcXVlc3Rpb25zLnVuc2hpZnQoIiIpOwogICAgICAgIH0gZWxzZSBpZiAodHlwZSA9PSAicmVtb3ZlIikgewogICAgICAgICAgdGhpcy5zZWxlY3RlZF9pbnRlbnRfcXVlc3Rpb25zLnNwbGljZShpbmRleCwgMSk7CiAgICAgICAgfQogICAgICB9CiAgICB9LAogICAgc2hvd19pbnRlbnRzKGluZGV4KSB7CiAgICAgIHRoaXMuaXNFZGl0SW50ZW50ID0gZmFsc2U7CiAgICAgIHZhciBjbG9uZV9zZWxlY3RlZF9pbnRlbnQgPSBKU09OLnBhcnNlKAogICAgICAgIEpTT04uc3RyaW5naWZ5KHRoaXMuaW50ZW50bGlzdFtpbmRleF0pCiAgICAgICk7CiAgICAgIHRoaXMuY3VycmVudF9zZWxlY3RlZF9pbnRlbnRfaW5kZXggPSBpbmRleDsKICAgICAgdGhpcy5jdXJyZW50X3NlbGVjdGVkX2ludGVudCA9IGNsb25lX3NlbGVjdGVkX2ludGVudC5JbnRlbnQ7CiAgICAgIHRoaXMuY3VycmVudF9zZWxlY3RlZF9pbnRlbnRfaGlnaGxpZ2h0ID0gY2xvbmVfc2VsZWN0ZWRfaW50ZW50LkludGVudDsKICAgICAgdGhpcy5zZWxlY3RlZF9pbnRlbnRfcXVlc3Rpb25zID0gY2xvbmVfc2VsZWN0ZWRfaW50ZW50LlF1ZXN0aW9uczsKICAgICAgdGhpcy5vbGRfcXVlc3Rpb25fbGlzdCA9IHRoaXMuc2VsZWN0ZWRfaW50ZW50X3F1ZXN0aW9uczsKICAgICAgdGhpcy5zZWxlY3RlZF9pbnRlbnRfZGVzY3JpcHRpb24gPQogICAgICAgIGNsb25lX3NlbGVjdGVkX2ludGVudC5JbnRlbnREZXNjcmlwdGlvbjsKICAgICAgdGhpcy5vbGRfaW50ZW50X25hbWUgPSB0aGlzLmN1cnJlbnRfc2VsZWN0ZWRfaW50ZW50OwogICAgfSwKICAgIC8vIFRoaXMgaXMgZm9yIGNoZWNraW5nIHdoaWxlIGVudGVyaW5nIGEgaW50ZW50IG5hbWUgaWYgaXQgYWxyZWFkeSBleGlzdHMgb3Igbm90CiAgICBlbnRlcmludGVudGlkKCkgewogICAgICBsZXQgaW50ZW50X3NlYXJjaF9rZXkgPSB0aGlzLm5ld19pbnRlbnRzOwogICAgICBheGlvcwogICAgICAgIC5wb3N0KAogICAgICAgICAgYXBpX2NhbGxzLmludGVudF9xdWVzdGlvbl9yZXNwb25zZSgpLAogICAgICAgICAgewogICAgICAgICAgICBjb21wYW55X25hbWU6IHRoaXMuY29tcGFueW5hbWUsCiAgICAgICAgICAgIGNvbXBhbnlfaWQ6IHRoaXMuY29tcGFueWlkLAogICAgICAgICAgICBlbWFpbDogdGhpcy4kc2Vzc2lvbi5nZXQoIlVzZXJJbmZvcm1hdGlvbiIpLmVtYWlsLAogICAgICAgICAgICBsaWNlbnNlX2tleTogdGhpcy4kc2Vzc2lvbi5nZXQoIlVzZXJJbmZvcm1hdGlvbiIpLmxpY2Vuc2Vfa2V5LAogICAgICAgICAgICB0b2tlbjogdGhpcy4kc2Vzc2lvbi5nZXQoIlVzZXJJbmZvcm1hdGlvbiIpLnRva2VucywKICAgICAgICAgICAgc3Vic2NyaXB0aW9uOiB0aGlzLiRzZXNzaW9uLmdldCgiVXNlckluZm9ybWF0aW9uIikuc3Vic2NyaXB0aW9uLAogICAgICAgICAgICBpc19pbnRlbnRfc2VhcmNoOiB0cnVlLAogICAgICAgICAgICBpbnRlbnRfc2VhcmNoX2tleTogdGhpcy5uZXdfaW50ZW50cywKICAgICAgICAgIH0sCiAgICAgICAgICB7CiAgICAgICAgICAgIGhlYWRlcnM6IHsKICAgICAgICAgICAgICBBdXRob3JpemF0aW9uOiBgQmVhcmVyICR7dGhpcy4kc2Vzc2lvbi5nZXQoImF0Iil9YCwKICAgICAgICAgICAgfSwKICAgICAgICAgIH0KICAgICAgICApCiAgICAgICAgLnRoZW4oKHJlc3BvbnNlKSA9PiB7CiAgICAgICAgICBpZiAoCiAgICAgICAgICAgIHJlc3BvbnNlLmRhdGEgPT0gIk5vdCBFeGlzdHMiICYmCiAgICAgICAgICAgIHRoaXMubmV3X2ludGVudHMgPT09IGludGVudF9zZWFyY2hfa2V5CiAgICAgICAgICApIHsKICAgICAgICAgICAgdGhpcy5pbnRlbnRfYWxyZWFkeV9leGlzdHMgPSBmYWxzZTsKICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImVudGVyX2ludGVudF9pZCIpLnN0eWxlLmJvcmRlciA9IG51bGw7CiAgICAgICAgICAgIGlmICh0aGlzLm5ld19pbnRlbnRzICE9ICIiKSB7CiAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImVudGVyX2ludGVudF9pZCIpLnN0eWxlLmJvcmRlciA9CiAgICAgICAgICAgICAgICAiMXB4IHNvbGlkICMwMGYwMDAiOwogICAgICAgICAgICB9CiAgICAgICAgICB9IGVsc2UgaWYgKAogICAgICAgICAgICByZXNwb25zZS5kYXRhID09ICJBbHJlYWR5IEV4aXN0cyIgJiYKICAgICAgICAgICAgdGhpcy5uZXdfaW50ZW50cyA9PT0gaW50ZW50X3NlYXJjaF9rZXkKICAgICAgICAgICkgewogICAgICAgICAgICB0aGlzLmludGVudF9hbHJlYWR5X2V4aXN0cyA9IHRydWU7CiAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJlbnRlcl9pbnRlbnRfaWQiKS5zdHlsZS5ib3JkZXIgPQogICAgICAgICAgICAgICIxcHggc29saWQgcmVkIjsKICAgICAgICAgIH0KICAgICAgICB9KQogICAgICAgIC5jYXRjaCgoZSkgPT4gewogICAgICAgICAgaWYgKAogICAgICAgICAgICBlLnJlc3BvbnNlLnN0YXR1cyA9PT0gNDEwIHx8CiAgICAgICAgICAgIGUucmVzcG9uc2Uuc3RhdHVzID09PSA0NDAgfHwKICAgICAgICAgICAgZS5yZXNwb25zZS5zdGF0dXMgPT09IDQwOSB8fAogICAgICAgICAgICBlLnJlc3BvbnNlLnN0YXR1cyA9PT0gNDAxCiAgICAgICAgICApIHsKICAgICAgICAgICAgdGhpcy4kcm9vdC4kZW1pdCgiU2Vzc2lvbl9FeHBpcmVkIiwgZS5yZXNwb25zZS5kYXRhKTsKICAgICAgICAgIH0KICAgICAgICB9KTsKICAgIH0sCiAgICAvLyBUaGlzIGlzIGZvciBjaGVja2luZyB3aGlsZSBlZGl0aW5nIGFuZCBlbnRlcmluZyBhIG9iamVjdGl2ZSBuYW1lIGlmIGl0IGFscmVhZHkgZXhpc3RzIG9yIG5vdAogICAgZW50ZXJpbnRlbnRpZF9lZGl0KCkgewogICAgICBheGlvcwogICAgICAgIC5wb3N0KAogICAgICAgICAgYXBpX2NhbGxzLmludGVudF9xdWVzdGlvbl9yZXNwb25zZSgpLAogICAgICAgICAgewogICAgICAgICAgICBjb21wYW55X25hbWU6IHRoaXMuY29tcGFueW5hbWUsCiAgICAgICAgICAgIGNvbXBhbnlfaWQ6IHRoaXMuY29tcGFueWlkLAogICAgICAgICAgICBlbWFpbDogdGhpcy4kc2Vzc2lvbi5nZXQoIlVzZXJJbmZvcm1hdGlvbiIpLmVtYWlsLAogICAgICAgICAgICBsaWNlbnNlX2tleTogdGhpcy4kc2Vzc2lvbi5nZXQoIlVzZXJJbmZvcm1hdGlvbiIpLmxpY2Vuc2Vfa2V5LAogICAgICAgICAgICB0b2tlbjogdGhpcy4kc2Vzc2lvbi5nZXQoIlVzZXJJbmZvcm1hdGlvbiIpLnRva2VucywKICAgICAgICAgICAgc3Vic2NyaXB0aW9uOiB0aGlzLiRzZXNzaW9uLmdldCgiVXNlckluZm9ybWF0aW9uIikuc3Vic2NyaXB0aW9uLAogICAgICAgICAgICBpc19pbnRlbnRfc2VhcmNoOiB0cnVlLAogICAgICAgICAgICBpbnRlbnRfc2VhcmNoX2tleTogdGhpcy5jdXJyZW50X3NlbGVjdGVkX2ludGVudCwKICAgICAgICAgIH0sCiAgICAgICAgICB7CiAgICAgICAgICAgIGhlYWRlcnM6IHsKICAgICAgICAgICAgICBBdXRob3JpemF0aW9uOiBgQmVhcmVyICR7dGhpcy4kc2Vzc2lvbi5nZXQoImF0Iil9YCwKICAgICAgICAgICAgfSwKICAgICAgICAgIH0KICAgICAgICApCiAgICAgICAgLnRoZW4oKHJlc3BvbnNlKSA9PiB7CiAgICAgICAgICBpZiAocmVzcG9uc2UuZGF0YSA9PSAiTm90IEV4aXN0cyIpIHsKICAgICAgICAgICAgdGhpcy5pbnRlbnRfYWxyZWFkeV9leGlzdHNfZWRpdCA9IGZhbHNlOwogICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiZW50ZXJfaW50ZW50X2lkX2VkaXQiKS5zdHlsZS5ib3JkZXIgPSBudWxsOwogICAgICAgICAgICBpZiAodGhpcy5jdXJyZW50X3NlbGVjdGVkX2ludGVudCAhPSAiIikgewogICAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJlbnRlcl9pbnRlbnRfaWRfZWRpdCIpLnN0eWxlLmJvcmRlciA9CiAgICAgICAgICAgICAgICAiMXB4IHNvbGlkICMwMGYwMDAiOwogICAgICAgICAgICB9CiAgICAgICAgICB9IGVsc2UgaWYgKHJlc3BvbnNlLmRhdGEgPT0gIkFscmVhZHkgRXhpc3RzIikgewogICAgICAgICAgICBpZiAodGhpcy5vbGRfaW50ZW50X25hbWUgPT0gdGhpcy5jdXJyZW50X3NlbGVjdGVkX2ludGVudCkgewogICAgICAgICAgICAgIHRoaXMuaW50ZW50X2FscmVhZHlfZXhpc3RzX2VkaXQgPSBmYWxzZTsKICAgICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiZW50ZXJfaW50ZW50X2lkX2VkaXQiKS5zdHlsZS5ib3JkZXIgPQogICAgICAgICAgICAgICAgbnVsbDsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICB0aGlzLmludGVudF9hbHJlYWR5X2V4aXN0c19lZGl0ID0gdHJ1ZTsKICAgICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgiZW50ZXJfaW50ZW50X2lkX2VkaXQiKS5zdHlsZS5ib3JkZXIgPQogICAgICAgICAgICAgICAgIjFweCBzb2xpZCByZWQiOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSkKICAgICAgICAuY2F0Y2goKGUpID0+IHsKICAgICAgICAgIGlmICgKICAgICAgICAgICAgZS5yZXNwb25zZS5zdGF0dXMgPT09IDQxMCB8fAogICAgICAgICAgICBlLnJlc3BvbnNlLnN0YXR1cyA9PT0gNDQwIHx8CiAgICAgICAgICAgIGUucmVzcG9uc2Uuc3RhdHVzID09PSA0MDkKICAgICAgICAgICkgewogICAgICAgICAgICB0aGlzLiRyb290LiRlbWl0KCJTZXNzaW9uX0V4cGlyZWQiLCBlLnJlc3BvbnNlLmRhdGEpOwogICAgICAgICAgfQogICAgICAgIH0pOwogICAgfSwKICAgIGVkaXRfaW50ZW50X2RldGFpbHMoKSB7CiAgICAgIGlmICghdGhpcy5pc0VkaXRJbnRlbnQpIHsKICAgICAgICB0aGlzLmlzRWRpdEludGVudCA9IHRydWU7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgdGhpcy5pc0VkaXRJbnRlbnQgPSBmYWxzZTsKICAgICAgfQogICAgICByZXR1cm47CiAgICB9LAogICAgZGVsZXRlX3NlbGVjdGVkKCkgewogICAgICBpZiAodGhpcy5jaGVja2VkX2xpc3QubGVuZ3RoID09IDApIHsKICAgICAgICBTd2FsKHsKICAgICAgICAgIHR5cGU6ICJ3YXJuaW5nIiwKICAgICAgICAgIHRleHQ6ICJObyBPYmplY3RpdmVzIFNlbGVjdGVkICEiLAogICAgICAgICAgdGltZXI6IDIwMDAsCiAgICAgICAgfSk7CiAgICAgIH0gZWxzZSBpZiAodGhpcy5jaGVja2VkX2xpc3QubGVuZ3RoID4gMCkgewogICAgICAgIHZhciBuZXdfaW50ZW50X2xpc3QgPSBbXTsKICAgICAgICBmb3IgKHZhciBpIGluIHRoaXMuY2hlY2tlZF9saXN0KSB7CiAgICAgICAgICBuZXdfaW50ZW50X2xpc3QucHVzaCh0aGlzLmNoZWNrZWRfbGlzdFtpXSk7CiAgICAgICAgfQogICAgICAgIFN3YWwuZmlyZSh7CiAgICAgICAgICB0aXRsZTogIkFyZSB5b3Ugc3VyZT8iLAogICAgICAgICAgdGV4dDogIllvdSB3b24ndCBiZSBhYmxlIHRvIHJldmVydCB0aGlzISIsCiAgICAgICAgICB0eXBlOiAid2FybmluZyIsCiAgICAgICAgICBzaG93Q2FuY2VsQnV0dG9uOiB0cnVlLAogICAgICAgICAgY29uZmlybUJ1dHRvbkNvbG9yOiAiIzMwODVkNiIsCiAgICAgICAgICBjYW5jZWxCdXR0b25Db2xvcjogIiNkMzMiLAogICAgICAgICAgY29uZmlybUJ1dHRvblRleHQ6ICJZZXMsIGRlbGV0ZSEhIiwKICAgICAgICB9KS50aGVuKChyZXN1bHQpID0+IHsKICAgICAgICAgIGlmIChyZXN1bHQudmFsdWUpIHsKICAgICAgICAgICAgdGhpcy5zcGlubmVyT24gPSB0cnVlOwogICAgICAgICAgICBheGlvcwogICAgICAgICAgICAgIC5wb3N0KAogICAgICAgICAgICAgICAgYXBpX2NhbGxzLmludGVudF9xdWVzdGlvbl9yZXNwb25zZSgpLAogICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICBpbnRlbnRfbGlzdDogbmV3X2ludGVudF9saXN0LAogICAgICAgICAgICAgICAgICBpc19kZWxldGU6IHRydWUsCiAgICAgICAgICAgICAgICAgIGNvbXBhbnlfbmFtZTogdGhpcy5jb21wYW55bmFtZSwKICAgICAgICAgICAgICAgICAgY29tcGFueV9pZDogdGhpcy5jb21wYW55aWQsCiAgICAgICAgICAgICAgICAgIGVtYWlsOiB0aGlzLiRzZXNzaW9uLmdldCgiVXNlckluZm9ybWF0aW9uIikuZW1haWwsCiAgICAgICAgICAgICAgICAgIGxpY2Vuc2Vfa2V5OiB0aGlzLiRzZXNzaW9uLmdldCgiVXNlckluZm9ybWF0aW9uIikubGljZW5zZV9rZXksCiAgICAgICAgICAgICAgICAgIHRva2VuOiB0aGlzLiRzZXNzaW9uLmdldCgiVXNlckluZm9ybWF0aW9uIikudG9rZW5zLAogICAgICAgICAgICAgICAgICBzdWJzY3JpcHRpb246ICJQbGF0aW51bSIsCiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICBoZWFkZXJzOiB7CiAgICAgICAgICAgICAgICAgICAgQXV0aG9yaXphdGlvbjogYEJlYXJlciAke3RoaXMuJHNlc3Npb24uZ2V0KCJhdCIpfWAsCiAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgKQogICAgICAgICAgICAgIC50aGVuKChyZXNwb25zZSkgPT4gewogICAgICAgICAgICAgICAgdGhpcy5zcGlubmVyT24gPSBmYWxzZTsKICAgICAgICAgICAgICAgIGlmIChyZXNwb25zZS5kYXRhID09ICJJTlRFTlRTIERFTEVURUQiKSB7CiAgICAgICAgICAgICAgICAgIFN3YWwoewogICAgICAgICAgICAgICAgICAgIHR5cGU6ICJzdWNjZXNzIiwKICAgICAgICAgICAgICAgICAgICB0ZXh0OiAiWW91ciBvYmplY3RpdmUocykgaGF2ZSBiZWVuIGRlbGV0ZWQuIiwKICAgICAgICAgICAgICAgICAgICB0aW1lcjogMjAwMCwKICAgICAgICAgICAgICAgICAgfSkudGhlbigocmVzdWx0KSA9PiB7fSk7CiAgICAgICAgICAgICAgICAgIGlmICgKICAgICAgICAgICAgICAgICAgICB0aGlzLmNoZWNrZWRfbGlzdC5sZW5ndGggPT09IHRoaXMuaW50ZW50bGlzdC5sZW5ndGggJiYKICAgICAgICAgICAgICAgICAgICB0aGlzLnBhZ2Vfbm8gPiAxCiAgICAgICAgICAgICAgICAgICkgewogICAgICAgICAgICAgICAgICAgIHRoaXMucGFnZV9ubyA9IHRoaXMucGFnZV9ubyAtIDE7CiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAoCiAgICAgICAgICAgICAgICAgIHJlc3BvbnNlLmRhdGEgPT0KICAgICAgICAgICAgICAgICAgIkludGVudChzKSB1c2VkIGluIGRpYWxvZywgZGVsZXRlZCBzdWNjZXNzZnVsbHkuIElOVEVOVFMgREVMRVRFRCIKICAgICAgICAgICAgICAgICkgewogICAgICAgICAgICAgICAgICBTd2FsKHsKICAgICAgICAgICAgICAgICAgICB0eXBlOiAiaW5mbyIsCiAgICAgICAgICAgICAgICAgICAgdGV4dDogIk9iamVjdGl2ZSBoYXMgYmVlbiBkZWxldGVkLCB0aGF0IGlzIHVzZWQgaW4gZGlhbG9nIG5vZGUocykuIFBsZWFzZSBtb2RpZnkgdGhpcyBpbiBkaWFsb2cgbm9kZShzKSBhbHNvIiwKICAgICAgICAgICAgICAgICAgICB0aW1lcjogODAwMCwKICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICAgIGlmICgKICAgICAgICAgICAgICAgICAgICB0aGlzLmNoZWNrZWRfbGlzdC5sZW5ndGggPT09IHRoaXMuaW50ZW50bGlzdC5sZW5ndGggJiYKICAgICAgICAgICAgICAgICAgICB0aGlzLnBhZ2Vfbm8gPiAxCiAgICAgICAgICAgICAgICAgICkgewogICAgICAgICAgICAgICAgICAgIHRoaXMucGFnZV9ubyA9IHRoaXMucGFnZV9ubyAtIDE7CiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAocmVzcG9uc2UuZGF0YSA9PSAiTm90aGluZyB0byBkZWxldGUhIikgewogICAgICAgICAgICAgICAgICBTd2FsKHsKICAgICAgICAgICAgICAgICAgICB0eXBlOiAid2FybmluZyIsCiAgICAgICAgICAgICAgICAgICAgdGV4dDogIllvdSBoYXZlIG5vdCBzZWxlY3RlZCBhbnkgb2JqZWN0aXZlIHRvIGJlIGRlbGV0ZWQuIiwKICAgICAgICAgICAgICAgICAgICB0aW1lcjogMjUwMCwKICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICB9IGVsc2UgaWYgKAogICAgICAgICAgICAgICAgICByZXNwb25zZS5kYXRhID09CiAgICAgICAgICAgICAgICAgICJUcmFpbmVkIGludGVudCBoYXMgYmVlbiBkZWxldGVkLiBQbGVhc2UgVHJhaW4gdGhlIE1vZGVsIEFnYWluIHRvIFNlZSBSZWZsZWN0ZWQgQ2hhbmdlcyIKICAgICAgICAgICAgICAgICkgewogICAgICAgICAgICAgICAgICBTd2FsKHsKICAgICAgICAgICAgICAgICAgICB0eXBlOiAiaW5mbyIsCiAgICAgICAgICAgICAgICAgICAgdGV4dDogIlRyYWluZWQgb2JqZWN0aXZlIGhhcyBiZWVuIGRlbGV0ZWQuIFBsZWFzZSBUcmFpbiB0aGUgTW9kZWwgQWdhaW4gdG8gU2VlIFJlZmxlY3RlZCBDaGFuZ2VzIiwKICAgICAgICAgICAgICAgICAgICB0aW1lcjogMzAwMCwKICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICAgIGlmICgKICAgICAgICAgICAgICAgICAgICB0aGlzLmNoZWNrZWRfbGlzdC5sZW5ndGggPT09IHRoaXMuaW50ZW50bGlzdC5sZW5ndGggJiYKICAgICAgICAgICAgICAgICAgICB0aGlzLnBhZ2Vfbm8gPiAxCiAgICAgICAgICAgICAgICAgICkgewogICAgICAgICAgICAgICAgICAgIHRoaXMucGFnZV9ubyA9IHRoaXMucGFnZV9ubyAtIDE7CiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0gZWxzZSBpZiAoCiAgICAgICAgICAgICAgICAgIHJlc3BvbnNlLmRhdGEgPT0KICAgICAgICAgICAgICAgICAgIkludGVudChzKSB1c2VkIGluIGRpYWxvZywgZGVsZXRlZCBzdWNjZXNzZnVsbHkuIFRyYWluZWQgaW50ZW50IGhhcyBiZWVuIGRlbGV0ZWQuIFBsZWFzZSBUcmFpbiB0aGUgTW9kZWwgQWdhaW4gdG8gU2VlIFJlZmxlY3RlZCBDaGFuZ2VzIgogICAgICAgICAgICAgICAgKSB7CiAgICAgICAgICAgICAgICAgIFN3YWwoewogICAgICAgICAgICAgICAgICAgIHR5cGU6ICJpbmZvIiwKICAgICAgICAgICAgICAgICAgICB0ZXh0OiAiVHJhaW5lZCBvYmplY3RpdmUgaGFzIGJlZW4gZGVsZXRlZC4gUGxlYXNlIFRyYWluIHRoZSBNb2RlbCBBZ2FpbiB0byBTZWUgUmVmbGVjdGVkIENoYW5nZXMgYW5kIHRoaXMgb2JqZWN0aXZlIGlzIHVzZWQgaW4gZGlhbG9nIG5vZGUocykgYWxzby4gUGxlYXNlIG1vZGlmeSB0aGlzIGluIGRpYWxvZyBub2RlKHMpIiwKICAgICAgICAgICAgICAgICAgICB0aW1lcjogMTAwMDAsCiAgICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgICBpZiAoCiAgICAgICAgICAgICAgICAgICAgdGhpcy5jaGVja2VkX2xpc3QubGVuZ3RoID09PSB0aGlzLmludGVudGxpc3QubGVuZ3RoICYmCiAgICAgICAgICAgICAgICAgICAgdGhpcy5wYWdlX25vID4gMQogICAgICAgICAgICAgICAgICApIHsKICAgICAgICAgICAgICAgICAgICB0aGlzLnBhZ2Vfbm8gPSB0aGlzLnBhZ2Vfbm8gLSAxOwogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICBTd2FsKHsKICAgICAgICAgICAgICAgICAgICB0eXBlOiAiZXJyb3IiLAogICAgICAgICAgICAgICAgICAgIHRleHQ6ICJJbnRlcm5hbCBTZXJ2ZXIgRXJyb3IiLAogICAgICAgICAgICAgICAgICAgIHRpbWVyOiAyMDAwLAogICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgICAgLy8gdGhpcy5sb2FkX2ludGVudCgpOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgdGhpcy5jaGVja2VkX2xpc3QgPSBbXTsKICAgICAgICAgICAgICAgICQoImlucHV0OmNoZWNrYm94IikucHJvcCgiY2hlY2tlZCIsIGZhbHNlKTsKICAgICAgICAgICAgICAgIHRoaXMubG9hZF9pbnRlbnQoKTsKICAgICAgICAgICAgICB9KQogICAgICAgICAgICAgIC5jYXRjaCgoZSkgPT4gewogICAgICAgICAgICAgICAgdGhpcy5zcGlubmVyT24gPSBmYWxzZTsKICAgICAgICAgICAgICAgIGlmICgKICAgICAgICAgICAgICAgICAgZS5yZXNwb25zZS5zdGF0dXMgPT09IDQxMCB8fAogICAgICAgICAgICAgICAgICBlLnJlc3BvbnNlLnN0YXR1cyA9PT0gNDQwIHx8CiAgICAgICAgICAgICAgICAgIGUucmVzcG9uc2Uuc3RhdHVzID09PSA0MDkKICAgICAgICAgICAgICAgICkgewogICAgICAgICAgICAgICAgICB0aGlzLiRyb290LiRlbWl0KCJTZXNzaW9uX0V4cGlyZWQiLCBlLnJlc3BvbnNlLmRhdGEpOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgdGhpcy5sb2FkX2ludGVudCgpOwogICAgICAgICAgICAgIH0pOwogICAgICAgICAgfQogICAgICAgIH0pOwogICAgICB9CiAgICB9LAogICAgZWRpdF9pbnRlbnQoKSB7CiAgICAgIGlmICh0aGlzLm9sZF9pbnRlbnRfbmFtZSA9PSB0aGlzLmN1cnJlbnRfc2VsZWN0ZWRfaW50ZW50KSB7CiAgICAgICAgdmFyIGludGVudF90b19zZW5kID0gbnVsbDsKICAgICAgfSBlbHNlIHsKICAgICAgICB2YXIgaW50ZW50X3RvX3NlbmQgPSB0aGlzLm9sZF9pbnRlbnRfbmFtZTsKICAgICAgfQogICAgICBpZiAodGhpcy5pbnRlbnRfYWxyZWFkeV9leGlzdHNfZWRpdCkgewogICAgICAgIHRvYXN0ci5lcnJvcigiQW4gb2JqZWN0aXZlIHdpdGggdGhpcyBuYW1lIGFscmVhZHkgZXhpc3RzLiIpOwogICAgICAgIHdpbmRvdy5zY3JvbGxUbygwLCAwKTsKICAgICAgICByZXR1cm47CiAgICAgIH0KICAgICAgaWYgKHRoaXMuY3VycmVudF9zZWxlY3RlZF9pbnRlbnQgPT0gIiIpIHsKICAgICAgICBTd2FsKHsKICAgICAgICAgIHRleHQ6ICJQbGVhc2UgZW50ZXIgYW4gb2JqZWN0aXZlIG5hbWUiLAogICAgICAgICAgdG9hc3Q6IHRydWUsCiAgICAgICAgICBwb3NpdGlvbjogInRvcC1lbmQiLAogICAgICAgICAgdHlwZTogIndhcm5pbmciLAogICAgICAgICAgc2hvd0NvbmZpcm1CdXR0b246IGZhbHNlLAogICAgICAgICAgdGltZXI6IDI1MDAsCiAgICAgICAgfSk7CiAgICAgICAgcmV0dXJuOwogICAgICB9CiAgICAgIGlmICh0aGlzLnNlbGVjdGVkX2ludGVudF9xdWVzdGlvbnMubGVuZ3RoID4gMCkgewogICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5zZWxlY3RlZF9pbnRlbnRfcXVlc3Rpb25zLmxlbmd0aDsgaSsrKSB7CiAgICAgICAgICBpZiAoCiAgICAgICAgICAgIHRoaXMuc2VsZWN0ZWRfaW50ZW50X3F1ZXN0aW9uc1tpXSA9PT0gIiIgfHwKICAgICAgICAgICAgdGhpcy5zZWxlY3RlZF9pbnRlbnRfcXVlc3Rpb25zW2ldID09PSBudWxsCiAgICAgICAgICApIHsKICAgICAgICAgICAgLy8gdG9hc3RyLmVycm9yKCJRdWVzdGlvbnMgY2Fubm90IGJlIGJsYW5rIik7CiAgICAgICAgICAgIFN3YWwoewogICAgICAgICAgICAgIHRleHQ6ICJRdWVzdGlvbnMgY2Fubm90IGJlIGJsYW5rIiwKICAgICAgICAgICAgICB0b2FzdDogdHJ1ZSwKICAgICAgICAgICAgICBwb3NpdGlvbjogInRvcC1lbmQiLAogICAgICAgICAgICAgIHR5cGU6ICJ3YXJuaW5nIiwKICAgICAgICAgICAgICBzaG93Q29uZmlybUJ1dHRvbjogZmFsc2UsCiAgICAgICAgICAgICAgdGltZXI6IDI1MDAsCiAgICAgICAgICAgIH0pOwogICAgICAgICAgICByZXR1cm47CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9CiAgICAgIHRoaXMuc3Bpbm5lck9uID0gdHJ1ZTsKICAgICAgYXhpb3MKICAgICAgICAucG9zdCgKICAgICAgICAgIGFwaV9jYWxscy5mb3JtX2F1dG9tYXRpb25fc2F2ZV9pbnRlbnRfZXhhbXBsZSgpLAogICAgICAgICAgewogICAgICAgICAgICBjb21wYW55X25hbWU6IHRoaXMuY29tcGFueW5hbWUsCiAgICAgICAgICAgIGNvbXBhbnlfaWQ6IHRoaXMuY29tcGFueWlkLAogICAgICAgICAgICBlbWFpbDogdGhpcy4kc2Vzc2lvbi5nZXQoIlVzZXJJbmZvcm1hdGlvbiIpLmVtYWlsLAogICAgICAgICAgICBsaWNlbnNlX2tleTogdGhpcy4kc2Vzc2lvbi5nZXQoIlVzZXJJbmZvcm1hdGlvbiIpLmxpY2Vuc2Vfa2V5LAogICAgICAgICAgICB0b2tlbjogdGhpcy4kc2Vzc2lvbi5nZXQoIlVzZXJJbmZvcm1hdGlvbiIpLnRva2VucywKICAgICAgICAgICAgZWRpdF9pbnRlbnQ6IHRydWUsCiAgICAgICAgICAgIG9sZF9pbnRlbnRfbmFtZTogaW50ZW50X3RvX3NlbmQsCiAgICAgICAgICAgIG9sZF9xdWVzdGlvbl9saXN0OiB0aGlzLm9sZF9xdWVzdGlvbl9saXN0LAogICAgICAgICAgICBpbnRlbnQ6IHRoaXMuY3VycmVudF9zZWxlY3RlZF9pbnRlbnQsCiAgICAgICAgICAgIGludGVudF9kZXNjcmlwdGlvbjogdGhpcy5zZWxlY3RlZF9pbnRlbnRfZGVzY3JpcHRpb24sCiAgICAgICAgICAgIHF1ZXN0aW9uX2xpc3Q6IHRoaXMuc2VsZWN0ZWRfaW50ZW50X3F1ZXN0aW9ucywKICAgICAgICAgIH0sCiAgICAgICAgICB7CiAgICAgICAgICAgIGhlYWRlcnM6IHsKICAgICAgICAgICAgICBBdXRob3JpemF0aW9uOiBgQmVhcmVyICR7dGhpcy4kc2Vzc2lvbi5nZXQoImF0Iil9YCwKICAgICAgICAgICAgfSwKICAgICAgICAgIH0KICAgICAgICApCiAgICAgICAgLnRoZW4oKHJlc3BvbnNlKSA9PiB7CiAgICAgICAgICB0aGlzLnNwaW5uZXJPbiA9IGZhbHNlOwogICAgICAgICAgaWYgKHJlc3BvbnNlLmRhdGEuTVNHID09ICJJbnRlbnQgUXVlc3Rpb24gRWRpdGVkIFN1Y2Nlc3NmdWxseSIpIHsKICAgICAgICAgICAgU3dhbCh7CiAgICAgICAgICAgICAgdGV4dDogIkludGVudCBlZGl0ZWQgc3VjY2Vzc2Z1bGx5IiwKICAgICAgICAgICAgICB0eXBlOiAic3VjY2VzcyIsCiAgICAgICAgICAgICAgdGltZXI6IDM1MDAsCiAgICAgICAgICAgICAgdGl0bGU6ICJTdWNjZXNzIiwKICAgICAgICAgICAgICB0b2FzdDogdHJ1ZSwKICAgICAgICAgICAgICBwb3NpdGlvbjogInRvcC1yaWdodCIsCiAgICAgICAgICAgIH0pOwogICAgICAgICAgICBpZiAodGhpcy5pc19zZWFyY2hfYWN0aXZlID09PSB0cnVlKSB7CiAgICAgICAgICAgICAgdGhpcy5zZWFyY2hfaW50ZW50KHRoaXMuY3VycmVudF9zZWxlY3RlZF9pbnRlbnRfaW5kZXgpOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgIHRoaXMubG9hZF9pbnRlbnQodGhpcy5jdXJyZW50X3NlbGVjdGVkX2ludGVudF9pbmRleCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0gZWxzZSBpZiAoCiAgICAgICAgICAgIHJlc3BvbnNlLmRhdGEuTXNnID09ICJVc2VkIEludGVudCBOYW1lIEVkaXRlZCBTdWNjZXNzZnVsbHkiCiAgICAgICAgICApIHsKICAgICAgICAgICAgU3dhbCh7CiAgICAgICAgICAgICAgdHlwZTogImluZm8iLAogICAgICAgICAgICAgIHRleHQ6ICJJbnRlbnQgaGFzIGJlZW4gZWRpdGVkLCB0aGF0IGlzIHVzZWQgaW4gZGlhbG9nIG5vZGUocykuIFBsZWFzZSBtb2RpZnkgdGhpcyBpbiBkaWFsb2cgbm9kZShzKSBhbHNvIiwKICAgICAgICAgICAgICBhbGxvd091dHNpZGVDbGljazogZmFsc2UsCiAgICAgICAgICAgICAgYWxsb3dFc2NhcGVLZXk6IGZhbHNlLAogICAgICAgICAgICAgIHRpbWVyOiA3NTAwLAogICAgICAgICAgICB9KS50aGVuKChyZXN1bHQpID0+IHsKICAgICAgICAgICAgICBpZiAodGhpcy5pc19zZWFyY2hfYWN0aXZlID09PSB0cnVlKSB7CiAgICAgICAgICAgICAgICB0aGlzLnNlYXJjaF9pbnRlbnQodGhpcy5jdXJyZW50X3NlbGVjdGVkX2ludGVudF9pbmRleCk7CiAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIHRoaXMubG9hZF9pbnRlbnQodGhpcy5jdXJyZW50X3NlbGVjdGVkX2ludGVudF9pbmRleCk7CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9KTsKICAgICAgICAgIH0gZWxzZSBpZiAoCiAgICAgICAgICAgIHJlc3BvbnNlLmRhdGEuTVNHID09ICJJbnRlbnQgUXVlc3Rpb24gTm90IEVkaXRlZCBTdWNjZXNzZnVsbHkiCiAgICAgICAgICApIHsKICAgICAgICAgICAgU3dhbCh7CiAgICAgICAgICAgICAgdHlwZTogImVycm9yIiwKICAgICAgICAgICAgICB0ZXh0OiAiVGhlcmUgd2FzIGFuIGludGVybmFsIHNlcnZlciBlcnJvci4gUGxlYXNlIHRyeSBhZ2Fpbi4iLAogICAgICAgICAgICAgIHRpbWVyOiAyNTAwLAogICAgICAgICAgICB9KTsKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIFN3YWwoewogICAgICAgICAgICAgIHR5cGU6ICJlcnJvciIsCiAgICAgICAgICAgICAgdGV4dDogIlRoZXJlIHdhcyBhbiBpbnRlcm5hbCBzZXJ2ZXIgZXJyb3IuIFBsZWFzZSB0cnkgYWdhaW4uIiwKICAgICAgICAgICAgICB0aW1lcjogMjUwMCwKICAgICAgICAgICAgfSk7CiAgICAgICAgICB9CiAgICAgICAgfSkKICAgICAgICAuY2F0Y2goKGUpID0+IHsKICAgICAgICAgIHRoaXMuc3Bpbm5lck9uID0gZmFsc2U7CiAgICAgICAgICBpZiAoCiAgICAgICAgICAgIGUucmVzcG9uc2Uuc3RhdHVzID09PSA0MTAgfHwKICAgICAgICAgICAgZS5yZXNwb25zZS5zdGF0dXMgPT09IDQ0MCB8fAogICAgICAgICAgICBlLnJlc3BvbnNlLnN0YXR1cyA9PT0gNDA5CiAgICAgICAgICApIHsKICAgICAgICAgICAgdGhpcy4kcm9vdC4kZW1pdCgiU2Vzc2lvbl9FeHBpcmVkIiwgZS5yZXNwb25zZS5kYXRhKTsKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIFN3YWwoewogICAgICAgICAgICAgIHR5cGU6ICJlcnJvciIsCiAgICAgICAgICAgICAgdGV4dDogIlRoZXJlIHdhcyBhbiBpbnRlcm5hbCBzZXJ2ZXIgZXJyb3IuIFBsZWFzZSB0cnkgYWdhaW4uIiwKICAgICAgICAgICAgICB0aW1lcjogMjUwMCwKICAgICAgICAgICAgfSk7CiAgICAgICAgICB9CiAgICAgICAgfSk7CiAgICB9LAogICAgc2hvd19tb2RlbF9wcm9ncmVzcyhpbmRleCl7CiAgICAgIGlmKHRoaXMuaW50ZW50X2NvcmVfbW9kZWxfaW5wcm9ncmVzcyA9PSB0cnVlKXsKICAgICAgICAgaWYgKGluZGV4ID09ICdzdHlsZScpewogICAgICAgICAgICByZXR1cm4gImN1cnNvcjogbm90LWFsbG93ZWQiOwogICAgICAgICAgfQogICAgICAgICAgZWxzZSBpZihpbmRleCA9PSAndGl0bGUnKXsKICAgICAgICAgICAgcmV0dXJuICJUcmFpbmluZyBpbiBQcm9ncmVzcyAoVGhpcyBwcm9jZXNzIG1pZ2h0IHRha2UgYXJvdW5kIDMwIG1pbnMgdG8gZmluaXNoKSAiOwogICAgICAgICAgfQogICAgICB9CiAgICAgIGVsc2V7CiAgICAgICAgcmV0dXJuIG51bGw7CiAgICAgIH0KICAgIH0sCiAgICBjaGVja19pbnRlbnRfY29yZV9tb2RlbF9zdGF0dXMoKXsKICAgICAgdGhpcy5tb2RlbF9zdGF0dXMgPSB0aGlzLiRzZXNzaW9uLmdldCgiTW9kZWxTdGF0dXMiKTsKICAgICAgaWYgKHRoaXMubW9kZWxfc3RhdHVzID09ICJObyBGYWlsdXJlIil7CiAgICAgICAgdGhpcy5pbnRlbnRfY29yZV9tb2RlbF9pbnByb2dyZXNzID0gZmFsc2U7CiAgICAgIH0KICAgICAgZWxzZSBpZihCb29sZWFuKHRoaXMubW9kZWxfc3RhdHVzLmludGVudF9tb2RlbCkgPT09IHRydWUKICAgICAgfHwgQm9vbGVhbih0aGlzLm1vZGVsX3N0YXR1cy5kaWFsb2d1ZV9tb2RlbCkgPT09IHRydWUpCiAgICAgIHsKICAgICAgICBpZih0aGlzLm1vZGVsX3N0YXR1cy5pbnRlbnRfbW9kZWwgPT0gIkluUHJvZ3Jlc3MiIHx8IHRoaXMubW9kZWxfc3RhdHVzLmRpYWxvZ3VlX21vZGVsID09ICJJblByb2dyZXNzIil7CiAgICAgICAgICB0aGlzLmludGVudF9jb3JlX21vZGVsX2lucHJvZ3Jlc3MgPSB0cnVlOwogICAgICB9CiAgICAgIGVsc2V7CiAgICAgICAgdGhpcy5pbnRlbnRfY29yZV9tb2RlbF9pbnByb2dyZXNzID0gZmFsc2U7CiAgICAgIH0KICAgICAgfQogICAgICBlbHNlewogICAgICAgIHRoaXMuaW50ZW50X2NvcmVfbW9kZWxfaW5wcm9ncmVzcyA9IGZhbHNlOyAKICAgICAgfQogICAgfSwKICAgIHRyYWluX21vZGVsKCkgewogICAgICBTd2FsKHsKICAgICAgICB0aXRsZTogIkFyZSBZb3UgU3VyZT8iLAogICAgICAgIHRleHQ6ICJZb3Ugd2FudCB0byBUcmFpbiBUaGUgTW9kZWw/IiwKICAgICAgICB0eXBlOiAicXVlc3Rpb24iLAogICAgICAgIHNob3dDYW5jZWxCdXR0b246IHRydWUsCiAgICAgICAgY29uZmlybUJ1dHRvbkNvbG9yOiAiIzMwODVkNiIsCiAgICAgICAgY2FuY2VsQnV0dG9uQ29sb3I6ICIjZDMzIiwKICAgICAgICBjb25maXJtQnV0dG9uVGV4dDogIlllcywgQ29uZmlybSEiLAogICAgICAgIGFsbG93T3V0c2lkZUNsaWNrOiBmYWxzZSwKICAgICAgICBhbGxvd0VzY2FwZUtleTogZmFsc2UsCiAgICAgIH0pLnRoZW4oKHJlc3VsdCkgPT4gewogICAgICAgIGlmIChyZXN1bHQudmFsdWUpIHsKICAgICAgICAgIHRoaXMuc3Bpbm5lck9uID0gdHJ1ZTsKICAgICAgICAgIGF4aW9zCiAgICAgICAgICAgIC5wb3N0KAogICAgICAgICAgICAgIGFwaV9jYWxscy50cmFpbl9tb2RlbCgpLAogICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGVtYWlsOiB0aGlzLiRzZXNzaW9uLmdldCgiVXNlckluZm9ybWF0aW9uIikuZW1haWwsCiAgICAgICAgICAgICAgICBsaWNlbnNlX2tleTogdGhpcy4kc2Vzc2lvbi5nZXQoIlVzZXJJbmZvcm1hdGlvbiIpLmxpY2Vuc2Vfa2V5LAogICAgICAgICAgICAgICAgdG9rZW46IHRoaXMuJHNlc3Npb24uZ2V0KCJVc2VySW5mb3JtYXRpb24iKS50b2tlbnMsCiAgICAgICAgICAgICAgICBzdWJzY3JpcHRpb246IHRoaXMuJHNlc3Npb24uZ2V0KCJVc2VySW5mb3JtYXRpb24iKS5zdWJzY3JpcHRpb24sCiAgICAgICAgICAgICAgICBjb21wYW55X25hbWU6IHRoaXMuY29tcGFueW5hbWUsCiAgICAgICAgICAgICAgICBjb21wYW55X2lkOiB0aGlzLmNvbXBhbnlpZCwKICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgIGhlYWRlcnM6IHsKICAgICAgICAgICAgICAgICAgQXV0aG9yaXphdGlvbjogYEJlYXJlciAke3RoaXMuJHNlc3Npb24uZ2V0KCJhdCIpfWAsCiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgIH0KICAgICAgICAgICAgKQogICAgICAgICAgICAudGhlbigocmVzcG9uc2UpID0+IHsKICAgICAgICAgICAgICB0aGlzLnNwaW5uZXJPbiA9IGZhbHNlOwogICAgICAgICAgICAgIHRoaXMud2FudF9zdGF0dXMgPSB0cnVlOwogICAgICAgICAgICAgIHRoaXMuJHJvb3QuJGVtaXQoIndhbnRfbW9kZWxfc3RhdHVzIix0aGlzLndhbnRfc3RhdHVzKTsKICAgICAgICAgICAgICB0aGlzLmNoZWNrX2ludGVudF9jb3JlX21vZGVsX3N0YXR1cygpOwogICAgICAgICAgICAgIGlmIChyZXNwb25zZS5kYXRhLk1TR19DT0RFID09PSA0MDQ2KSB7CiAgICAgICAgICAgICAgICB0b2FzdHIuc3VjY2VzcyhyZXNwb25zZS5kYXRhLk1TRyk7CiAgICAgICAgICAgICAgfSBlbHNlIGlmIChyZXNwb25zZS5kYXRhLk1TR19DT0RFID09PSAxMDM0KSB7CiAgICAgICAgICAgICAgICB0b2FzdHIuZXJyb3IocmVzcG9uc2UuZGF0YS5NU0cpOwogICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICB0b2FzdHIuZXJyb3IoIkludGVybmFsIFNlcnZlciBFcnJvciIpOwogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSkKICAgICAgICAgICAgLmNhdGNoKChlKSA9PiB7CiAgICAgICAgICAgICAgdGhpcy5zcGlubmVyT24gPSBmYWxzZTsKICAgICAgICAgICAgICBpZiAoCiAgICAgICAgICAgICAgICBlLnJlc3BvbnNlLnN0YXR1cyA9PT0gNDEwIHx8CiAgICAgICAgICAgICAgICBlLnJlc3BvbnNlLnN0YXR1cyA9PT0gNDQwIHx8CiAgICAgICAgICAgICAgICBlLnJlc3BvbnNlLnN0YXR1cyA9PT0gNDA5CiAgICAgICAgICAgICAgKSB7CiAgICAgICAgICAgICAgICB0aGlzLiRyb290LiRlbWl0KCJTZXNzaW9uX0V4cGlyZWQiLCBlLnJlc3BvbnNlLmRhdGEpOwogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSk7CiAgICAgICAgfQogICAgICB9KTsKICAgIH0sCiAgICBzZWxlY3RlZF9pbnRlbnRzKEludGVudCkgewogICAgICBpZiAoSW50ZW50ID09ICJhbGwiKSB7CiAgICAgICAgaWYgKGV2ZW50LnRhcmdldC5jaGVja2VkKSB7CiAgICAgICAgICB0aGlzLmNoZWNrZWRfbGlzdCA9IFtdOwogICAgICAgICAgdGhpcy5jaGVja2VkX2xpc3QgPSB0aGlzLmludGVudGxpc3QubWFwKChpdGVtKSA9PiB7CiAgICAgICAgICAgIHJldHVybiBpdGVtLkludGVudDsKICAgICAgICAgIH0pOwogICAgICAgICAgJCgiaW5wdXQ6Y2hlY2tib3giKS5wcm9wKCJjaGVja2VkIiwgZmFsc2UpOwogICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLmNoZWNrZWRfbGlzdC5sZW5ndGg7IGkrKykgewogICAgICAgICAgICAkKCIjaW50ZW50X2NoZWNrYm94XyIgKyB0aGlzLmNoZWNrZWRfbGlzdFtpXSkucHJvcCgiY2hlY2tlZCIsIHRydWUpOwogICAgICAgICAgICAkKCIjc2VsZWN0YWxsIikucHJvcCgiY2hlY2tlZCIsIHRydWUpOwogICAgICAgICAgfQogICAgICAgIH0gZWxzZSBpZiAoIWV2ZW50LnRhcmdldC5jaGVja2VkKSB7CiAgICAgICAgICB0aGlzLmNoZWNrZWRfbGlzdCA9IFtdOwogICAgICAgIH0KICAgICAgfSBlbHNlIHsKICAgICAgICBpZiAoZXZlbnQudGFyZ2V0LmNoZWNrZWQgPT0gdHJ1ZSkgewogICAgICAgICAgbGV0IHZhbF9pbmRleCA9IHRoaXMuY2hlY2tlZF9saXN0LmZpbHRlcigoaW50ZW50cykgPT4gewogICAgICAgICAgICByZXR1cm4gaW50ZW50cy5JbnRlbnQgPT0gSW50ZW50OwogICAgICAgICAgfSk7CiAgICAgICAgICBpZiAodmFsX2luZGV4Lmxlbmd0aCA9PSAwKSB7CiAgICAgICAgICAgIHRoaXMuY2hlY2tlZF9saXN0LnB1c2goSW50ZW50KTsKICAgICAgICAgIH0KICAgICAgICB9IGVsc2UgaWYgKGV2ZW50LnRhcmdldC5jaGVja2VkID09IGZhbHNlKSB7CiAgICAgICAgICB2YXIgc2VsZWN0YWxsID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcigiI3NlbGVjdGFsbCIpOwogICAgICAgICAgaWYgKHNlbGVjdGFsbC5jaGVja2VkID09IHRydWUpIHsKICAgICAgICAgICAgc2VsZWN0YWxsLmNoZWNrZWQgPSBmYWxzZTsKICAgICAgICAgIH0KICAgICAgICAgIGxldCB0ZW1wID0gdGhpcy5jaGVja2VkX2xpc3QuZmlsdGVyKChpbnRlbnRzKSA9PiB7CiAgICAgICAgICAgIHJldHVybiBpbnRlbnRzICE9IEludGVudDsKICAgICAgICAgIH0pOwogICAgICAgICAgdGhpcy5jaGVja2VkX2xpc3QgPSB0ZW1wOwogICAgICAgIH0KICAgICAgfQogICAgfSwKICAgIGludGVudF9uYW1lX2NoZWNrX3NwZWNpYWxfY2hhcmFjdGVycyhlKSB7CiAgICAgIGlmICgvXlteYS16QS1aMC05XyBdKiQvLnRlc3QoZS5rZXkpKSB7CiAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpOwogICAgICB9CiAgICB9LAogICAgbG9hZF9pbnRlbnQoY3VycmVudF9zZWxlY3RlZF9pbnRlbnRfaW5kZXgpIHsKICAgICAgLy8gdGhpcy5pbnRlbnRsaXN0ID0gW107CiAgICAgIHRoaXMuaXNfc2VhcmNoX2FjdGl2ZSA9IGZhbHNlOwogICAgICB0aGlzLnNlYXJjaF9uYW1lID0gIiI7CiAgICAgICQoImlucHV0OmNoZWNrYm94IikucHJvcCgiY2hlY2tlZCIsIGZhbHNlKTsKICAgICAgdGhpcy5jaGVja2VkX2xpc3QgPSBbXTsKICAgICAgdGhpcy5zcGlubmVyT24gPSB0cnVlOwogICAgICBheGlvcwogICAgICAgIC5wb3N0KAogICAgICAgICAgYXBpX2NhbGxzLmZvcm1fYXV0b21hdGlvbl9zYXZlX2ludGVudF9leGFtcGxlKCksCiAgICAgICAgICB7CiAgICAgICAgICAgIGlzX2dldDogdHJ1ZSwKICAgICAgICAgICAgY29tcGFueV9uYW1lOiB0aGlzLmNvbXBhbnluYW1lLAogICAgICAgICAgICBjb21wYW55X2lkOiB0aGlzLmNvbXBhbnlpZCwKICAgICAgICAgICAgZW1haWw6IHRoaXMuJHNlc3Npb24uZ2V0KCJVc2VySW5mb3JtYXRpb24iKS5lbWFpbCwKICAgICAgICAgICAgbGljZW5zZV9rZXk6IHRoaXMuJHNlc3Npb24uZ2V0KCJVc2VySW5mb3JtYXRpb24iKS5saWNlbnNlX2tleSwKICAgICAgICAgICAgdG9rZW46IHRoaXMuJHNlc3Npb24uZ2V0KCJVc2VySW5mb3JtYXRpb24iKS50b2tlbnMsCiAgICAgICAgICAgIHBhZ2Vfbm86IHRoaXMucGFnZV9ubywKICAgICAgICAgICAgcGVyX3BhZ2U6IHRoaXMucGVyX3BhZ2UsCiAgICAgICAgICB9LAogICAgICAgICAgewogICAgICAgICAgICBoZWFkZXJzOiB7CiAgICAgICAgICAgICAgQXV0aG9yaXphdGlvbjogYEJlYXJlciAke3RoaXMuJHNlc3Npb24uZ2V0KCJhdCIpfWAsCiAgICAgICAgICAgIH0sCiAgICAgICAgICB9CiAgICAgICAgKQogICAgICAgIC50aGVuKChyZXNwb25zZSkgPT4gewogICAgICAgICAgdGhpcy5zcGlubmVyT24gPSBmYWxzZTsKICAgICAgICAgIGlmIChyZXNwb25zZS5zdGF0dXMgPT0gMjAwKSB7CiAgICAgICAgICAgIHRoaXMubnVtYmVyX29mX3Jvd3MgPSByZXNwb25zZS5kYXRhLnBhZ2Vjb3VudDsKICAgICAgICAgICAgdGhpcy50b3RhbF9wYWdlcyA9IE1hdGguY2VpbCh0aGlzLm51bWJlcl9vZl9yb3dzIC8gdGhpcy5wZXJfcGFnZSk7CiAgICAgICAgICAgIHRoaXMuaW50ZW50bGlzdCA9IHJlc3BvbnNlLmRhdGEuZGF0YTsKICAgICAgICAgICAgaWYgKHRoaXMuaW50ZW50bGlzdC5sZW5ndGggPiAwKSB7CiAgICAgICAgICAgICAgaWYgKEJvb2xlYW4oY3VycmVudF9zZWxlY3RlZF9pbnRlbnRfaW5kZXgpKSB7CiAgICAgICAgICAgICAgICB0aGlzLnNob3dfaW50ZW50cyhjdXJyZW50X3NlbGVjdGVkX2ludGVudF9pbmRleCk7CiAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIHRoaXMuc2hvd19pbnRlbnRzKDApOwogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgICAgdGhpcy5zZXRwYWdpbmF0aW9uKHRoaXMucGFnZV9ubyk7CiAgICAgICAgfSkKICAgICAgICAuY2F0Y2goKGUpID0+IHsKICAgICAgICAgIHRoaXMuc3Bpbm5lck9uID0gZmFsc2U7CiAgICAgICAgICBpZiAoCiAgICAgICAgICAgIGUucmVzcG9uc2Uuc3RhdHVzID09PSA0MTAgfHwKICAgICAgICAgICAgZS5yZXNwb25zZS5zdGF0dXMgPT09IDQ0MCB8fAogICAgICAgICAgICBlLnJlc3BvbnNlLnN0YXR1cyA9PT0gNDA5CiAgICAgICAgICApIHsKICAgICAgICAgICAgdGhpcy4kcm9vdC4kZW1pdCgiU2Vzc2lvbl9FeHBpcmVkIiwgZS5yZXNwb25zZS5kYXRhKTsKICAgICAgICAgIH0KICAgICAgICB9KTsKICAgIH0sCiAgICBwYWdlX3JlcXVpcmUocGFnZSkgewogICAgICAkKCJpbnB1dDpjaGVja2JveCIpLnByb3AoImNoZWNrZWQiLCBmYWxzZSk7CiAgICAgIHRoaXMuY2hlY2tlZF9saXN0ID0gW107CiAgICAgIGlmIChwYWdlID09IDAgfHwgcGFnZSA9PSB0aGlzLnRvdGFsX3BhZ2VzICsgMSkgewogICAgICB9IGVsc2UgewogICAgICAgIGlmICh0aGlzLnNlYXJjaF9uYW1lID09ICIiKSB7CiAgICAgICAgICBpZiAocGFnZSA9PSAiLi4ucyIpIHsKICAgICAgICAgICAgdGhpcy5wYWdlX25vID0gTWF0aC5jZWlsKCgxICsgdGhpcy5wYWdlX25vKSAvIDIpOwogICAgICAgICAgfSBlbHNlIGlmIChwYWdlID09ICIuLi5sIikgewogICAgICAgICAgICB0aGlzLnBhZ2Vfbm8gPSBNYXRoLmNlaWwoKHRoaXMudG90YWxfcGFnZXMgKyB0aGlzLnBhZ2Vfbm8pIC8gMik7CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICB0aGlzLnBhZ2Vfbm8gPSBwYWdlOwogICAgICAgICAgfQogICAgICAgICAgJCgiaW5wdXQ6Y2hlY2tib3giKS5wcm9wKCJjaGVja2VkIiwgZmFsc2UpOwogICAgICAgICAgdGhpcy5zcGlubmVyT24gPSB0cnVlOwogICAgICAgICAgYXhpb3MKICAgICAgICAgICAgLnBvc3QoCiAgICAgICAgICAgICAgYXBpX2NhbGxzLmZvcm1fYXV0b21hdGlvbl9zYXZlX2ludGVudF9leGFtcGxlKCksCiAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgaW50ZW50OiB0aGlzLm5ld19pbnRlbnRzLAogICAgICAgICAgICAgICAgY29tcGFueV9uYW1lOiB0aGlzLmNvbXBhbnluYW1lLAogICAgICAgICAgICAgICAgY29tcGFueV9pZDogdGhpcy5jb21wYW55aWQsCiAgICAgICAgICAgICAgICBlbWFpbDogdGhpcy4kc2Vzc2lvbi5nZXQoIlVzZXJJbmZvcm1hdGlvbiIpLmVtYWlsLAogICAgICAgICAgICAgICAgbGljZW5zZV9rZXk6IHRoaXMuJHNlc3Npb24uZ2V0KCJVc2VySW5mb3JtYXRpb24iKS5saWNlbnNlX2tleSwKICAgICAgICAgICAgICAgIHRva2VuOiB0aGlzLiRzZXNzaW9uLmdldCgiVXNlckluZm9ybWF0aW9uIikudG9rZW5zLAogICAgICAgICAgICAgICAgc3Vic2NyaXB0aW9uOiAiUGxhdGludW0iLAogICAgICAgICAgICAgICAgaXNfZ2V0OiB0cnVlLAogICAgICAgICAgICAgICAgcGFnZV9ubzogdGhpcy5wYWdlX25vLAogICAgICAgICAgICAgICAgcGVyX3BhZ2U6IHRoaXMucGVyX3BhZ2UsCiAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICBoZWFkZXJzOiB7CiAgICAgICAgICAgICAgICAgIEF1dGhvcml6YXRpb246IGBCZWFyZXIgJHt0aGlzLiRzZXNzaW9uLmdldCgiYXQiKX1gLAogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICB9CiAgICAgICAgICAgICkKICAgICAgICAgICAgLnRoZW4oKHJlc3BvbnNlKSA9PiB7CiAgICAgICAgICAgICAgdGhpcy5zcGlubmVyT24gPSBmYWxzZTsKICAgICAgICAgICAgICB0aGlzLmludGVudGxpc3QgPSBbXTsKICAgICAgICAgICAgICB0aGlzLmludGVudGxpc3QgPSByZXNwb25zZS5kYXRhLmRhdGE7CiAgICAgICAgICAgICAgaWYgKHRoaXMuaW50ZW50bGlzdC5sZW5ndGggPiAwKSB7CiAgICAgICAgICAgICAgICB0aGlzLnNob3dfaW50ZW50cygwKTsKICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgdGhpcy5zZXRwYWdpbmF0aW9uKHRoaXMucGFnZV9ubyk7CiAgICAgICAgICAgIH0pCiAgICAgICAgICAgIC5jYXRjaCgoZSkgPT4gewogICAgICAgICAgICAgIHRoaXMuc3Bpbm5lck9uID0gZmFsc2U7CiAgICAgICAgICAgICAgaWYgKAogICAgICAgICAgICAgICAgZS5yZXNwb25zZS5zdGF0dXMgPT09IDQxMCB8fAogICAgICAgICAgICAgICAgZS5yZXNwb25zZS5zdGF0dXMgPT09IDQ0MCB8fAogICAgICAgICAgICAgICAgZS5yZXNwb25zZS5zdGF0dXMgPT09IDQwOQogICAgICAgICAgICAgICkgewogICAgICAgICAgICAgICAgdGhpcy4kcm9vdC4kZW1pdCgiU2Vzc2lvbl9FeHBpcmVkIiwgZS5yZXNwb25zZS5kYXRhKTsKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0pOwogICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAkKCJpbnB1dDpjaGVja2JveCIpLnByb3AoImNoZWNrZWQiLCBmYWxzZSk7CiAgICAgICAgICBpZiAodGhpcy5wYWdlbm8gPT0gIi4uLnMiKSB7CiAgICAgICAgICAgIHRoaXMucGFnZV9ubyA9IE1hdGguY2VpbCgoMSArIHRoaXMucGFnZV9ubykgLyAyKTsKICAgICAgICAgIH0gZWxzZSBpZiAodGhpcy5wYWdlbm8gPT0gIi4uLmwiKSB7CiAgICAgICAgICAgIHRoaXMucGFnZV9ubyA9IE1hdGguY2VpbCgodGhpcy50b3RhbF9wYWdlcyArIHRoaXMucGFnZV9ubykgLyAyKTsKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIHRoaXMucGFnZV9ubyA9IHRoaXMucGFnZW5vOwogICAgICAgICAgfQogICAgICAgICAgdGhpcy5zcGlubmVyT24gPSB0cnVlOwogICAgICAgICAgYXhpb3MKICAgICAgICAgICAgLnBvc3QoCiAgICAgICAgICAgICAgYXBpX2NhbGxzLmZvcm1fYXV0b21hdGlvbl9zYXZlX2ludGVudF9leGFtcGxlKCksCiAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgY29tcGFueV9pZDogdGhpcy4kc2Vzc2lvbi5nZXQoIlVzZXJJbmZvcm1hdGlvbiIpLmNvbXBhbnlfaWQsCiAgICAgICAgICAgICAgICBjb21wYW55X25hbWU6IHRoaXMuJHNlc3Npb24uZ2V0KCJVc2VySW5mb3JtYXRpb24iKS5jb21wYW55X25hbWUsCiAgICAgICAgICAgICAgICBsaWNlbnNlX2tleTogdGhpcy4kc2Vzc2lvbi5nZXQoIlVzZXJJbmZvcm1hdGlvbiIpLmxpY2Vuc2Vfa2V5LAogICAgICAgICAgICAgICAgZW1haWw6IHRoaXMuJHNlc3Npb24uZ2V0KCJVc2VySW5mb3JtYXRpb24iKS5lbWFpbCwKICAgICAgICAgICAgICAgIHRva2VuOiB0aGlzLiRzZXNzaW9uLmdldCgiVXNlckluZm9ybWF0aW9uIikudG9rZW5zLAogICAgICAgICAgICAgICAgc3Vic2NyaXB0aW9uOiAiUGxhdGludW0iLAogICAgICAgICAgICAgICAgaXNfc2VhcmNoOiB0cnVlLAogICAgICAgICAgICAgICAgc2VhcmNoX2tleTogdGhpcy5zZWFyY2hfbmFtZSwKICAgICAgICAgICAgICAgIHBlcl9wYWdlOiB0aGlzLnBlcl9wYWdlLAogICAgICAgICAgICAgICAgcGFnZV9ubzogdGhpcy5wYWdlX25vLAogICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgaGVhZGVyczogewogICAgICAgICAgICAgICAgICBBdXRob3JpemF0aW9uOiBgQmVhcmVyICR7dGhpcy4kc2Vzc2lvbi5nZXQoImF0Iil9YCwKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgfQogICAgICAgICAgICApCiAgICAgICAgICAudGhlbigocmVzcG9uc2UpID0+IHsKICAgICAgICAgICAgdGhpcy5zcGlubmVyT24gPSBmYWxzZTsKICAgICAgICAgICAgaWYgKHJlc3BvbnNlLmRhdGEuTVNHID09ICJObyBSZXN1bHRzIEZvdW5kIikgewogICAgICAgICAgICAgIFN3YWwoewogICAgICAgICAgICAgICAgdGV4dDogIk5vIFJlc3VsdHMgRm91bmQiLAogICAgICAgICAgICAgICAgdG9hc3Q6IHRydWUsCiAgICAgICAgICAgICAgICBwb3NpdGlvbjogInRvcC1lbmQiLAogICAgICAgICAgICAgICAgdHlwZTogIndhcm5pbmciLAogICAgICAgICAgICAgICAgc2hvd0NvbmZpcm1CdXR0b246IGZhbHNlLAogICAgICAgICAgICAgICAgdGltZXI6IDIwMDAsCiAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIH0gZWxzZSBpZiAoCiAgICAgICAgICAgICAgcmVzcG9uc2UuZGF0YS5NU0cgIT0gIkludGVybmFsIFNlcnZlciBFcnJvciIgJiYKICAgICAgICAgICAgICByZXNwb25zZS5kYXRhLk1TRyAhPSAiTm8gSW50ZW50cyBGb3VuZCIKICAgICAgICAgICAgKSB7CiAgICAgICAgICAgICAgdGhpcy5pbnRlbnRsaXN0ID0gW107CiAgICAgICAgICAgICAgaWYgKHJlc3BvbnNlLmRhdGEgIT0gInRva2VuIGludmFsaWQiKSB7CiAgICAgICAgICAgICAgICB0aGlzLm51bWJlcl9vZl9yb3dzID0gcmVzcG9uc2UuZGF0YS5wYWdlY291bnQ7CiAgICAgICAgICAgICAgICB0aGlzLnRvdGFsX3BhZ2VzID0gTWF0aC5jZWlsKAogICAgICAgICAgICAgICAgICB0aGlzLm51bWJlcl9vZl9yb3dzIC8gdGhpcy5wZXJfcGFnZQogICAgICAgICAgICAgICAgKTsKICAgICAgICAgICAgICAgIHRoaXMuaW50ZW50bGlzdCA9IHJlc3BvbnNlLmRhdGEuUmVzcG9uc2VMaXN0OwogICAgICAgICAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCB0aGlzLmludGVudGxpc3QubGVuZ3RoOyBpKyspIHsKICAgICAgICAgICAgICAgICAgdGhpcy5pbnRlbnRsaXN0W2ldLkludGVudCA9IHRoaXMuaW50ZW50bGlzdFtpXS5JbnRlbnQ7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBpZiAodGhpcy5pbnRlbnRsaXN0Lmxlbmd0aCA+IDApIHsKICAgICAgICAgICAgICAgICAgdGhpcy5pc19zZWFyY2hfYWN0aXZlID0gdHJ1ZTsKICAgICAgICAgICAgICAgICAgdGhpcy5zaG93X2ludGVudHMoMCk7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB0aGlzLnNldHBhZ2luYXRpb24odGhpcy5wYWdlX25vKTsKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0gZWxzZSBpZiAocmVzcG9uc2UuZGF0YSA9PSAiSW50ZXJuYWwgU2VydmVyIEVycm9yIikgewogICAgICAgICAgICAgIFN3YWwoewogICAgICAgICAgICAgICAgdGV4dDogIkludGVybmFsIFNlcnZlciBFcnJvciIsCiAgICAgICAgICAgICAgICB0b2FzdDogdHJ1ZSwKICAgICAgICAgICAgICAgIHBvc2l0aW9uOiAidG9wLWVuZCIsCiAgICAgICAgICAgICAgICB0eXBlOiAid2FybmluZyIsCiAgICAgICAgICAgICAgICBzaG93Q29uZmlybUJ1dHRvbjogZmFsc2UsCiAgICAgICAgICAgICAgICB0aW1lcjogMjAwMCwKICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICB0aGlzLmxvYWRfaW50ZW50KCk7CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgU3dhbCh7CiAgICAgICAgICAgICAgICB0ZXh0OiAiSW50ZXJuYWwgU2VydmVyIEVycm9yIiwKICAgICAgICAgICAgICAgIHRvYXN0OiB0cnVlLAogICAgICAgICAgICAgICAgcG9zaXRpb246ICJ0b3AtZW5kIiwKICAgICAgICAgICAgICAgIHR5cGU6ICJ3YXJuaW5nIiwKICAgICAgICAgICAgICAgIHNob3dDb25maXJtQnV0dG9uOiBmYWxzZSwKICAgICAgICAgICAgICAgIHRpbWVyOiAyMDAwLAogICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgIHRoaXMubG9hZF9pbnRlbnQoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfSkKICAgICAgICAgIC5jYXRjaCgoZSkgPT4gewogICAgICAgICAgICBpZiAoCiAgICAgICAgICAgICAgZS5yZXNwb25zZS5zdGF0dXMgPT09IDQxMCB8fAogICAgICAgICAgICAgIGUucmVzcG9uc2Uuc3RhdHVzID09PSA0NDAgfHwKICAgICAgICAgICAgICBlLnJlc3BvbnNlLnN0YXR1cyA9PT0gNDA5CiAgICAgICAgICAgICkgewogICAgICAgICAgICAgIHRoaXMuJHJvb3QuJGVtaXQoIlNlc3Npb25fRXhwaXJlZCIsIGUucmVzcG9uc2UuZGF0YSk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0pOwogICAgICAgIH0KICAgICAgfQogICAgfSwKICAgIHNhdmVfaW50ZW50X3VzZXJfZXhhbXBsZSgpIHsKICAgICAgaWYgKHRoaXMuaW50ZW50X2FscmVhZHlfZXhpc3RzKSB7CiAgICAgICAgU3dhbCh7CiAgICAgICAgICB0ZXh0OiAiQW4gT2JqZWN0aXZlIHdpdGggdGhpcyBuYW1lIGFscmVhZHkgZXhpc3RzIiwKICAgICAgICAgIHRvYXN0OiB0cnVlLAogICAgICAgICAgcG9zaXRpb246ICJ0b3AtZW5kIiwKICAgICAgICAgIHR5cGU6ICJ3YXJuaW5nIiwKICAgICAgICAgIHNob3dDb25maXJtQnV0dG9uOiBmYWxzZSwKICAgICAgICAgIHRpbWVyOiA0NTAwLAogICAgICAgIH0pOwogICAgICAgIHJldHVybjsKICAgICAgfQogICAgICBpZiAodGhpcy5uZXdfaW50ZW50cyA9PSAiIikgewogICAgICAgIFN3YWwoewogICAgICAgICAgdGV4dDogIlBsZWFzZSBlbnRlciBhbiBPYmplY3RpdmUgbmFtZSIsCiAgICAgICAgICB0b2FzdDogdHJ1ZSwKICAgICAgICAgIHBvc2l0aW9uOiAidG9wLWVuZCIsCiAgICAgICAgICB0eXBlOiAid2FybmluZyIsCiAgICAgICAgICBzaG93Q29uZmlybUJ1dHRvbjogZmFsc2UsCiAgICAgICAgICB0aW1lcjogMzUwMCwKICAgICAgICB9KTsKICAgICAgICByZXR1cm47CiAgICAgIH0KICAgICAgaWYgKHRoaXMuYWRkX3F1ZXN0aW9uc19saXN0Lmxlbmd0aCA+IDApIHsKICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRoaXMuYWRkX3F1ZXN0aW9uc19saXN0Lmxlbmd0aDsgaSsrKSB7CiAgICAgICAgICBpZiAoCiAgICAgICAgICAgIHRoaXMuYWRkX3F1ZXN0aW9uc19saXN0W2ldID09PSAiIiB8fAogICAgICAgICAgICB0aGlzLmFkZF9xdWVzdGlvbnNfbGlzdFtpXSA9PT0gbnVsbAogICAgICAgICAgKSB7CiAgICAgICAgICAgIFN3YWwoewogICAgICAgICAgICAgIHRleHQ6ICJQbGVhc2UgdHlwZSBhIHVzZXIgZXhhbXBsZSIsCiAgICAgICAgICAgICAgdG9hc3Q6IHRydWUsCiAgICAgICAgICAgICAgcG9zaXRpb246ICJ0b3AtZW5kIiwKICAgICAgICAgICAgICB0eXBlOiAid2FybmluZyIsCiAgICAgICAgICAgICAgc2hvd0NvbmZpcm1CdXR0b246IGZhbHNlLAogICAgICAgICAgICAgIHRpbWVyOiAzNTAwMCwKICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIHJldHVybjsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0KICAgICAgU3dhbCh7CiAgICAgICAgdGV4dDogIlBsZWFzZSB3YWl0IHdoaWxlIHdlIGFyZSBzdWJtaXR0aW5nIHlvdXIgZGV0YWlscy4uLiIsCiAgICAgICAgdHlwZTogImluZm8iLAogICAgICAgIHRvYXN0OiB0cnVlLAogICAgICAgIHNob3dDb25maXJtQnV0dG9uOiBmYWxzZSwKICAgICAgfSk7CiAgICAgIGF4aW9zCiAgICAgICAgLnBvc3QoCiAgICAgICAgICBhcGlfY2FsbHMuZm9ybV9hdXRvbWF0aW9uX3NhdmVfaW50ZW50X2V4YW1wbGUoKSwKICAgICAgICAgIHsKICAgICAgICAgICAgY29tcGFueV9uYW1lOiB0aGlzLmNvbXBhbnluYW1lLAogICAgICAgICAgICBjb21wYW55X2lkOiB0aGlzLmNvbXBhbnlpZCwKICAgICAgICAgICAgZW1haWw6IHRoaXMuJHNlc3Npb24uZ2V0KCJVc2VySW5mb3JtYXRpb24iKS5lbWFpbCwKICAgICAgICAgICAgbGljZW5zZV9rZXk6IHRoaXMuJHNlc3Npb24uZ2V0KCJVc2VySW5mb3JtYXRpb24iKS5saWNlbnNlX2tleSwKICAgICAgICAgICAgdG9rZW46IHRoaXMuJHNlc3Npb24uZ2V0KCJVc2VySW5mb3JtYXRpb24iKS50b2tlbnMsCiAgICAgICAgICAgIGlzX3NhdmU6IHRydWUsCiAgICAgICAgICAgIGludGVudDogdGhpcy5uZXdfaW50ZW50cywKICAgICAgICAgICAgaW50ZW50X2Rlc2NyaXB0aW9uOiB0aGlzLm5ld19pbnRlbnRfZGVzY3JpcHRpb24sCiAgICAgICAgICAgIHF1ZXN0aW9uX2xpc3Q6IHRoaXMuYWRkX3F1ZXN0aW9uc19saXN0LAogICAgICAgICAgfSwKICAgICAgICAgIHsKICAgICAgICAgICAgaGVhZGVyczogewogICAgICAgICAgICAgIEF1dGhvcml6YXRpb246IGBCZWFyZXIgJHt0aGlzLiRzZXNzaW9uLmdldCgiYXQiKX1gLAogICAgICAgICAgICB9LAogICAgICAgICAgfQogICAgICAgICkKICAgICAgICAudGhlbigocmVzcG9uc2UpID0+IHsKICAgICAgICAgIHRoaXMuc3Bpbm5lck9uID0gZmFsc2U7CiAgICAgICAgICBpZiAocmVzcG9uc2UuZGF0YS5NU0cgPT0gIkludGVudCBTYXZlZCBTdWNjZXNzZnVsbHkiKSB7CiAgICAgICAgICAgIFN3YWwoewogICAgICAgICAgICAgIHRleHQ6ICJVc2VyIGV4YW1wbGUgc2F2ZWQgc3VjY2Vzc2Z1bGx5IiwKICAgICAgICAgICAgICB0eXBlOiAic3VjY2VzcyIsCiAgICAgICAgICAgICAgdGltZXI6IDM1MDAsCiAgICAgICAgICAgICAgdGl0bGU6ICJTdWNjZXNzIiwKICAgICAgICAgICAgICB0b2FzdDogdHJ1ZSwKICAgICAgICAgICAgICBwb3NpdGlvbjogInRvcC1yaWdodCIsCiAgICAgICAgICAgICAgc2hvd0NvbmZpcm1CdXR0b246IGZhbHNlLAogICAgICAgICAgICB9KTsKICAgICAgICAgICAgJCgiI2ludGVudG1vZGVsIikubW9kYWwoImhpZGUiKTsKICAgICAgICAgICAgdGhpcy5lbXB0eV92YXJpYWJsZSgpOwogICAgICAgICAgICB0aGlzLmxvYWRfaW50ZW50KCk7CiAgICAgICAgICB9IGVsc2UgaWYgKHJlc3BvbnNlLmRhdGEuTVNHID09ICJJbnRlbnQgTm90IFNhdmVkIFN1Y2Nlc3NmdWxseSIpIHsKICAgICAgICAgICAgU3dhbCh7CiAgICAgICAgICAgICAgdHlwZTogImVycm9yIiwKICAgICAgICAgICAgICB0ZXh0OiAiVGhlcmUgd2FzIGFuIGludGVybmFsIHNlcnZlciBlcnJvci4gUGxlYXNlIHRyeSBhZ2Fpbi4iLAogICAgICAgICAgICAgIHRpbWVyOiAyNTAwLAogICAgICAgICAgICB9KTsKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIFN3YWwoewogICAgICAgICAgICAgIHR5cGU6ICJlcnJvciIsCiAgICAgICAgICAgICAgdGV4dDogIlRoZXJlIHdhcyBhbiBpbnRlcm5hbCBzZXJ2ZXIgZXJyb3IuIFBsZWFzZSB0cnkgYWdhaW4uIiwKICAgICAgICAgICAgICB0aW1lcjogMjUwMCwKICAgICAgICAgICAgfSk7CiAgICAgICAgICB9CiAgICAgICAgfSkKICAgICAgICAuY2F0Y2goKGUpID0+IHsKICAgICAgICAgIHRoaXMuc3Bpbm5lck9uID0gZmFsc2U7CiAgICAgICAgICBpZiAoCiAgICAgICAgICAgIGUucmVzcG9uc2Uuc3RhdHVzID09PSA0MTAgfHwKICAgICAgICAgICAgZS5yZXNwb25zZS5zdGF0dXMgPT09IDQ0MCB8fAogICAgICAgICAgICBlLnJlc3BvbnNlLnN0YXR1cyA9PT0gNDA5CiAgICAgICAgICApIHsKICAgICAgICAgICAgdGhpcy4kcm9vdC4kZW1pdCgiU2Vzc2lvbl9FeHBpcmVkIiwgZS5yZXNwb25zZS5kYXRhKTsKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIFN3YWwoewogICAgICAgICAgICAgIHR5cGU6ICJlcnJvciIsCiAgICAgICAgICAgICAgdGV4dDogIlRoZXJlIHdhcyBhbiBpbnRlcm5hbCBzZXJ2ZXIgZXJyb3IuIFBsZWFzZSB0cnkgYWdhaW4uIiwKICAgICAgICAgICAgICB0aW1lcjogMjUwMCwKICAgICAgICAgICAgfSk7CiAgICAgICAgICB9CiAgICAgICAgfSk7CiAgICB9LAogICAgc2V0cGFnaW5hdGlvbihwYWdlX25vKSB7CiAgICAgIHRoaXMucGFnZV9hcnJheSA9IFtdOwogICAgICBpZiAodGhpcy50b3RhbF9wYWdlcyA8PSA3KSB7CiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLnRvdGFsX3BhZ2VzOyBpKyspIHsKICAgICAgICAgIHRoaXMucGFnZV9hcnJheS5wdXNoKGkgKyAxKTsKICAgICAgICB9CiAgICAgIH0gZWxzZSBpZiAocGFnZV9ubyA9PSAxKSB7CiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCA0OyBpKyspIHsKICAgICAgICAgIHRoaXMucGFnZV9hcnJheS5wdXNoKGkgKyAxKTsKICAgICAgICB9CiAgICAgICAgdGhpcy5wYWdlX2FycmF5LnB1c2goIi4uLmwiKTsKICAgICAgICB0aGlzLnBhZ2VfYXJyYXkucHVzaCh0aGlzLnRvdGFsX3BhZ2VzKTsKICAgICAgfSBlbHNlIGlmIChwYWdlX25vID09IHRoaXMudG90YWxfcGFnZXMpIHsKICAgICAgICB0aGlzLnBhZ2VfYXJyYXkucHVzaCgxKTsKICAgICAgICB0aGlzLnBhZ2VfYXJyYXkucHVzaCgiLi4ucyIpOwogICAgICAgIGZvciAobGV0IGkgPSB0aGlzLnRvdGFsX3BhZ2VzIC0gNDsgaSA8IHRoaXMudG90YWxfcGFnZXM7IGkrKykgewogICAgICAgICAgdGhpcy5wYWdlX2FycmF5LnB1c2goaSArIDEpOwogICAgICAgIH0KICAgICAgfSBlbHNlIGlmIChwYWdlX25vIDw9IDQpIHsKICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHBhZ2Vfbm8gKyAzOyBpKyspIHsKICAgICAgICAgIHRoaXMucGFnZV9hcnJheS5wdXNoKGkgKyAxKTsKICAgICAgICB9CiAgICAgICAgdGhpcy5wYWdlX2FycmF5LnB1c2goIi4uLmwiKTsKICAgICAgICB0aGlzLnBhZ2VfYXJyYXkucHVzaCh0aGlzLnRvdGFsX3BhZ2VzKTsKICAgICAgfSBlbHNlIGlmIChwYWdlX25vID49IHRoaXMudG90YWxfcGFnZXMgLSA0KSB7CiAgICAgICAgdGhpcy5wYWdlX2FycmF5LnB1c2goMSk7CiAgICAgICAgdGhpcy5wYWdlX2FycmF5LnB1c2goIi4uLnMiKTsKICAgICAgICBmb3IgKGxldCBpID0gcGFnZV9ubyAtIDQ7IGkgPCB0aGlzLnRvdGFsX3BhZ2VzOyBpKyspIHsKICAgICAgICAgIHRoaXMucGFnZV9hcnJheS5wdXNoKGkgKyAxKTsKICAgICAgICB9CiAgICAgIH0gZWxzZSB7CiAgICAgICAgdGhpcy5wYWdlX2FycmF5LnB1c2goMSk7CiAgICAgICAgdGhpcy5wYWdlX2FycmF5LnB1c2goIi4uLnMiKTsKICAgICAgICBmb3IgKGxldCBpID0gcGFnZV9ubyAtIDM7IGkgPD0gcGFnZV9ubyArIDM7IGkrKykgewogICAgICAgICAgdGhpcy5wYWdlX2FycmF5LnB1c2goaSk7CiAgICAgICAgfQogICAgICAgIHRoaXMucGFnZV9hcnJheS5wdXNoKCIuLi5sIik7CiAgICAgICAgdGhpcy5wYWdlX2FycmF5LnB1c2godGhpcy50b3RhbF9wYWdlcyk7CiAgICAgIH0KICAgIH0sCiAgICBwYWdpbmF0aW9uX2NsYXNzKGluZGV4KSB7CiAgICAgIGlmIChpbmRleCA9PSB0aGlzLnBhZ2Vfbm8pIHsKICAgICAgICByZXR1cm4gIiBhY3RpdmUiOwogICAgICB9IGVsc2UgewogICAgICAgIHJldHVybiAiIjsKICAgICAgfQogICAgfSwKICAgIGVtcHR5X3ZhcmlhYmxlKCkgewogICAgICB0aGlzLm5ld19pbnRlbnRzID0gIiI7CiAgICAgIHRoaXMubmV3X2ludGVudF9kZXNjcmlwdGlvbiA9ICIiOwogICAgICB0aGlzLmludGVudF9hbHJlYWR5X2V4aXN0cyA9IGZhbHNlOwogICAgICB0aGlzLmludGVudF9hbHJlYWR5X2V4aXN0c19lZGl0ID0gZmFsc2U7CiAgICAgIHRoaXMuaW50ZW50cyA9IHRoaXMuaW50ZW50bGlzdFswXTsKICAgICAgdGhpcy5uZXdfaW50ZW50cyA9ICIiOwogICAgICB0aGlzLmFkZF9xdWVzdGlvbnNfbGlzdCA9IFsiIl07CiAgICAgIHRoaXMuaXNFZGl0SW50ZW50ID0gZmFsc2U7CiAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJlbnRlcl9pbnRlbnRfaWQiKS5zdHlsZS5ib3JkZXIgPSAiIjsKICAgICAgJCgiaW5wdXQ6Y2hlY2tib3giKS5wcm9wKCJjaGVja2VkIiwgZmFsc2UpOwogICAgfSwKICAgIGZpbGVfc3VibWl0KCkgewogICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpOwogICAgICBpZiAoJCgiI2lucHV0R3JvdXBGaWxlY3N2IikudmFsKCkgPT0gJycpIHsKICAgICAgICBTd2FsLmZpcmUoewogICAgICAgICAgdGl0bGU6ICJUaGUgaW5wdXQgZmllbGQgaXMgZW1wdHkiLAogICAgICAgICAgdGV4dDogIlBsZWFzZSBVcGxvYWQgYSBDU1YgZmlsZSIsCiAgICAgICAgICB0eXBlOiAid2FybmluZyIsCiAgICAgICAgICBzaG93Q29uZmlybUJ1dHRvbjogZmFsc2UsCiAgICAgICAgICB0aW1lcjogMjUwMCwKICAgICAgICB9KTsKICAgICAgfQogICAgICB2YXIgdXNlcl9kZXRhaWxzID0gewogICAgICAgIGVtYWlsOiB0aGlzLiRzZXNzaW9uLmdldCgiVXNlckluZm9ybWF0aW9uIikuZW1haWwsCiAgICAgICAgdG9rZW46IHRoaXMuJHNlc3Npb24uZ2V0KCJVc2VySW5mb3JtYXRpb24iKS50b2tlbnMsCiAgICAgICAgY29tcGFueW5hbWU6IHRoaXMuY29tcGFueW5hbWUsCiAgICAgICAgY29tcGFueWlkOiB0aGlzLmNvbXBhbnlpZCwKICAgICAgICBsaWNlbnNlX2tleTogdGhpcy4kc2Vzc2lvbi5nZXQoIlVzZXJJbmZvcm1hdGlvbiIpLmxpY2Vuc2Vfa2V5LAogICAgICAgIGlzX2Zvcm1faW50ZW50czogdHJ1ZSwKICAgICAgfTsKICAgICAgdmFyIGpzb24gPSBKU09OLnN0cmluZ2lmeSh1c2VyX2RldGFpbHMpOwogICAgICB2YXIgYmxvYiA9IG5ldyBCbG9iKFtqc29uXSwgewogICAgICAgIHR5cGU6ICJhcHBsaWNhdGlvbi9qc29uIiwKICAgICAgfSk7CiAgICAgIGlmICh0aGlzLmZpbGVfbGFiZWxfY3N2ID09ICJDaG9vc2UgZmlsZSIpIHsKICAgICAgfSBlbHNlIHsKICAgICAgICBjb25zdCBmZCA9IG5ldyBGb3JtRGF0YSgpOwogICAgICAgIGZkLmFwcGVuZCgKICAgICAgICAgICJmaWxlIiwKICAgICAgICAgIHRoaXMuZmlsZV9jb250ZW50X2NzdiwKICAgICAgICAgIHRoaXMuY29tcGFueW5hbWUgKyAiT2JqZWN0aXZlRmlsZS5jc3YiCiAgICAgICAgKTsKICAgICAgICBmZC5hcHBlbmQoImpzb24iLCBibG9iKTsKICAgICAgICAkKCIjZmlsZV91cGxvYWQiKS5tb2RhbCgiaGlkZSIpOwogICAgICAgIHRoaXMuc3Bpbm5lck9uID0gdHJ1ZTsKICAgICAgICBheGlvcwogICAgICAgICAgLnBvc3QoYXBpX2NhbGxzLnVwbG9hZF9maWxlX3VybCgpLCBmZCwgewogICAgICAgICAgICBoZWFkZXJzOiB7CiAgICAgICAgICAgICAgQXV0aG9yaXphdGlvbjogYEJlYXJlciAke3RoaXMuJHNlc3Npb24uZ2V0KCJhdCIpfWAsCiAgICAgICAgICAgIH0sCiAgICAgICAgICB9KQogICAgICAgICAgLnRoZW4oKHJlc3BvbnNlKSA9PiB7CiAgICAgICAgICAgIHRoaXMuc3Bpbm5lck9uID0gZmFsc2U7CiAgICAgICAgICAgIGlmIChyZXNwb25zZS5kYXRhID09ICJmaWxlIHVwbG9hZGVkIHN1Y2Nlc3NmdWxseSIpIHsKICAgICAgICAgICAgICBTd2FsKHsKICAgICAgICAgICAgICAgIHRpdGxlOiAiRmlsZSB1cGxvYWRlZCBzdWNjZXNzZnVsbHkiLAogICAgICAgICAgICAgICAgdHlwZTogInN1Y2Nlc3MiLAogICAgICAgICAgICAgICAgc2hvd0NvbmZpcm1CdXR0b246IGZhbHNlLAogICAgICAgICAgICAgICAgdGltZXI6IDIwMDAsCiAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIH0gZWxzZSBpZiAocmVzcG9uc2UuZGF0YS5tZXNzYWdlID09ICJJbmNvcnJlY3QgZmlsZSBmb3JtYXQiKSB7CiAgICAgICAgICAgICAgU3dhbCh7CiAgICAgICAgICAgICAgICB0aXRsZTogIkluY29ycmVjdCBmaWxlIGZvcm1hdCIsCiAgICAgICAgICAgICAgICB0eXBlOiAid2FybmluZyIsCiAgICAgICAgICAgICAgICB0ZXh0OgogICAgICAgICAgICAiVXNlcnMgbmVlZCB0byBkb3dubG9hZCB0aGUgU2FtcGxlIEludGVudCBDU1YgRmlsZSBmcm9tICdVcGxvYWQgQ1NWIEZpbGUnIG1vZGVsLiBDaGFuZ2VzIHRvIHRoaXMgZmlsZSB3aWxsIGJlIGFjY2VwdGVkIGJ5IHRoZSBzeXN0ZW0uIiwKICAgICAgICAgICAgICAgIC8vIHRpbWVyOiA0MDAwLAogICAgICAgICAgICAgIH0pOwogICAgICAgICAgICB9IGVsc2UgaWYgKHJlc3BvbnNlLmRhdGEubWVzc2FnZSA9PSAiRmlsZSB0eXBlIG5vdCBzdXBwb3J0ZWQiKSB7CiAgICAgICAgICAgICAgU3dhbCh7CiAgICAgICAgICAgICAgICB0aXRsZTogIkZpbGUgdHlwZSBub3Qgc3VwcG9ydGVkIiwKICAgICAgICAgICAgICAgIHR5cGU6ICJ3YXJuaW5nIiwKICAgICAgICAgICAgICAgIHRleHQ6CiAgICAgICAgICAgICJVc2VycyBuZWVkIHRvIGRvd25sb2FkIHRoZSBTYW1wbGUgSW50ZW50IENTViBGaWxlIGZyb20gJ1VwbG9hZCBDU1YgRmlsZScgbW9kZWwuIENoYW5nZXMgdG8gdGhpcyBmaWxlIHdpbGwgYmUgYWNjZXB0ZWQgYnkgdGhlIHN5c3RlbS4iLAogICAgICAgICAgICAgICAgLy8gdGltZXI6IDQwMDAsCiAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgU3dhbCh7CiAgICAgICAgICAgICAgICB0aXRsZTogIlNvbWUgRXJyb3IgT2NjdXJyZWQiLAogICAgICAgICAgICAgICAgdHlwZTogImVycm9yIiwKICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgfQogICAgICAgICAgICB0aGlzLmZpbGVfbGFiZWxfY3N2ID0gIkNob29zZSBmaWxlIjsKICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoImlucHV0R3JvdXBGaWxlY3N2IikudmFsdWUgPSAiIjsKICAgICAgICAgICAgdGhpcy5sb2FkX2ludGVudCgpOwogICAgICAgICAgfSkKICAgICAgICAgIC5jYXRjaCgoZSkgPT4gewogICAgICAgICAgICBpZiAoCiAgICAgICAgICAgICAgZS5yZXNwb25zZS5zdGF0dXMgPT09IDQxMCB8fAogICAgICAgICAgICAgIGUucmVzcG9uc2Uuc3RhdHVzID09PSA0NDAgfHwKICAgICAgICAgICAgICBlLnJlc3BvbnNlLnN0YXR1cyA9PT0gNDA5CiAgICAgICAgICAgICkgewogICAgICAgICAgICAgIHRoaXMuJHJvb3QuJGVtaXQoIlNlc3Npb25fRXhwaXJlZCIsIGUucmVzcG9uc2UuZGF0YSk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0pOwogICAgICB9CiAgICB9LAogICAgZG93bmxvYWRfc2FtcGxlX2ZpbGUoKSB7CiAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7CiAgICAgIHRoaXMuc3Bpbm5lck9uRmlsZURvd25sb2FkID0gdHJ1ZTsKICAgICAgYXhpb3MoewogICAgICAgIG1ldGhvZDogInBvc3QiLAogICAgICAgIHVybDogYXBpX2NhbGxzLmZpbGVfZG93bmxvYWQoKSwKICAgICAgICByZXNwb25zZVR5cGU6ICJibG9iIiwKICAgICAgICBkYXRhOiB7CiAgICAgICAgICBzYW1wbGVfZmlsZTogIm9iamVjdGl2ZSIsCiAgICAgICAgICBjb21wYW55aWQ6IHRoaXMuJHNlc3Npb24uZ2V0KCJVc2VySW5mb3JtYXRpb24iKS5jb21wYW55X2lkLAogICAgICAgICAgY29tcGFueV9uYW1lOiB0aGlzLiRzZXNzaW9uLmdldCgiVXNlckluZm9ybWF0aW9uIikuY29tcGFueV9uYW1lLAogICAgICAgICAgbGljZW5zZV9rZXk6IHRoaXMuJHNlc3Npb24uZ2V0KCJVc2VySW5mb3JtYXRpb24iKS5saWNlbnNlX2tleSwKICAgICAgICAgIHRva2VuOiB0aGlzLiRzZXNzaW9uLmdldCgiVXNlckluZm9ybWF0aW9uIikudG9rZW5zLAogICAgICAgICAgZW1haWw6IHRoaXMuJHNlc3Npb24uZ2V0KCJVc2VySW5mb3JtYXRpb24iKS5lbWFpbCwKICAgICAgICB9LAogICAgICAgIGhlYWRlcnM6IHsKICAgICAgICAgIEF1dGhvcml6YXRpb246IGBCZWFyZXIgJHt0aGlzLiRzZXNzaW9uLmdldCgiYXQiKX1gLAogICAgICAgIH0sCiAgICAgIH0pCiAgICAgICAgLnRoZW4oKHJlc3BvbnNlKSA9PiB7CiAgICAgICAgICAkKCIjZmlsZV91cGxvYWQiKS5tb2RhbCgiaGlkZSIpOwogICAgICAgICAgdGhpcy5zcGlubmVyT25GaWxlRG93bmxvYWQgPSBmYWxzZTsKICAgICAgICAgIGlmIChyZXNwb25zZS5kYXRhLm1lc3NhZ2UgPT09ICJOb3QgYWJsZSB0byBkb3dubG9hZCBmaWxlIikgewogICAgICAgICAgICBTd2FsKHsKICAgICAgICAgICAgICB0aXRsZTogIlNvbWUgRXJyb3IgT2NjdXJyZWQuIFBsZWFzZSBUcnkgQWdhaW4iLAogICAgICAgICAgICAgIHR5cGU6ICJlcnJvciIsCiAgICAgICAgICAgICAgdGltZXI6IDI1MDAsCiAgICAgICAgICAgIH0pOwogICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgdmFyIHVybCA9IHdpbmRvdy5VUkwuY3JlYXRlT2JqZWN0VVJMKG5ldyBCbG9iKFtyZXNwb25zZS5kYXRhXSkpOwogICAgICAgICAgICB2YXIgbGluayA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImEiKTsKICAgICAgICAgICAgbGluay5ocmVmID0gdXJsOwogICAgICAgICAgICAvLyBjb25zb2xlLmxvZyh0aGlzLmNvbXBhbnluYW1lKQogICAgICAgICAgICBsaW5rLnNldEF0dHJpYnV0ZSgiZG93bmxvYWQiLCB0aGlzLmNvbXBhbnluYW1lICsgIk9iamVjdGl2ZUZpbGUuY3N2Iik7CiAgICAgICAgICAgIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQobGluayk7CiAgICAgICAgICAgIGxpbmsuY2xpY2soKTsKICAgICAgICAgIH0KICAgICAgICB9KQogICAgICAgIC5jYXRjaCgoZSkgPT4gewogICAgICAgICAgJCgiI2ZpbGVfdXBsb2FkIikubW9kYWwoImhpZGUiKTsKICAgICAgICAgIHRoaXMuc3Bpbm5lck9uRmlsZURvd25sb2FkID0gZmFsc2U7CiAgICAgICAgICBTd2FsKHsKICAgICAgICAgICAgdGl0bGU6ICJTb21lIEVycm9yIE9jY3VycmVkLiBQbGVhc2UgVHJ5IEFnYWluIiwKICAgICAgICAgICAgdHlwZTogImVycm9yIiwKICAgICAgICAgICAgdGltZXI6IDI1MDAsCiAgICAgICAgICB9KTsKICAgICAgICAgIGlmICgKICAgICAgICAgICAgZS5yZXNwb25zZS5zdGF0dXMgPT09IDQxMCB8fAogICAgICAgICAgICBlLnJlc3BvbnNlLnN0YXR1cyA9PT0gNDQwIHx8CiAgICAgICAgICAgIGUucmVzcG9uc2Uuc3RhdHVzID09PSA0MDkKICAgICAgICAgICkgewogICAgICAgICAgICB0aGlzLiRyb290LiRlbWl0KCJTZXNzaW9uX0V4cGlyZWQiLCBlLnJlc3BvbnNlLmRhdGEpOwogICAgICAgICAgfQogICAgICAgIH0pOwogICAgfSwKICAgIGZpbGVpbnB1dF9jc3YoKSB7CiAgICAgIHRoaXMuZmlsZV9sYWJlbF9jc3YgPSBldmVudC50YXJnZXQuZmlsZXNbMF0ubmFtZTsKICAgICAgdGhpcy5maWxlX2NvbnRlbnRfY3N2ID0gZXZlbnQudGFyZ2V0LmZpbGVzWzBdOwogICAgfSwKICAgIGRvd25sb2FkX2NzdigpIHsKICAgICAgYXhpb3MKICAgICAgICAucG9zdCgKICAgICAgICAgIGFwaV9jYWxscy5xdWVzdGlvbl9pbnRlbnRfY3N2KCksCiAgICAgICAgICB7CiAgICAgICAgICAgIGNvbXBhbnlfbmFtZTogdGhpcy5jb21wYW55bmFtZSwKICAgICAgICAgICAgY29tcGFueV9pZDogdGhpcy5jb21wYW55aWQsCiAgICAgICAgICAgIGVtYWlsOiB0aGlzLiRzZXNzaW9uLmdldCgiVXNlckluZm9ybWF0aW9uIikuZW1haWwsCiAgICAgICAgICAgIGxpY2Vuc2Vfa2V5OiB0aGlzLiRzZXNzaW9uLmdldCgiVXNlckluZm9ybWF0aW9uIikubGljZW5zZV9rZXksCiAgICAgICAgICAgIHRva2VuOiB0aGlzLiRzZXNzaW9uLmdldCgiVXNlckluZm9ybWF0aW9uIikudG9rZW5zLAogICAgICAgICAgICBpc19mb3JtX2ludGVudHM6IHRydWUsCiAgICAgICAgICB9LAogICAgICAgICAgewogICAgICAgICAgICBoZWFkZXJzOiB7CiAgICAgICAgICAgICAgQXV0aG9yaXphdGlvbjogYEJlYXJlciAke3RoaXMuJHNlc3Npb24uZ2V0KCJhdCIpfWAsCiAgICAgICAgICAgIH0sCiAgICAgICAgICB9CiAgICAgICAgKQogICAgICAgIC50aGVuKChyZXNwb25zZSkgPT4gewogICAgICAgICAgdmFyIGEgPSB3aW5kb3cuZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiYSIpOwogICAgICAgICAgYS5ocmVmID0gcmVzcG9uc2UuZGF0YS5DU1ZfVVJMOwogICAgICAgICAgYS5kb3dubG9hZCA9IHRydWU7CiAgICAgICAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKGEpOwogICAgICAgICAgYS5jbGljaygpOwogICAgICAgICAgZG9jdW1lbnQuYm9keS5yZW1vdmVDaGlsZChhKTsKICAgICAgICB9KQogICAgICAgIC5jYXRjaCgoZSkgPT4gewogICAgICAgICAgaWYgKAogICAgICAgICAgICBlLnJlc3BvbnNlLnN0YXR1cyA9PT0gNDEwIHx8CiAgICAgICAgICAgIGUucmVzcG9uc2Uuc3RhdHVzID09PSA0NDAgfHwKICAgICAgICAgICAgZS5yZXNwb25zZS5zdGF0dXMgPT09IDQwOQogICAgICAgICAgKSB7CiAgICAgICAgICAgIHRoaXMuJHJvb3QuJGVtaXQoIlNlc3Npb25fRXhwaXJlZCIsIGUucmVzcG9uc2UuZGF0YSk7CiAgICAgICAgICB9CiAgICAgICAgfSk7CiAgICB9LAogIH0sCn07Cg=="},{"version":3,"sources":["Intents.vue"],"names":[],"mappingstfile":"Intents.vue","sourceRoot":"src/portal/Chatbot/Dashboard/ConversationalFlow","sourcesContent":["<template>\n  <div class=\"dash-cont\">\n    <div class=\"spinner\" id=\"spinner\" v-show=\"spinnerOn\"></div>\n    <div id=\"intent_page\">\n      <div class=\"card dash-card\">\n        <div\n          class=\"\n            card-header\n            d-block d-sm-flex\n            flex-wrap\n            justify-content-between\n          \"\n        >\n          <h4 class=\"mb-sm-0\">Objective</h4>\n          <div class=\"card-act d-flex flex-wrap\">\n            <input\n              class=\"form-control search-bar\"\n              id=\"search_bar_id\"\n              placeholder=\"Search here\"\n              v-model.trim=\"search_name\"\n              v-on:keyup=\"callsearch\"\n            />\n            <a\n              type=\"button\"\n              v-if=\"isVisibleSearchClear\"\n              class=\"btn bg-transparent mt-auto mb-auto py-0\"\n              @click=\"clear_search_name\"\n              style=\"margin-left: -40px; z-index: 10\"\n            >\n              <img src=\"/img/close-icn.png\" alt />\n            </a>\n            <a\n              href=\"javascript:void(0)\"\n              class=\"darkblue-btn\"\n              @click=\"isEditIntent ? verify_changes() : search_intent()\"\n              id=\"search_btn_id\"\n            >\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n                width=\"14\"\n                height=\"14\"\n              >\n                <path\n                  d=\"M13.809011327100071,12.965505435601472 L9.30910012117823,8.49330664854199 C10.007392079586584,7.596111589605521 10.38512817619458,6.499157170138106 10.38512817619458,5.345374656726532 c0,-1.3810948891881802 -0.5423458634784514,-2.676086605733705 -1.523073527148749,-3.6524965835014083 c-0.9807276636702976,-0.9764099777677033 -2.287209392305289,-1.5136937750578685 -3.6751296371814526,-1.5136937750578685 s-2.6944019735111544,0.5390058607430178 -3.6751296371814526,1.5136937750578685 C0.5293349766245179,2.667565987539975 -0.011278152465820316,3.9642797675383576 -0.011278152465820316,5.345374656726532 c0,1.3793728257353273 0.5423458634784514,2.6778086691865575 1.523073527148749,3.6524965835014083 C2.492523038353222,9.974281217995648 3.7972720326001044,10.51156501528581 5.18692501186438,10.51156501528581 c1.160932040033745,0 2.2629511108717475,-0.37540983272197437 3.165705727077092,-1.0676793407689171 l4.499911205921844,4.470476723606628 a0.1420842198250257,0.14120920313395363 0 0 0 0.20099718902076805,0 l0.7554721932159904,-0.7490976019910955 a0.1420842198250257,0.14120920313395363 0 0 0 0,-0.19975936053095905 zM7.931576282630728,8.073123166045836 C7.196896902072058,8.80155600660269 6.2231001759542055,9.20279679111746 5.18692501186438,9.20279679111746 s-2.0099718902076775,-0.4012407845147706 -2.744651270766347,-1.1296736250716286 C1.709327094927478,7.342968262036121 1.3055999824978375,6.37516860153268 1.3055999824978375,5.345374656726532 s0.4037271124296458,-1.99931566876244 1.1366737586002036,-2.727748509319298 C3.1769531216567026,1.8891933068503817 4.150749847774562,1.4879525223356067 5.18692501186438,1.4879525223356067 s2.0117046245957884,0.3995187210619175 2.744651270766347,1.1296736250716286 S9.06825004123093,4.315580711920385 9.06825004123093,5.345374656726532 s-0.4037271124296458,1.99931566876244 -1.1366737586002036,2.727748509319298 z\"\n                  fill=\"#fff\"\n                />\n              </svg>\n            </a>\n            <a\n              href=\"#\"\n              class=\"darkblue-btn\"\n              data-target=\"#intentmodel\"\n              id=\"add_intent_btn\"\n              title=\"Add new objective\"\n            >\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"14\"\n                height=\"13.997\"\n                viewBox=\"0 0 14 13.997\"\n              >\n                <path\n                  id=\"Union_13\"\n                  data-name=\"Union 13\"\n                  d=\"M-12684,2058v-5h-5a1,1,0,0,1-1-1,1,1,0,0,1,1-1h5v-5a1,1,0,0,1,1-1,1,1,0,0,1,1,1v5h5a1,1,0,0,1,1,1,1,1,0,0,1-1,1h-5v5a1,1,0,0,1-1,1A1,1,0,0,1-12684,2058Z\"\n                  transform=\"translate(12690.001 -2045.002)\"\n                  fill=\"#fff\"\n                />\n              </svg>\n              Add Objective\n            </a>\n            <a\n              href=\"#\"\n              class=\"darkblue-btn\"\n              title=\"Upload File\"\n              data-toggle=\"modal\"\n              data-target=\"#file_upload\"\n            >\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"14\"\n                height=\"14\"\n                viewBox=\"0 0 14 13.997\"\n              >\n                <path\n                  d=\"M8.6939946595428,-0.014074647685589529 H1.8307534193786577 a1.7158103100410358,1.38733287383954 0 0 0 -1.7158103100410358,1.38733287383954 v11.09866299071632 a1.7158103100410358,1.38733287383954 0 0 0 1.7158103100410358,1.38733287383954 h10.294861860246215 a1.7158103100410358,1.38733287383954 0 0 0 1.7158103100410358,-1.38733287383954 V4.147923973833031 l-5.147430930123107,-4.16199862151862 zm-0.42895257751025956,9.71133011687678 v2.08099931075931 h-2.5737154650615537 v-2.08099931075931 H3.5465637294196934 l3.4316206200820716,-2.77466574767908 l3.4316206200820716,2.77466574767908 h-2.1447628875512947 zM7.836089504522283,4.841590410752801 V1.0264250076940657 L12.554567857135131,4.841590410752801 H7.836089504522283 z\"\n                  id=\"svg_1\"\n                  class\n                  fill=\"#fff\"\n                />\n              </svg>\n            </a>\n            <a\n              href=\"#\"\n              class=\"darkblue-btn\"\n              @click=\"download_csv\"\n              title=\"Download CSV File\"\n            >\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n                width=\"14\"\n                height=\"14\"\n              >\n                <path\n                  d=\"M8.124046569796448,3.7048888423811563 V-0.0004725085692590319 H0.8684480275323758 C0.385950724471816,-0.0004725085692590319 -0.0022237975393094665,0.29105224477757613 -0.0022237975393094665,0.6534147886572829 v12.641821079713173 c0,0.3623625438797103 0.3881745220111289,0.6538872972265442 0.8706718250716886,0.6538872972265442 h12.18940555100364 c0.4824973030605619,0 0.8706718250716886,-0.2915247533468346 0.8706718250716886,-0.6538872972265442 V4.358776139607697 H8.994718394868137 c-0.47886950378942883,0 -0.8706718250716886,-0.2942492837519449 -0.8706718250716886,-0.6538872972265442 zm2.773452542780442,5.758567464241761 l-3.497924057225508,2.6073755976908415 c-0.24124865153028063,0.18009145977781071 -0.6308742932498614,0.18009145977781071 -0.872122944780142,0 l-3.497924057225508,-2.6073755976908415 C2.661306427325829,9.189096094828278 2.9196057354304337,8.718024787784655 3.437655471348084,8.718024787784655 H5.802255036271947 v-2.1796243240884783 c0,-0.24084848781177734 0.2597504278130543,-0.4359248648176966 0.5804478833811269,-0.4359248648176966 h1.1608957667622521 c0.3206974555680725,0 0.5804478833811269,0.1950763770059196 0.5804478833811269,0.4359248648176966 v2.1796243240884783 h2.3645995649238625 c0.5180497359176551,0 0.7763490440222554,0.47107130704362293 0.4088529778565816,0.7454315188382611 zM13.674579454628462,2.86028441679687 L10.122963968190199,0.1902446197884852 c-0.16325096720094195,-0.12260386822997718 -0.38454672273999646,-0.1907171283577423 -0.6167258760924463,-0.1907171283577423 H9.284942336558702 v3.4873989185415644 h4.643583067049007 v-0.16619635471174685 c0,-0.1716454155219681 -0.09069498177830096,-0.33784177023371487 -0.2539459489792431,-0.46044563846369135 z\"\n                  fill=\"#fff\"\n                />\n              </svg>\n            </a>\n            <button id=\"train_model_btn\" class=\"darkblue-btn\"\n               @click=\"isEditIntent ? verify_changes() : train_model()\"\n               :disabled=\"intent_core_model_inprogress == true\"\n               :style=\"show_model_progress('style')\"\n               :title=\"show_model_progress('title')\">\n               <i class=\"fa fa-spinner fa-spin\" v-show=\"intent_core_model_inprogress\"></i>\n                Train Model\n            </button>\n            <a\n              href=\"javascript:void(0)\"\n              class=\"red-btn\"\n              @click=\"delete_selected\"\n              id=\"delete_intent\"\n            >\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"14\"\n                height=\"14\"\n                viewBox=\"0 0 14 14\"\n              >\n                <path\n                  d=\"M8.375,3v.778H4V5.333h.875V15.444A1.661,1.661,0,0,0,6.625,17h8.75a1.661,1.661,0,0,0,1.75-1.556V5.333H18V3.778H13.625V3H8.375M6.625,5.333h8.75V15.444H6.625V5.333m1.75,1.556v7h1.75v-7H8.375m3.5,0v7h1.75v-7Z\"\n                  transform=\"translate(-4 -3)\"\n                  fill=\"#fff\"\n                />\n              </svg>\n              Delete\n            </a>\n          </div>\n        </div>\n        <div class=\"card-body\" id=\"page\">\n          <div class=\"col-sm-12 d-flex px-0\" v-show=\"intentlist.length > 0\">\n            <div class=\"col-sm-4 pl-0\" v-show=\"intentlist.length > 0\">\n              <div class=\"table-box\">\n                <div class=\"table-responsive\">\n                  <table class=\"table\">\n                    <thead>\n                      <tr>\n                        <th scope=\"col\">\n                          <div class=\"form-check checkbox checkbox-success\">\n                            <label\n                              class=\"form-check-label\"\n                            >\n                              <input\n                                class=\"form-check-input\"\n                                id=\"selectall\"\n                                type=\"checkbox\"\n                                @change=\"selected_intents('all')\"\n                              />\n                              <span class=\"icn\"></span>\n                            </label>\n                          </div>\n                        </th>\n                        <th scope=\"col\" class=\"text-left\">OBJECTIVE</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      <tr\n                        v-for=\"(intents, index) in intentlist\"\n                        :key=\"index\"\n                        :class=\"check_current_intent(index)\"\n                      >\n                        <th scope=\"col\">\n                          <div class=\"form-check checkbox-success\">\n                            <label\n                              class=\"form-check-label checkbox checkbox-success\"\n                            >\n                              <input\n                                class=\"form-check-input\"\n                                type=\"checkbox\"\n                                :id=\"'intent_checkbox_' + intents.Intent\"\n                                @change=\"selected_intents(intents.Intent)\"\n                              />\n                              <span class=\"icn\"></span>\n                            </label>\n                          </div>\n                        </th>\n                        <td\n                          style=\"cursor: pointer\"\n                          @click=\"\n                            isEditIntent\n                              ? verify_changes()\n                              : show_intents(index)\n                          \"\n                          :title=\"intents.Intent\"\n                        >\n                          <template>\n                            <p style=\"margin-bottom: 0\">\n                              {{ intents.Intent }}\n                            </p>\n                          </template>\n                        </td>\n                      </tr>\n                    </tbody>\n                  </table>\n                </div>\n              </div>\n            </div>\n            <div\n              class=\"col-sm-8 pr-0\"\n              id=\"edit-intent-box\"\n              v-show=\"intentlist.length > 0\"\n            >\n              <div style=\"border: 1px solid #dbe2e8\">\n                <div class=\"col-sm-12\">\n                  <div style=\"color: #414141\" class=\"d-flex\">\n                    <h5><p class=\"mt-2 mb-0\">Objective Details</p></h5>\n                    <span\n                      @click=\"edit_intent_details\"\n                      v-html=\"pencil_svg\"\n                      class=\"ml-auto mr-2 mt-2\"\n                      id=\"edit-intent-cursor\"\n                      style=\"cursor: pointer\"\n                    ></span>\n                  </div>\n                </div>\n                <hr />\n                <!-- <EDIT INTENT/SHOW INTENT> -->\n                <div class=\"col-sm-12\" style=\"margin-bottom: 1rem\">\n                  <h5>\n                    <p class=\"mt-2 mb-0\" style=\"color: #414141\">\n                      Objective Name\n                    </p>\n                  </h5>\n                  <h6 class=\"pl-1\" style=\"font-weight: 400\" v-if=\"isEditIntent\">\n                    (Only Alphabets, Numbers and _ allowed. No special\n                    characters. maximum 25 characters allowed.)\n                  </h6>\n                  <div v-if=\"!isEditIntent\" style=\"padding-left: 20px\">\n                    <p>{{ current_selected_intent }}</p>\n                    <!-- <span v-html=\"current_intent_response\"></span> -->\n                  </div>\n                  <template v-else-if=\"isEditIntent\">\n                    <input\n                      align=\"right\"\n                      class=\"form-control edit mb-3\"\n                      autocomplete=\"off\"\n                      placeholder=\"Enter objective\"\n                      id=\"enter_intent_id_edit\"\n                      maxlength=\"25\"\n                      v-on:keyup=\"enterintentid_edit\"\n                      v-model=\"current_selected_intent\"\n                      @keydown=\"intent_name_check_special_characters($event)\"\n                    />\n                    <span v-show=\"intent_already_exists_edit\" style=\"color: red\"\n                      >An objective with this name already exists.</span\n                    >\n                  </template>\n                  <hr />\n                  <div>\n                    <h5>\n                      <p class=\"mt-2 mb-0\" style=\"color: #414141\">\n                        Objective Description\n                      </p>\n                    </h5>\n                    <div v-if=\"!isEditIntent\" style=\"padding-left: 20px\">\n                      <p>{{ selected_intent_description }}</p>\n                    </div>\n                    <template v-else>\n                      <input\n                        align=\"right\"\n                        class=\"form-control edit\"\n                        placeholder=\"Add description to this objective\"\n                        id=\"enter_intent_description_id_edit\"\n                        v-model=\"selected_intent_description\"\n                      />\n                    </template>\n                  </div>\n                </div>\n                <!-- <hr /> -->\n                <div\n                  class=\"col-sm-12\"\n                  style=\"padding-left: 15px !important\"\n                >\n                   <hr />\n                  <h5>\n                    <p class=\"mt-2 mb-0\" style=\"color: #414141\">User Example</p>\n                  </h5>\n                  <!-- <p class=\"\">{{ current_selected_intent }}</p> -->\n                  <template v-if=\"!isEditIntent\">\n                    <div\n                      class=\"ScrollStyle\"\n                      style=\"\"\n                    >\n                      <div\n                        v-for=\"(\n                          new_question, index\n                        ) in selected_intent_questions\"\n                        :key=\"index\"\n                      >\n                        <li\n                          style=\"\n                            padding-left: 0rem;\n                            list-style-position: inside;\n                          \"\n                        >\n                          {{ selected_intent_questions[index] }}\n                        </li>\n                        <!-- <p>{{ selected_intent_questions }}</p> -->\n                      </div>\n                    </div>\n                  </template>\n\n                  <template v-else>\n                    <div style=\"display: block; margin-bottom: 1rem\">\n                      <label\n                        style=\"\n                          float: left !important;\n                          margin-top: 5px !important;\n                        \"\n                        >Add unique example of what the user might say.</label\n                      >\n                      <div\n                        class=\"dash-modal card-act\"\n                        style=\"\n                          text-align: end !important;\n                          margin-top: -10px !important;\n                          margin-bottom: 6px !important;\n                        \"\n                      >\n                        <div\n                          class=\"btn-wrap mt-0 py-0 border-top-0\"\n                          style=\"\"\n                        >\n                          <button\n                            id=\"add_question_button\"\n                            class=\"darkblue-btn\"\n                            style=\"padding: 5px 10px\"\n                            @click=\"add_to_questions_list('add')\"\n                          >\n                            <svg\n                              xmlns=\"http://www.w3.org/2000/svg\"\n                              width=\"14\"\n                              height=\"13.997\"\n                              viewBox=\"0 0 14 13.997\"\n                            >\n                              <path\n                                id=\"Union_13\"\n                                data-name=\"Union 13\"\n                                d=\"M-12684,2058v-5h-5a1,1,0,0,1-1-1,1,1,0,0,1,1-1h5v-5a1,1,0,0,1,1-1,1,1,0,0,1,1,1v5h5a1,1,0,0,1,1,1,1,1,0,0,1-1,1h-5v5a1,1,0,0,1-1,1A1,1,0,0,1-12684,2058Z\"\n                                transform=\"translate(12690.001 -2045.002)\"\n                                fill=\"#fff\"\n                              />\n                            </svg>\n                          </button>\n                          <button\n                            type=\"submit\"\n                            class=\"darkblue-btn\"\n                            id=\"res_n_int_save\"\n                            @click=\"edit_intent()\"\n                          >\n                            Save\n                          </button>\n                        </div>\n                      </div>\n                      <div\n                        class=\"ScrollStyle\"\n                        style=\"\"\n                      >\n                        <div\n                          v-for=\"(\n                            new_question, index\n                          ) in selected_intent_questions\"\n                          :key=\"index\"\n                          class=\"form-group\"\n                          style=\"display: flex\"\n                        >\n                          <input\n                            type=\"text\"\n                            v-model.trim=\"selected_intent_questions[index]\"\n                            class=\"form-control edit\"\n                            placeholder=\"Type a user example here. e.g I want to pay my credit card bill\"\n                            :id=\"`enter_question_id_${index}`\"\n                          />\n                          <span\n                            v-if=\"selected_intent_questions.length > 1\"\n                            style=\"cursor: pointer\"\n                            class=\"my-auto ml-2 mr-0\"\n                            @click=\"add_to_questions_list('remove', index)\"\n                          >\n                            <i style=\"font-size: 16px\" class=\"fa\">&#xf00d;</i>\n                          </span>\n                        </div>\n                      </div>\n                    </div>\n                  </template>\n                  <!-- <hr/> -->\n                </div>\n                <div class=\"modal-footer\" v-if=\"isEditIntent\">\n                  <div class=\"dash-modal card-act\">\n                    <div class=\"btn-wrap text-right mt-0 py-0 border-top-0\">\n                      <button\n                        type=\"button\"\n                        class=\"btn btn-link\"\n                        data-dismiss=\"modal\"\n                        @click=\"edit_intent_details\"\n                      >\n                        Cancel\n                      </button>\n                      <button\n                        type=\"submit\"\n                        class=\"darkblue-btn\"\n                        id=\"res_n_int_save\"\n                        @click=\"edit_intent()\"\n                      >\n                        Save\n                      </button>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div v-show=\"intentlist.length === 0 && !spinnerOn\">\n            <p class=\"text-center\">\n              <strong>\n                You currently have No Objectives Added. Please add to\n                continue.</strong\n              >\n            </p>\n          </div>\n          <div\n            class=\"pagin-table\"\n            style=\"margin-top: 2%\"\n            v-show=\"intentlist.length > 0\"\n          >\n            <nav aria-label=\"Page navigation example\">\n              <ul class=\"pagination justify-content-center\">\n                <li class=\"page-item\">\n                  <a\n                    class=\"page-link\"\n                    href=\"#\"\n                    @click=\"\n                      isEditIntent\n                        ? verify_changes()\n                        : page_require(page_no - 1)\n                    \"\n                  >\n                    <svg\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      width=\"8.667\"\n                      height=\"15.204\"\n                      viewBox=\"0 0 8.667 15.204\"\n                    >\n                      <g\n                        id=\"arrow-point-to-left\"\n                        transform=\"translate(105.806 15.204) rotate(180)\"\n                      >\n                        <path\n                          id=\"Path_1136\"\n                          data-name=\"Path 1136\"\n                          d=\"M105.493,8.354l-6.537,6.537a1.065,1.065,0,1,1-1.506-1.506L103.235,7.6,97.45,1.817A1.065,1.065,0,0,1,98.956.312l6.537,6.537a1.065,1.065,0,0,1,0,1.505Z\"\n                          transform=\"translate(0 0)\"\n                          fill=\"#9499ae\"\n                        />\n                      </g>\n                    </svg>\n                  </a>\n                </li>\n                <li\n                  :class=\"'page-item ' + pagination_class(pageno)\"\n                  v-for=\"pageno in page_array\"\n                  :key=\"pageno\"\n                >\n                  <a\n                    v-if=\"pageno == '...s' || pageno == '...l'\"\n                    class=\"page-link\"\n                    href=\"#\"\n                    @click=\"\n                      isEditIntent ? verify_changes() : page_require(pageno)\n                    \"\n                    >...</a\n                  >\n                  <a\n                    v-if=\"pageno != '...s' && pageno != '...l'\"\n                    class=\"page-link\"\n                    href=\"#\"\n                    @click=\"\n                      isEditIntent ? verify_changes() : page_require(pageno)\n                    \"\n                    >{{ pageno }}</a\n                  >\n                </li>\n                <li class=\"page-item\">\n                  <a\n                    class=\"page-link\"\n                    href=\"#\"\n                    @click=\"\n                      isEditIntent\n                        ? verify_changes()\n                        : page_require(page_no + 1)\n                    \"\n                  >\n                    <svg\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      width=\"8.667\"\n                      height=\"15.204\"\n                      viewBox=\"0 0 8.667 15.204\"\n                    >\n                      <g\n                        id=\"arrow-point-to-right\"\n                        transform=\"translate(-97.139 0)\"\n                      >\n                        <path\n                          id=\"Path_1136\"\n                          data-name=\"Path 1136\"\n                          d=\"M105.493,8.354l-6.537,6.537a1.065,1.065,0,1,1-1.506-1.506L103.235,7.6,97.45,1.817A1.065,1.065,0,0,1,98.956.312l6.537,6.537a1.065,1.065,0,0,1,0,1.505Z\"\n                          transform=\"translate(0 0)\"\n                          fill=\"#9499ae\"\n                        />\n                      </g>\n                    </svg>\n                  </a>\n                </li>\n              </ul>\n            </nav>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div\n      id=\"intentmodel\"\n      class=\"modal fade dash-modal\"\n      role=\"dialog\"\n      data-backdrop=\"static\"\n      data-keyboard=\"false\"\n    >\n      <div class=\"modal-dialog modal-lg\">\n        <div class=\"modal-content\">\n          <div class=\"modal-body\">\n            <div class=\"modal-head d-flex align-items-center\">\n              <div class=\"head-icn\">\n                <img src=\"/img/msg-blue.png\" alt />\n              </div>\n              <h3>Add Objective</h3>\n              <button type=\"button\" class=\"close\" data-dismiss=\"modal\">\n                <img src=\"/img/close-icn.png\" alt />\n              </button>\n            </div>\n            <div class=\"form-group\">\n              <h5 class=\"heading\">Objective</h5>\n              <label class=\"form-text text-muted\"\n                >(Only Alphabets, Numbers and _ allowed. No special characters.\n                maximum 25 characters allowed.)</label\n              >\n              <input\n                type=\"text\"\n                v-model.trim=\"new_intents\"\n                class=\"form-control\"\n                placeholder=\"Enter objective\"\n                maxlength=\"25\"\n                id=\"enter_intent_id\"\n                v-on:keyup=\"enterintentid()\"\n                @keydown=\"intent_name_check_special_characters($event)\"\n              />\n              <span v-show=\"intent_already_exists\" style=\"color: red\"\n                >An objective with this name already exists.</span\n              >\n            </div>\n            <div class=\"form-group\">\n              <h5 class=\"heading\">Objective Description (Optional)</h5>\n              <textarea\n                v-model=\"new_intent_description\"\n                id=\"enter_intent_description_id\"\n                placeholder=\"Add description to this objective\"\n                class=\"form-control py-2 px-3\"\n                type=\"text\"\n                rows=\"2\"\n              ></textarea>\n            </div>\n            <div class=\"form-group\">\n              <button\n                id=\"add_question_button\"\n                class=\"darkblue-btn\"\n                style=\"padding: 5px 10px; float: right\"\n                @click=\"add_to_questions_list('add')\"\n              >\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  width=\"14\"\n                  height=\"13.997\"\n                  viewBox=\"0 0 14 13.997\"\n                >\n                  <path\n                    id=\"Union_13\"\n                    data-name=\"Union 13\"\n                    d=\"M-12684,2058v-5h-5a1,1,0,0,1-1-1,1,1,0,0,1,1-1h5v-5a1,1,0,0,1,1-1,1,1,0,0,1,1,1v5h5a1,1,0,0,1,1,1,1,1,0,0,1-1,1h-5v5a1,1,0,0,1-1,1A1,1,0,0,1-12684,2058Z\"\n                    transform=\"translate(12690.001 -2045.002)\"\n                    fill=\"#fff\"\n                  />\n                </svg>\n              </button>\n              <h5 class=\"heading\">User Example</h5>\n              <label class=\"pr-5 form-text text-muted\">\n                Add unique example of what the user might say.<br />\n                (pro tip: add at least 5 unique example to help cense\n                understand)\n              </label>\n            </div>\n            <div\n              v-for=\"(new_question, index) in add_questions_list\"\n              :key=\"index\"\n              class=\"form-group\"\n              style=\"display: flex\"\n            >\n              <input\n                type=\"text\"\n                v-model.trim=\"add_questions_list[index]\"\n                class=\"form-control pl-3\"\n                placeholder=\"Type a user example here. e.g I want to pay my credit card bill\"\n                :id=\"`enter_question_id_${index}`\"\n              />\n              <span\n                v-if=\"add_questions_list.length > 1\"\n                style=\"cursor: pointer\"\n                class=\"my-auto ml-2 mr-0\"\n                @click=\"add_to_questions_list('remove', index)\"\n              >\n                <i style=\"font-size: 16px\" class=\"fa\">&#xf00d;</i>\n              </span>\n            </div>\n          </div>\n          <div class=\"modal-footer\">\n            <div class=\"btn-wrap card-act text-right mt-0 py-0 border-top-0\">\n              <button\n                type=\"button\"\n                class=\"btn btn-link\"\n                data-dismiss=\"modal\"\n                @click=\"empty_variable\"\n              >\n                Cancel\n              </button>\n              <button\n                type=\"submit\"\n                class=\"darkblue-btn\"\n                id=\"res_n_int_save\"\n                @click=\"save_intent_user_example()\"\n              >\n                Save\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div\n      class=\"modal fade dash-modal\"\n      id=\"file_upload\"\n      tabindex=\"-1\"\n      role=\"dialog\"\n      aria-labelledby=\"exampleModalCenterTitle\"\n      aria-hidden=\"true\"\n      data-backdrop=\"static\"\n      data-keyboard=\"false\"\n    >\n      <div class=\"modal-dialog modal-dialog-centered\" role=\"document\">\n        <div class=\"modal-content\">\n          <div class=\"modal-body\">\n            <div class=\"modal-head d-flex align-items-center\">\n              <div class=\"head-icn\">\n                <img src=\"/img/msg-blue.png\" alt />\n              </div>\n              <h3>Upload CSV File</h3>\n            </div>\n            <button\n              type=\"button\"\n              class=\"close\"\n              data-dismiss=\"modal\"\n              aria-label=\"Close\"\n              @click=\"empty_variable\"\n            >\n              <img src=\"/img/close-icn.png\" alt />\n            </button>\n            <form @submit=\"file_submit\">\n              <div class=\"form-group\">\n                <div class=\"custom-file\">\n                  <input\n                    type=\"file\"\n                    accept=\".csv\"\n                    class=\"custom-file-input\"\n                    @change=\"fileinput_csv\"\n                    id=\"inputGroupFilecsv\"\n                    aria-describedby=\"inputGroupFileAddoncsv\"\n                  />\n                  <label\n                    style=\"font-weight: 400; line-height: 15px\"\n                    class=\"custom-file-label form-control\"\n                    for=\"file\"\n                    >{{ file_label_csv }}</label\n                  >\n                </div>\n              </div>\n              <div class=\"btn-wrap text-right\">\n                <a href=\"#\" @click=\"download_sample_file\">\n                  Download Sample CSV File\n                  <i\n                    class=\"fa fa-spinner fa-spin\"\n                    v-show=\"spinnerOnFileDownload\"\n                  ></i>\n                </a>\n                <button\n                  type=\"button\"\n                  class=\"btn btn-link\"\n                  @click=\"empty_variable\"\n                  data-dismiss=\"modal\"\n                >\n                  Cancel\n                </button>\n                <button type=\"submit\" class=\"darkblue-btn\">Submit</button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\nimport Swal from \"sweetalert2\";\nimport api_calls from \"@/portal/api_calls\";\nimport Template from \"../Template.vue\";\nimport { VueEditor } from \"vue2-editor\";\nimport { freeze_portal,show_subscription_expired_swal } from \"@/portal/mixins\";\nexport default {\n  components: { Template, VueEditor },\n  name: \"intents_component\",\n  mixins: [freeze_portal,show_subscription_expired_swal],\n  data() {\n    return {\n      pencil_svg:\n        ' <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"15.546\" height=\"15.461\" viewBox=\"0 0 15.546 15.461\"><defs><style>.a{fill:#9e9e9e;}</style></defs><g transform=\"translate(-747.888 -356.769)\"><path class=\"a\" d=\"M759.416,356.769a2.358,2.358,0,0,1,1.777.662c.534.513,1.072,1.025,1.567,1.575a2.3,2.3,0,0,1-.071,3.325c-2.736,2.76-5.494,5.5-8.238,8.251a1.381,1.381,0,0,1-.758.288c-.719.174-1.429.379-2.144.572-.932.251-1.862.5-2.795.751-.6.158-.989-.213-.832-.807q.689-2.595,1.406-5.182a1.164,1.164,0,0,1,.289-.487q4.091-4.107,8.2-8.2A2.265,2.265,0,0,1,759.416,356.769Zm-1.989,2.956-6.54,6.538,3.025,3.024,6.538-6.537Zm4.023,2.165c.118-.135.225-.269.343-.392a1.134,1.134,0,0,0,0-1.734c-.46-.466-.926-.925-1.388-1.39a1.166,1.166,0,0,0-.861-.368c-.578,0-.881.4-1.214.76Zm-12.084,8.863,3.2-.863-2.337-2.331Z\" transform=\"translate(0)\"/><path class=\"a\" d=\"M813.942,422.6l-.789-.8,3.821-3.819.784.8Z\" transform=\"translate(-59.648 -55.947)\"/></g></svg>',\n      spinnerOn: false,\n      new_intent_description: \"\",\n      intent_already_exists: false,\n      intent_already_exists_edit: false,\n      page_no: 1,\n      per_page: 15,\n      page_array: [],\n      total_pages: null,\n      number_of_rows: null,\n      checked_list: [],\n      isVisibleSearchClear: false,\n      new_intents: \"\",\n      add_questions_list: [\"\"],\n      old_intent_name: \"\",\n      old_question_list: [],\n      intentlist: [],\n      companyname: \"\",\n      companyid: \"\",\n      search_name: \"\",\n      isEditIntent: false,\n      selected_intent_description: \"\",\n      is_search_active: false,\n      selected_intent_questions: [\"\"],\n      current_selected_intent: \"\",\n      current_selected_intent_index: 0,\n      intent_core_model_inprogress: false,\n      spinnerOnFileDownload: false,\n      file_label_csv: \"Choose file\",\n    };\n  },\n  created() {\n    if (this.$session.get(\"UserInformation\").role == \"SuperAdmin\") {\n      this.companyid = this.$session.get(\"CompanyId\");\n      this.companyname = this.$session.get(\"CompanyName\");\n    } else {\n      this.companyid = this.$session.get(\"UserInformation\").company_id;\n      this.companyname = this.$session.get(\"UserInformation\").company_name;\n    }\n    this.load_intent();\n    this.check_intent_core_model_status();\n  },\n  mounted() {\n    setTimeout(() => {\n      this.freeze_portal();\n    }, 1000);\n    this.$root.$on(\"intents_componentDisabled\", (data) => {\n      if(data===true){\n        this.show_subscription_expired_swal();\n      }\n    });\n    var vm = this;\n    $(\"#selectall\").click(function () {\n      if ($(this).is(\":checked\")) {\n        // $('div:input').prop('checked',true);\n        $(\"input:checkbox\").prop(\"checked\", true);\n      } else {\n        vm.checked_list = [];\n        $(\"input:checkbox\").prop(\"checked\", false);\n      }\n    });\n    $(\"#intentmodel\").on(\"hidden.bs.modal\", function (e) {\n      vm.empty_variable();\n    });\n    $('a[data-target=\"#intentmodel\"]').on(\"click\", function () {\n      if (vm.isEditIntent == true) {\n        vm.verify_changes();\n      } else {\n        vm.empty_variable();\n        $(\"#intentmodel\").modal(\"show\");\n      }\n    });\n    this.$root.$on(\"send_model_status\", data =>{\n      if (data == true){\n        this.check_intent_core_model_status();\n      }\n    });\n  },\n  watch: {\n    search_name() {\n      if (this.search_name === \"\") {\n        this.load_intent();\n        this.isVisibleSearchClear = false;\n      } else if (this.search_name !== \"\") {\n        this.isVisibleSearchClear = true;\n      }\n    },\n    new_intents(val) {\n      this.new_intents = val.replace(/[^a-zA-Z0-9_ ]/g, \"\");\n    },\n    current_selected_intent(val) {\n      this.current_selected_intent = val.replace(/[^a-zA-Z0-9_ ]/g, \"\");\n    },\n  },\n  methods: {\n    verify_changes() {\n      Swal({\n        title: \"Are you sure?\",\n        text: \"If you have made any changes to the selected objective please save them first, else they will discarded!\",\n        type: \"warning\",\n        showCancelButton: true,\n        confirmButtonColor: \"#3085d6\",\n        cancelButtonColor: \"#d33\",\n        confirmButtonText: \"Save\",\n        cancelButtonText: \"Cancel\",\n      }).then((result) => {\n        if (result.value) {\n          this.edit_intent();\n        } else {\n          this.show_intents(this.current_selected_intent_index);\n          this.isEditIntent = false;\n        }\n      });\n    },\n    callsearch() {\n      if (event.keyCode === 13) {\n        if (this.isEditIntent) {\n          this.verify_changes();\n        } else {\n          this.search_intent();\n        }\n      }\n    },\n    search_intent(current_selected_intent_index) {\n      if (this.search_name != \"\") {\n        $(\"input:checkbox\").prop(\"checked\", false);\n        this.checked_list = [];\n        this.spinnerOn = true;\n        axios\n          .post(\n            api_calls.form_automation_save_intent_example(),\n            {\n              company_id: this.companyid,\n              company_name: this.companyname,\n              license_key: this.$session.get(\"UserInformation\").license_key,\n              email: this.$session.get(\"UserInformation\").email,\n              token: this.$session.get(\"UserInformation\").tokens,\n              subscription: \"Platinum\",\n              is_search: true,\n              search_key: this.search_name,\n              per_page: this.per_page,\n              page_no: 1,\n            },\n            {\n              headers: {\n                Authorization: `Bearer ${this.$session.get(\"at\")}`,\n              },\n            }\n          )\n          .then((response) => {\n            this.spinnerOn = false;\n            if (response.data.MSG == \"No Results Found\") {\n              Swal({\n                text: \"No Results Found\",\n                toast: true,\n                position: \"top-end\",\n                type: \"warning\",\n                showConfirmButton: false,\n                timer: 2000,\n              });\n            } else if (\n              response.data.MSG != \"Internal Server Error\" &&\n              response.data.MSG != \"No Intents Found\"\n            ) {\n              this.intentlist = [];\n              this.page_no = 1;\n              if (response.data != \"token invalid\") {\n                this.number_of_rows = response.data.pagecount;\n                this.total_pages = Math.ceil(\n                  this.number_of_rows / this.per_page\n                );\n                this.intentlist = response.data.ResponseList;\n                for (var i = 0; i < this.intentlist.length; i++) {\n                  this.intentlist[i].Intent = this.intentlist[i].Intent;\n                }\n                if (this.intentlist.length > 0) {\n                  this.is_search_active = true;\n                  if (Boolean(current_selected_intent_index)) {\n                    this.show_intents(current_selected_intent_index);\n                  } else {\n                    this.show_intents(0);\n                  }\n                }\n                this.setpagination(this.page_no);\n              }\n            } else if (response.data == \"Internal Server Error\") {\n              Swal({\n                text: \"Internal Server Error\",\n                toast: true,\n                position: \"top-end\",\n                type: \"warning\",\n                showConfirmButton: false,\n                timer: 2000,\n              });\n              this.load_intent();\n            } else {\n              Swal({\n                text: \"Internal Server Error\",\n                toast: true,\n                position: \"top-end\",\n                type: \"warning\",\n                showConfirmButton: false,\n                timer: 2000,\n              });\n              this.load_intent();\n            }\n          })\n          .catch((e) => {\n            this.spinnerOn = false;\n            if (\n              e.response.status === 410 ||\n              e.response.status === 440 ||\n              e.response.status === 409\n            ) {\n              this.$root.$emit(\"Session_Expired\", e.response.data);\n            }\n          });\n      } else {\n        Swal({\n          text: \"Enter proper data for searching\",\n          toast: true,\n          position: \"top-end\",\n          type: \"warning\",\n          showConfirmButton: false,\n          timer: 2500,\n        });\n      }\n    },\n    check_current_intent(index) {\n      var return_var = \"\";\n      if (\n        this.intentlist[index].Intent == this.current_selected_intent_highlight\n      ) {\n        return_var += \"current-active-intent\";\n      }\n      return return_var;\n    },\n    clear_search_name() {\n      this.search_name = \"\";\n    },\n    add_to_questions_list(type, index) {\n      if (!this.isEditIntent) {\n        if (type == \"add\") {\n          this.add_questions_list.unshift(\"\");\n        } else if (type == \"remove\") {\n          this.add_questions_list.splice(index, 1);\n        }\n      } else {\n        if (type == \"add\") {\n          this.selected_intent_questions.unshift(\"\");\n        } else if (type == \"remove\") {\n          this.selected_intent_questions.splice(index, 1);\n        }\n      }\n    },\n    show_intents(index) {\n      this.isEditIntent = false;\n      var clone_selected_intent = JSON.parse(\n        JSON.stringify(this.intentlist[index])\n      );\n      this.current_selected_intent_index = index;\n      this.current_selected_intent = clone_selected_intent.Intent;\n      this.current_selected_intent_highlight = clone_selected_intent.Intent;\n      this.selected_intent_questions = clone_selected_intent.Questions;\n      this.old_question_list = this.selected_intent_questions;\n      this.selected_intent_description =\n        clone_selected_intent.IntentDescription;\n      this.old_intent_name = this.current_selected_intent;\n    },\n    // This is for checking while entering a intent name if it already exists or not\n    enterintentid() {\n      let intent_search_key = this.new_intents;\n      axios\n        .post(\n          api_calls.intent_question_response(),\n          {\n            company_name: this.companyname,\n            company_id: this.companyid,\n            email: this.$session.get(\"UserInformation\").email,\n            license_key: this.$session.get(\"UserInformation\").license_key,\n            token: this.$session.get(\"UserInformation\").tokens,\n            subscription: this.$session.get(\"UserInformation\").subscription,\n            is_intent_search: true,\n            intent_search_key: this.new_intents,\n          },\n          {\n            headers: {\n              Authorization: `Bearer ${this.$session.get(\"at\")}`,\n            },\n          }\n        )\n        .then((response) => {\n          if (\n            response.data == \"Not Exists\" &&\n            this.new_intents === intent_search_key\n          ) {\n            this.intent_already_exists = false;\n            document.getElementById(\"enter_intent_id\").style.border = null;\n            if (this.new_intents != \"\") {\n              document.getElementById(\"enter_intent_id\").style.border =\n                \"1px solid #00f000\";\n            }\n          } else if (\n            response.data == \"Already Exists\" &&\n            this.new_intents === intent_search_key\n          ) {\n            this.intent_already_exists = true;\n            document.getElementById(\"enter_intent_id\").style.border =\n              \"1px solid red\";\n          }\n        })\n        .catch((e) => {\n          if (\n            e.response.status === 410 ||\n            e.response.status === 440 ||\n            e.response.status === 409 ||\n            e.response.status === 401\n          ) {\n            this.$root.$emit(\"Session_Expired\", e.response.data);\n          }\n        });\n    },\n    // This is for checking while editing and entering a objective name if it already exists or not\n    enterintentid_edit() {\n      axios\n        .post(\n          api_calls.intent_question_response(),\n          {\n            company_name: this.companyname,\n            company_id: this.companyid,\n            email: this.$session.get(\"UserInformation\").email,\n            license_key: this.$session.get(\"UserInformation\").license_key,\n            token: this.$session.get(\"UserInformation\").tokens,\n            subscription: this.$session.get(\"UserInformation\").subscription,\n            is_intent_search: true,\n            intent_search_key: this.current_selected_intent,\n          },\n          {\n            headers: {\n              Authorization: `Bearer ${this.$session.get(\"at\")}`,\n            },\n          }\n        )\n        .then((response) => {\n          if (response.data == \"Not Exists\") {\n            this.intent_already_exists_edit = false;\n            document.getElementById(\"enter_intent_id_edit\").style.border = null;\n            if (this.current_selected_intent != \"\") {\n              document.getElementById(\"enter_intent_id_edit\").style.border =\n                \"1px solid #00f000\";\n            }\n          } else if (response.data == \"Already Exists\") {\n            if (this.old_intent_name == this.current_selected_intent) {\n              this.intent_already_exists_edit = false;\n              document.getElementById(\"enter_intent_id_edit\").style.border =\n                null;\n            } else {\n              this.intent_already_exists_edit = true;\n              document.getElementById(\"enter_intent_id_edit\").style.border =\n                \"1px solid red\";\n            }\n          }\n        })\n        .catch((e) => {\n          if (\n            e.response.status === 410 ||\n            e.response.status === 440 ||\n            e.response.status === 409\n          ) {\n            this.$root.$emit(\"Session_Expired\", e.response.data);\n          }\n        });\n    },\n    edit_intent_details() {\n      if (!this.isEditIntent) {\n        this.isEditIntent = true;\n      } else {\n        this.isEditIntent = false;\n      }\n      return;\n    },\n    delete_selected() {\n      if (this.checked_list.length == 0) {\n        Swal({\n          type: \"warning\",\n          text: \"No Objectives Selected !\",\n          timer: 2000,\n        });\n      } else if (this.checked_list.length > 0) {\n        var new_intent_list = [];\n        for (var i in this.checked_list) {\n          new_intent_list.push(this.checked_list[i]);\n        }\n        Swal.fire({\n          title: \"Are you sure?\",\n          text: \"You won't be able to revert this!\",\n          type: \"warning\",\n          showCancelButton: true,\n          confirmButtonColor: \"#3085d6\",\n          cancelButtonColor: \"#d33\",\n          confirmButtonText: \"Yes, delete!!\",\n        }).then((result) => {\n          if (result.value) {\n            this.spinnerOn = true;\n            axios\n              .post(\n                api_calls.intent_question_response(),\n                {\n                  intent_list: new_intent_list,\n                  is_delete: true,\n                  company_name: this.companyname,\n                  company_id: this.companyid,\n                  email: this.$session.get(\"UserInformation\").email,\n                  license_key: this.$session.get(\"UserInformation\").license_key,\n                  token: this.$session.get(\"UserInformation\").tokens,\n                  subscription: \"Platinum\",\n                },\n                {\n                  headers: {\n                    Authorization: `Bearer ${this.$session.get(\"at\")}`,\n                  },\n                }\n              )\n              .then((response) => {\n                this.spinnerOn = false;\n                if (response.data == \"INTENTS DELETED\") {\n                  Swal({\n                    type: \"success\",\n                    text: \"Your objective(s) have been deleted.\",\n                    timer: 2000,\n                  }).then((result) => {});\n                  if (\n                    this.checked_list.length === this.intentlist.length &&\n                    this.page_no > 1\n                  ) {\n                    this.page_no = this.page_no - 1;\n                  }\n                } else if (\n                  response.data ==\n                  \"Intent(s) used in dialog, deleted successfully. INTENTS DELETED\"\n                ) {\n                  Swal({\n                    type: \"info\",\n                    text: \"Objective has been deleted, that is used in dialog node(s). Please modify this in dialog node(s) also\",\n                    timer: 8000,\n                  });\n                  if (\n                    this.checked_list.length === this.intentlist.length &&\n                    this.page_no > 1\n                  ) {\n                    this.page_no = this.page_no - 1;\n                  }\n                } else if (response.data == \"Nothing to delete!\") {\n                  Swal({\n                    type: \"warning\",\n                    text: \"You have not selected any objective to be deleted.\",\n                    timer: 2500,\n                  });\n                } else if (\n                  response.data ==\n                  \"Trained intent has been deleted. Please Train the Model Again to See Reflected Changes\"\n                ) {\n                  Swal({\n                    type: \"info\",\n                    text: \"Trained objective has been deleted. Please Train the Model Again to See Reflected Changes\",\n                    timer: 3000,\n                  });\n                  if (\n                    this.checked_list.length === this.intentlist.length &&\n                    this.page_no > 1\n                  ) {\n                    this.page_no = this.page_no - 1;\n                  }\n                } else if (\n                  response.data ==\n                  \"Intent(s) used in dialog, deleted successfully. Trained intent has been deleted. Please Train the Model Again to See Reflected Changes\"\n                ) {\n                  Swal({\n                    type: \"info\",\n                    text: \"Trained objective has been deleted. Please Train the Model Again to See Reflected Changes and this objective is used in dialog node(s) also. Please modify this in dialog node(s)\",\n                    timer: 10000,\n                  });\n                  if (\n                    this.checked_list.length === this.intentlist.length &&\n                    this.page_no > 1\n                  ) {\n                    this.page_no = this.page_no - 1;\n                  }\n                } else {\n                  Swal({\n                    type: \"error\",\n                    text: \"Internal Server Error\",\n                    timer: 2000,\n                  });\n                  // this.load_intent();\n                }\n                this.checked_list = [];\n                $(\"input:checkbox\").prop(\"checked\", false);\n                this.load_intent();\n              })\n              .catch((e) => {\n                this.spinnerOn = false;\n                if (\n                  e.response.status === 410 ||\n                  e.response.status === 440 ||\n                  e.response.status === 409\n                ) {\n                  this.$root.$emit(\"Session_Expired\", e.response.data);\n                }\n                this.load_intent();\n              });\n          }\n        });\n      }\n    },\n    edit_intent() {\n      if (this.old_intent_name == this.current_selected_intent) {\n        var intent_to_send = null;\n      } else {\n        var intent_to_send = this.old_intent_name;\n      }\n      if (this.intent_already_exists_edit) {\n        toastr.error(\"An objective with this name already exists.\");\n        window.scrollTo(0, 0);\n        return;\n      }\n      if (this.current_selected_intent == \"\") {\n        Swal({\n          text: \"Please enter an objective name\",\n          toast: true,\n          position: \"top-end\",\n          type: \"warning\",\n          showConfirmButton: false,\n          timer: 2500,\n        });\n        return;\n      }\n      if (this.selected_intent_questions.length > 0) {\n        for (let i = 0; i < this.selected_intent_questions.length; i++) {\n          if (\n            this.selected_intent_questions[i] === \"\" ||\n            this.selected_intent_questions[i] === null\n          ) {\n            // toastr.error(\"Questions cannot be blank\");\n            Swal({\n              text: \"Questions cannot be blank\",\n              toast: true,\n              position: \"top-end\",\n              type: \"warning\",\n              showConfirmButton: false,\n              timer: 2500,\n            });\n            return;\n          }\n        }\n      }\n      this.spinnerOn = true;\n      axios\n        .post(\n          api_calls.form_automation_save_intent_example(),\n          {\n            company_name: this.companyname,\n            company_id: this.companyid,\n            email: this.$session.get(\"UserInformation\").email,\n            license_key: this.$session.get(\"UserInformation\").license_key,\n            token: this.$session.get(\"UserInformation\").tokens,\n            edit_intent: true,\n            old_intent_name: intent_to_send,\n            old_question_list: this.old_question_list,\n            intent: this.current_selected_intent,\n            intent_description: this.selected_intent_description,\n            question_list: this.selected_intent_questions,\n          },\n          {\n            headers: {\n              Authorization: `Bearer ${this.$session.get(\"at\")}`,\n            },\n          }\n        )\n        .then((response) => {\n          this.spinnerOn = false;\n          if (response.data.MSG == \"Intent Question Edited Successfully\") {\n            Swal({\n              text: \"Intent edited successfully\",\n              type: \"success\",\n              timer: 3500,\n              title: \"Success\",\n              toast: true,\n              position: \"top-right\",\n            });\n            if (this.is_search_active === true) {\n              this.search_intent(this.current_selected_intent_index);\n            } else {\n              this.load_intent(this.current_selected_intent_index);\n            }\n          } else if (\n            response.data.Msg == \"Used Intent Name Edited Successfully\"\n          ) {\n            Swal({\n              type: \"info\",\n              text: \"Intent has been edited, that is used in dialog node(s). Please modify this in dialog node(s) also\",\n              allowOutsideClick: false,\n              allowEscapeKey: false,\n              timer: 7500,\n            }).then((result) => {\n              if (this.is_search_active === true) {\n                this.search_intent(this.current_selected_intent_index);\n              } else {\n                this.load_intent(this.current_selected_intent_index);\n              }\n            });\n          } else if (\n            response.data.MSG == \"Intent Question Not Edited Successfully\"\n          ) {\n            Swal({\n              type: \"error\",\n              text: \"There was an internal server error. Please try again.\",\n              timer: 2500,\n            });\n          } else {\n            Swal({\n              type: \"error\",\n              text: \"There was an internal server error. Please try again.\",\n              timer: 2500,\n            });\n          }\n        })\n        .catch((e) => {\n          this.spinnerOn = false;\n          if (\n            e.response.status === 410 ||\n            e.response.status === 440 ||\n            e.response.status === 409\n          ) {\n            this.$root.$emit(\"Session_Expired\", e.response.data);\n          } else {\n            Swal({\n              type: \"error\",\n              text: \"There was an internal server error. Please try again.\",\n              timer: 2500,\n            });\n          }\n        });\n    },\n    show_model_progress(index){\n      if(this.intent_core_model_inprogress == true){\n         if (index == 'style'){\n            return \"cursor: not-allowed\";\n          }\n          else if(index == 'title'){\n            return \"Training in Progress (This process might take around 30 mins to finish) \";\n          }\n      }\n      else{\n        return null;\n      }\n    },\n    check_intent_core_model_status(){\n      this.model_status = this.$session.get(\"ModelStatus\");\n      if (this.model_status == \"No Failure\"){\n        this.intent_core_model_inprogress = false;\n      }\n      else if(Boolean(this.model_status.intent_model) === true\n      || Boolean(this.model_status.dialogue_model) === true)\n      {\n        if(this.model_status.intent_model == \"InProgress\" || this.model_status.dialogue_model == \"InProgress\"){\n          this.intent_core_model_inprogress = true;\n      }\n      else{\n        this.intent_core_model_inprogress = false;\n      }\n      }\n      else{\n        this.intent_core_model_inprogress = false; \n      }\n    },\n    train_model() {\n      Swal({\n        title: \"Are You Sure?\",\n        text: \"You want to Train The Model?\",\n        type: \"question\",\n        showCancelButton: true,\n        confirmButtonColor: \"#3085d6\",\n        cancelButtonColor: \"#d33\",\n        confirmButtonText: \"Yes, Confirm!\",\n        allowOutsideClick: false,\n        allowEscapeKey: false,\n      }).then((result) => {\n        if (result.value) {\n          this.spinnerOn = true;\n          axios\n            .post(\n              api_calls.train_model(),\n              {\n                email: this.$session.get(\"UserInformation\").email,\n                license_key: this.$session.get(\"UserInformation\").license_key,\n                token: this.$session.get(\"UserInformation\").tokens,\n                subscription: this.$session.get(\"UserInformation\").subscription,\n                company_name: this.companyname,\n                company_id: this.companyid,\n              },\n              {\n                headers: {\n                  Authorization: `Bearer ${this.$session.get(\"at\")}`,\n                },\n              }\n            )\n            .then((response) => {\n              this.spinnerOn = false;\n              this.want_status = true;\n              this.$root.$emit(\"want_model_status\",this.want_status);\n              this.check_intent_core_model_status();\n              if (response.data.MSG_CODE === 4046) {\n                toastr.success(response.data.MSG);\n              } else if (response.data.MSG_CODE === 1034) {\n                toastr.error(response.data.MSG);\n              } else {\n                toastr.error(\"Internal Server Error\");\n              }\n            })\n            .catch((e) => {\n              this.spinnerOn = false;\n              if (\n                e.response.status === 410 ||\n                e.response.status === 440 ||\n                e.response.status === 409\n              ) {\n                this.$root.$emit(\"Session_Expired\", e.response.data);\n              }\n            });\n        }\n      });\n    },\n    selected_intents(Intent) {\n      if (Intent == \"all\") {\n        if (event.target.checked) {\n          this.checked_list = [];\n          this.checked_list = this.intentlist.map((item) => {\n            return item.Intent;\n          });\n          $(\"input:checkbox\").prop(\"checked\", false);\n          for (let i = 0; i < this.checked_list.length; i++) {\n            $(\"#intent_checkbox_\" + this.checked_list[i]).prop(\"checked\", true);\n            $(\"#selectall\").prop(\"checked\", true);\n          }\n        } else if (!event.target.checked) {\n          this.checked_list = [];\n        }\n      } else {\n        if (event.target.checked == true) {\n          let val_index = this.checked_list.filter((intents) => {\n            return intents.Intent == Intent;\n          });\n          if (val_index.length == 0) {\n            this.checked_list.push(Intent);\n          }\n        } else if (event.target.checked == false) {\n          var selectall = document.querySelector(\"#selectall\");\n          if (selectall.checked == true) {\n            selectall.checked = false;\n          }\n          let temp = this.checked_list.filter((intents) => {\n            return intents != Intent;\n          });\n          this.checked_list = temp;\n        }\n      }\n    },\n    intent_name_check_special_characters(e) {\n      if (/^[^a-zA-Z0-9_ ]*$/.test(e.key)) {\n        e.preventDefault();\n      }\n    },\n    load_intent(current_selected_intent_index) {\n      // this.intentlist = [];\n      this.is_search_active = false;\n      this.search_name = \"\";\n      $(\"input:checkbox\").prop(\"checked\", false);\n      this.checked_list = [];\n      this.spinnerOn = true;\n      axios\n        .post(\n          api_calls.form_automation_save_intent_example(),\n          {\n            is_get: true,\n            company_name: this.companyname,\n            company_id: this.companyid,\n            email: this.$session.get(\"UserInformation\").email,\n            license_key: this.$session.get(\"UserInformation\").license_key,\n            token: this.$session.get(\"UserInformation\").tokens,\n            page_no: this.page_no,\n            per_page: this.per_page,\n          },\n          {\n            headers: {\n              Authorization: `Bearer ${this.$session.get(\"at\")}`,\n            },\n          }\n        )\n        .then((response) => {\n          this.spinnerOn = false;\n          if (response.status == 200) {\n            this.number_of_rows = response.data.pagecount;\n            this.total_pages = Math.ceil(this.number_of_rows / this.per_page);\n            this.intentlist = response.data.data;\n            if (this.intentlist.length > 0) {\n              if (Boolean(current_selected_intent_index)) {\n                this.show_intents(current_selected_intent_index);\n              } else {\n                this.show_intents(0);\n              }\n            }\n          }\n          this.setpagination(this.page_no);\n        })\n        .catch((e) => {\n          this.spinnerOn = false;\n          if (\n            e.response.status === 410 ||\n            e.response.status === 440 ||\n            e.response.status === 409\n          ) {\n            this.$root.$emit(\"Session_Expired\", e.response.data);\n          }\n        });\n    },\n    page_require(page) {\n      $(\"input:checkbox\").prop(\"checked\", false);\n      this.checked_list = [];\n      if (page == 0 || page == this.total_pages + 1) {\n      } else {\n        if (this.search_name == \"\") {\n          if (page == \"...s\") {\n            this.page_no = Math.ceil((1 + this.page_no) / 2);\n          } else if (page == \"...l\") {\n            this.page_no = Math.ceil((this.total_pages + this.page_no) / 2);\n          } else {\n            this.page_no = page;\n          }\n          $(\"input:checkbox\").prop(\"checked\", false);\n          this.spinnerOn = true;\n          axios\n            .post(\n              api_calls.form_automation_save_intent_example(),\n              {\n                intent: this.new_intents,\n                company_name: this.companyname,\n                company_id: this.companyid,\n                email: this.$session.get(\"UserInformation\").email,\n                license_key: this.$session.get(\"UserInformation\").license_key,\n                token: this.$session.get(\"UserInformation\").tokens,\n                subscription: \"Platinum\",\n                is_get: true,\n                page_no: this.page_no,\n                per_page: this.per_page,\n              },\n              {\n                headers: {\n                  Authorization: `Bearer ${this.$session.get(\"at\")}`,\n                },\n              }\n            )\n            .then((response) => {\n              this.spinnerOn = false;\n              this.intentlist = [];\n              this.intentlist = response.data.data;\n              if (this.intentlist.length > 0) {\n                this.show_intents(0);\n              }\n              this.setpagination(this.page_no);\n            })\n            .catch((e) => {\n              this.spinnerOn = false;\n              if (\n                e.response.status === 410 ||\n                e.response.status === 440 ||\n                e.response.status === 409\n              ) {\n                this.$root.$emit(\"Session_Expired\", e.response.data);\n              }\n            });\n        } else {\n          $(\"input:checkbox\").prop(\"checked\", false);\n          if (this.pageno == \"...s\") {\n            this.page_no = Math.ceil((1 + this.page_no) / 2);\n          } else if (this.pageno == \"...l\") {\n            this.page_no = Math.ceil((this.total_pages + this.page_no) / 2);\n          } else {\n            this.page_no = this.pageno;\n          }\n          this.spinnerOn = true;\n          axios\n            .post(\n              api_calls.form_automation_save_intent_example(),\n              {\n                company_id: this.$session.get(\"UserInformation\").company_id,\n                company_name: this.$session.get(\"UserInformation\").company_name,\n                license_key: this.$session.get(\"UserInformation\").license_key,\n                email: this.$session.get(\"UserInformation\").email,\n                token: this.$session.get(\"UserInformation\").tokens,\n                subscription: \"Platinum\",\n                is_search: true,\n                search_key: this.search_name,\n                per_page: this.per_page,\n                page_no: this.page_no,\n              },\n              {\n                headers: {\n                  Authorization: `Bearer ${this.$session.get(\"at\")}`,\n                },\n              }\n            )\n          .then((response) => {\n            this.spinnerOn = false;\n            if (response.data.MSG == \"No Results Found\") {\n              Swal({\n                text: \"No Results Found\",\n                toast: true,\n                position: \"top-end\",\n                type: \"warning\",\n                showConfirmButton: false,\n                timer: 2000,\n              });\n            } else if (\n              response.data.MSG != \"Internal Server Error\" &&\n              response.data.MSG != \"No Intents Found\"\n            ) {\n              this.intentlist = [];\n              if (response.data != \"token invalid\") {\n                this.number_of_rows = response.data.pagecount;\n                this.total_pages = Math.ceil(\n                  this.number_of_rows / this.per_page\n                );\n                this.intentlist = response.data.ResponseList;\n                for (var i = 0; i < this.intentlist.length; i++) {\n                  this.intentlist[i].Intent = this.intentlist[i].Intent;\n                }\n                if (this.intentlist.length > 0) {\n                  this.is_search_active = true;\n                  this.show_intents(0);\n                }\n                this.setpagination(this.page_no);\n              }\n            } else if (response.data == \"Internal Server Error\") {\n              Swal({\n                text: \"Internal Server Error\",\n                toast: true,\n                position: \"top-end\",\n                type: \"warning\",\n                showConfirmButton: false,\n                timer: 2000,\n              });\n              this.load_intent();\n            } else {\n              Swal({\n                text: \"Internal Server Error\",\n                toast: true,\n                position: \"top-end\",\n                type: \"warning\",\n                showConfirmButton: false,\n                timer: 2000,\n              });\n              this.load_intent();\n            }\n          })\n          .catch((e) => {\n            if (\n              e.response.status === 410 ||\n              e.response.status === 440 ||\n              e.response.status === 409\n            ) {\n              this.$root.$emit(\"Session_Expired\", e.response.data);\n            }\n          });\n        }\n      }\n    },\n    save_intent_user_example() {\n      if (this.intent_already_exists) {\n        Swal({\n          text: \"An Objective with this name already exists\",\n          toast: true,\n          position: \"top-end\",\n          type: \"warning\",\n          showConfirmButton: false,\n          timer: 4500,\n        });\n        return;\n      }\n      if (this.new_intents == \"\") {\n        Swal({\n          text: \"Please enter an Objective name\",\n          toast: true,\n          position: \"top-end\",\n          type: \"warning\",\n          showConfirmButton: false,\n          timer: 3500,\n        });\n        return;\n      }\n      if (this.add_questions_list.length > 0) {\n        for (let i = 0; i < this.add_questions_list.length; i++) {\n          if (\n            this.add_questions_list[i] === \"\" ||\n            this.add_questions_list[i] === null\n          ) {\n            Swal({\n              text: \"Please type a user example\",\n              toast: true,\n              position: \"top-end\",\n              type: \"warning\",\n              showConfirmButton: false,\n              timer: 35000,\n            });\n            return;\n          }\n        }\n      }\n      Swal({\n        text: \"Please wait while we are submitting your details...\",\n        type: \"info\",\n        toast: true,\n        showConfirmButton: false,\n      });\n      axios\n        .post(\n          api_calls.form_automation_save_intent_example(),\n          {\n            company_name: this.companyname,\n            company_id: this.companyid,\n            email: this.$session.get(\"UserInformation\").email,\n            license_key: this.$session.get(\"UserInformation\").license_key,\n            token: this.$session.get(\"UserInformation\").tokens,\n            is_save: true,\n            intent: this.new_intents,\n            intent_description: this.new_intent_description,\n            question_list: this.add_questions_list,\n          },\n          {\n            headers: {\n              Authorization: `Bearer ${this.$session.get(\"at\")}`,\n            },\n          }\n        )\n        .then((response) => {\n          this.spinnerOn = false;\n          if (response.data.MSG == \"Intent Saved Successfully\") {\n            Swal({\n              text: \"User example saved successfully\",\n              type: \"success\",\n              timer: 3500,\n              title: \"Success\",\n              toast: true,\n              position: \"top-right\",\n              showConfirmButton: false,\n            });\n            $(\"#intentmodel\").modal(\"hide\");\n            this.empty_variable();\n            this.load_intent();\n          } else if (response.data.MSG == \"Intent Not Saved Successfully\") {\n            Swal({\n              type: \"error\",\n              text: \"There was an internal server error. Please try again.\",\n              timer: 2500,\n            });\n          } else {\n            Swal({\n              type: \"error\",\n              text: \"There was an internal server error. Please try again.\",\n              timer: 2500,\n            });\n          }\n        })\n        .catch((e) => {\n          this.spinnerOn = false;\n          if (\n            e.response.status === 410 ||\n            e.response.status === 440 ||\n            e.response.status === 409\n          ) {\n            this.$root.$emit(\"Session_Expired\", e.response.data);\n          } else {\n            Swal({\n              type: \"error\",\n              text: \"There was an internal server error. Please try again.\",\n              timer: 2500,\n            });\n          }\n        });\n    },\n    setpagination(page_no) {\n      this.page_array = [];\n      if (this.total_pages <= 7) {\n        for (let i = 0; i < this.total_pages; i++) {\n          this.page_array.push(i + 1);\n        }\n      } else if (page_no == 1) {\n        for (let i = 0; i < 4; i++) {\n          this.page_array.push(i + 1);\n        }\n        this.page_array.push(\"...l\");\n        this.page_array.push(this.total_pages);\n      } else if (page_no == this.total_pages) {\n        this.page_array.push(1);\n        this.page_array.push(\"...s\");\n        for (let i = this.total_pages - 4; i < this.total_pages; i++) {\n          this.page_array.push(i + 1);\n        }\n      } else if (page_no <= 4) {\n        for (let i = 0; i < page_no + 3; i++) {\n          this.page_array.push(i + 1);\n        }\n        this.page_array.push(\"...l\");\n        this.page_array.push(this.total_pages);\n      } else if (page_no >= this.total_pages - 4) {\n        this.page_array.push(1);\n        this.page_array.push(\"...s\");\n        for (let i = page_no - 4; i < this.total_pages; i++) {\n          this.page_array.push(i + 1);\n        }\n      } else {\n        this.page_array.push(1);\n        this.page_array.push(\"...s\");\n        for (let i = page_no - 3; i <= page_no + 3; i++) {\n          this.page_array.push(i);\n        }\n        this.page_array.push(\"...l\");\n        this.page_array.push(this.total_pages);\n      }\n    },\n    pagination_class(index) {\n      if (index == this.page_no) {\n        return \" active\";\n      } else {\n        return \"\";\n      }\n    },\n    empty_variable() {\n      this.new_intents = \"\";\n      this.new_intent_description = \"\";\n      this.intent_already_exists = false;\n      this.intent_already_exists_edit = false;\n      this.intents = this.intentlist[0];\n      this.new_intents = \"\";\n      this.add_questions_list = [\"\"];\n      this.isEditIntent = false;\n      document.getElementById(\"enter_intent_id\").style.border = \"\";\n      $(\"input:checkbox\").prop(\"checked\", false);\n    },\n    file_submit() {\n      event.preventDefault();\n      if ($(\"#inputGroupFilecsv\").val() == '') {\n        Swal.fire({\n          title: \"The input field is empty\",\n          text: \"Please Upload a CSV file\",\n          type: \"warning\",\n          showConfirmButton: false,\n          timer: 2500,\n        });\n      }\n      var user_details = {\n        email: this.$session.get(\"UserInformation\").email,\n        token: this.$session.get(\"UserInformation\").tokens,\n        companyname: this.companyname,\n        companyid: this.companyid,\n        license_key: this.$session.get(\"UserInformation\").license_key,\n        is_form_intents: true,\n      };\n      var json = JSON.stringify(user_details);\n      var blob = new Blob([json], {\n        type: \"application/json\",\n      });\n      if (this.file_label_csv == \"Choose file\") {\n      } else {\n        const fd = new FormData();\n        fd.append(\n          \"file\",\n          this.file_content_csv,\n          this.companyname + \"ObjectiveFile.csv\"\n        );\n        fd.append(\"json\", blob);\n        $(\"#file_upload\").modal(\"hide\");\n        this.spinnerOn = true;\n        axios\n          .post(api_calls.upload_file_url(), fd, {\n            headers: {\n              Authorization: `Bearer ${this.$session.get(\"at\")}`,\n            },\n          })\n          .then((response) => {\n            this.spinnerOn = false;\n            if (response.data == \"file uploaded successfully\") {\n              Swal({\n                title: \"File uploaded successfully\",\n                type: \"success\",\n                showConfirmButton: false,\n                timer: 2000,\n              });\n            } else if (response.data.message == \"Incorrect file format\") {\n              Swal({\n                title: \"Incorrect file format\",\n                type: \"warning\",\n                text:\n            \"Users need to download the Sample Intent CSV File from 'Upload CSV File' model. Changes to this file will be accepted by the system.\",\n                // timer: 4000,\n              });\n            } else if (response.data.message == \"File type not supported\") {\n              Swal({\n                title: \"File type not supported\",\n                type: \"warning\",\n                text:\n            \"Users need to download the Sample Intent CSV File from 'Upload CSV File' model. Changes to this file will be accepted by the system.\",\n                // timer: 4000,\n              });\n            } else {\n              Swal({\n                title: \"Some Error Occurred\",\n                type: \"error\",\n              });\n            }\n            this.file_label_csv = \"Choose file\";\n            document.getElementById(\"inputGroupFilecsv\").value = \"\";\n            this.load_intent();\n          })\n          .catch((e) => {\n            if (\n              e.response.status === 410 ||\n              e.response.status === 440 ||\n              e.response.status === 409\n            ) {\n              this.$root.$emit(\"Session_Expired\", e.response.data);\n            }\n          });\n      }\n    },\n    download_sample_file() {\n      event.preventDefault();\n      this.spinnerOnFileDownload = true;\n      axios({\n        method: \"post\",\n        url: api_calls.file_download(),\n        responseType: \"blob\",\n        data: {\n          sample_file: \"objective\",\n          companyid: this.$session.get(\"UserInformation\").company_id,\n          company_name: this.$session.get(\"UserInformation\").company_name,\n          license_key: this.$session.get(\"UserInformation\").license_key,\n          token: this.$session.get(\"UserInformation\").tokens,\n          email: this.$session.get(\"UserInformation\").email,\n        },\n        headers: {\n          Authorization: `Bearer ${this.$session.get(\"at\")}`,\n        },\n      })\n        .then((response) => {\n          $(\"#file_upload\").modal(\"hide\");\n          this.spinnerOnFileDownload = false;\n          if (response.data.message === \"Not able to download file\") {\n            Swal({\n              title: \"Some Error Occurred. Please Try Again\",\n              type: \"error\",\n              timer: 2500,\n            });\n          } else {\n            var url = window.URL.createObjectURL(new Blob([response.data]));\n            var link = document.createElement(\"a\");\n            link.href = url;\n            // console.log(this.companyname)\n            link.setAttribute(\"download\", this.companyname + \"ObjectiveFile.csv\");\n            document.body.appendChild(link);\n            link.click();\n          }\n        })\n        .catch((e) => {\n          $(\"#file_upload\").modal(\"hide\");\n          this.spinnerOnFileDownload = false;\n          Swal({\n            title: \"Some Error Occurred. Please Try Again\",\n            type: \"error\",\n            timer: 2500,\n          });\n          if (\n            e.response.status === 410 ||\n            e.response.status === 440 ||\n            e.response.status === 409\n          ) {\n            this.$root.$emit(\"Session_Expired\", e.response.data);\n          }\n        });\n    },\n    fileinput_csv() {\n      this.file_label_csv = event.target.files[0].name;\n      this.file_content_csv = event.target.files[0];\n    },\n    download_csv() {\n      axios\n        .post(\n          api_calls.question_intent_csv(),\n          {\n            company_name: this.companyname,\n            company_id: this.companyid,\n            email: this.$session.get(\"UserInformation\").email,\n            license_key: this.$session.get(\"UserInformation\").license_key,\n            token: this.$session.get(\"UserInformation\").tokens,\n            is_form_intents: true,\n          },\n          {\n            headers: {\n              Authorization: `Bearer ${this.$session.get(\"at\")}`,\n            },\n          }\n        )\n        .then((response) => {\n          var a = window.document.createElement(\"a\");\n          a.href = response.data.CSV_URL;\n          a.download = true;\n          document.body.appendChild(a);\n          a.click();\n          document.body.removeChild(a);\n        })\n        .catch((e) => {\n          if (\n            e.response.status === 410 ||\n            e.response.status === 440 ||\n            e.response.status === 409\n          ) {\n            this.$root.$emit(\"Session_Expired\", e.response.data);\n          }\n        });\n    },\n  },\n};\n</script>\n\n<style scoped>\n.modal-lg {\n  max-width: 800px !important;\n}\ntextarea {\n  resize: none !important;\n}\n.dash-cont {\n  margin-left: 0px;\n  padding-top: 0px;\n}\n.ScrollStyle {\n  min-height: 0px;\n  max-height: 250px;\n  overflow-y: auto;\n}\n.ScrollStyle thead th {\n  top: 0;\n  position: sticky;\n}\n.ScrollStyle::-webkit-scrollbar {\n  max-height: 10px;\n  width: 7px;\n  height: 7px;\n  border-radius: 10px;\n  overflow-x: hidden;\n}\n.ScrollStyle::-webkit-scrollbar-track {\n  background: #ffffff;\n  border-radius: 10px;\n}\n.ScrollStyle::-webkit-scrollbar-thumb {\n  background: #27397b;\n  border-radius: 10px;\n}\n.ScrollStyle::-webkit-scrollbar-thumb:hover {\n  background: #19295f;\n  border-radius: 10px;\n}\n.table-box tbody tr:hover td,\n.table-box tbody tr:hover th {\n  background: #ececec;\n}\n.edit {\n  line-height: 16px;\n  padding: 10px 15px;\n}\n.current-active-intent {\n  background: rgba(0, 0, 0, 0.1);\n}\n#add_question_button:hover {\n  background: #273679;\n}\nhr {\n  margin-top: 0;\n}\n.edit-column {\n  height: 29px !important;\n}\n.modal {\n  overflow-y: auto;\n}\n.hclass6 {\n  font-weight: 100;\n}\n.noteclass {\n  font-weight: 600;\n}\n.dot {\n  height: 10px;\n  width: 10px;\n  background-color: #bbb;\n  border-radius: 50%;\n  display: inline-block;\n}\n.dot.success {\n  background-color: #273679;\n}\n@-webkit-keyframes rotation {\n  from {\n    -webkit-transform: rotate(0deg);\n  }\n  to {\n    -webkit-transform: rotate(359deg);\n  }\n}\n@-moz-keyframes rotation {\n  from {\n    -moz-transform: rotate(0deg);\n  }\n  to {\n    -moz-transform: rotate(359deg);\n  }\n}\n@-o-keyframes rotation {\n  from {\n    -o-transform: rotate(0deg);\n  }\n  to {\n    -o-transform: rotate(359deg);\n  }\n}\n@keyframes rotation {\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(359deg);\n  }\n}\n</style>\n\n"]}]}