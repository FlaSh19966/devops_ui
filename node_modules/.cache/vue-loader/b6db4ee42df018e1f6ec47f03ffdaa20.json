{"remainingRequest":"/home/vimalesh/Learning/devops_ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/vimalesh/Learning/devops_ui/src/portal/Chatbot/Dashboard/End User Response/VerifyResponsesUnanswered.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/vimalesh/Learning/devops_ui/src/portal/Chatbot/Dashboard/End User Response/VerifyResponsesUnanswered.vue","mtime":1663910265466},{"path":"/home/vimalesh/Learning/devops_ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vimalesh/Learning/devops_ui/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/vimalesh/Learning/devops_ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vimalesh/Learning/devops_ui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["VerifyResponsesUnanswered.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgfile":"VerifyResponsesUnanswered.vue","sourceRoot":"src/portal/Chatbot/Dashboard/End User Response","sourcesContent":["<template>\n<div class=\"table-box\">\n    <div class=\"spinner\" id=\"spinner\" v-show=\"show_loader\"></div>\n    <div class=\"table-responsive mb-0\" style=\"overflow :visible;\">\n    <table class=\"table\">\n        <thead>\n        <tr>\n            <th scope=\"col\">\n            <div class=\"form-check checkbox checkbox-success\">\n                <label class=\"form-check-label\">\n                <input\n                    class=\"form-check-input\"\n                    id=\"selectall\"\n                    type=\"checkbox\"\n                    @change=\"question_selected('all')\"\n                />\n                <span class=\"icn\"></span>\n                </label>\n            </div>\n            </th>\n            <th scope=\"col\" style=\"width: 5%\">{{tlt('unanswered_action_label')}}</th>\n            <th scope=\"col\">{{tlt('unanswered_question_label')}}</th>\n            <th scope=\"col\">{{tlt('unanswered_intent_label')}}</th>\n            <!-- <th scope=\"col\" style=\"width: 2%\">SOURCES</th> -->\n        </tr>\n        </thead>\n        <tbody>\n        <tr\n            v-for=\"(row, index) in unanswered_list\"\n            :key=\"index\"\n            id=\"list-group\"\n        >\n            <!-- <template v-if=\"row.intent === null\"> -->\n            <template>\n            <th scope=\"col\" class=\"table-head\">\n                <div class=\"form-check checkbox checkbox-success\">\n                <label class=\"form-check-label\">\n                    <input\n                    class=\"form-check-input\"\n                    @change=\"question_selected(index)\"\n                    type=\"checkbox\"\n                    />\n                    <span class=\"icn\"></span>\n                </label>\n                </div>\n            </th>\n            <td class=\"action\">\n                <a href=\"#\" @click=\"edit_item(index)\">\n                <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    width=\"15.392\"\n                    height=\"15.392\"\n                    viewBox=\"0 0 15.392 15.392\"\n                    data-toggle=\"modal\"\n                    data-target=\"#exampleModalCenter\"\n                >\n                    <path\n                    id=\"square-edit-outline\"\n                    d=\"M4.71,3A1.7,1.7,0,0,0,3,4.71V16.682a1.71,1.71,0,0,0,1.71,1.71H16.682a1.71,1.71,0,0,0,1.71-1.71V10.7h-1.71v5.986H4.71V4.71H10.7V3H4.71m10.928.855a.591.591,0,0,0-.41.171L14.185,5.061,16.322,7.2l1.043-1.035a.578.578,0,0,0,0-.812L16.04,4.026a.571.571,0,0,0-.4-.171M13.578,5.668l-6.3,6.311v2.138H9.413l6.3-6.311Z\"\n                    transform=\"translate(-3 -3)\"\n                    fill=\"#9499ae\"\n                    />\n                </svg>\n                </a>\n                <a href=\"#\" @click=\"delete_single(index)\">\n                <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    width=\"13.682\"\n                    height=\"15.392\"\n                    viewBox=\"0 0 13.682 15.392\"\n                >\n                    <path\n                    id=\"trash-can-outline\"\n                    d=\"M8.276,3v.855H4v1.71h.855V16.682a1.71,1.71,0,0,0,1.71,1.71h8.551a1.71,1.71,0,0,0,1.71-1.71V5.565h.855V3.855H13.406V3H8.276M6.565,5.565h8.551V16.682H6.565V5.565m1.71,1.71v7.7h1.71v-7.7H8.276m3.42,0v7.7h1.71v-7.7Z\"\n                    transform=\"translate(-4 -3)\"\n                    fill=\"#f23d3d\"\n                    />\n                </svg>\n                </a>\n            </td>\n            <td>{{ row.question }}</td>\n            <td style=\"width: 50%;\">\n                <div class=\"form-group\">\n                <multiselect\n                    v-model=\"row.intent\"\n                    :searchable=\"true\"\n                    :close-on-select=\"true\"\n                    :show-labels=\"false\"\n                    :options=\"intent_list\"\n                >\n                    <span>{{ row.intent }}</span>\n                </multiselect>\n                </div>\n            </td>\n            <!-- <td>{{ row.source }}</td> -->\n            </template>\n        </tr>\n        </tbody>\n    </table>\n    </div>\n    <div class=\"pagin-table\" style=\"margin-top: 0%\">\n    <nav aria-label=\"Page navigation example\">\n        <ul class=\"pagination justify-content-center\">\n        <li class=\"page-item\">\n            <a\n            class=\"page-link\"\n            href=\"#\"\n            @click=\"page_require(page_no - 1)\"\n            >\n            <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"8.667\"\n                height=\"15.204\"\n                viewBox=\"0 0 8.667 15.204\"\n            >\n                <g\n                id=\"arrow-point-to-left\"\n                transform=\"translate(105.806 15.204) rotate(180)\"\n                >\n                <path\n                    id=\"Path_1136\"\n                    data-name=\"Path 1136\"\n                    d=\"M105.493,8.354l-6.537,6.537a1.065,1.065,0,1,1-1.506-1.506L103.235,7.6,97.45,1.817A1.065,1.065,0,0,1,98.956.312l6.537,6.537a1.065,1.065,0,0,1,0,1.505Z\"\n                    transform=\"translate(0 0)\"\n                    fill=\"#9499ae\"\n                />\n                </g>\n            </svg>\n            </a>\n        </li>\n        <li\n            :class=\"'page-item ' + pagination_class(pageno)\"\n            v-for=\"pageno in page_array\"\n            :key=\"pageno\"\n        >\n            <a\n            v-if=\"pageno == '...s' || pageno == '...l'\"\n            class=\"page-link\"\n            href=\"#\"\n            @click=\"page_require(pageno)\"\n            >...</a\n            >\n            <a\n            v-if=\"pageno != '...s' && pageno != '...l'\"\n            class=\"page-link\"\n            href=\"#\"\n            @click=\"page_require(pageno)\"\n            >{{ pageno }}</a\n            >\n            <!-- <a class=\"page-link\" href=\"#\" @click=\"page_require(pageno)\">{{pageno}}</a> -->\n        </li>\n        <li class=\"page-item\">\n            <a\n            class=\"page-link\"\n            href=\"#\"\n            @click=\"page_require(page_no + 1)\"\n            >\n            <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"8.667\"\n                height=\"15.204\"\n                viewBox=\"0 0 8.667 15.204\"\n            >\n                <g\n                id=\"arrow-point-to-right\"\n                transform=\"translate(-97.139 0)\"\n                >\n                <path\n                    id=\"Path_1136\"\n                    data-name=\"Path 1136\"\n                    d=\"M105.493,8.354l-6.537,6.537a1.065,1.065,0,1,1-1.506-1.506L103.235,7.6,97.45,1.817A1.065,1.065,0,0,1,98.956.312l6.537,6.537a1.065,1.065,0,0,1,0,1.505Z\"\n                    transform=\"translate(0 0)\"\n                    fill=\"#9499ae\"\n                />\n                </g>\n            </svg>\n            </a>\n        </li>\n        </ul>\n    </nav>\n    </div>\n     <div\n        class=\"modal fade dash-modal\"\n        id=\"exampleModalCenter\"\n        tabindex=\"-1\"\n        role=\"dialog\"\n        aria-labelledby=\"exampleModalCenterTitle\"\n        aria-hidden=\"true\"\n      >\n        <div class=\"modal-dialog modal-dialog-centered\" role=\"document\">\n          <div class=\"modal-content\">\n            <div class=\"modal-body\">\n              <div class=\"modal-head d-flex align-items-center\">\n                <div class=\"head-icn\">\n                  <img src=\"/img/msg-blue.png\" alt />\n                </div>\n                <h3>{{tlt('unanswered_edit_question_header')}}</h3>\n              </div>\n              <button\n                type=\"button\"\n                class=\"close\"\n                data-dismiss=\"modal\"\n                aria-label=\"Close\"\n              >\n                <img src=\"/img/close-icn.png\" alt />\n              </button>\n              <form >\n                <div class=\"form-group\">\n                  <label>{{tlt('unanswered_your_qs_label')}}</label>\n                  <input\n                    type=\"text\"\n                    class=\"form-control\"\n                    :placeholder=\"tlt('enter_question')\"\n                    v-model=\"old_question\"\n                    id=\"add_question_question\"\n                  />\n                </div>\n                <!-- <div class=\"form-group\">\n                  <label>Select Intent</label>\n                  <multiselect\n                    v-model=\"old_intent\"\n                    id=\"qus_n_int_intent\"\n                    :options=\"intent_list\"\n                    :searchable=\"true\"\n                    :close-on-select=\"true\"\n                    :show-labels=\"false\"\n                  >\n                    <span>{{ old_intent }}</span>\n                  </multiselect>\n                </div> -->\n                <div class=\"btn-wrap text-right\">\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-link\"\n                    data-dismiss=\"modal\"\n                  >\n                    {{tlt('unanswered_edit_cancel_btn')}}\n                  </button>\n                  <button\n                    type=\"submit\"\n                    class=\"darkblue-btn\"\n                    id=\"add_quesn_save\"\n                    @click=\"submit_question\"\n                  >\n                    {{tlt('save_btn')}}\n                  </button>\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n</div>\n</template>\n\n<script>\nimport axios from \"axios\";\nimport swal from \"sweetalert2\";\nimport Swal from \"sweetalert2\";\nimport api_calls from \"@/portal/api_calls\";\nimport { setTimeout } from \"timers\";\nimport Multiselect from \"vue-multiselect\";\nimport {  close_modal } from \"@/portal/mixins\";\n\n\nexport default {\n    name: 'verify_responses_unanswered',\n    components: {\n        Multiselect,\n    },\n      mixins: [close_modal],\n\n    data() {\n        return {\n        unanswered_list: [],\n        user_role: this.$session.get(\"UserInformation\").role,\n        companyname: this.$session.get(\"UserInformation\").company_name,\n        companyid: this.$session.get(\"UserInformation\").company_id,\n        intent_list: [],\n        checked_list: [],\n        intentlist: \"\",\n        per_page: 15,\n        page_no: 1,\n        total_pages: 0,\n        show_loader: false,\n        number_of_rows: null,\n        search_name: \"\",\n        page_array: [],\n        old_question: \"\",\n        old_intent: \"\",\n        new_intent_list: [],\n        old_data: { question: null, intent: null },\n        thumbs_down_icon: require(\"@/portal/assets/img/Group 61.svg\"),\n        thumbs_up_icon: require(\"@/portal/assets/img/Group 71.svg\"),\n        // view_component_name: \"unanswered_questions\",\n        };\n    },\n    mounted() {\n        var vm = this;\n        $(\"#selectall\").click(function () {\n        if ($(this).is(\":checked\")) {\n            $(\"input:checkbox\").prop(\"checked\", true);\n        } else {\n            vm.checked_list = [];\n            $(\"input:checkbox\").prop(\"checked\", false);\n        }\n        });\n        this.$root.$on(\"add_questions_unanswered\", (data) => {\n            // console.log(data);   \n\t        this.add_questions();\n        });\n        this.$root.$on(\"search_unanswered\", (data) => {\n            this.search_name = data;\n            this.search_question();\n            // this.add_questions();\n        });\n        this.$root.$on(\"delete_multiple_unanswered\", (data) => {\n            this.delete_multiple();\n        });\n        this.$root.$on(\"load_verify_responses_unanswered\", (data) => {\n            this.load_verify_responses_unanswered();\n        });\n    },\n    beforeDestroy() {\n        this.$root.$off(\"add_questions_unanswered\");\n        this.$root.$off(\"search_unanswered\");\n        this.$root.$off(\"delete_multiple_unanswered\");\n        this.$root.$off(\"load_verify_responses_unanswered\");\n    },\n    created() {\n        this.load_verify_responses_unanswered();\n    },\n    methods: {\n        load_verify_responses_unanswered(){\n        this.checked_list = [];\n        $(\"input:checkbox\").prop(\"checked\", false);\n        this.show_loader = true;\n        this.intent_list = [];\n        this.new_intent_list = [];\n        this.unanswered_list =[];\n        this.search_name = \"\";\n        if (this.user_role == \"SuperAdmin\") {\n        if (this.$session.has(\"CompanyId\")) {\n            this.companyid = this.$session.get(\"CompanyId\");\n            this.companyname = this.$session.get(\"CompanyName\");\n        } else {\n            this.companyid = this.$session.get(\"UserInformation\").company_id;\n            this.companyname = this.$session.get(\"UserInformation\").company_name;\n        }\n        } else {\n        this.companyid = this.$session.get(\"UserInformation\").company_id;\n        this.companyname = this.$session.get(\"UserInformation\").company_name;\n        }\n        if (this.companyname !== undefined) {\n        axios\n            .post(\n            api_calls.get_unanswered_url(),\n            {\n                company_name: this.companyname,\n                company_id: this.companyid,\n                email: this.$session.get(\"UserInformation\").email,\n                isDelete: \"False\",\n                license_key: this.$session.get(\"UserInformation\").license_key,\n                token: this.$session.get(\"UserInformation\").tokens,\n                page_no: this.page_no,\n                per_page: this.per_page,\n                is_get_user_response: false\n            },\n            {\n                headers: {\n                Authorization: `Bearer ${this.$session.get(\"at\")}`,\n                },\n            }\n            )\n            .then((response) => {\n            this.show_loader = false;\n            if (response.data.message.MSG_CODE === this.api_status_code.DATA_AVAILABLE.MSG_CODE) {\n                this.number_of_rows = response.data.pagination.total_data == undefined ? 0 : response.data.pagination.total_data;\n                this.total_pages = response.data.pagination.total_page == undefined ? 0 : response.data.pagination.total_page;\n                var data = response.data.data;\n                this.unanswered_list = [];\n                for (var i in data[0]) {\n                    let temp_int = \"\";\n                    if (Boolean(data[2][i])) {\n                    // temp_int = data[2][i].replace(this.companyid + \"_\", \"\");\n                    temp_int = data[2][i];\n                    }\n                    this.unanswered_list.push({\n                    question: data[0][i],\n                    intent: temp_int,\n                    source: data[1][i],\n                    user_response: data[2][i],\n                    user_feedback: data[3][i],\n                    edit: false,\n                    });\n                }\n                this.setpagination(this.page_no);\n                this.show_loader = false;            \n            }else if(response.data.message.MSG_CODE === this.api_status_code.NO_DATA_AVAILABLE.MSG_CODE){\n                Swal({\n                text: response.data.message.MSG,\n                showCancelButton: false,\n                showConfirmButton: false,\n                position: \"top-end\",\n                toast: true,\n                timer: 2500,\n                type: \"info\"\n                });    \n            }else {\n                this.show_loader = false;\n                Swal({\n                title: response.data.message.MSG_CODE,\n                text: response.data.message.MSG,\n                showCancelButton: false,\n                showConfirmButton: false,\n                timer: 2500,\n                type: \"error\"\n                });\n            }\n            })\n            .catch((e) => {\n            if (\n                e.response.status === 410 ||\n                e.response.status === 440 ||\n                e.response.status === 409\n            ) {\n                this.$root.$emit(\"Session_Expired\", e.response.data);\n            } else {\n                toastr.error(e.message);\n            }\n            this.show_loader = false;\n            });\n        }\n        axios\n        .post(\n            api_calls.get_unanswered_url(),\n            {\n            company_id: this.companyid,\n            company_name: this.companyname,\n            isDropdown: \"True\",\n            email: this.$session.get(\"UserInformation\").email,\n            license_key: this.$session.get(\"UserInformation\").license_key,\n            token: this.$session.get(\"UserInformation\").tokens,\n            },\n            {\n            headers: {\n                Authorization: `Bearer ${this.$session.get(\"at\")}`,\n            },\n            }\n        )\n        .then((response) => {\n            // console.log(response.data);\n            // for (var i in response.data[0]) {\n            // this.intent_list.push(\n            //     response.data[0][i].replace(this.companyid + \"_\", \"\")\n            // );\n            // this.new_intent_list.push(\n            //     response.data[0][i].replace(this.companyid + \"_\", \"\")\n            // );\n            // }\n            if (response.data.message.MSG_CODE === this.api_status_code.DATA_AVAILABLE.MSG_CODE) {\n                for (var i in response.data.data[0]) {\n                this.intent_list.push(\n                    response.data.data[0][i]\n                );\n                this.new_intent_list.push(\n                    response.data.data[0][i]\n                );\n                }              \n            }else if(response.data.message.MSG_CODE === this.api_status_code.NO_DATA_AVAILABLE.MSG_CODE){\n                Swal({\n                text: response.data.message.MSG,\n                showCancelButton: false,\n                showConfirmButton: false,\n                position: \"top-end\",\n                toast: true,\n                timer: 2500,\n                type: \"info\"\n                });    \n            }else {\n                this.show_loader = false;\n                Swal({\n                title: response.data.message.MSG_CODE,\n                text: response.data.message.MSG,\n                showCancelButton: false,\n                showConfirmButton: false,\n                timer: 2500,\n                type: \"error\"\n                });\n            }\n        })\n        .catch((e) => {\n            if (\n            e.response.status === 410 ||\n            e.response.status === 440 ||\n            e.response.status === 409\n            ) {\n            this.$root.$emit(\"Session_Expired\", e.response.data);\n            }\n        });       \n        },\n        setpagination(page_no) {\n        this.page_array = [];\n        if (this.total_pages <= 7) {\n            for (let i = 0; i < this.total_pages; i++) {\n            this.page_array.push(i + 1);\n            }\n        } else if (page_no == 1) {\n            for (let i = 0; i < 4; i++) {\n            this.page_array.push(i + 1);\n            }\n            this.page_array.push(\"...l\");\n            this.page_array.push(this.total_pages);\n        } else if (page_no == this.total_pages) {\n            this.page_array.push(1);\n            this.page_array.push(\"...s\");\n            for (let i = this.total_pages - 4; i < this.total_pages; i++) {\n            this.page_array.push(i + 1);\n            }\n        } else if (page_no <= 4) {\n            for (let i = 0; i < page_no + 3; i++) {\n            this.page_array.push(i + 1);\n            }\n            this.page_array.push(\"...l\");\n            this.page_array.push(this.total_pages);\n        } else if (page_no >= this.total_pages - 4) {\n            this.page_array.push(1);\n            this.page_array.push(\"...s\");\n            for (let i = page_no - 4; i < this.total_pages; i++) {\n            this.page_array.push(i + 1);\n            }\n        } else {\n            this.page_array.push(1);\n            this.page_array.push(\"...s\");\n            for (let i = page_no - 3; i <= page_no + 3; i++) {\n            this.page_array.push(i);\n            }\n            this.page_array.push(\"...l\");\n            this.page_array.push(this.total_pages);\n        }\n        },\n        page_require(page) {\n        this.checked_list = [];\n        $(\"input:checkbox\").prop(\"checked\", false);\n        if (page == 0 || page == this.total_pages + 1) {\n        } else {\n            $(\"input:checkbox\").prop(\"checked\", false);\n            if (page == \"...s\") {\n            this.page_no = Math.ceil((1 + this.page_no) / 2);\n            } else if (page == \"...l\") {\n            this.page_no = Math.ceil((this.total_pages + this.page_no) / 2);\n            } else {\n            this.page_no = page;\n            }\n            if (this.search_name == \"\") {\n            this.show_loader = true;\n            axios\n                .post(\n                api_calls.get_unanswered_url(),\n                {\n                    company_name: this.companyname,\n                    company_id: this.companyid,\n                    email: this.$session.get(\"UserInformation\").email,\n                    license_key: this.$session.get(\"UserInformation\").license_key,\n                    token: this.$session.get(\"UserInformation\").tokens,\n                    subscription: this.$session.get(\"UserInformation\").subscription,\n                    isDelete: \"False\",\n                    page_no: this.page_no,\n                    per_page: this.per_page,\n                    is_get_user_response: false\n                },\n                {\n                    headers: {\n                    Authorization: `Bearer ${this.$session.get(\"at\")}`,\n                    },\n                }\n                )\n                .then((response) => {\n                this.show_loader = false;\n                this.unanswered_list = [];\n                if (response.data.message.MSG_CODE === this.api_status_code.DATA_AVAILABLE.MSG_CODE) {\n                    for (var i in response.data.data[0]) {\n                        let temp_int = \"\";\n                        if (Boolean(response.data.data[2][i])) {\n                            // temp_int = response.data[2][i].replace(this.companyid + \"_\", \"\");\n                            temp_int = response.data.data[2][i];\n                        }\n                        this.unanswered_list.push({\n                        question: response.data.data[0][i],\n                        intent: temp_int,\n                        source: response.data.data[1][i],\n                        user_response: response.data.data[2][i],\n                        user_feedback: response.data.data[3][i],\n                        edit: false,\n                        });\n                    }\n                    this.setpagination(this.page_no);\n                }else if(response.data.message.MSG_CODE === this.api_status_code.NO_DATA_AVAILABLE.MSG_CODE){\n                    Swal({\n                    text: response.data.message.MSG,\n                    showCancelButton: false,\n                    showConfirmButton: false,\n                    toast: true,\n                    position: \"top-end\",\n                    timer: 2500,\n                    type: \"info\"\n                    });    \n                }else {\n                    this.show_loader = false;\n                    Swal({\n                    title: response.data.message.MSG_CODE,\n                    text: response.data.message.MSG,\n                    showCancelButton: false,\n                    showConfirmButton: false,\n                    timer: 2500,\n                    type: \"error\"\n                     });\n                }\n                })\n                .catch((e) => {\n                if (\n                    e.response.status === 410 ||\n                    e.response.status === 440 ||\n                    e.response.status === 409\n                ) {\n                    this.$root.$emit(\"Session_Expired\", e.response.data);\n                }\n                });\n            } else {\n            this.show_loader = true;\n            axios\n                .post(\n                api_calls.get_unanswered_url(),\n                {\n                    company_id: this.$session.get(\"UserInformation\").company_id,\n                    company_name: this.$session.get(\"UserInformation\").company_name,\n                    license_key: this.$session.get(\"UserInformation\").license_key,\n                    email: this.$session.get(\"UserInformation\").email,\n                    token: this.$session.get(\"UserInformation\").tokens,\n                    issearch: true,\n                    // searchby: this.search_by,\n                    key: this.search_name,\n                    per_page: this.per_page,\n                    page_no: this.page_no,\n                    is_get_user_response: false\n                },\n                {\n                    headers: {\n                    Authorization: `Bearer ${this.$session.get(\"at\")}`,\n                    },\n                }\n                )\n                .then((response) => {\n                this.show_loader = false;\n                if (response.data.pagination.total_page != undefined) {\n                    this.page_no = page;\n                    this.unanswered_list = [];\n                    this.number_of_rows = response.data.pagination.total_data;\n                    this.total_pages =  response.data.pagination.total_page;\n                    var data = response.data;\n                    for (var i in response.data.data[0]) {\n                    let temp_int = \"\";\n                    if (Boolean(data[2][i])) {\n                        // temp_int = data[2][i].replace(this.companyid + \"_\", \"\");\n                        temp_int = data[2][i];\n                    }\n                    this.unanswered_list.push({\n                        question: response.data.data[0][i],\n                        intent: temp_int,\n                        source: response.data.data[1][i],\n                        user_response: response.data.data[2][i],\n                        user_feedback: response.data.data[3][i],\n                        edit: false,\n                    });\n                    }\n                    this.setpagination(this.page_no);\n                } else {\n                    toastr.error(\"Internal Server Error\");\n                    // setTimeout(() => {\n                    // this.$router.go();\n                    // }, 2500);\n                    this.load_verify_responses_unanswered();\n                }\n                })\n                .catch((e) => {\n                if (\n                    e.response.status === 410 ||\n                    e.response.status === 440 ||\n                    e.response.status === 409\n                ) {\n                    this.$root.$emit(\"Session_Expired\", e.response.data);\n                }\n                });\n            }\n        }\n        },\n        question_selected(value) {\n            if (event.target.checked) {\n                if (value == \"all\") {\n                    this.checked_list = [];\n                    for (var i in this.unanswered_list) {\n                        this.checked_list.push(this.unanswered_list[i]);\n                }\n                } else {\n                    this.checked_list.push(this.unanswered_list[value]);\n                }\n            } else if (!event.target.checked) {\n                if (value != \"all\") {\n                    var selectall = document.querySelector(\"#selectall\");\n                    if (selectall.checked) {\n                        selectall.checked = false;\n                    }\n                    var temp = this.checked_list.filter((question) => {\n                        return question !== this.unanswered_list[value];\n                    });\n                    this.checked_list = temp;\n                }\n            }\n        },\n        delete_single(index) {\n            this.show_loader = true;\n            let questionlist = [];\n            Swal.fire({\n                title: this.tlt('unanswered_delete_swal_msg'),\n                text: this.tlt('unanswered_delete_this_qs_msg'),\n                type: \"question\",\n                showCancelButton: true,\n                confirmButtonColor: \"#3085d6\",\n                cancelButtonColor: \"#d33\",\n                confirmButtonText: this.tlt('unanswered_delete_swal_confirm_msg'),\n            }).then((result) => {\n                    this.show_loader = false;\n                // console.log(result.value);\n                if (result.value) {\n                \n                // console.log(\"deleted\");\n                questionlist.push(this.unanswered_list[index].question);\n                this.delete_questions_api(questionlist);\n                }\n            });\n        },\n        delete_multiple() {\n            if (this.checked_list.length == 0) {\n                Swal.fire({\n                title: this.tlt('unanswered_delete_no_qs_selected_msg'),\n                text:\"\",\n                type:\"error\",\n                timer:2000,\n                });\n            } else if (this.checked_list.length > 0) {\n                let questionlist = [];\n                Swal.fire({\n                title: this.tlt('unanswered_delete_swal_alert_msg'),\n                text: this.tlt('unanswered_delete_this_qs_multiple_msg'),\n                type: \"question\",\n                showCancelButton: true,\n                confirmButtonColor: \"#3085d6\",\n                cancelButtonColor: \"#d33\",\n                confirmButtonText: this.tlt('unanswered_delete_confirm_swal_msg'),\n                }).then((result) => {\n                if (result.value) {\n                    for (var i in this.checked_list) {\n                    questionlist.push(this.checked_list[i].question);\n                    }\n                    this.delete_questions_api(questionlist);\n                }\n                });\n            }\n        },\n        delete_questions_api(questionlist) {\n        this.show_loader = true;\n        axios\n            .post(\n            api_calls.get_unanswered_url(),\n            {\n                company_id: this.companyid,\n                company_name: this.companyname,\n                questionlist: questionlist,\n                isDelete: \"True\",\n                email: this.$session.get(\"UserInformation\").email,\n                license_key: this.$session.get(\"UserInformation\").license_key,\n                token: this.$session.get(\"UserInformation\").tokens,\n            },\n            {\n                headers: {\n                Authorization: `Bearer ${this.$session.get(\"at\")}`,\n                },\n            }\n            )\n            .then((response) => {\n            this.show_loader = false;\n            if (response.data.message.MSG_CODE === this.api_status_code.DELETED_SUCCESSFULLY_0004.MSG_CODE) {\n                // console.log(\"deleted successfully\");\n                this.checked_list = [];\n                this.number_of_rows = response.data.pagination.total_data == undefined ? 0 : response.data.pagination.total_data;\n                this.total_pages = response.data.pagination.total_page == undefined ? 0 : response.data.pagination.total_page;\n                toastr.success(this.tlt('unanswered_delete_success_msg'));\n                // setTimeout(() => {\n                // this.$router.go();\n                // }, 1500);\n                if(questionlist.length === this.unanswered_list.length && \n                    this.page_no >1){\n                    this.page_no = this.page_no - 1;\n                }\n                while(this.page_no > 1 && this.page_no > this.total_pages){\n                    this.page_no = this.page_no - 1;\n                }\n                this.load_verify_responses_unanswered();\n            }else{\n                this.show_loader = false;\n                Swal({\n                title: response.data.message.MSG_CODE,\n                text: response.data.message.MSG,\n                showCancelButton: false,\n                showConfirmButton: false,\n                timer: 2500,\n                type: \"error\"\n                });\n            }\n            this.show_loader = false;\n            })\n            .catch((e) => {\n            if (\n                e.response.status === 410 ||\n                e.response.status === 440 ||\n                e.response.status === 409\n            ) {\n                this.$root.$emit(\"Session_Expired\", e.response.data);\n            } else {\n                toastr.error(e.message);\n            }\n            this.show_loader = false;\n            });\n        },\n        edit_item(index) {\n            this.unanswered_list[index].edit = !this.unanswered_list[index].edit;\n            this.old_question = this.unanswered_list[index].question;\n            // this.old_intent = this.unanswered_list[index].intent;\n            this.old_data.question = this.old_question;\n            // this.old_data.intent = this.companyid + \"_\" + this.old_intent;\n            // this.question = question.question;\n            // this.intent = question.intent;\n            // console.log(this.old_data);\n            // console.log(this.old_question);\n        },\n        submit_question() {\n            // console.log(\"submit\");\n            // console.log(\"question\", this.old_question);\n            // console.log(\"intent\", this.old_intent);\n            // console.log(\"intent\", this.isedit);\n            event.preventDefault();\n            if (this.old_question == \"\") {\n                toastr.error(this.tlt('unanswered_enter_all_field_msg'));\n            } else {\n                this.show_loader = true;\n                axios\n                .post(\n                    api_calls.get_unanswered_url(),\n                    {\n                    is_Edit: \"True\",\n                    question: this.old_question,\n                    // intent: this.companyid + \"_\" + this.old_intent,\n                    company_name: this.companyname,\n                    company_id: this.companyid,\n                    old_question_data: this.old_data,\n                    email: this.$session.get(\"UserInformation\").email,\n                    license_key: this.$session.get(\"UserInformation\").license_key,\n                    token: this.$session.get(\"UserInformation\").tokens,\n                    subscription: this.$session.get(\"UserInformation\").subscription,\n                    },\n                    {\n                    headers: {\n                        Authorization: `Bearer ${this.$session.get(\"at\")}`,\n                    },\n                    }\n                )\n                .then((response) => {\n                    this.show_loader = false;\n                    if (response.data.message.MSG_CODE === this.api_status_code.INTERNAL_SERVER_ERROR.MSG_CODE) {\n                    toastr.error(this.tlt('unanswered_interval_server_msg'));\n                    } else if (response.data.message.MSG_CODE === this.api_status_code.EDITED_SUCCESSFULLY_0005.MSG_CODE) {\n                    Swal({\n                        type: \"success\",\n                        text: this.tlt('unanswered_qs_edited_successful_msg'),\n                        timer:2500,\n                    }).then((result) => {\n                        // if (result.value) {\n                        // this.$router.go();\n                        // }\n                        this.load_verify_responses_unanswered();\n                    });\n                    } else {\n                        this.show_loader = false;\n                        Swal({\n                        title: response.data.message.MSG_CODE,\n                        text: response.data.message.MSG,\n                        showCancelButton: false,\n                        showConfirmButton: false,\n                        timer: 2500,\n                        type: \"error\"\n                        });\n                    } \n                    // else if (response.data == \"Question Intent Updated\") {\n                    // Swal({\n                    //     type: \"success\",\n                    //     text: \"Your question has been updated successfully\",\n                    //     timer:2000,\n                    // }).then((result) => {\n                    //     // if (result.value) {\n                    //     // this.$router.go();\n                    //     // }\n                    //     this.load_verify_responses_unanswered();\n                    // });\n                    // }\n                })\n                .catch((e) => {\n                    if (\n                    e.response.status === 410 ||\n                    e.response.status === 440 ||\n                    e.response.status === 409\n                    ) {\n                    this.$root.$emit(\"Session_Expired\", e.response.data);\n                    } else {\n                    toastr.error(this.tlt('unanswered_interval_server_msg1'));\n                    }\n                });\n                this.close_modal('add_quesn_save');\n            }\n        },\n        pagination_class(index) {\n            if (index == this.page_no) {\n                return \" active\";\n            } else {\n                return \"\";\n            }\n        },\n        add_questions() {\n            this.show_loader = true;\n            var questionlist = [];\n            var temp_list = [];\n            var empty = this.unanswered_list.filter((unanswered) => {\n                return unanswered.intent == \"\";\n            });\n            for (var i in this.unanswered_list) {\n                if (this.unanswered_list[i].intent != \"\") {\n                temp_list.push(\n                    this.unanswered_list[i].question,\n                    // this.companyid + \"_\" + this.unanswered_list[i].intent\n                    this.unanswered_list[i].intent\n                );\n                questionlist.push(temp_list);\n                }\n                temp_list = [];\n            }\n            if (questionlist.length > 0) {\n                this.show_loader = true;\n                axios\n                .post(\n                    api_calls.get_unanswered_url(),\n                    {\n                    company_name: this.companyname,\n                    company_id: this.companyid,\n                    isAdd: \"True\",\n                    questionintent: questionlist,\n                    email: this.$session.get(\"UserInformation\").email,\n                    license_key: this.$session.get(\"UserInformation\").license_key,\n                    token: this.$session.get(\"UserInformation\").tokens,\n                    },\n                    {\n                    headers: {\n                        Authorization: `Bearer ${this.$session.get(\"at\")}`,\n                    },\n                    }\n                )\n                .then((response) => {\n                    this.show_loader = false;\n                    if (response.data.message.MSG_CODE === this.api_status_code.ADDED_SUCCESSFULLY_0002.MSG_CODE) {\n                        swal({\n                            text: this.tlt('unanswered_added_successful_msg'),\n                            type: \"success\",\n                            timer: 3000,\n                        });\n                         if(questionlist.length === this.unanswered_list.length && \n                            this.page_no >1){\n                            this.page_no = this.page_no - 1;\n                        }\n                        this.load_verify_responses_unanswered();\n                    }else {\n                        this.show_loader = false;\n                        Swal({\n                        title: response.data.message.MSG_CODE,\n                        text: response.data.message.MSG,\n                        showCancelButton: false,\n                        showConfirmButton: false,\n                        timer: 2500,\n                        type: \"error\"\n                        });\n                    } \n                })\n                .catch((e) => {\n                    this.show_loader = false;\n                    if (\n                    e.response.status === 410 ||\n                    e.response.status === 440 ||\n                    e.response.status === 409\n                    ) {\n                    this.$root.$emit(\"Session_Expired\", e.response.data);\n                    }\n                });\n            } else {\n                toastr.error(this.tlt('unanswered_add_question_msg'));\n            }\n            this.show_loader = false;\n        },\n        search_question() {\n            // if(this.search_by!=''){\n            if (this.search_name != \"\") {\n                this.checked_list = [];\n                $(\"input:checkbox\").prop(\"checked\", false);\n                this.show_loader = true;\n                axios\n                .post(\n                    api_calls.get_unanswered_url(),\n                    {\n                    company_id: this.$session.get(\"UserInformation\").company_id,\n                    company_name: this.$session.get(\"UserInformation\").company_name,\n                    license_key: this.$session.get(\"UserInformation\").license_key,\n                    email: this.$session.get(\"UserInformation\").email,\n                    token: this.$session.get(\"UserInformation\").tokens,\n                    issearch: true,\n                    // searchby: this.search_by,\n                    key: this.search_name,\n                    per_page: this.per_page,\n                    page_no: 1,\n                    is_get_user_response: false\n                    },\n                    {\n                    headers: {\n                        Authorization: `Bearer ${this.$session.get(\"at\")}`,\n                    },\n                    }\n                )\n                .then((response) => {\n                    this.show_loader = false;\n                    if (response.data.message.MSG_CODE === this.api_status_code.NO_DATA_AVAILABLE.MSG_CODE) {\n                    toastr.error(this.tlt('unanswered_no_qs_found_msg'));\n                    // setTimeout(() => {\n                    //     this.$router.go();\n                    // }, 2500);\n                    this.load_verify_responses_unanswered();\n                    } else if (response.data.pagination.total_page != undefined) {\n                    this.page_no = 1;\n                    this.unanswered_list = [];\n                    this.number_of_rows =  response.data.pagination.total_data;\n                    this.total_pages = response.data.pagination.total_page;\n                    var data = response.data.data;\n                    for (var i in response.data.data[0]) {\n                        let temp_int = \"\";\n                        if (Boolean(data[2][i])) {\n                            // temp_int = data[2][i].replace(this.companyid + \"_\", \"\");\n                            temp_int = data[2][i];\n                        }\n                        this.unanswered_list.push({\n                        question: response.data.data[0][i],\n                        intent: temp_int,\n                        source: response.data.data[1][i],\n                        user_response: data[2][i],\n                        user_feedback: data[3][i],\n                        edit: false,\n                        });\n                    }\n                    this.setpagination(this.page_no);\n                    }\n                    // else if (response.data.MSG == \"No Questions Found\") {\n                    //   toastr.error(\"No Question Found\");\n                    //   setTimeout(() => {\n                    //     this.$router.go();\n                    //   }, 2500);\n                        // this.load_verify_responses_unanswered();\n                    // }\n                    else {\n                    toastr.error(this.tlt('unanswered_internal_server_msg2'));\n                    // setTimeout(() => {\n                    //     this.$router.go();\n                    //   }, 2500);\n                    this.load_verify_responses_unanswered();\n                    }\n                })\n                .catch((e) => {\n                    if (\n                    e.response.status === 410 ||\n                    e.response.status === 440 ||\n                    e.response.status === 409\n                    ) {\n                    this.$root.$emit(\"Session_Expired\", e.response.data);\n                    }\n                });\n            } else {\n                toastr.error(this.tlt('unanswered_data_for_search_msg'));\n            }\n            // }else{\n            //   toastr.error(\"Select header for searching\");\n            // }\n        },\n    }\n}\n</script>\n<style scoped>\n/* .table-responsive {\n  min-height: 400px;\n} */\n\n.form-group{\n    margin: 0 0 4px;\n    top: 3px;\n}\n.table-head{\n    padding-top: 15px;\n}\n@media (max-width: 1400px){\n    .form-group{\n        margin: 0 0 -5px;\n        top: -2px;\n    }\n}\n</style>"]}]}