{"remainingRequest":"/home/vimalesh/Learning/devops_ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/vimalesh/Learning/devops_ui/src/portal/analytics/components/MultiLineChart.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/home/vimalesh/Learning/devops_ui/src/portal/analytics/components/MultiLineChart.vue","mtime":1643027096188},{"path":"/home/vimalesh/Learning/devops_ui/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vimalesh/Learning/devops_ui/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/vimalesh/Learning/devops_ui/node_modules/@vue/cli-service/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/vimalesh/Learning/devops_ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vimalesh/Learning/devops_ui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouYXhpcyBwYXRoLAouYXhpcyBsaW5lIHsKICBmaWxsOiBub25lOwogIHN0cm9rZTogIzAwMDsKICBzaGFwZS1yZW5kZXJpbmc6IGNyaXNwRWRnZXM7Cn0KCi8qIC54LmF4aXMgcGF0aCB7CiAgZGlzcGxheTogbm9uZTsKfSAqLwoKLmxpbmUgewogIGZpbGw6IG5vbmU7CiAgc3Ryb2tlOiBzdGVlbGJsdWU7CiAgc3Ryb2tlLXdpZHRoOiAxLjVweDsKfQo="},{"version":3,"sources":["MultiLineChart.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwqBA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"MultiLineChart.vue","sourceRoot":"src/portal/analytics/components","sourcesContent":["    \n<template>\n<div id=\"multilinechart\">\n\n</div>\n</template>\n<script>\nimport * as d3 from \"d3-3\";\nexport default {\n     name: \"MultiLineChart\",\n    // props: {\n    //     data:Array,\n    //     xKey: String,\n    //     yKey: String,\n    // },\n  mounted() {\n  //     var myData = \"date\tNew York\tSan Francisco\tAustin\\n\\\n  //                       20111001\t63.4\t62.7\t72.2\\n\\\n  //                       20111002\t58.0\t59.9\t67.7\\n\\\n  //                       20111003\t53.3\t59.1\t69.4\\n\\\n  //                       20111004\t55.7\t58.8\t68.0\\n\\\n  //                       20111005\t64.2\t58.7\t72.4\\n\\\n  //                       20111006\t58.8\t57.0\t77.0\\n\\\n  //                       20111007\t57.9\t56.7\t82.3\\n\\\n  //                       20111008\t61.8\t56.8\t78.9\\n\\\n  //                       20111009\t69.3\t56.7\t68.8\\n\\\n  //                       20111010\t71.2\t60.1\t68.7\\n\\\n  //                       20111011\t68.7\t61.1\t70.3\\n\\\n  //                       20111012\t61.8\t61.5\t75.3\\n\\\n  //                       20111013\t63.0\t64.3\t76.6\\n\\\n  //                       20111014\t66.9\t67.1\t66.6\\n\\\n  //                       20111015\t61.7\t64.6\t68.0\\n\\\n  //                       20111016\t61.8\t61.6\t70.6\\n\\\n  //                       20111017\t62.8\t61.1\t71.1\\n\\\n  //                       20111018\t60.8\t59.2\t70.0\\n\\\n  //                       20111019\t62.1\t58.9\t61.6\\n\\\n  //                       20111020\t65.1\t57.2\t57.4\\n\\\n  //                       20111021\t55.6\t56.4\t64.3\\n\\\n  //                       20111022\t54.4\t60.7\t72.4\\n\";\n  //   var margin = {\n  //       top: 20,\n  //       right: 80,\n  //       bottom: 30,\n  //       left: 50\n  //     },\n  //     width = 900 - margin.left - margin.right,\n  //     height = 500 - margin.top - margin.bottom;\n\n  //   // var parseDate = d3.timeFormat(\"%d-%b-%y\");\n  //   var parseDate = d3.timeParse(\"%Y-%m-%d %H:%M:%S\");\n\n\n  //   var x = d3.scaleTime()\n  //     .range([0, width]);\n\n  //   var y = d3.scaleLinear()\n  //     .range([height, 0]);\n\n  //   // var color = d3.scaleOrdinal(d3.schemeCategory10);\n  //   var color = d3.scaleOrdinal().range(d3.schemeCategory10);\n\n  //   var xAxis = d3.axisBottom()\n  //   .scale(x);\n\n  //   var yAxis = d3.axisLeft()\n  //   .scale(y);\n\n  //   var line = d3.line()\n  //   .curve(d3.curveMonotoneX)\n  //   .x(function(d) { return x(d.date); })\n  //   .y(function(d) { return y(d.temperature); });\n\n\n\n  //   // var line = d3.line()\n  //   //     .curve(d3.curveMonotoneX)\n  //   //   .x(function(d) {\n  //   //     return x(d.date);\n  //   //   })\n  //   //   .y(function(d) {\n  //   //     return y(d.temperature);\n  //   //   });\n  //   // console.log(line,\"line\");\n  //   // var line = d3.line()\n  //   //   .interpolate(\"basis\")\n  //   //   .x(function(d) {\n  //   //     return x(d.date);\n  //   //   })\n  //   //   .y(function(d) {\n  //   //     return y(d.temperature);\n  //   //   });\n\n  //   var svg = d3.select(\"#multilinechart\").append(\"svg\")\n  //     .attr(\"width\", width + margin.left + margin.right)\n  //     .attr(\"height\", height + margin.top + margin.bottom)\n  //     .append(\"g\")\n  //     .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n  //   var data = d3.tsvParse(myData);\n  //   // console.log(data);\n\n\n\n  //   color.domain(d3.keys(data[0]).filter(function(key) {\n  //     return key !== \"date\";\n  //   }));\n  //   // const color = d3.scaleOrdinal()\n  //   // .domain(d3.keys(data[0]).filter(function(key) {\n  //   //   return key !== \"date\";\n  //   // })).range(d3.quantize(t => d3.interpolateCubehelixDefault  (t * 0.8 + 0.1), data.length).reverse());\n\n  //   data.forEach(function(d) {\n  //     d.date = parseDate(d.date);\n  //   });\n\n  //   var cities = color.domain().map(function(name) {\n  //     return {\n  //       name: name,\n  //       values: data.map(function(d) {\n  //         return {\n  //           date: d.date,\n  //           temperature: +d[name]\n  //         };\n  //       })\n  //     };\n  //   });\n  //   // console.log(cities);\n\n  //   x.domain(d3.extent(data, function(d) {\n  //     return d.date;\n  //   }));\n\n  //   y.domain([\n  //     d3.min(cities, function(c) {\n  //       return d3.min(c.values, function(v) {\n  //         return v.temperature;\n  //       });\n  //     }),\n  //     d3.max(cities, function(c) {\n  //       return d3.max(c.values, function(v) {\n  //         return v.temperature;\n  //       });\n  //     })\n  //   ]);\n\n  //   var legend = svg.selectAll('g')\n  //     .data(cities)\n  //     .enter()\n  //     .append('g')\n  //     .attr('class', 'legend');\n\n  //   legend.append('rect')\n  //     .attr('x', width - 20)\n  //     .attr('y', function(d, i) {\n  //       return i * 20;\n  //     })\n  //     .attr('width', 10)\n  //     .attr('height', 10)\n  //     .style('fill', function(d) {\n  //       return color(d.name);\n  //     });\n\n  //   legend.append('text')\n  //     .attr('x', width - 8)\n  //     .attr('y', function(d, i) {\n  //       return (i * 20) + 9;\n  //     })\n  //     .text(function(d) {\n  //       return d.name;\n  //     });\n\n  //   svg.append(\"g\")\n  //     .attr(\"class\", \"x axis\")\n  //     .attr(\"transform\", \"translate(0,\" + height + \")\")\n  //     .call(xAxis);\n\n  //   svg.append(\"g\")\n  //     .attr(\"class\", \"y axis\")\n  //     .call(yAxis)\n  //     .append(\"text\")\n  //     .attr(\"transform\", \"rotate(-90)\")\n  //     .attr(\"y\", 6)\n  //     .attr(\"dy\", \".71em\")\n  //     .style(\"text-anchor\", \"end\")\n  //     .text(\"Temperature (ÂºF)\");\n\n  //   var city = svg.selectAll(\".city\")\n  //     .data(cities)\n  //     .enter().append(\"g\")\n  //     .attr(\"class\", \"city\");\n\n  //   city.append(\"path\")\n  //     .attr(\"class\", \"line\")\n  //     .attr(\"d\", function(d) {\n  //         console.log((d.values));\n  //       return line(d.values);\n  //     })\n  //     .style(\"stroke\", function(d) {\n  //       return color(d.name);\n  //     });\n\n  //   city.append(\"text\")\n  //     .datum(function(d) {\n  //       return {\n  //         name: d.name,\n  //         value: d.values[d.values.length - 1]\n  //       };\n  //     })\n  //     .attr(\"transform\", function(d) {\n  //       return \"translate(\" + x(d.value.date) + \",\" + y(d.value.temperature) + \")\";\n  //     })\n  //     .attr(\"x\", 3)\n  //     .attr(\"dy\", \".35em\")\n  //     .text(function(d) {\n  //       return d.name;\n  //     });\n\n  //   var mouseG = svg.append(\"g\")\n  //     .attr(\"class\", \"mouse-over-effects\");\n\n  //   mouseG.append(\"path\") // this is the black vertical line to follow mouse\n  //     .attr(\"class\", \"mouse-line\")\n  //     .style(\"stroke\", \"black\")\n  //     .style(\"stroke-width\", \"1px\")\n  //     .style(\"opacity\", \"0\");\n      \n  //   var lines = document.getElementsByClassName('line');\n\n  //   var mousePerLine = mouseG.selectAll('.mouse-per-line')\n  //     .data(cities)\n  //     .enter()\n  //     .append(\"g\")\n  //     .attr(\"class\", \"mouse-per-line\");\n\n  //   mousePerLine.append(\"circle\")\n  //     .attr(\"r\", 7)\n  //     .style(\"stroke\", function(d) {\n  //       return color(d.name);\n  //     })\n  //     .style(\"fill\", \"none\")\n  //     .style(\"stroke-width\", \"1px\")\n  //     .style(\"opacity\", \"0\");\n\n  //   mousePerLine.append(\"text\")\n  //     .attr(\"transform\", \"translate(10,3)\");\n\n  //   mouseG.append('svg:rect') // append a rect to catch mouse movements on canvas\n  //     .attr('width', width) // can't catch mouse events on a g element\n  //     .attr('height', height)\n  //     .attr('fill', 'none')\n  //     .attr('pointer-events', 'all')\n  //     .on('mouseout', function() { // on mouse out hide line, circles and text\n  //       d3.select(\".mouse-line\")\n  //         .style(\"opacity\", \"0\");\n  //       d3.selectAll(\".mouse-per-line circle\")\n  //         .style(\"opacity\", \"0\");\n  //       d3.selectAll(\".mouse-per-line text\")\n  //         .style(\"opacity\", \"0\");\n  //     })\n  //     .on('mouseover', function() { // on mouse in show line, circles and text\n  //       d3.select(\".mouse-line\")\n  //         .style(\"opacity\", \"1\");\n  //       d3.selectAll(\".mouse-per-line circle\")\n  //         .style(\"opacity\", \"1\");\n  //       d3.selectAll(\".mouse-per-line text\")\n  //         .style(\"opacity\", \"1\");\n  //     })\n  //     .on('mousemove', function() { // mouse moving over canvas\n  //       var mouse = d3.mouse(this);\n  //       d3.select(\".mouse-line\")\n  //         .attr(\"d\", function() {\n  //           var d = \"M\" + mouse[0] + \",\" + height;\n  //           d += \" \" + mouse[0] + \",\" + 0;\n  //           return d;\n  //         });\n\n  //       d3.selectAll(\".mouse-per-line\")\n  //         .attr(\"transform\", function(d, i) {\n  //           // console.log(width/mouse[0])\n  //           var xDate = x.invert(mouse[0]),\n  //               bisect = d3.bisector(function(d) { return d.date; }).right;\n  //               console.log(d,\"data-d\")\n  //               idx = bisect(d.values, xDate);\n            \n  //           var beginning = 0,\n  //               end = lines[i].getTotalLength(),\n  //               target = null;\n\n  //           while (true){\n  //             target = Math.floor((beginning + end) / 2);\n  //             pos = lines[i].getPointAtLength(target);\n  //             if ((target === end || target === beginning) && pos.x !== mouse[0]) {\n  //                 break;\n  //             }\n  //             if (pos.x > mouse[0])      end = target;\n  //             else if (pos.x < mouse[0]) beginning = target;\n  //             else break; //position found\n  //           }\n            \n  //           d3.select(this).select('text')\n  //             .text(y.invert(pos.y).toFixed(2));\n              \n  //           return \"translate(\" + mouse[0] + \",\" + pos.y +\")\";\n  //         });\n  //     });\n\n\n  //   //#region  \n\n    var parseDate = d3.time.format(\"%b\").parse;\n\n\n    var api_data = \n        [\n            {\"SALES\":1340.450419999999,\"YEAR\":\"2016\",\"DATENEW\":\"Thu, 17 Mar 2016 10:18:47 GMT\",\"CATEGORY\":\"Stonefruits\",\"MONTH\":\"03\"},\n            {\"SALES\":170.90194000000005,\"YEAR\":\"2016\",\"DATENEW\":\"Thu, 17 Mar 2016 11:53:12 GMT\",\"CATEGORY\":\"Cucumbers\",\"MONTH\":\"03\"},\n            {\"SALES\":74.79999999999998,\"YEAR\":\"2016\",\"DATENEW\":\"Fri, 18 Mar 2016 12:13:55 GMT\",\"CATEGORY\":\"Sri Lankan Groceries\",\"MONTH\":\"03\"},\n            {\"SALES\":62.93936000000001,\"YEAR\":\"2016\",\"DATENEW\":\"Sat, 19 Mar 2016 19:42:10 GMT\",\"CATEGORY\":\"Veggies\",\"MONTH\":\"03\"},\n            {\"SALES\":218.4778800000001,\"YEAR\":\"2016\",\"DATENEW\":\"Sun, 20 Mar 2016 17:12:06 GMT\",\"CATEGORY\":\"Mushrooms\",\"MONTH\":\"03\"},\n            {\"SALES\":262.5995236363638,\"YEAR\":\"2016\",\"DATENEW\":\"Sun, 20 Mar 2016 17:34:22 GMT\",\"CATEGORY\":\"Tropical Fruits\",\"MONTH\":\"03\"},\n            {\"SALES\":69.59320000000001,\"YEAR\":\"2016\",\"DATENEW\":\"Sun, 20 Mar 2016 19:02:15 GMT\",\"CATEGORY\":\"Cabbages\",\"MONTH\":\"03\"},\n            {\"SALES\":671.8349600000005,\"YEAR\":\"2016\",\"DATENEW\":\"Wed, 23 Mar 2016 01:04:06 GMT\",\"CATEGORY\":\"Bananas\",\"MONTH\":\"03\"},\n            {\"SALES\":116.20128545454547,\"YEAR\":\"2016\",\"DATENEW\":\"Wed, 23 Mar 2016 01:35:13 GMT\",\"CATEGORY\":\"Nuts\",\"MONTH\":\"03\"},\n            {\"SALES\":295.2000000000002,\"YEAR\":\"2016\",\"DATENEW\":\"Wed, 23 Mar 2016 04:31:17 GMT\",\"CATEGORY\":\"Avocadoes\",\"MONTH\":\"03\"},\n            {\"SALES\":47.5,\"YEAR\":\"2016\",\"DATENEW\":\"Thu, 24 Mar 2016 03:13:07 GMT\",\"CATEGORY\":\"Herbs\",\"MONTH\":\"03\"},\n            {\"SALES\":169.20256000000003,\"YEAR\":\"2016\",\"DATENEW\":\"Thu, 24 Mar 2016 04:12:32 GMT\",\"CATEGORY\":\"Pumpkins\",\"MONTH\":\"03\"},{\"SALES\":307.6499999999997,\"YEAR\":\"2016\",\"DATENEW\":\"Thu, 24 Mar 2016 04:43:59 GMT\",\"CATEGORY\":\"Eggs\",\"MONTH\":\"03\"},{\"SALES\":975.1200545454553,\"YEAR\":\"2016\",\"DATENEW\":\"Thu, 24 Mar 2016 05:22:50 GMT\",\"CATEGORY\":\"Other Vegies\",\"MONTH\":\"03\"},{\"SALES\":112.4447,\"YEAR\":\"2016\",\"DATENEW\":\"Fri, 25 Mar 2016 01:48:45 GMT\",\"CATEGORY\":\"Chillies\",\"MONTH\":\"03\"},{\"SALES\":597.0905363636365,\"YEAR\":\"2016\",\"DATENEW\":\"Fri, 25 Mar 2016 03:28:03 GMT\",\"CATEGORY\":\"Citrus\",\"MONTH\":\"03\"},{\"SALES\":166.812,\"YEAR\":\"2016\",\"DATENEW\":\"Fri, 25 Mar 2016 03:50:08 GMT\",\"CATEGORY\":\"carrots\",\"MONTH\":\"03\"},{\"SALES\":360.92106,\"YEAR\":\"2016\",\"DATENEW\":\"Fri, 25 Mar 2016 04:41:19 GMT\",\"CATEGORY\":\"capsicum\",\"MONTH\":\"03\"},{\"SALES\":57.88363636363637,\"YEAR\":\"2016\",\"DATENEW\":\"Sat, 26 Mar 2016 22:51:27 GMT\",\"CATEGORY\":\"Other Fruits\",\"MONTH\":\"03\"},{\"SALES\":884.4411199999997,\"YEAR\":\"2016\",\"DATENEW\":\"Sat, 26 Mar 2016 23:37:38 GMT\",\"CATEGORY\":\"Potatoes\",\"MONTH\":\"03\"},{\"SALES\":304.92546000000004,\"YEAR\":\"2016\",\"DATENEW\":\"Sun, 27 Mar 2016 00:25:07 GMT\",\"CATEGORY\":\"Pears\",\"MONTH\":\"03\"},{\"SALES\":303.2260000000004,\"YEAR\":\"2016\",\"DATENEW\":\"Sun, 27 Mar 2016 00:28:50 GMT\",\"CATEGORY\":\"Bunch Vegies\",\"MONTH\":\"03\"},{\"SALES\":620.6673999999997,\"YEAR\":\"2016\",\"DATENEW\":\"Sun, 27 Mar 2016 01:08:03 GMT\",\"CATEGORY\":\"Tomatoes\",\"MONTH\":\"03\"},{\"SALES\":629.8516800000004,\"YEAR\":\"2016\",\"DATENEW\":\"Sun, 27 Mar 2016 01:45:58 GMT\",\"CATEGORY\":\"Apples\",\"MONTH\":\"03\"},{\"SALES\":372.82099999999923,\"YEAR\":\"2016\",\"DATENEW\":\"Sun, 27 Mar 2016 03:38:16 GMT\",\"CATEGORY\":\"Lettuces\",\"MONTH\":\"03\"},{\"SALES\":154.485,\"YEAR\":\"2016\",\"DATENEW\":\"Sun, 27 Mar 2016 23:08:40 GMT\",\"CATEGORY\":\"Multi buy\",\"MONTH\":\"03\"},{\"SALES\":387.9157999999999,\"YEAR\":\"2016\",\"DATENEW\":\"Mon, 28 Mar 2016 02:15:11 GMT\",\"CATEGORY\":\"Melons\",\"MONTH\":\"03\"},{\"SALES\":180.2172727272728,\"YEAR\":\"2016\",\"DATENEW\":\"Mon, 28 Mar 2016 22:59:34 GMT\",\"CATEGORY\":\"Olympian Products\",\"MONTH\":\"03\"},{\"SALES\":633.3682436363638,\"YEAR\":\"2016\",\"DATENEW\":\"Mon, 28 Mar 2016 23:57:28 GMT\",\"CATEGORY\":\"Onions\",\"MONTH\":\"03\"},{\"SALES\":854.30096,\"YEAR\":\"2016\",\"DATENEW\":\"Wed, 30 Mar 2016 03:02:09 GMT\",\"CATEGORY\":\"Grapes\",\"MONTH\":\"03\"},{\"SALES\":108.0,\"YEAR\":\"2016\",\"DATENEW\":\"Wed, 30 Mar 2016 04:15:59 GMT\",\"CATEGORY\":\"Flowers\",\"MONTH\":\"03\"},{\"SALES\":87.10741999999999,\"YEAR\":\"2016\",\"DATENEW\":\"Wed, 30 Mar 2016 21:40:15 GMT\",\"CATEGORY\":\"Root Vegies\",\"MONTH\":\"03\"},{\"SALES\":73.7,\"YEAR\":\"2016\",\"DATENEW\":\"Thu, 31 Mar 2016 00:23:50 GMT\",\"CATEGORY\":\"Cut Veggies\",\"MONTH\":\"03\"},{\"SALES\":216.50410000000002,\"YEAR\":\"2016\",\"DATENEW\":\"Thu, 31 Mar 2016 01:27:43 GMT\",\"CATEGORY\":\"Asian Vegies\",\"MONTH\":\"03\"},{\"SALES\":167.87999999999997,\"YEAR\":\"2016\",\"DATENEW\":\"Thu, 31 Mar 2016 01:59:07 GMT\",\"CATEGORY\":\"Berries\",\"MONTH\":\"03\"},\n            {\"SALES\":602.2259454545458,\"YEAR\":\"2016\",\"DATENEW\":\"Fri, 01 Apr 2016 00:26:23 GMT\",\"CATEGORY\":\"Citrus\",\"MONTH\":\"04\"},\n            {\"SALES\":964.0527800000008,\"YEAR\":\"2016\",\"DATENEW\":\"Fri, 01 Apr 2016 00:41:01 GMT\",\"CATEGORY\":\"Other Vegies\",\"MONTH\":\"04\"},\n            {\"SALES\":107.87999999999998,\"YEAR\":\"2016\",\"DATENEW\":\"Fri, 01 Apr 2016 04:50:24 GMT\",\"CATEGORY\":\"Cabbages\",\"MONTH\":\"04\"},\n            {\"SALES\":86.5556,\"YEAR\":\"2016\",\"DATENEW\":\"Fri, 01 Apr 2016 04:50:24 GMT\",\"CATEGORY\":\"Root Vegies\",\"MONTH\":\"04\"},\n            {\"SALES\":675.9299000000002,\"YEAR\":\"2016\",\"DATENEW\":\"Fri, 01 Apr 2016 04:55:24 GMT\",\"CATEGORY\":\"Bananas\",\"MONTH\":\"04\"},\n            {\"SALES\":197.20808000000005,\"YEAR\":\"2016\",\"DATENEW\":\"Fri, 01 Apr 2016 08:06:26 GMT\",\"CATEGORY\":\"Asian Vegies\",\"MONTH\":\"04\"},\n            {\"SALES\":108.0,\"YEAR\":\"2016\",\"DATENEW\":\"Fri, 01 Apr 2016 21:52:12 GMT\",\"CATEGORY\":\"Flowers\",\"MONTH\":\"04\"},\n            {\"SALES\":15.200000000000003,\"YEAR\":\"2016\",\"DATENEW\":\"Sat, 02 Apr 2016 00:22:14 GMT\",\"CATEGORY\":\"Sri Lankan Groceries\",\"MONTH\":\"04\"},\n            {\"SALES\":118.63200000000009,\"YEAR\":\"2016\",\"DATENEW\":\"Sat, 02 Apr 2016 00:22:14 GMT\",\"CATEGORY\":\"carrots\",\"MONTH\":\"04\"},\n            {\"SALES\":129.0,\"YEAR\":\"2016\",\"DATENEW\":\"Sun, 03 Apr 2016 00:00:52 GMT\",\"CATEGORY\":\"Multi buy\",\"MONTH\":\"04\"},\n            {\"SALES\":174.17508000000004,\"YEAR\":\"2016\",\"DATENEW\":\"Sun, 03 Apr 2016 00:00:52 GMT\",\"CATEGORY\":\"capsicum\",\"MONTH\":\"04\"},{\"SALES\":230.56272727272733,\"YEAR\":\"2016\",\"DATENEW\":\"Sun, 03 Apr 2016 00:34:19 GMT\",\"CATEGORY\":\"Olympian Products\",\"MONTH\":\"04\"},{\"SALES\":96.84614727272728,\"YEAR\":\"2016\",\"DATENEW\":\"Sun, 03 Apr 2016 00:37:49 GMT\",\"CATEGORY\":\"Nuts\",\"MONTH\":\"04\"},{\"SALES\":439.10896545454534,\"YEAR\":\"2016\",\"DATENEW\":\"Sun, 03 Apr 2016 01:42:18 GMT\",\"CATEGORY\":\"Tomatoes\",\"MONTH\":\"04\"},{\"SALES\":512.0569200000001,\"YEAR\":\"2016\",\"DATENEW\":\"Sun, 03 Apr 2016 02:44:59 GMT\",\"CATEGORY\":\"Grapes\",\"MONTH\":\"04\"},{\"SALES\":151.0479,\"YEAR\":\"2016\",\"DATENEW\":\"Sun, 03 Apr 2016 02:53:00 GMT\",\"CATEGORY\":\"Pumpkins\",\"MONTH\":\"04\"},{\"SALES\":43.0,\"YEAR\":\"2016\",\"DATENEW\":\"Sun, 03 Apr 2016 02:53:00 GMT\",\"CATEGORY\":\"Cut Veggies\",\"MONTH\":\"04\"},{\"SALES\":137.80607999999995,\"YEAR\":\"2016\",\"DATENEW\":\"Sun, 03 Apr 2016 06:09:50 GMT\",\"CATEGORY\":\"Cucumbers\",\"MONTH\":\"04\"},{\"SALES\":119.0145,\"YEAR\":\"2016\",\"DATENEW\":\"Mon, 04 Apr 2016 01:18:00 GMT\",\"CATEGORY\":\"Chillies\",\"MONTH\":\"04\"},{\"SALES\":276.1008799999999,\"YEAR\":\"2016\",\"DATENEW\":\"Mon, 04 Apr 2016 01:46:01 GMT\",\"CATEGORY\":\"Mushrooms\",\"MONTH\":\"04\"},{\"SALES\":202.88474000000008,\"YEAR\":\"2016\",\"DATENEW\":\"Mon, 04 Apr 2016 03:52:08 GMT\",\"CATEGORY\":\"Melons\",\"MONTH\":\"04\"},{\"SALES\":131.35276,\"YEAR\":\"2016\",\"DATENEW\":\"Tue, 05 Apr 2016 01:46:42 GMT\",\"CATEGORY\":\"Tropical Fruits\",\"MONTH\":\"04\"},{\"SALES\":90.55818181818181,\"YEAR\":\"2016\",\"DATENEW\":\"Tue, 05 Apr 2016 04:01:07 GMT\",\"CATEGORY\":\"Other Fruits\",\"MONTH\":\"04\"},{\"SALES\":187.63225999999992,\"YEAR\":\"2016\",\"DATENEW\":\"Tue, 05 Apr 2016 04:49:26 GMT\",\"CATEGORY\":\"Pears\",\"MONTH\":\"04\"},{\"SALES\":496.3780800000003,\"YEAR\":\"2016\",\"DATENEW\":\"Tue, 05 Apr 2016 05:00:29 GMT\",\"CATEGORY\":\"Onions\",\"MONTH\":\"04\"},{\"SALES\":20.44174,\"YEAR\":\"2016\",\"DATENEW\":\"Tue, 05 Apr 2016 22:36:34 GMT\",\"CATEGORY\":\"Veggies\",\"MONTH\":\"04\"},{\"SALES\":642.8219400000002,\"YEAR\":\"2016\",\"DATENEW\":\"Wed, 06 Apr 2016 02:16:13 GMT\",\"CATEGORY\":\"Potatoes\",\"MONTH\":\"04\"},{\"SALES\":275.8000000000002,\"YEAR\":\"2016\",\"DATENEW\":\"Wed, 06 Apr 2016 03:26:52 GMT\",\"CATEGORY\":\"Avocadoes\",\"MONTH\":\"04\"},{\"SALES\":39.96,\"YEAR\":\"2016\",\"DATENEW\":\"Wed, 06 Apr 2016 03:27:58 GMT\",\"CATEGORY\":\"Groceries-Dry Goods\",\"MONTH\":\"04\"},{\"SALES\":618.9657799999997,\"YEAR\":\"2016\",\"DATENEW\":\"Wed, 06 Apr 2016 04:47:53 GMT\",\"CATEGORY\":\"Stonefruits\",\"MONTH\":\"04\"},{\"SALES\":348.5120000000002,\"YEAR\":\"2016\",\"DATENEW\":\"Thu, 07 Apr 2016 02:45:13 GMT\",\"CATEGORY\":\"Lettuces\",\"MONTH\":\"04\"},{\"SALES\":293.10000000000025,\"YEAR\":\"2016\",\"DATENEW\":\"Thu, 07 Apr 2016 03:24:48 GMT\",\"CATEGORY\":\"Bunch Vegies\",\"MONTH\":\"04\"},{\"SALES\":227.34999999999985,\"YEAR\":\"2016\",\"DATENEW\":\"Fri, 08 Apr 2016 01:04:44 GMT\",\"CATEGORY\":\"Eggs\",\"MONTH\":\"04\"},{\"SALES\":138.97199999999998,\"YEAR\":\"2016\",\"DATENEW\":\"Fri, 08 Apr 2016 04:21:54 GMT\",\"CATEGORY\":\"Herbs\",\"MONTH\":\"04\"},{\"SALES\":502.37238000000025,\"YEAR\":\"2016\",\"DATENEW\":\"Sat, 09 Apr 2016 03:34:50 GMT\",\"CATEGORY\":\"Apples\",\"MONTH\":\"04\"},{\"SALES\":74.27000000000001,\"YEAR\":\"2016\",\"DATENEW\":\"Sat, 09 Apr 2016 04:22:37 GMT\",\"CATEGORY\":\"Berries\",\"MONTH\":\"04\"},{\"SALES\":2.0,\"YEAR\":\"2016\",\"DATENEW\":\"Sat, 09 Apr 2016 04:22:37 GMT\",\"CATEGORY\":\"Cut Fruits\",\"MONTH\":\"04\"}\n        ]\n\n    var map = api_data.reduce((r, i) => ((r[i.DATENEW] = r[i.DATENEW] || []).push({\n      // date : i.DATENEW,\n      // sales: i.SALES\n      i\n    }), r), {});\n\n    var entries = Object.entries(map);\n    // console.log(entries);\n    // const data = [];\n    //   for(let i =0; i < entries.length; i++) {\n    //     data.push({\n    //       name : entries[i][0],\n    //       values: [],\n    //     })\n    //     for(let j =0 ; j < entries[i][1].length; j++) {\n    //       data[i].values.push({\n    //         date: entries[i][1][j].date,\n    //         sales: entries[i][1][j].sales\n    //       })\n    //     }\n    //   }\n\n    var categories = api_data.reduce((r,i) => (((r[i.CATEGORY] = r[i.CATEGORY] || [] ).push({\n      categorie : i.CATEGORY\n    }), r)), {} );\n    // console.log(categories);\n    var category_list = Object.keys(categories); \n    // console.log(category_list);\n    var map = api_data.reduce((r, i) => (((r[i.MONTH] = r[i.MONTH] || []).push({\n      category: i.CATEGORY,\n      values: i.SALES\n    }), r)), {});\n    // console.log(map);\n    var entries = Object.entries(map);\n    console.log(entries)\n\n    var second_data = [];\n      for(let i =0; i < entries.length; i++) {\n        console.log(entries[i][0]);\n        second_data.push({\n          date : entries[i][0]\n        })\n        for(let j =0 ; j < entries[i][1].length; j++) {\n          var x = Object.values(entries[i][1][j]);\n          var a = x[0],\n            b = x[1];\n          second_data[i][a] = b;\n          // second_data.concat({\n          //   [a] : b\n          //   // date: entries[i][1][j].date,\n          //   // sales: entries[i][1][j].sales\n          //   // entries[i][1][j].CATEGORY : entries[i][1][j].CATEGORY\n          // })\n        }\n      }\n    console.log(\"second og data\",second_data)\n    second_data.forEach(function(d) {\n      d.date = (new Date(d.date));\n    });\n    console.log(second_data); \n\n\n     var myData = \"date\tNew York\tSan Francisco\tAustin\\n\\\n20111001\t63.4\t62.7\t72.2\\n\\\n20111002\t58.0\t59.9\t67.7\\n\\\n20111003\t53.3\t59.1\t69.4\\n\\\n20111004\t55.7\t58.8\t68.0\\n\\\n20111005\t64.2\t58.7\t72.4\\n\\\n20111006\t58.8\t57.0\t77.0\\n\\\n20111007\t57.9\t56.7\t82.3\\n\\\n20111008\t61.8\t56.8\t78.9\\n\\\n20111009\t69.3\t56.7\t68.8\\n\\\n20111010\t71.2\t60.1\t68.7\\n\\\n20111011\t68.7\t61.1\t70.3\\n\\\n20111012\t61.8\t61.5\t75.3\\n\\\n20111013\t63.0\t64.3\t76.6\\n\\\n20111014\t66.9\t67.1\t66.6\\n\\\n20111015\t61.7\t64.6\t68.0\\n\\\n20111016\t61.8\t61.6\t70.6\\n\\\n20111017\t62.8\t61.1\t71.1\\n\\\n20111018\t60.8\t59.2\t70.0\\n\\\n20111019\t62.1\t58.9\t61.6\\n\\\n20111020\t65.1\t57.2\t57.4\\n\\\n20111021\t55.6\t56.4\t64.3\\n\\\n20111022\t54.4\t60.7\t72.4\\n\";\n\n    var margin = {\n        top: 20,\n        right: 80,\n        bottom: 30,\n        left: 50\n      },\n      width = 900 - margin.left - margin.right,\n      height = 500 - margin.top - margin.bottom;\n\n    // var parseDate = d3.time.format(\"%Y%m%d\").parse;\n\n    var x = d3.time.scale()\n      .range([0, width]);\n\n    var y = d3.scale.linear()\n      .range([height, 0]);\n\n    var color = d3.scale.category10();\n\n    var xAxis = d3.svg.axis()\n      .scale(x)\n      .orient(\"bottom\");\n\n    var yAxis = d3.svg.axis()\n      .scale(y)\n      .orient(\"left\");\n\n    var line = d3.svg.line()\n      .interpolate(\"basis\")\n      .x(function(d) {\n        return x(d.date);\n      })\n      .y(function(d) {\n        return y(d.temperature);\n      });\n\n    var svg = d3.select(\"#multilinechart\").append(\"svg\")\n      .attr(\"width\", width + margin.left + margin.right)\n      .attr(\"height\", height + margin.top + margin.bottom)\n      .append(\"g\")\n      .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n    var data = d3.tsv.parse(myData);\n\n    console.log(d3.tsv.parse(myData),\"abcdef\");\n\n    data = [];\n    data = second_data;\n\n    color.domain(d3.keys(data[0]).filter(function(key) {\n      return key !== \"date\";\n    }));\n\n    // data.forEach(function(d) {\n    //   console.log(d);\n    //   d.date = parseDate(d.date);\n    // });\n\n    var cities = color.domain().map(function(name) {\n      return {\n        name: name,\n        values: data.map(function(d) {\n          return {\n            date: d.date,\n            temperature: +d[name]\n          };\n        })\n      };\n    });\n    console.log(cities)\n\n    x.domain(d3.extent(data, function(d) {\n      return d.date;\n    }));\n\n    y.domain([\n      d3.min(cities, function(c) {\n        return d3.min(c.values, function(v) {\n          return v.temperature;\n        });\n      }),\n      d3.max(cities, function(c) {\n        return d3.max(c.values, function(v) {\n          return v.temperature;\n        });\n      })\n    ]);\n\n    var legend = svg.selectAll('g')\n      .data(cities)\n      .enter()\n      .append('g')\n      .attr('class', 'legend');\n\n    legend.append('rect')\n      .attr('x', width - 20)\n      .attr('y', function(d, i) {\n        return i * 20;\n      })\n      .attr('width', 10)\n      .attr('height', 10)\n      .style('fill', function(d) {\n        return color(d.name);\n      });\n\n    legend.append('text')\n      .attr('x', width - 8)\n      .attr('y', function(d, i) {\n        return (i * 20) + 9;\n      })\n      .text(function(d) {\n        return d.name;\n      });\n\n    svg.append(\"g\")\n      .attr(\"class\", \"x axis\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(xAxis);\n\n    svg.append(\"g\")\n      .attr(\"class\", \"y axis\")\n      .call(yAxis)\n      .append(\"text\")\n      .attr(\"transform\", \"rotate(-90)\")\n      .attr(\"y\", 6)\n      .attr(\"dy\", \".71em\")\n      .style(\"text-anchor\", \"end\")\n      .text(\"Temperature (ÂºF)\");\n\n    var city = svg.selectAll(\".city\")\n      .data(cities)\n      .enter().append(\"g\")\n      .attr(\"class\", \"city\");\n\n    city.append(\"path\")\n      .attr(\"class\", \"line\")\n      .attr(\"d\", function(d) {\n        return line(d.values);\n      })\n      .style(\"stroke\", function(d) {\n        return color(d.name);\n      });\n\n    city.append(\"text\")\n      .datum(function(d) {\n        return {\n          name: d.name,\n          value: d.values[d.values.length - 1]\n        };\n      })\n      .attr(\"transform\", function(d) {\n        return \"translate(\" + x(d.value.date) + \",\" + y(d.value.temperature) + \")\";\n      })\n      .attr(\"x\", 3)\n      .attr(\"dy\", \".35em\")\n      .text(function(d) {\n        return d.name;\n      });\n\n    var mouseG = svg.append(\"g\")\n      .attr(\"class\", \"mouse-over-effects\");\n\n    mouseG.append(\"path\") // this is the black vertical line to follow mouse\n      .attr(\"class\", \"mouse-line\")\n      .style(\"stroke\", \"black\")\n      .style(\"stroke-width\", \"1px\")\n      .style(\"opacity\", \"0\");\n      \n    var lines = document.getElementsByClassName('line');\n\n    var mousePerLine = mouseG.selectAll('.mouse-per-line')\n      .data(cities)\n      .enter()\n      .append(\"g\")\n      .attr(\"class\", \"mouse-per-line\");\n\n    mousePerLine.append(\"circle\")\n      .attr(\"r\", 7)\n      .style(\"stroke\", function(d) {\n        return color(d.name);\n      })\n      .style(\"fill\", \"none\")\n      .style(\"stroke-width\", \"1px\")\n      .style(\"opacity\", \"0\");\n\n    mousePerLine.append(\"text\")\n      .attr(\"transform\", \"translate(10,3)\");\n\n    mouseG.append('svg:rect') // append a rect to catch mouse movements on canvas\n      .attr('width', width) // can't catch mouse events on a g element\n      .attr('height', height)\n      .attr('fill', 'none')\n      .attr('pointer-events', 'all')\n      .on('mouseout', function() { // on mouse out hide line, circles and text\n        d3.select(\".mouse-line\")\n          .style(\"opacity\", \"0\");\n        d3.selectAll(\".mouse-per-line circle\")\n          .style(\"opacity\", \"0\");\n        d3.selectAll(\".mouse-per-line text\")\n          .style(\"opacity\", \"0\");\n      })\n      .on('mouseover', function() { // on mouse in show line, circles and text\n        d3.select(\".mouse-line\")\n          .style(\"opacity\", \"1\");\n        d3.selectAll(\".mouse-per-line circle\")\n          .style(\"opacity\", \"1\");\n        d3.selectAll(\".mouse-per-line text\")\n          .style(\"opacity\", \"1\");\n      })\n      .on('mousemove', function() { // mouse moving over canvas\n        var mouse = d3.mouse(this);\n        d3.select(\".mouse-line\")\n          .attr(\"d\", function() {\n            var d = \"M\" + mouse[0] + \",\" + height;\n            d += \" \" + mouse[0] + \",\" + 0;\n            return d;\n          });\n\n        d3.selectAll(\".mouse-per-line\")\n          .attr(\"transform\", function(d, i) {\n            // console.log(width/mouse[0])\n            var xDate = x.invert(mouse[0]),\n                bisect = d3.bisector(function(d) { return d.date; }).right;\n              var  idx = bisect(d.values, xDate);\n            \n            var beginning = 0,\n                end = lines[i].getTotalLength(),\n                target = null;\n\n            while (true){\n              target = Math.floor((beginning + end) / 2);\n              var pos = lines[i].getPointAtLength(target);\n              if ((target === end || target === beginning) && pos.x !== mouse[0]) {\n                  break;\n              }\n              if (pos.x > mouse[0])      end = target;\n              else if (pos.x < mouse[0]) beginning = target;\n              else break; //position found\n            }\n            \n            d3.select(this).select('text')\n              .text(y.invert(pos.y).toFixed(2));\n              \n            return \"translate(\" + mouse[0] + \",\" + pos.y +\")\";\n          });\n      });\n      \n\n  }\n\n}\n</script>\n  <style>\n    \n    \n    .axis path,\n    .axis line {\n      fill: none;\n      stroke: #000;\n      shape-rendering: crispEdges;\n    }\n    \n    /* .x.axis path {\n      display: none;\n    } */\n    \n    .line {\n      fill: none;\n      stroke: steelblue;\n      stroke-width: 1.5px;\n    }\n  </style>"]}]}