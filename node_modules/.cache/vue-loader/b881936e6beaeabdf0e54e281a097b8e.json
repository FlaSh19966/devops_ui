{"remainingRequest":"/home/vimalesh/Learning/devops_ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/vimalesh/Learning/devops_ui/src/portal/analytics/NERTagging.vue?vue&type=style&index=0&scoped.=true&lang=css&","dependencies":[{"path":"/home/vimalesh/Learning/devops_ui/src/portal/analytics/NERTagging.vue","mtime":1643027096188},{"path":"/home/vimalesh/Learning/devops_ui/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vimalesh/Learning/devops_ui/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/vimalesh/Learning/devops_ui/node_modules/@vue/cli-service/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/vimalesh/Learning/devops_ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vimalesh/Learning/devops_ui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoucXVlc3Rpb25zLWNhcmR7CiAgcGFkZGluZzogMXJlbTsKCi8qIC13ZWJraXQtYm94LXNoYWRvdzogICAzcHggM3B4IDVweCA2cHggI2NjYzsgICAqLwogIC8qIC1tb3otYm94LXNoYWRvdzogICAgM3B4IDNweCA1cHggNnB4ICNjY2M7ICAKICAgIGJveC1zaGFkb3c6ICAgICAgICAgM3B4IDNweCA1cHggNnB4ICNjY2M7ICAqLwp9CgouZmFkZS1lbnRlci1hY3RpdmUsIC5mYWRlLWxlYXZlLWFjdGl2ZSB7CiAgdHJhbnNpdGlvbjogb3BhY2l0eSAwLjQ1cyBlYXNlLWluLW91dDsKfQoKLmZhZGUtZW50ZXIsIC5mYWRlLWxlYXZlLXRvIHsKICBvcGFjaXR5OiAwOwp9Cg=="},{"version":3,"sources":["NERTagging.vue"],"names":[],"mappingsuCA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA","file":"NERTagging.vue","sourceRoot":"src/portal/analytics","sourcesContent":["<template>\n  <div>\n    <div class=\"dash-cont\">\n      <div\n        class=\"spinner\"\n        id=\"spinner\"\n        v-show=\"spinnerOn\"\n        style=\"z-index:100\"\n      ></div>\n      <div class=\"container-fluid\">\n        <div class=\"card dash-card\">\n          <div class=\"card-header d-block d-sm-flex flex-wrap justify-content-between\">\n          <h4 class=\"mb-sm-0\">Unanswered Questions</h4>\n          </div>\n          <div class=\"card-body\" style=\"padding:0\">\n            <!-- <div class=\"table table-box\">\n              <div class=\"table-responsive\"> -->\n              <div v-if=\"questions.length == 0\" class=\"card questions-card mt-2 mt-2 ml-3 mr-3 text-center d-flex\">\n                <div>\n                No Record Found. Please Go to  <em style=\"cursor:pointer\" @click=\"$router.push({name: 'Business Analytics'})\"> Search </em> to Start  Searching\n                </div>\n              </div>  \n              <div v-for=\"(question,index) in questions\" :key=\"index\" class=\"card questions-card mt-2 mt-2 ml-3 mr-3\">\n                <div>\n                 <span @click=\"questions[index].show_mappings = !questions[index].show_mappings\" style=\"cursor:pointer;margin-bottom:0\"> {{ question.search_string }} </span>\n                  <i\n                  style=\"cursor:pointer;margin-left:auto;float:right;color:#ec2525\"\n                  class=\"fa fa-trash\"\n                  aria-hidden=\"true\"\n                  @click=\"delete_unanswered_question(index)\"\n                ></i>\n                  <!-- {{ question.show_mappings }} -->\n                </div>\n                <transition name=\"fade\" mode=\"out-in\">\n                   <!-- <div class=\"mt-3\"> -->\n                  <div class=\"mt-3\" v-show=\"question.show_mappings\">\n                    <div class=\"d-flex\">\n                    <!-- <button class=\"btn btn-primary mb-2\" @click=\"tag_question(index)\"> Change </button> -->\n                      <!-- {{question.entity_suggestion_map}} -->\n                      <table style=\"width:100%;text-align:center\">\n                        <tr>\n                          <td style=\"padding-left:1rem\" class=\"text-center\" v-for=\"(current_entity,index) in question.entity_suggestion_map\" :key=\"index\">\n                            {{ current_entity.entity.value }}\n                          </td>\n                        </tr>\n                        <tr>\n                          <td v-for=\"(entity, index) in question.entity_suggestion_map\" :key=\"index\">\n                            <div v-if=\"entity.suggestion.type != 'input'\">\n                              <span v-if=\"entity.suggestion.type == 'attribute' \" v-html=\"attribute_svg\"> </span>\n                              <span v-if=\"entity.suggestion.type == 'value' \" v-html=\"value_svg\"> </span>\n                              <span v-if=\"entity.suggestion.type == 'metric' \" v-html=\"metrics_svg\"> </span>\n                              <span v-if=\"entity.suggestion.type == 'keyword' \" v-html=\"keyword_svg\"> </span>\n                                {{entity.entity.value}}\n                              \n                            </div>\n                            <div v-else style=\"padding-left:1rem\" class=\"text-center\">\n                              -\n                            </div>  \n                          </td>\n                        </tr>\n                      </table>\n                      <a\n                        @click=\"tag_question(index)\"\n                        class=\"ml-2\"\n                        style=\"margin: 0 0 10px;padding: 0 0 10px; cursor:pointer\"\n                      >\n                        <svg\n                          xmlns=\"http://www.w3.org/2000/svg\"\n                          width=\"15.392\"\n                          height=\"15.392\"\n                          viewBox=\"0 0 15.392 15.392\"\n                        >\n                          <path\n                            id=\"square-edit-outline\"\n                            d=\"M4.71,3A1.7,1.7,0,0,0,3,4.71V16.682a1.71,1.71,0,0,0,1.71,1.71H16.682a1.71,1.71,0,0,0,1.71-1.71V10.7h-1.71v5.986H4.71V4.71H10.7V3H4.71m10.928.855a.591.591,0,0,0-.41.171L14.185,5.061,16.322,7.2l1.043-1.035a.578.578,0,0,0,0-.812L16.04,4.026a.571.571,0,0,0-.4-.171M13.578,5.668l-6.3,6.311v2.138H9.413l6.3-6.311Z\"\n                            transform=\"translate(-3 -3)\"\n                            fill=\"#9499ae\"\n                          />\n                        </svg>\n                      </a>\n                    </div>\n                  </div>\n                </transition>\n              </div>\n\n                <!-- <table class=\"table\">\n                  <thead>\n                    <tr>\n                      <th class=\"text-left\" style=\"width:40%\">\n                        Unanswered Questions\n                      </th>\n                      <th>Settings</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    <tr v-for=\"(question, index) in questions\" :key=\"index\">\n                      <td class=\"text-left\">{{ question.search_string }}</td>\n                      <td class=\"text-center\">\n                        <i\n                          class=\"fa fa-cog\"\n                          aria-hidden=\"true\"\n                          @click=\"tag_question(index)\"\n                          style=\"cursor:pointer\"\n                        ></i>\n                      </td>\n                    </tr>\n                  </tbody>\n                </table> -->\n                \n              <!-- </div>\n            </div> -->\n          </div>\n        </div>\n      </div>\n      <div\n        id=\"myModal\"\n        class=\"modal fade\"\n        role=\"dialog\"\n        v-if=\"show_question_modal\"\n        data-backdrop=\"static\"\n        data-keyboard=\"false\"\n      >\n        <div class=\"modal-dialog modal-lg\">\n          <!-- Modal content-->\n          <div class=\"modal-content\">\n            <div class=\"modal-header\">\n              <h4 class=\"modal-title\">Teach Me Your Language</h4>\n              <button type=\"button\" class=\"close\" data-dismiss=\"modal\" @click=\"close_current_question_modal\">\n                &times;\n              </button>\n            </div>\n            <div class=\"modal-body\">\n              <!-- <div\n                v-if=\"phrase_selected.length > 0\"\n                style=\"background-color:#E6E6E6\"\n              >\n                {{ current_unanswered_question_selected.original_string }}\n              </div> -->\n\n              <!-- <div class=\"text-center d-flex\" @mouseup=\"selected_text\"> -->\n              <div class=\"text-center\">\n                <!-- <div v-for=\"(string, index) in current_tags\" :key=\"index\">\n                  <span> {{string}} </span>\n                </div> -->\n                <h4 class=\"text-center\"  @mouseup=\"selected_text\">{{current_unanswered_question_selected.search_string}}</h4>\n              </div>\n              <!-- <div>\n                <p\n                  v-for=\"(entity,\n                  index) in current_unanswered_question_selected.entity_suggestion_map\"\n                  :key=\"index\"\n                >\n                  {{ entity.entity.value }}\n                  ---------------\n                  {{ entity.suggestion.type }} ->>\n                  {{ entity.suggestion.value }}\n                </p>\n              </div> -->\n              <!-- <div>\n                <table>\n                  <tr>\n                    <td v-for=\"(phrase, index) in phrase_selected\" :key=\"index\">\n                      {{ phrase }}\n                    </td>\n                  </tr>\n                </table>\n\n              </div> -->\n              <!-- <p style=\"margin-bottom:0\"> This is how your Query was Interpreted: </p>\n              <table style=\"width:100%\" class=\"table\">\n                <tr>\n                  <td class=\"text-center\" v-for=\"(current_entity,index) in current_unanswered_question_selected.entity_suggestion_map\" :key=\"index\">\n                  {{ current_entity.entity.value }}\n                  </td>\n                </tr>\n                <tr>\n                  <td class=\"text-center\" v-for=\"(current_entity,index) in current_unanswered_question_selected.entity_suggestion_map\" :key=\"index\">\n                  <p> {{ current_entity.suggestion.type }} </p>\n                  <p> {{ current_entity.suggestion.value }} </p>\n                  </td>\n                </tr>\n                <tr>\n                  <td class=\"text-center\" v-for=\"(current_entity,index) in current_unanswered_question_selected.entity_suggestion_map\" :key=\"index\">\n                    <i title=\"Correct\" style=\"cursor:pointer;color:#5aec3f;margin:1rem\" class=\"fa fa-check\" aria-hidden=\"true\" @click=\"add_suggestion(index)\"></i>\n                    <i title=\"Wrong\" style=\"cursor:pointer;color:red;margin:1rem\" class=\"fa fa-times\" aria-hidden=\"true\" @click=\"discard_suggestion(index)\"></i>\n                    <i title=\"Ignore\" style=\"cursor:pointer;margin:1rem\" class=\"fas fa-minus-circle\"></i>\n                  </td>\n                </tr>\n              </table>\n              <table style=\"width:100%\" class=\"table\" v-if=\"corrected_suggestions.length > 0\">\n                Hello\n              </table>\n              <div v-if=\"wrong_phrases != null\">\n                  <p @mouseup=\"selected_text\"> \n                    {{wrong_phrases}}\n                  </p>\n              </div> -->\n              <p v-if=\"entity_suggestion_mapping_new.length > 0\"> New Mapping :</p>\n              <table v-if=\"entity_suggestion_mapping_new.length > 0\" style=\"border: 1px solid #777474;width:100%;text-align:center;\">\n                <tr style=\"border: 1px solid #777474;\">\n                  <td v-for=\"(entity, index) in entity_suggestion_mapping_new\" :key=\"index\" style=\"border: 1px solid #777474;\">\n                    {{entity.entity.value}}\n                  </td>\n                </tr>\n                <tr style=\"border: 1px solid #777474;\">\n                  <td style=\"border: 1px solid #777474;\" v-for=\"(entity, index) in entity_suggestion_mapping_new\" :key=\"index\">\n                      <span v-if=\"entity.suggestion[0].type == 'attribute' \" v-html=\"attribute_svg\"> </span>\n                      <span v-if=\"entity.suggestion[0].type == 'value' \" v-html=\"value_svg\"> </span>\n                      <span v-if=\"entity.suggestion[0].type == 'metric' \" v-html=\"metrics_svg\"> </span>\n                      <span v-if=\"entity.suggestion[0].type == 'keyword' \" v-html=\"keyword_svg\"> </span>\n                    {{entity.suggestion[0].value}}\n                    <!-- {{entity.suggestion[0]}} -->\n                  </td>\n                </tr>\n\n              </table>\n\n              <div v-if=\"show_change_suggestions\" class=\"mt-2\">\n                <p>\n\n                  What do you want '{{currrent_suggestion_to_change}}' to mean?\n                <span class=\"italic\" style=\"cursor:pointer\" @click=\"ignore_phrase\"> <em> ( Ignore?) </em> </span>\n                </p>  \n                <div class=\"d-flex\">\n                <tag-tag\n                  style=\"width:90%\"\n                  elementId=\"search_data\"\n                  element-id=\"tags\"\n                  v-model=\"search_data\"\n                  :typeahead=\"true\"\n                  typeahead-style=\"dropdown\"\n                  :typeahead-always-show=\"false\"\n                  :delete-on-backspace=\"true\"\n                  :existing-tags=\"search_result\"\n                  @change=\"search\"\n                  :allow-duplicates=\"true\"\n                  :typeahead-hide-discard=\"false\"\n                  :add-tags-on-space=\"false\"\n                  :only-existing-tags=\"false\"\n                  @tags-updated=\"tag_added\"\n                ></tag-tag>\n\n                <!-- <button class=\"btn btn-primary mt-4\">\n                  Save This Suggestion \n                </button> -->\n                <i title=\"Cancel\" style=\"cursor:pointer;color:red;margin:1rem\" class=\"fa fa-times\" aria-hidden=\"true\" @click=\"discard_suggestion()\"></i>\n                <i title=\"Save\" v-if=\"search_data.length > 0\" style=\"cursor:pointer;color:#5aec3f;margin:1rem\" class=\"fa fa-check\" aria-hidden=\"true\" @click=\"add_suggestion()\"></i>\n              </div>\n\n              </div>\n\n            </div>\n            <div class=\"modal-footer\">\n              <button \n              type=\"button\" \n              class=\"btn btn-primary\"\n              v-if=\"entity_suggestion_mapping_new.length > 0\"\n              @click=\"save_mapping_for_current_question\">Save changes</button>\n              <button\n                type=\"button\"\n                class=\"btn btn-default\"\n                data-dismiss=\"modal\"\n                @click=\"close_current_question_modal\"\n              >\n                Close\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\nimport Swal from \"sweetalert2\";\nimport api_calls from \"@/portal/api_calls\";\nimport VoerroTagsInputSecond from \"@/portal/analytics/tags_input/VoerroTagsInput.vue\"\nimport swal from 'sweetalert2';\nexport default {\n  name: \"AnalyticsNERTagging\",\n  components: {\n    \"tag-tag\":VoerroTagsInputSecond,\n  },\n  data() {\n    return {\n      spinnerOn: false,\n      dataset_name: \"Healthcare Data\",\n      // dataset_name: \"Fruithut v2\",\n      questions: [],\n      current_unanswered_question_selected: null,\n      show_question_modal: false,\n      current_tags: null,\n      phrase_selected: [],\n      corrected_suggestions: [],\n      wrong_phrases: null,\n      show_change_suggestions: false,\n      currrent_suggestion_to_change: null,\n      search_data: [],\n      search_result: [],\n      callapi : true,\n      attribute_svg:\n        '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"10.4\" height=\"10.8\" viewBox=\"0 0 1240.000000 1280.000000\" preserveAspectRatio=\"xMidYMid meet\" id=\"svgcontent\" overflow=\"visible\" x=\"632.3999999999999\" y=\"652.8\"><metadata>Created by potrace 1.15, written by Peter Selinger 2001-2017</metadata><g class=\"layer\" style=\"pointer-events:all\"><title style=\"pointer-events:inherit\">Layer 1</title><g transform=\"translate(0 1280) scale(0.1 -0.1)\" fill=\"#e91e63\" stroke=\"none\" id=\"svg_1\" fill-opacity=\"1\"><path d=\"M5736,12132C5550,11765 4933,10554 4365,9440C3797,8326 2908,6583 2390,5565C1871,4548 1121,3076 723,2296L0,877L0,779C0,695 2,681 18,676C27,673 253,622 520,561C787,501 1383,365 1845,260C2307,155 2753,53 2837,34C2936,12 3015,0 3062,0L3135,0L3664,1265L4193,2530L6135,2530L8077,2530L8615,1408C8911,790 9184,221 9221,143L9289,2L9327,10C9361,18 11508,485 12150,624L12395,677L12398,776L12401,876L12102,1460C11937,1782 11529,2580 11195,3235C10861,3890 10325,4938 10005,5565C9222,7097 7889,9707 7173,11110C6851,11740 6525,12378 6448,12528L6309,12800L6192,12800L6075,12799L5736,12132zM6530,6120C6746,5644 6925,5249 6927,5243C6931,5233 6767,5230 6126,5230C5683,5230 5320,5234 5320,5238C5320,5242 5343,5297 5371,5360C5399,5423 5572,5817 5757,6235C5941,6653 6097,7004 6102,7014C6112,7033 6113,7032 6125,7009C6132,6996 6314,6596 6530,6120z\" id=\"svg_2\" fill=\"#cccccc\"></path></g></g></svg>',\n      value_svg:\n        '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"10.4\" height=\"10.8\" viewBox=\"0 0 1280.000000 1280.000000\" preserveAspectRatio=\"xMidYMid meet\" id=\"svgcontent\" overflow=\"visible\" x=\"652.8\" y=\"652.8\"><metadata>Created by potrace 1.15, written by Peter Selinger 2001-2017</metadata><g class=\"layer\" style=\"pointer-events:all\"><title style=\"pointer-events:inherit\">Layer 1</title><g transform=\"translate(0 1280) scale(0.1 -0.1)\" fill=\"#e91e63\" stroke=\"none\" id=\"svg_1\" fill-opacity=\"1\"><path d=\"M1075,12793C941,12776 765,12720 651,12659C326,12484 110,12197 24,11825C6,11748 5,11658 5,9745C5,7832 6,7742 24,7665C82,7413 186,7223 360,7050C548,6863 763,6752 1028,6706C1110,6692 1329,6690 3055,6690C5169,6690 5065,6687 5255,6747C5694,6886 6016,7258 6094,7718C6108,7799 6110,8030 6110,9745C6110,11471 6108,11690 6094,11772C6048,12037 5937,12254 5750,12440C5582,12609 5412,12705 5160,12772L5075,12795L3090,12796C1998,12797 1092,12795 1075,12793z\" id=\"svg_2\" fill=\"#cccccc\"></path><path d=\"M7735,12785C7342,12724 7003,12481 6829,12138C6758,11996 6721,11878 6700,11717C6694,11666 6690,10977 6690,9745C6690,8513 6694,7824 6700,7773C6771,7235 7147,6827 7680,6713C7761,6696 7868,6695 9745,6695C11622,6695 11729,6696 11810,6713C12060,6767 12272,6881 12444,7054C12629,7242 12744,7472 12785,7740C12807,7882 12807,11608 12785,11750C12756,11944 12700,12089 12593,12252C12438,12490 12187,12675 11919,12750C11736,12801 11797,12800 9735,12799C8246,12798 7797,12795 7735,12785z\" id=\"svg_3\" fill=\"#cccccc\"></path><path d=\"M1070,6099C799,6064 548,5940 356,5746C171,5558 56,5328 15,5060C-7,4918 -7,1192 15,1050C44,856 100,711 207,548C397,257 694,69 1050,15C1192,-7 4918,-7 5060,15C5196,36 5290,64 5407,120C5758,287 5992,582 6086,980C6103,1050 6104,1173 6108,2990C6111,5002 6111,5027 6069,5190C5969,5584 5667,5911 5280,6043C5086,6109 5260,6104 3095,6106C2017,6107 1106,6104 1070,6099z\" id=\"svg_4\" fill=\"#cccccc\"></path><path d=\"M7760,6099C7310,6041 6926,5735 6767,5308C6737,5230 6714,5129 6700,5027C6694,4976 6690,4287 6690,3055C6690,1823 6694,1134 6700,1083C6738,794 6855,553 7054,356C7242,171 7472,56 7740,15C7882,-7 11608,-7 11750,15C12106,69 12403,257 12593,548C12700,711 12756,856 12785,1050C12807,1192 12807,4918 12785,5060C12764,5196 12736,5290 12680,5407C12513,5758 12218,5992 11820,6086C11749,6103 11630,6104 9785,6106C8707,6107 7796,6104 7760,6099z\" id=\"svg_5\" fill=\"#cccccc\"></path></g></g></svg>',\n      metrics_svg:\n        '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"10.4\" height=\"10.4\" viewBox=\"0 0 1280.000000 1280.000000\" preserveAspectRatio=\"xMidYMid meet\" id=\"svgcontent\" overflow=\"visible\" x=\"1280\" y=\"1280\"><metadata>Created by potrace 1.15, written by Peter Selinger 2001-2017</metadata><g class=\"layer\" style=\"pointer-events:all\"><title style=\"pointer-events:inherit\">Layer 1</title><g transform=\"translate(0 1280) scale(0.1 -0.1)\" fill=\"#e91e63\" stroke=\"none\" id=\"svg_1\" fill-opacity=\"1\"><path d=\"M5186,12083C5183,12073 5108,11705 5020,11265C4649,9418 4540,8876 4540,8873C4540,8871 4027,8870 3400,8870L2260,8870L2260,8271C2260,7804 2263,7670 2273,7663C2279,7658 2331,7641 2387,7627L2489,7600L3384,7600C4094,7600 4280,7597 4280,7588C4279,7581 4168,7024 4031,6350L3784,5125L3114,5120L2445,5114L2376,5087C2339,5072 2299,5055 2289,5049C2271,5040 2270,5018 2270,4440L2270,3840L2895,3840C3388,3840 3520,3837 3520,3828C3520,3815 3372,3079 3061,1550C2963,1069 2886,672 2890,667C2893,663 3166,661 3496,662L4095,665L4152,805C4220,972 4205,912 4335,1555C4701,3354 4781,3750 4791,3793L4802,3840L5866,3840L6930,3840L6925,3818C6922,3805 6791,3162 6635,2387L6350,980L6350,820L6350,660L6955,660C7288,660 7560,662 7560,664C7560,668 7963,2628 8125,3415C8172,3640 8210,3828 8210,3832C8210,3836 8729,3840 9364,3840L10518,3840L10525,4423C10529,4743 10531,5014 10529,5025C10526,5040 10500,5054 10425,5082L10325,5119L9403,5120C8562,5120 8480,5121 8480,5136C8480,5151 8975,7545 8986,7583C8991,7599 9031,7600 9648,7600L10305,7600L10413,7629C10473,7645 10523,7660 10526,7662C10528,7665 10533,7937 10537,8268L10543,8870L9897,8870C9541,8870 9250,8872 9250,8875C9250,8878 9358,9411 9491,10058C9623,10705 9771,11430 9819,11668L9908,12100L9294,12100L8681,12100L8666,12073C8658,12057 8631,11993 8606,11930C8555,11804 8578,11911 8174,9925C8078,9452 7991,9023 7980,8973C7969,8922 7960,8878 7960,8875C7960,8872 7479,8870 6890,8870C6298,8870 5820,8874 5820,8879C5820,8887 6263,11085 6365,11583C6407,11784 6410,11813 6410,11950L6410,12100L5801,12100C5229,12100 5191,12099 5186,12083zM7700,7595C7700,7592 7585,7036 7445,6359C7305,5683 7190,5127 7190,5125C7190,5122 6711,5120 6125,5120C5539,5120 5060,5123 5060,5126C5060,5129 5173,5685 5310,6362C5448,7038 5560,7594 5560,7596C5560,7598 6042,7600 6630,7600C7219,7600 7700,7598 7700,7595z\" id=\"svg_2\" fill=\"#cccccc\"></path></g></g></svg>',\n      keyword_svg: '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"10.4\" height=\"10.4\" viewBox=\"0 0 1163.000000 1280.000000\" preserveAspectRatio=\"xMidYMid meet\" id=\"svgcontent\" overflow=\"visible\" x=\"1163\" y=\"1280\"><metadata>Created by potrace 1.15, written by Peter Selinger 2001-2017</metadata><g class=\"layer\" style=\"pointer-events:all\"><title style=\"pointer-events:inherit\">Layer 1</title><g transform=\"translate(0 1280) scale(0.1 -0.1)\" fill=\"#e91e63\" stroke=\"none\" id=\"svg_1\" fill-opacity=\"1\"><path d=\"M5295,12794C3131,12724 1438,12393 600,11874C301,11690 103,11463 45,11239C26,11169 6,10966 7,10855C7,10732 25,10706 325,10396C469,10247 1528,9153 2679,7965L4770,5805L4770,3085C4770,1263 4774,344 4780,301C4806,147 4912,37 5065,9C5097,3 5387,1 5801,2L6485,5L6552,38C6632,77 6690,139 6722,219L6745,275L6750,3026L6755,5776L8251,7301C11694,10811 11549,10661 11577,10717C11591,10746 11609,10770 11616,10770C11628,10770 11630,10820 11630,11060L11630,11350L11598,11350C11568,11350 11562,11355 11532,11414C11429,11613 11177,11822 10831,11995C9985,12418 8597,12684 6735,12780C6540,12791 5494,12800 5295,12794z\" id=\"svg_2\" fill=\"#cccccc\"></path></g></g></svg>',\n      new_entity_mapping_for_current_question: null,\n      entity_type_prefix_mapping: {\n        keyword: 'kw',\n        function: 'function'\n      },\n      entity_suggestion_mapping_new: [],\n      mapped_phrase: '',\n      mapped_phrase_index:[],\n      current_string_start_index: null,\n      current_string_end_index: null,\n    };\n  },\n  mounted() {\n    // this.questions = [\n    //   {\n    //     search_string: \"Show me top 10 best performing category by sales\",\n    //     suggestions: [\n    //       {\n    //         key: \"K3h-0HEB0KWAWkclGFuh\",\n    //         value: \"top N\",\n    //         type: \"keyword\",\n    //         operation: null,\n    //         dataset: null,\n    //         column: null,\n    //         operation_on: [],\n    //         metadata: '{\"keyword_type\": \"general\"}',\n    //         keyword_type: \"general\",\n    //         company_id: \"cense\",\n    //         input: 10,\n    //       },\n    //       {\n    //         key: \"MHh-0HEB0KWAWkclGFuj\",\n    //         value: \"between ... and ...\",\n    //         type: \"keyword\",\n    //         operation: null,\n    //         dataset: null,\n    //         column: null,\n    //         operation_on: [],\n    //         metadata: '{\"keyword_type\": \"comparative\"}',\n    //         keyword_type: \"comparative\",\n    //         company_id: \"cense\",\n    //       },\n    //       {\n    //         key: \"Lnh-0HEB0KWAWkclGFuj\",\n    //         value: \"by\",\n    //         type: \"keyword\",\n    //         operation: null,\n    //         dataset: null,\n    //         column: null,\n    //         operation_on: [],\n    //         metadata: '{\"keyword_type\": \"general\"}',\n    //         keyword_type: \"general\",\n    //         company_id: \"cense\",\n    //       },\n    //       {\n    //         key: \"YFAUt3IBjPRsZy_Rx2c3\",\n    //         value: \"JOMAR AUTO SALES INC.\",\n    //         type: \"value\",\n    //         operation: \"filter\",\n    //         dataset: \"Healthcare Data\",\n    //         column: \"Policy Holder\",\n    //         operation_on: [],\n    //         metadata: \"\",\n    //         keyword_type: null,\n    //         company_id: \"gogyb450\",\n    //       },\n    //     ],\n    //   },\n    // ];\n    // let x = \n    //           [\n    //             {\n    //               \"search_string\": \"Show me top 10 best Provider by Outstanding Amount\",\n    //               \"suggestions\": [\n    //                 {\n    //                   \"key\": \"K3h-0HEB0KWAWkclGFuh\",\n    //                   \"value\": \"top N\",\n    //                   \"type\": \"keyword\",\n    //                   \"operation\": null,\n    //                   \"dataset\": null,\n    //                   \"column\": null,\n    //                   \"operation_on\": [],\n    //                   \"metadata\": \"{\\\"keyword_type\\\": \\\"general\\\"}\",\n    //                   \"keyword_type\": \"general\",\n    //                   \"company_id\": \"cense\",\n    //                   \"input\": 10\n    //                 },\n    //                 {\n    //                   \"key\": null,\n    //                   \"value\": \"best\",\n    //                   \"value_to_display\": \"best\",\n    //                   \"column\": null,\n    //                   \"company_id\": \"gogyb450\",\n    //                   \"keyword_type\": null,\n    //                   \"metadata\": \"\",\n    //                   \"type\": \"input\"\n    //                 },\n    //                 {\n    //                   \"key\": \"CPdIKnQBtbTN89OloqpX\",\n    //                   \"value\": \"Provider\",\n    //                   \"type\": \"attribute\",\n    //                   \"operation\": \"groupby\",\n    //                   \"dataset\": \"Healthcare Data\",\n    //                   \"column\": \"Provider\",\n    //                   \"operation_on\": [],\n    //                   \"metadata\": \"\",\n    //                   \"keyword_type\": null,\n    //                   \"company_id\": \"gogyb450\"\n    //                 },\n    //                 {\n    //                   \"key\": \"Lnh-0HEB0KWAWkclGFuj\",\n    //                   \"value\": \"by\",\n    //                   \"type\": \"keyword\",\n    //                   \"operation\": null,\n    //                   \"dataset\": null,\n    //                   \"column\": null,\n    //                   \"operation_on\": [],\n    //                   \"metadata\": \"{\\\"keyword_type\\\": \\\"general\\\"}\",\n    //                   \"keyword_type\": \"general\",\n    //                   \"company_id\": \"cense\"\n    //                 },\n    //                 {\n    //                   \"key\": \"EvdIKnQBtbTN89Oloqqa\",\n    //                   \"value\": \"Outstanding Amount\",\n    //                   \"type\": \"metric\",\n    //                   \"operation\": \"SUM\",\n    //                   \"dataset\": \"Healthcare Data\",\n    //                   \"column\": \"OutStanding\",\n    //                   \"operation_on\": [],\n    //                   \"metadata\": \"\",\n    //                   \"keyword_type\": null,\n    //                   \"company_id\": \"gogyb450\"\n    //                 }\n    //               ],\n    //               \"entity_suggestion_map\": [\n    //                 {\n    //                   \"entity\": {\n    //                     \"entity\": \"kw_general\",\n    //                     \"value\": \"top\",\n    //                     \"start\": 8,\n    //                     \"end\": 11\n    //                   },\n    //                   \"suggestion\": {\n    //                     \"key\": \"K3h-0HEB0KWAWkclGFuh\",\n    //                     \"value\": \"top N\",\n    //                     \"type\": \"keyword\",\n    //                     \"operation\": null,\n    //                     \"dataset\": null,\n    //                     \"column\": null,\n    //                     \"operation_on\": [],\n    //                     \"metadata\": \"{\\\"keyword_type\\\": \\\"general\\\"}\",\n    //                     \"keyword_type\": \"general\",\n    //                     \"company_id\": \"cense\",\n    //                     \"input\": 10\n    //                   }\n    //                 },\n    //                 {\n    //                   \"entity\": {\n    //                     \"entity\": \"input\",\n    //                     \"value\": \"10\",\n    //                     \"start\": 12,\n    //                     \"end\": 14\n    //                   },\n    //                   \"suggestion\": {\n    //                     \"key\": null,\n    //                     \"value\": \"10\",\n    //                     \"value_to_display\": \"10\",\n    //                     \"column\": null,\n    //                     \"company_id\": \"gogyb450\",\n    //                     \"keyword_type\": null,\n    //                     \"metadata\": \"\",\n    //                     \"type\": \"input\"\n    //                   }\n    //                 },\n    //                 {\n    //                   \"entity\": {\n    //                     \"entity\": \"input\",\n    //                     \"value\": \"best\",\n    //                     \"start\": 15,\n    //                     \"end\": 19\n    //                   },\n    //                   \"suggestion\": {\n    //                     \"key\": null,\n    //                     \"value\": \"best\",\n    //                     \"value_to_display\": \"best\",\n    //                     \"column\": null,\n    //                     \"company_id\": \"gogyb450\",\n    //                     \"keyword_type\": null,\n    //                     \"metadata\": \"\",\n    //                     \"type\": \"input\"\n    //                   }\n    //                 },\n    //                 {\n    //                   \"entity\": {\n    //                     \"entity\": \"attribute\",\n    //                     \"value\": \"provider\",\n    //                     \"start\": 20,\n    //                     \"end\": 28\n    //                   },\n    //                   \"suggestion\": {\n    //                     \"key\": \"CPdIKnQBtbTN89OloqpX\",\n    //                     \"value\": \"Provider\",\n    //                     \"type\": \"attribute\",\n    //                     \"operation\": \"groupby\",\n    //                     \"dataset\": \"Healthcare Data\",\n    //                     \"column\": \"Provider\",\n    //                     \"operation_on\": [],\n    //                     \"metadata\": \"\",\n    //                     \"keyword_type\": null,\n    //                     \"company_id\": \"gogyb450\"\n    //                   }\n    //                 },\n    //                 {\n    //                   \"entity\": {\n    //                     \"entity\": \"kw_general\",\n    //                     \"value\": \"by\",\n    //                     \"start\": 29,\n    //                     \"end\": 31\n    //                   },\n    //                   \"suggestion\": {\n    //                     \"key\": \"Lnh-0HEB0KWAWkclGFuj\",\n    //                     \"value\": \"by\",\n    //                     \"type\": \"keyword\",\n    //                     \"operation\": null,\n    //                     \"dataset\": null,\n    //                     \"column\": null,\n    //                     \"operation_on\": [],\n    //                     \"metadata\": \"{\\\"keyword_type\\\": \\\"general\\\"}\",\n    //                     \"keyword_type\": \"general\",\n    //                     \"company_id\": \"cense\"\n    //                   }\n    //                 },\n    //                 {\n    //                   \"entity\": {\n    //                     \"entity\": \"measure\",\n    //                     \"value\": \"outstanding amount\",\n    //                     \"start\": 32,\n    //                     \"end\": 50\n    //                   },\n    //                   \"suggestion\": {\n    //                     \"key\": \"EvdIKnQBtbTN89Oloqqa\",\n    //                     \"value\": \"Outstanding Amount\",\n    //                     \"type\": \"metric\",\n    //                     \"operation\": \"SUM\",\n    //                     \"dataset\": \"Healthcare Data\",\n    //                     \"column\": \"OutStanding\",\n    //                     \"operation_on\": [],\n    //                     \"metadata\": \"\",\n    //                     \"keyword_type\": null,\n    //                     \"company_id\": \"gogyb450\"\n    //                   }\n    //                 }\n    //               ],\n    //               \"original_string\": \"Show me top 10 best Provider by Outstanding Amount\"\n    //             },\n    //             {\n    //               \"search_string\": \"Show me top 10 best Provider by sales\",\n    //               \"suggestions\": [\n    //                 {\n    //                   \"key\": \"K3h-0HEB0KWAWkclGFuh\",\n    //                   \"value\": \"top N\",\n    //                   \"type\": \"keyword\",\n    //                   \"operation\": null,\n    //                   \"dataset\": null,\n    //                   \"column\": null,\n    //                   \"operation_on\": [],\n    //                   \"metadata\": \"{\\\"keyword_type\\\": \\\"general\\\"}\",\n    //                   \"keyword_type\": \"general\",\n    //                   \"company_id\": \"cense\",\n    //                   \"input\": 10\n    //                 },\n    //                 {\n    //                   \"key\": null,\n    //                   \"value\": \"best\",\n    //                   \"value_to_display\": \"best\",\n    //                   \"column\": null,\n    //                   \"company_id\": \"gogyb450\",\n    //                   \"keyword_type\": null,\n    //                   \"metadata\": \"\",\n    //                   \"type\": \"input\"\n    //                 },\n    //                 {\n    //                   \"key\": \"CPdIKnQBtbTN89OloqpX\",\n    //                   \"value\": \"Provider\",\n    //                   \"type\": \"attribute\",\n    //                   \"operation\": \"groupby\",\n    //                   \"dataset\": \"Healthcare Data\",\n    //                   \"column\": \"Provider\",\n    //                   \"operation_on\": [],\n    //                   \"metadata\": \"\",\n    //                   \"keyword_type\": null,\n    //                   \"company_id\": \"gogyb450\"\n    //                 },\n    //                 {\n    //                   \"key\": \"Lnh-0HEB0KWAWkclGFuj\",\n    //                   \"value\": \"by\",\n    //                   \"type\": \"keyword\",\n    //                   \"operation\": null,\n    //                   \"dataset\": null,\n    //                   \"column\": null,\n    //                   \"operation_on\": [],\n    //                   \"metadata\": \"{\\\"keyword_type\\\": \\\"general\\\"}\",\n    //                   \"keyword_type\": \"general\",\n    //                   \"company_id\": \"cense\"\n    //                 },\n    //                 {\n    //                   \"key\": \"gyWfDHIBFAyJL8QrNTx4\",\n    //                   \"value\": \"SALES\",\n    //                   \"type\": \"metric\",\n    //                   \"operation\": \"SUM\",\n    //                   \"dataset\": \"Fruithut v2\",\n    //                   \"column\": \"Sales\",\n    //                   \"operation_on\": [],\n    //                   \"metadata\": \"\",\n    //                   \"keyword_type\": null,\n    //                   \"company_id\": \"gogyb450\"\n    //                 }\n    //               ],\n    //               \"entity_suggestion_map\": [\n    //                 {\n    //                   \"entity\": {\n    //                     \"entity\": \"kw_general\",\n    //                     \"value\": \"top\",\n    //                     \"start\": 8,\n    //                     \"end\": 11\n    //                   },\n    //                   \"suggestion\": {\n    //                     \"key\": \"K3h-0HEB0KWAWkclGFuh\",\n    //                     \"value\": \"top N\",\n    //                     \"type\": \"keyword\",\n    //                     \"operation\": null,\n    //                     \"dataset\": null,\n    //                     \"column\": null,\n    //                     \"operation_on\": [],\n    //                     \"metadata\": \"{\\\"keyword_type\\\": \\\"general\\\"}\",\n    //                     \"keyword_type\": \"general\",\n    //                     \"company_id\": \"cense\",\n    //                     \"input\": 10\n    //                   }\n    //                 },\n    //                 {\n    //                   \"entity\": {\n    //                     \"entity\": \"input\",\n    //                     \"value\": \"10\",\n    //                     \"start\": 12,\n    //                     \"end\": 14\n    //                   },\n    //                   \"suggestion\": {\n    //                     \"key\": null,\n    //                     \"value\": \"10\",\n    //                     \"value_to_display\": \"10\",\n    //                     \"column\": null,\n    //                     \"company_id\": \"gogyb450\",\n    //                     \"keyword_type\": null,\n    //                     \"metadata\": \"\",\n    //                     \"type\": \"input\"\n    //                   }\n    //                 },\n    //                 {\n    //                   \"entity\": {\n    //                     \"entity\": \"input\",\n    //                     \"value\": \"best\",\n    //                     \"start\": 15,\n    //                     \"end\": 19\n    //                   },\n    //                   \"suggestion\": {\n    //                     \"key\": null,\n    //                     \"value\": \"best\",\n    //                     \"value_to_display\": \"best\",\n    //                     \"column\": null,\n    //                     \"company_id\": \"gogyb450\",\n    //                     \"keyword_type\": null,\n    //                     \"metadata\": \"\",\n    //                     \"type\": \"input\"\n    //                   }\n    //                 },\n    //                 {\n    //                   \"entity\": {\n    //                     \"entity\": \"attribute\",\n    //                     \"value\": \"provider\",\n    //                     \"start\": 20,\n    //                     \"end\": 28\n    //                   },\n    //                   \"suggestion\": {\n    //                     \"key\": \"CPdIKnQBtbTN89OloqpX\",\n    //                     \"value\": \"Provider\",\n    //                     \"type\": \"attribute\",\n    //                     \"operation\": \"groupby\",\n    //                     \"dataset\": \"Healthcare Data\",\n    //                     \"column\": \"Provider\",\n    //                     \"operation_on\": [],\n    //                     \"metadata\": \"\",\n    //                     \"keyword_type\": null,\n    //                     \"company_id\": \"gogyb450\"\n    //                   }\n    //                 },\n    //                 {\n    //                   \"entity\": {\n    //                     \"entity\": \"kw_general\",\n    //                     \"value\": \"by\",\n    //                     \"start\": 29,\n    //                     \"end\": 31\n    //                   },\n    //                   \"suggestion\": {\n    //                     \"key\": \"Lnh-0HEB0KWAWkclGFuj\",\n    //                     \"value\": \"by\",\n    //                     \"type\": \"keyword\",\n    //                     \"operation\": null,\n    //                     \"dataset\": null,\n    //                     \"column\": null,\n    //                     \"operation_on\": [],\n    //                     \"metadata\": \"{\\\"keyword_type\\\": \\\"general\\\"}\",\n    //                     \"keyword_type\": \"general\",\n    //                     \"company_id\": \"cense\"\n    //                   }\n    //                 },\n    //                 {\n    //                   \"entity\": {\n    //                     \"entity\": \"measure\",\n    //                     \"value\": \"sales\",\n    //                     \"start\": 32,\n    //                     \"end\": 37\n    //                   },\n    //                   \"suggestion\": {\n    //                     \"key\": \"gyWfDHIBFAyJL8QrNTx4\",\n    //                     \"value\": \"SALES\",\n    //                     \"type\": \"metric\",\n    //                     \"operation\": \"SUM\",\n    //                     \"dataset\": \"Fruithut v2\",\n    //                     \"column\": \"Sales\",\n    //                     \"operation_on\": [],\n    //                     \"metadata\": \"\",\n    //                     \"keyword_type\": null,\n    //                     \"company_id\": \"gogyb450\"\n    //                   }\n    //                 }\n    //               ]\n    //             }\n    //           ]\n\n\n    // for(let i = 0; i<x.length; i++){\n    //   x.show_mappings = false;\n    // }\n    // this.questions = JSON.parse(JSON.stringify(x));\n    // console.log(this.questions)\n    this.spinnerOn = true;\n    axios.get(api_calls.bi_unanswered_searches(),{\n      params: {\n      email: this.$session.get(\"UserInformation\").email,\n      token: this.$session.get(\"UserInformation\").tokens,\n      company_name: this.$session.get(\"UserInformation\").company_name,\n      company_id: this.$session.get(\"UserInformation\").company_id,\n      license_key: this.$session.get(\"UserInformation\").license_key,\n      dataset_name: this.dataset_name\n      }\n    }).then(response => {\n      this.spinnerOn = false\n      if(response.data.status === \"Success\"){\n        this.questions = response.data.unanswered_searches.map(function(search){\n          var o = Object.assign({}, search);\n          o.show_mappings = false;\n          return o;\n        });\n      } else{\n        Swal.fire({\n          text: \"Some Error Occurred. Please Try Again.\",\n          timer:2500,\n        })\n      }\n      console.log(response);\n\n    })\n  },\n  watch: {\n    questions(newVal,oldVal){\n      console.log(newVal,oldVal)\n    }\n  },\n  methods: {\n    tag_question(index) {\n      this.current_unanswered_question_selected = this.questions[index];\n      this.current_unanswered_question_selected.entity_suggestion_map = this.questions[index].entity_suggestion_map;\n      this.current_unanswered_question_selected.original_string = this.questions[index].search_string;\n      this.show_question_modal = true;\n      this.current_tags = this.current_unanswered_question_selected.search_string.split(\" \")\n      // console.log(this.current_tags)\n      // console.log(this.current_unanswered_question_selected)\n      setTimeout(() => {\n        $(\"#myModal\").modal();\n      }, 0);\n    },\n    selected_text() {\n      if (window.getSelection && !this.show_change_suggestions) {\n        if (window.getSelection().toString().trim() != \"\") {\n          if((window.getSelection().focusOffset - window.getSelection().anchorOffset) < 0 ){\n            swal.fire({\n              type:'error',\n              text:'Please Select Word from Left to Right',\n              toast:true,\n              showConfirmButton: false,\n              timer: 2500\n            });\n          } else {\n            this.current_string_start_index = window.getSelection().anchorOffset;\n            this.current_string_end_index =   window.getSelection().focusOffset;\n            if(this.check_if_word_already_mapped(window.getSelection().toString().trim())){\n              // console.log(window.getSelection().toString());\n              // console.log(window.getSelection().toString().trim());\n              console.log(this.current_unanswered_question_selected.search_string.indexOf(window.getSelection().toString().trim()))\n              console.log(window.getSelection().toString().trim().length);\n              this.currrent_suggestion_to_change = window.getSelection().toString().trim();\n              // this.current_string_start_index = this.current_unanswered_question_selected.search_string.indexOf(window.getSelection().toString().trim());\n              // this.current_string_end_index = this.current_unanswered_question_selected.search_string.indexOf(window.getSelection().toString().trim()) + window.getSelection().toString().trim().length;\n              this.new_entity_mapping_for_current_question = {\n                entity : {\n                  start: window.getSelection().anchorOffset,\n                  end: window.getSelection().focusOffset,\n                  value: this.currrent_suggestion_to_change\n                }\n              };\n              this.show_change_suggestions = true;\n            }\n          }\n        } else {\n          // this.highlighted_text = \"\";\n          // $(\".popoverDiv\").css(\"display\", \"none\");\n        }\n      } else if (document.selection) {\n        document.selection.createRange().text;\n      }\n    },\n    close_current_question_modal(){\n      this.current_unanswered_question_selected = null;\n      this.show_question_modal = false;\n      this.search_data = [];\n      this.search_result = [];\n      this.show_change_suggestions = false;\n      this.new_entity_mapping_for_current_question = null;\n      this.current_string_start_index = null;\n      this.current_string_end_index = null;\n      this.entity_suggestion_mapping_new = [];\n      this.mapped_phrase_index = [];\n    },  \n    add_suggestion(){\n      // console.log(this.search_data);\n      // console.log(this.new_entity_mapping_for_current_question)\n      this.new_entity_mapping_for_current_question.suggestion = this.search_data;\n      for(let i = 0; i < this.new_entity_mapping_for_current_question.suggestion.length; i++){\n        if(this.new_entity_mapping_for_current_question.suggestion[i].type === \"keyword\"){\n          this.new_entity_mapping_for_current_question.entity.entity = this.entity_type_prefix_mapping.keyword +'_'+ this.new_entity_mapping_for_current_question.suggestion[i].keyword_type;\n          if(this.new_entity_mapping_for_current_question.suggestion[i].keyword_type === \"function\"){\n            this.new_entity_mapping_for_current_question.entity.entity = this.entity_type_prefix_mapping.function\n          }\n          break;\n        }\n      }\n      this.mapped_phrase = this.mapped_phrase + ' ' + this.new_entity_mapping_for_current_question.entity.value;\n      this.mapped_phrase_index.push({\n        start: this.current_string_start_index,\n        end: this.current_string_end_index,\n      })\n      this.entity_suggestion_mapping_new.push(this.new_entity_mapping_for_current_question)\n      this.search_data = [];\n      this.search_result = [];\n      this.show_change_suggestions = false;\n      this.new_entity_mapping_for_current_question = null;\n      this.current_string_start_index = null;\n      this.current_string_end_index = null;\n      // console.log('correct',index);\n      // console.log(this.current_unanswered_question_selected.entity_suggestion_map[index]);\n      // this.corrected_suggestions.push(this.current_unanswered_question_selected.entity_suggestion_map[index]);\n    },\n    discard_suggestion(index){\n      this.search_data = [];\n      this.search_result = [];\n      this.show_change_suggestions = false;\n      this.new_entity_mapping_for_current_question = null;\n      this.current_string_start_index = null;\n      this.current_string_end_index = null;\n      // this.wrong_phrases = (this.wrong_phrases == null ? '' : this.wrong_phrases) + ' ' + this.current_unanswered_question_selected.entity_suggestion_map[index].entity.value;\n      // console.log(this.current_unanswered_question_selected.entity_suggestion_map[index].entity.value);\n      // console.log('wrong',index);\n    },\n    search(value) {\n      // console.log(value);  \n         this.search_result = [];\n        axios\n          .get(api_calls.bi_search_data(), {\n            params: {\n              email: this.$session.get(\"UserInformation\").email,\n              token: this.$session.get(\"UserInformation\").tokens,\n              company_name: this.$session.get(\"UserInformation\").company_name,\n              company_id: this.$session.get(\"UserInformation\").company_id,\n              // company_name: \"cense_bi\",\n              // company_id: \"cense_bi\",\n              license_key: this.$session.get(\"UserInformation\").license_key,\n              q: value,\n              dataset_name: this.dataset_name\n            }\n          })\n          .then(response => {\n            if (response.data.status == \"Success\") {\n              this.search_result = response.data.suggestions;\n              for(let i = 0; i < this.search_result.length; i++){\n                if(this.search_result[i].type === \"keyword\"){\n                   if(this.search_result[i].value === \"between ... and ...\"){\n                    this.search_result[i].value_to_display = \"between\";\n                   }\n                   else if(this.search_result[i].value === \"top N\"){\n                     this.search_result[i].value_to_display = \"top\";\n                   }\n                   else if(this.search_result[i].value === \"bottom N\"){\n                     this.search_result[i].value_to_display = \"bottom\";\n                   }\n                   else{\n                    this.search_result[i].value_to_display = this.search_result[i].value;\n                   }\n                }\n                else {\n                  this.search_result[i].value_to_display = this.search_result[i].value;\n                }\n              }\n            }\n          })\n          .catch(err => {\n            console.log(\"Error\", err);\n          });\n    },\n    tag_added(){\n      console.log('added');\n      this.callapi = true;\n      if( this.search_data.length === 0) {\n        this.callapi = false;\n      }\n      for (let i = 0; i < this.search_data.length; i++) {\n        if((this.search_data[i].type != undefined) && (this.search_data[i].type === \"keyword\")) {\n          if(this.search_data[i].keyword_type === \"date\"){\n            if((this.search_data[i].value === \"after ...\") || (this.search_data[i].value === \"before ...\")) {\n              if((this.search_data[i+1]) && (this.search_data[i+1].key === null)){\n                    if((this.check_date_validity(this.search_data[i+1].value,i))){\n                    this.add_details_to_object(i+1,i);\n                    }\n                }\n            }\n            if(this.search_data[i].value === \"between ... and ...\") {\n              if((this.search_data[i+1]) && (this.search_data[i+1].key === null) ){\n                  if((this.check_date_validity(this.search_data[i+1].value,i))){\n                  this.add_details_to_object(i+1,i);\n                  this.search_data[i+1].value_to_display = this.search_data[i+1].value;\n                  }\n              }\n              if((this.search_data[i+2]) && (this.search_data[i+2].key === null) ){\n                  if(this.check_date_validity(this.search_data[i+2].value,i)){\n                  this.add_details_to_object(i+2,i);\n                  this.search_data[i+2].value_to_display = \"and\" + \" \" + this.search_data[i+2].value;\n                  }\n                }\n            }\n          }\n          if(this.search_data[i].keyword_type === \"general\") {\n              if(this.search_data[i].value === \"top N\" ||  this.search_data[i].value === \"bottom N\" ){\n                if((this.search_data[i+1]) && (this.search_data[i+1].key === null) ){\n                    if(this.check_number_validity(this.search_data[i+1].value,i)){\n                    this.search_data[i].input = Number(this.search_data[i+1].value);\n                    this.search_data[i].value_to_display = this.search_data[i].value_to_display + \" \" + this.search_data[i+1].value;\n                    this.search_data = this.search_data.slice(0, i+1).concat(this.search_data.slice(i + 2, this.search_data.length));\n                    // this.check_duplicate = i + 1;\n                    }\n                }\n              }\n          }\n          if(this.search_data[i].keyword_type === \"comparative\") {\n            if((this.search_data[i].value === \"lesser than\") || (this.search_data[i].value === \"greater than\") || (this.search_data[i].value === \"greater than equal to\")\n              || (this.search_data[i].value === \"lesser than equal to\") || (this.search_data[i].value === \"equal to\") || (this.search_data[i].value === \"not equal to\") ) {\n              if((this.search_data[i+1]) && (this.search_data[i+1].key === null) ){\n                  this.add_details_to_object(i+1,i);\n                  this.search_data[i+1].value_to_display = this.search_data[i+1].value;\n              }\n            }\n            if(this.search_data[i].value === \"between ... and ...\"){\n              if((this.search_data[i+1]) && (this.search_data[i+1].key === null) ){\n                this.add_details_to_object(i+1,i);\n                this.search_data[i+1].value_to_display = this.search_data[i+1].value;\n              }\n              if((this.search_data[i+2]) && (this.search_data[i+2].key === null) ){\n                  this.add_details_to_object(i+2,i);\n                this.search_data[i+2].value_to_display = \"and\" + \" \" + this.search_data[i+2].value;\n              }\n            }\n          }\n          if(this.search_data[i].keyword_type === \"text\") {\n            if(!this.search_data[i-1]){\n              this.text_keywords_validity('attribute',i);\n            }\n            if(this.search_data[i-1] && this.search_data[i-1].type !== \"attribute\"){\n              this.text_keywords_validity('attribute',i);\n            }\n            if(this.search_data[i-1] && this.search_data[i+1] && this.search_data[i+1].key === null){\n              // if(this.search_data[i+1].key === null){\n              if((this.text_keywords_validity('begins_ends_with', i))){\n              // if(this.search_data[i+1].value.charAt(this.search_data[i+1].value.length-1) == `'`){\n                // if(this.text_keywords_validity('length',i)){\n                  this.add_details_to_object(i+1,i);\n                  this.search_data[i+1].value = this.remove_quotes_from_string(this.search_data[i+1].value);\n                  this.search_data[i+1].value_to_display = this.search_data[i+1].value;\n                // this.search_data[i+1].value_to_display = this.search_data[i+1].value;\n                // }\n                this.text_keywords_validity('length',i+1)\n              }\n              else {\n              // this.error_text_show = true ;\n              // this.error_text = \"Please End Your word with ' \";\n              // this.callapi = false;\n              // var x = this.search_data[i+1].value\n              // document.getElementById(\"searchbar\").value = x;\n              // console.log(x);\n              // this.search_data = this.search_data.slice(0, i+1);\n              // this.check_duplicate = i + 1;\n              // console.log(x);\n              // document.getElementById(\"search_data\").previousSibling.value = \"\"+x+\"\";\n              }\n              // }\n            }\n\n          }\n          if(this.search_data[i].keyword_type === \"function\") {\n              if((this.search_data[i+1]) && (this.search_data[i+1].key === null)){\n                 this.add_details_to_object(i+1,i);\n              }\n          }\n        }\n      }\n      console.log(this.search_data);\n    },\n    check_date_validity(date,index){\n      var x = new  Date(date);\n      if((x === \"Invalid Date\")){\n        this.search_data[index+1].value = \"\";\n        this.callapi = false;\n        this.search_data = this.search_data.slice(0, index+1);\n        this.check_duplicate = index + 1;\n        this.error_text_show = true;\n        this.error_text = \"Please Enter Date in Format: YYYY-MM-DD or DD-MM-YYYY\";\n        return false;\n      } else {\n        return true;\n      }\n    },\n    add_details_to_object(to_be_set,to_be_set_from) {\n      this.search_data[to_be_set].column = this.search_data[to_be_set_from].column;\n      this.search_data[to_be_set].company_id = this.search_data[to_be_set_from].company_id;\n      this.search_data[to_be_set].keyword_type = null;\n      this.search_data[to_be_set].metadata = \"\";\n      this.search_data[to_be_set].type = \"input\";\n    },\n    check_number_validity(number,index){\n      if(!(Number.isInteger(Number(number)))) {\n        this.search_data[index+1].input = \"\";\n        this.callapi = false;\n        this.search_data = this.search_data.slice(0, index+1);\n        this.check_duplicate = index + 1;\n        this.error_text_show = true;\n        this.error_text = \"Please Enter a Valid Number\";\n        // alert(\"Not Number\");\n        return false;\n      } else {\n        // alert(\"Number\");\n        return true;\n      }\n    },\n    text_keywords_validity(type,index){\n      if(type === 'attribute' ){\n        this.error_text_show = true;\n        this.error_text = \"You should use an attribute before using this kind of keyword\";\n        this.callapi = false;\n        this.search_data = this.search_data.slice(0, index);\n        this.check_duplicate = index;\n        return false;\n      }\n      if(type === 'begins_ends_with') {\n         if(!(this.search_data[index+1].value.charAt(this.search_data[index+1].value.length-1) == `'` || this.search_data[index+1].value.charAt(this.search_data[index+1].value.length-1) == `\"`)){\n          this.error_text_show = true ;\n          this.error_text = \"Please Start and End Your word with Quotes \";\n          this.callapi = false;\n          // var x = this.search_data[i+1].value\n          // document.getElementById(\"searchbar\").value = x;\n          // console.log(x);\n          this.search_data = this.search_data.slice(0, index+1);\n          this.check_duplicate = index+ 1;\n          return false\n         } else {\n           return true;\n         }\n      }\n      if(type === 'length') {\n        // console.log('lenght');\n        if(this.search_data[index].value.length < 3){\n          var x = this.add_quotes_to_string(this.search_data[index].value);\n          this.search_data = this.search_data.slice(0, index);\n          this.$root.$emit('add_text_to_search_bar', x);\n          // console.log(x);\n          this.error_text_show = true;\n          this.error_text = \"Please Search with Atleast 3 Characters for this Keyword\";\n          this.callapi = false;\n          return false;\n        } else {\n          this.callapi = true;\n          return true;\n        }\n      }\n    },\n    remove_quotes_from_string(str) {\n      return str.substring(1).slice(0,-1);\n    },\n    show_mappings_of_question(index){\n      // console.log('hi',index)\n      // console.log('hi',index)\n      this.questions[index].show_mappings = true;\n    },\n    check_if_word_already_mapped(word){\n      if(this.mapped_phrase != ''){\n        for(let i = 0; i < word.split(' ').length; i +=1) {\n          if(this.mapped_phrase.includes(word.split(' ')[i])){\n            for(let j = 0; j < this.mapped_phrase_index.length; j+= 1){\n              if(((this.mapped_phrase_index[j].start <= this.current_string_start_index) &&( this.current_string_start_index <= this.mapped_phrase_index[j].end))){\n                swal.fire({\n                type:'error',\n                text:'This word has already been mapped. Please select something else',\n                toast:true,\n                showConfirmButton: false,\n                timer: 2500\n                });\n                return false;\n                break;\n              }\n            }\n            return true;\n          }\n        }\n        return true;  \n      } else{\n        return true;\n      }\n    },\n    ignore_phrase(){\n      this.new_entity_mapping_for_current_question.suggestion = [{\n        type: 'ignore',\n        value:'Ignore'\n      }];\n      this.mapped_phrase = this.mapped_phrase + ' ' + this.new_entity_mapping_for_current_question.entity.value;\n      this.mapped_phrase_index.push({\n        start: this.current_string_start_index,\n        end: this.current_string_end_index,\n      })\n      this.entity_suggestion_mapping_new.push(this.new_entity_mapping_for_current_question)\n      this.search_data = [];\n      this.search_result = [];\n      this.show_change_suggestions = false;\n      this.new_entity_mapping_for_current_question = null;\n      this.current_string_start_index = null;\n      this.current_string_end_index = null;\n    },\n    save_mapping_for_current_question(){\n      Swal.fire({\n        title: \"Are you sure?\",\n        text: `You want to save this mapping`,\n        type: \"question\",\n        showCancelButton: true,\n        confirmButtonColor: \"#3085d6\",\n        cancelButtonColor: \"#d33\",\n        confirmButtonText: \"Yes, Confirm!\"\n      }).then(result => {\n        if (result.value) {\n          Swal({\n            text: 'Please wait while we are submitting your details...',\n            type: 'info',\n            toast: true,\n            showConfirmButton: false,\n          });\n          // axios.post(api_calls.bi_unanswered_searches(), {\n          //   email: this.$session.get(\"UserInformation\").email,\n          //   token: this.$session.get(\"UserInformation\").tokens,\n          //   company_name: this.$session.get(\"UserInformation\").company_name,\n          //   company_id: this.$session.get(\"UserInformation\").company_id,\n          //   license_key: this.$session.get(\"UserInformation\").license_key,\n          //   dataset_name: this.dataset_name,\n          //   search_string: this.current_unanswered_question_selected.search_string,\n          //   suggestions: this.entity_suggestion_mapping_new\n          // }).then(response => {\n          //   if(response.data.status === \"Success\"){\n          //     Swal({\n          //       text: 'SUCCESSFULLY RE-MAPPED UNANSWERED QUESTION',\n          //       type: 'info',\n          //       toast: true,\n          //       showConfirmButton: false,\n          //     });\n          //     setTimeout(() => {\n          //       this.$router.go();\n          //     }, 1500);\n          //   } else {\n          //     Swal({\n          //       text: 'Some Error Occurred. Please Try Again',\n          //       type: 'info',\n          //       toast: true,\n          //       showConfirmButton: false,\n          //     });\n          //     setTimeout(() => {\n          //       this.$router.go();\n          //     }, 1500);\n          //   }\n          // }).catch(error => {\n          //   Swal({\n          //     text: 'Some Error Occurred. Please Try Again',\n          //     type: 'info',\n          //     toast: true,\n          //     showConfirmButton: false,\n          //   });\n          //   setTimeout(() => {\n          //     this.$router.go();\n          //   }, 1500);\n          // })\n        }\n      })\n      console.log(this.entity_suggestion_mapping_new);\n    },\n    delete_unanswered_question(index){\n      Swal.fire({\n        title: \"Are you sure?\",\n        text: `You want to delete this question`,\n        type: \"question\",\n        showCancelButton: true,\n        confirmButtonColor: \"#3085d6\",\n        cancelButtonColor: \"#d33\",\n        confirmButtonText: \"Yes, Confirm!\"\n      }).then(result => {\n        if (result.value) {\n          Swal({\n            text: 'Please wait while we are submitting your details...',\n            type: 'info',\n            toast: true,\n            showConfirmButton: false,\n          });\n        }\n      })\n    }\n  },\n};\n</script>\n<style scoped.>\n.questions-card{\n  padding: 1rem;\n\n/* -webkit-box-shadow:   3px 3px 5px 6px #ccc;   */\n  /* -moz-box-shadow:    3px 3px 5px 6px #ccc;  \n    box-shadow:         3px 3px 5px 6px #ccc;  */\n}\n\n.fade-enter-active, .fade-leave-active {\n  transition: opacity 0.45s ease-in-out;\n}\n\n.fade-enter, .fade-leave-to {\n  opacity: 0;\n}\n</style>"]}]}