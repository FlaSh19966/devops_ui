{"remainingRequest":"/home/vimalesh/CENSE/chatbot-portal/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/vimalesh/CENSE/chatbot-portal/src/portal/Chatbot/Dashboard/ProductManagement/AlternateProductNames.vue?vue&type=style&index=0&id=1cd3d7d1&scoped=true&lang=css&","dependencies":[{"path":"/home/vimalesh/CENSE/chatbot-portal/src/portal/Chatbot/Dashboard/ProductManagement/AlternateProductNames.vue","mtime":1645594423491},{"path":"/home/vimalesh/CENSE/chatbot-portal/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vimalesh/CENSE/chatbot-portal/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/vimalesh/CENSE/chatbot-portal/node_modules/@vue/cli-service/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/vimalesh/CENSE/chatbot-portal/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vimalesh/CENSE/chatbot-portal/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmFsdGVybmF0ZV9wcm9kdWN0cyB7CiAgZm9udC1mYW1pbHk6ICJSb2JvdG8iOwp9Ci50YWJsZS1ib3ggdGJvZHkgdHI6aG92ZXIgdGQsCi50YWJsZS1ib3ggdGJvZHkgdHI6aG92ZXIgdGggewogIGJhY2tncm91bmQ6ICNlY2VjZWM7Cn0KLnRhYmxlIHRoIHsKICBib3JkZXItdG9wOiBub25lOwp9Ci50YWJsZS1yZXNwb25zaXZlIHsKICBoZWlnaHQ6IDc1dmg7CiAgb3ZlcmZsb3cteTogYXV0bzsKICBib3JkZXI6IDFweCBzb2xpZCAjZTNlMmU1Owp9Ci50YWJsZS1yZXNwb25zaXZlIHRoZWFkIHRoIHsKICB0b3A6IDA7CiAgcG9zaXRpb246IHN0aWNreTsKfQoudGFibGUtcmVzcG9uc2l2ZTo6LXdlYmtpdC1zY3JvbGxiYXIgewogIG1heC1oZWlnaHQ6IDEwcHg7CiAgd2lkdGg6IDdweDsKICBoZWlnaHQ6IDdweDsKICBib3JkZXItcmFkaXVzOiAxMHB4OwogIG92ZXJmbG93LXg6IGhpZGRlbjsKfQoudGFibGUtcmVzcG9uc2l2ZTo6LXdlYmtpdC1zY3JvbGxiYXItdHJhY2sgewogIGJhY2tncm91bmQ6ICNmZmZmZmY7CiAgYm9yZGVyLXJhZGl1czogMTBweDsKfQoudGFibGUtcmVzcG9uc2l2ZTo6LXdlYmtpdC1zY3JvbGxiYXItdGh1bWIgewogIGJhY2tncm91bmQ6ICMyNzM5N2I7CiAgYm9yZGVyLXJhZGl1czogMTBweDsKfQoudGFibGUtcmVzcG9uc2l2ZTo6LXdlYmtpdC1zY3JvbGxiYXItdGh1bWI6aG92ZXIgewogIGJhY2tncm91bmQ6ICMxOTI5NWY7CiAgYm9yZGVyLXJhZGl1czogMTBweDsKfQouZm9ybS1jb250cm9sIHsKICBsaW5lLWhlaWdodDogMTZweDsKICBwYWRkaW5nOiAxMHB4IDE1cHg7Cn0KLmN1cnJlbnQtYWN0aXZlLXByb2R1Y3QgewogIGJhY2tncm91bmQ6IHJnYmEoMCwgMCwgMCwgMC4xKTsKfQouY3VycmVudC1lZGl0LXN5bm9ueW0gewogIHRyYW5zZm9ybTogc2NhbGUoMS4wMik7CiAgYm9yZGVyOiAxcHggc29saWQgIzI3Mzk3YjsKICB6LWluZGV4OiAyOwogIGJhY2tncm91bmQ6ICNkZGRkZGQ7CiAgcGFkZGluZzogMC41cmVtOwp9Ci5ub3QtY3VycmVudC1lZGl0LXN5bm9ueW0gewogIG9wYWNpdHk6IDAuMjsKICBwb2ludGVyLWV2ZW50czogbm9uZTsKfQoubm90LWVkaXRpbmctc3lub255bXMgewogIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjZTNlMmU1Owp9Ci8qIC5kYXJrYmx1ZS1idG4gewogIGZvbnQtZmFtaWx5OiAiUm9ib3RvIjsKICBmb250LXdlaWdodDogNTAwOwogIGJvcmRlci1yYWRpdXM6IDA7Cn0gKi8K"},{"version":3,"sources":["AlternateProductNames.vue"],"names":[],"mappingsivBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"AlternateProductNames.vue","sourceRoot":"src/portal/Chatbot/Dashboard/ProductManagement","sourcesContent":["<template>\n  <div class=\"alternate_products\">\n    <div class=\"spinner\" id=\"spinner\" v-show=\"spinnerOn\"></div>\n    <!-- <div class=\"container\"> -->\n    <div class=\"col-sm-12 my-1\">\n      <div class=\"card-act col-sm-12 my-1\">\n        <div class=\"card-act d-flex \">\n          <div class=\"col-sm-4 pl-0 flex-wrap\">\n            <input \n              class=\"form-control search-bar\" \n              type=\"search\"\n              id=\"search_bar\" \n              v-model.trim=\"searchQuery\" \n              placeholder=\"Search here\"\n              style=\"width:99% !important; \n                height:36px !important; \n                display: inline-block !important;\"\n            />\n            <a\n              type=\"button\"\n              v-if=\"isVisibleSearchClear\"\n              class=\"btn bg-transparent mt-auto mb-auto py-0\"\n              @click=\"clear_search_name\"\n              style=\"margin-left: -40px; z-index: 10\"\n            >\n              <img src=\"/img/close-icn.png\" alt />\n            </a>\n          </div>\n          <div class=\"col-sm-8 pr-0\"\n            style=\"display: flex;\n            margin-bottom: 0.5rem;\n            \">\n            <button\n              @click=\"sync_products\"\n              style=\"margin-right: 1rem\"\n              class=\"darkblue-btn ml-auto\">\n              SYNC\n            </button>\n            <button\n              @click=\"train_model\"\n              style=\"margin-right: 1rem\"\n              :disabled=\"intent_ner_model_inprogress == true\"\n              :style=\"show_model_progress('style')\"\n              :title=\"show_model_progress('title')\"\n              id=\"alternate_product_name_train_model_btn\"\n              class=\"darkblue-btn\">\n              <i class=\"fa fa-spinner fa-spin\" v-show=\"intent_ner_model_inprogress\"></i>\n              TRAIN MODEL\n            </button>\n            <button\n              style=\"margin-right:0px !important;\"\n              id=\"alternate_product_name_save_all_btn\"\n              class=\"darkblue-btn d-block\"\n              @click=\"save_synonyms\"\n              v-if=\"Boolean(current_active_product) === true\"\n            >\n              SAVE ALL\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div class=\"col-sm-12 d-flex\">\n      <div class=\"col-sm-4\">\n        <div class=\"d-flex\" style=\"width: 100%; background: #F7F8FB;\n    border: solid 1px #DBE2E8;\">\n          <div style=\"width: 16%;\">\n            <div class=\"form-check checkbox checkbox-success\" style=\"padding: 10px;\">\n              <label class=\"form-check-label\">\n                <input\n                  class=\"form-check-input\"\n                  id=\"selectall\"\n                  type=\"checkbox\"\n                  @click=\"selected_statements('all')\"\n                />\n                <span class=\"icn\"></span>\n              </label>\n            </div>\n          </div>\n          <p style=\"\n                      margin: 0px;\n                      width: 84%;\n                      font: normal normal normal 16px/22px Roboto;\n                      letter-spacing: 0px;\n                      color: #414141;\n                      padding: 10px;\n                    \"\n          >PRODUCT NAME</p>\n        </div>\n        <div class=\"table-box\" v-if=\"Boolean(current_active_product) === true\">\n          <div class=\"table-responsive\">\n            <table class=\"table\">\n              <!-- <thead>\n                <tr>\n                  <th scope=\"col\">\n                    <div class=\"form-check checkbox checkbox-success\">\n                      <label class=\"form-check-label\">\n                        <input\n                          class=\"form-check-input\"\n                          id=\"selectall\"\n                          type=\"checkbox\"\n                          @click=\"selected_statements('all')\"\n                        />\n                        <span class=\"icn\"></span>\n                      </label>\n                    </div>\n                  </th>\n                  <th\n                    scope=\"col\"\n                    class=\"text-left\"\n                    style=\"\n                      font: normal normal normal 16px/22px Roboto;\n                      letter-spacing: 0px;\n                      color: #414141;\n                    \"\n                  >\n                    <span> PRODUCT NAME </span>\n                  </th>\n                </tr>\n              </thead> -->\n              <tbody>\n                <tr\n                  v-for=\"(product, index) in resultQuery\"\n                  :key=\"index\"\n                  style=\"cursor: pointer\"\n                  :class=\"check_current_product_active(index)\"\n                >\n                  <td scope=\"row\">\n                    <div class=\"form-check checkbox checkbox-success\">\n                      <label class=\"form-check-label\">\n                        <input\n                          class=\"form-check-input\"\n                          type=\"checkbox\"\n                          @change=\"selected_statements(index)\"\n                        />\n                        <span class=\"icn\"></span>\n                      </label>\n                    </div>\n                  </td>\n                  <td @click=\"set_current_product(index)\">\n                    {{ product.product_name }}\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n          </div>\n        </div>\n      </div>\n      <div class=\"col-sm-8\">\n        <!-- <div class=\"table-responsive\" v-if=\"spinnerOn\"></div>\n          <div class=\"table-responsive\" v-if=\"product_names_list.length === 0\"></div> -->\n        <div\n          class=\"table-responsive\" id=\"table_id\"\n          v-if=\"Boolean(current_active_product) === true\"\n        >\n          <div class=\"px-3 pt-3\">\n            <h6>{{ productName }}</h6>\n          </div>\n          <hr />\n          <div class=\"card-act d-flex p-3\">\n            <input\n              type=\"text\"\n              v-model.trim=\"alternate_product_name\"\n              class=\"form-control\"\n              placeholder=\"Add another name for product\"\n              @keyup.enter=\"check_is_edit\"\n            />\n            <button\n              id=\"alternate_product_name_add_btn\"\n              class=\"darkblue-btn ml-2\"\n              @click=\"add_alternate_name\"\n              v-if=\"!is_edit_alternate_name\"\n            >\n              ADD\n            </button>\n            <button\n              class=\"darkblue-btn ml-2\"\n              @click=\"save_edit_alternate_name\"\n              v-if=\"is_edit_alternate_name\"\n            >\n              EDIT\n            </button>\n          </div>\n          <div class=\"mt-5 p-3\">\n            <h5>Alternate Product Name for  {{productName}}</h5>\n            <div style=\"border-bottom: 1px solid #e3e2e5\"></div>\n            <div\n              v-for=\"(alternate_name, index) in current_active_product.synonyms\"\n              :key=\"index\"\n              class=\"py-2 d-flex\"\n              :class=\"check_current_edit_synonym(index, null)\"\n            >\n              <span> {{ alternate_name }} </span>\n              <span\n                class=\"ml-auto c-p edit-delete-span\"\n                @click=\"edit_alternate_name(index)\"\n              >\n                <img\n                  :src=\"require('@/portal/assets/img/edit-pencil-from-xd.svg')\"\n                  alt=\"Edit\"\n                />\n              </span>\n              <span\n                class=\"ml-2 c-p edit-delete-span\"\n                @click=\"delete_alternate_name(index)\"\n              >\n                <img\n                  :src=\"require('@/portal/assets/img/delete-from-xd.svg')\"\n                  alt=\"Delete\"\n                />\n              </span>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <!-- </div> -->\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\nimport api_calls from \"@/portal/api_calls.js\";\nimport Swal from \"sweetalert2\";\nimport { freeze_portal, show_subscription_expired_swal} from \"@/portal/mixins\";\n\nexport default {\n  name: \"AlternateProductNamesPage\",\n  mixins: [\n    freeze_portal,show_subscription_expired_swal\n  ],\n  data() {\n    return {\n      searchQuery: null,\n      spinnerOn: false,\n      company_id: this.$session.get(\"UserInformation\").company_id,\n      company_name: this.$session.get(\"UserInformation\").company_name,\n      // product_names_list: [],\n      current_product_name: null,\n      alternate_product_name: null,\n      alternate_product_list: [],\n      is_edit_alternate_name: false,\n      current_edit_index: null,\n      retail_bot_template_id: null,\n      products_list_data: [],\n      current_active_product: null,\n      isVisibleSearchClear: false,\n      want_status: true,\n      intent_ner_model_inprogress: false,\n      checked_list: [],\n      disable_btn_expired: false,\n    };\n  },\n  computed: {\n    productName(){\n      var products_name = \"\"\n      if(this.checked_list.length != 0){\n        var check = false;\n        for (var i in this.checked_list){\n          if (this.checked_list[i].product_name == this.current_active_product.product_name){\n            check = true;\n          }\n        }\n        if (check){\n          var len = this.checked_list.length - 1;\n          return products_name = this.current_active_product.product_name + (len > 0 ? \" and \" + (len > 0 ? len : '') + \" more\" : '');\n        }else {\n          return this.current_active_product.product_name;\n        }\n      }else {\n        return this.current_active_product.product_name;\n      }\n    },\n    resultQuery(){\n      if(this.searchQuery){\n        $(\"input:checkbox\").prop(\"checked\", false);\n        this.checked_list = [];\n      return this.products_list_data.filter((item)=>{\n        return this.searchQuery.toLowerCase().split(' ').every(v => item.product_name.toLowerCase().includes(v))\n      })\n      }else{\n        $(\"input:checkbox\").prop(\"checked\", false);\n        this.checked_list = [];\n        return this.products_list_data;\n      }\n    },\n    check_is_edit() {\n      return this.is_edit_alternate_name\n        ? this.save_edit_alternate_name\n        : this.add_alternate_name;\n    },\n  },\n  mounted() {\n    let bot_templates_data = this.$session.get(\"BotTemplates\");\n    for (let i = 0; i < bot_templates_data.length; i++) {\n      if (\n        bot_templates_data[i].domain === \"Retail\" &&\n        bot_templates_data[i].subscribed === true\n      ) {\n        this.retail_bot_template_id = bot_templates_data[i].template_id;\n        break;\n      }\n    }\n    this.$root.$on(\"send_model_status\", data =>{\n      if (data == true){\n        this.check_intent_ner_model_status();\n      }\n    })\n    var vm = this;\n    $(\"#selectall\").click(function () {\n      if ($(this).is(\":checked\")) {\n        // $('div:input').prop('checked',true);\n        $(\"input:checkbox\").prop(\"checked\", true);\n      } else {\n        vm.checked_list = [];\n        $(\"input:checkbox\").prop(\"checked\", false);\n      }\n    });\n    // this.fetch_product_list();\n    this.fetch_added_synonyms();\n    setTimeout(() => {\n      this.freeze_portal();\n    }, 1000);\n    this.check_intent_ner_model_status();\n    this.$root.$on(\"AlternateProductNamesPageDisabled\", (data) =>{\n      if(data===true){\n        this.disable_btn_expired = true;\n      }\n    })\n  },\n  watch:{\n  searchQuery() {\n      if (this.searchQuery === '' || this.searchQuery === null) {\n        this.isVisibleSearchClear = false;\n      } else if (this.searchQuery != null || this.searchQuery !='') {\n        this.isVisibleSearchClear = true;\n      }\n      this.set_current_product(0);\n    },\n  },\n  methods: {\n    selected_statements(index) {\n      if (index == \"all\") {\n        this.checked_list = [];\n        var role_length = this.resultQuery.length;\n        for (var i = 0; i < role_length; i++) {\n          this.checked_list.push(this.resultQuery[i]);\n        }\n      }else {\n        if (event.target.checked == true) {\n          if (!this.checked_list.includes(index)) {\n            this.checked_list.push(this.resultQuery[index]);\n          }\n        } else if (event.target.checked == false) {\n          var selectall = document.querySelector(\"#selectall\");\n          if (selectall.checked == true) {\n            selectall.checked = false;\n          }\n          var temp = this.checked_list.filter((role)=> {\n            return role !== this.resultQuery[index];\n          });\n          this.checked_list = temp;\n        }\n      }\n    },\n    check_intent_ner_model_status(){\n    this.model_status = this.$session.get(\"ModelStatus\");\n    if (this.model_status == \"No Failure\"){\n    this.intent_ner_model_inprogress = false;\n    }\n    else if (Boolean(this.model_status.intent_model) === true \n     || Boolean(this.model_status.ner_model) === true){\n     if(this.model_status.intent_model == \"InProgress\"\n      || this.model_status.ner_model == \"InProgress\"){\n       this.intent_ner_model_inprogress = true;\n     }\n     else{\n       this.intent_ner_model_inprogress = false;\n     }\n    }\n    else{\n      this.intent_ner_model_inprogress = false; \n    }\n    },\n\n    show_model_progress(index){\n      if(this.intent_ner_model_inprogress == true){\n         if (index == 'style'){\n            return \"cursor: not-allowed\";\n          }\n          else if(index == 'title'){\n              return \"Training in Progress (This process might take around 45 mins to finish) \";\n          }\n      }\n      else{\n        return null;\n      }\n    },\n    clear_search_name() {\n      this.searchQuery = null;\n    },\n    sync_products() {\n      Swal({\n        title: \"Are you sure?\",\n        text: \" You want to sync products data?\",\n        type: \"question\",\n        showCancelButton: true,\n        confirmButtonColor: \"#3085d6\",\n        cancelButtonColor: \"#d33\",\n        confirmButtonText: \"Yes, Confirm!\",\n      }).then((result) => {\n        if (result.value) {\n      this.spinnerOn = true;\n      axios\n        .post(api_calls.template_synonyms(), {\n          company_id: this.company_id,\n          company_name: this.company_name,\n          template_id: this.retail_bot_template_id,\n          is_sync: true,\n        },\n        {\n          headers: {\n            Authorization: `Bearer ${this.$session.get(\"at\")}`,\n        },\n        })\n        .then(({ data }) => {\n          this.spinnerOn = false;\n          if (data.status == \"Success\"){\n            Swal({\n              title: \"Products are being synced\",\n              text: \"This might take some time\",\n              type: \"info\",\n              showCancelButton: false,\n              timer: 5500,\n            })\n          }else {\n            Swal({\n              title: \"Some Error Occurred!\",\n              text: \"Please try again!\",\n              type: \"error\",\n              toast: true,\n              position: \"top-end\",\n              showConfirmButton: false,\n              timer: 3000,\n            });\n          }\n        }).catch((e) => {\n          this.spinnerOn = false;\n            if (\n              e.response.status === 410 ||\n              e.response.status === 440 ||\n              e.response.status === 409\n            ) {\n              this.$root.$emit(\"Session_Expired\", e.response.data);\n            }\n          });\n    }\n      })\n    },\n    fetch_added_synonyms() {\n      this.spinnerOn = true;\n      axios\n        .post(api_calls.template_synonyms(), {\n          company_id: this.company_id,\n          company_name: this.company_name,\n          template_id: this.retail_bot_template_id,\n          is_get: true,\n        },\n        {\n          headers: {\n            Authorization: `Bearer ${this.$session.get(\"at\")}`,\n        },\n        })\n        .then(({ data }) => {\n          this.spinnerOn = false;\n          if (data.status === \"Success\") {\n            if (data.data.Synonyms.length > 0) {\n              this.products_list_data = data.data.Synonyms;\n              this.set_current_product(0);\n            }\n          }\n          setTimeout(() => {\n      this.freeze_portal();\n    }, 1000);\n        }).catch((e) => {\n          this.spinnerOn = false;\n            if (\n              e.response.status === 410 ||\n              e.response.status === 440 ||\n              e.response.status === 409\n            ) {\n              this.$root.$emit(\"Session_Expired\", e.response.data);\n            }\n          });\n    },\n    // fetch_product_list() {\n    //   this.spinnerOn = true;\n    //   axios\n    //     .post(api_calls.template_synonyms(), {\n    //       company_id: this.company_id,\n    //       company_name: this.company_name,\n    //       is_get_product_list: true,\n    //     },\n    //     {\n    //       headers: {\n    //         Authorization: `Bearer ${this.$session.get(\"at\")}`,\n    //     },\n    //     })\n    //     .then(({ data }) => {\n    //       this.spinnerOn = false;\n    //       if (data.status === \"Success\") {\n    //         this.product_names_list = data.product_names_list;\n    //         if (this.product_names_list.length > 0) {\n    //           this.current_product_name = this.product_names_list[0];\n    //         }\n    //       }\n    // setTimeout(() => {\n    //   this.freeze_portal();\n    // }, 1000);\n    //     })\n    //     .catch((e) => {\n    //       this.spinnerOn = false;\n    //         if (\n    //           e.response.status === 410 ||\n    //           e.response.status === 440 ||\n    //           e.response.status === 409\n    //         ) {\n    //           this.$root.$emit(\"Session_Expired\", e.response.data);\n    //         }\n    //       });\n    // },\n    add_alternate_name() {\n      if(!this.disable_btn_expired){\n      if (Boolean(this.alternate_product_name) === true){\n        if(this.checked_list.length > 0){\n          Swal.fire({\n            title: \"Multiple products are selected\",\n            text: 'The ' + this.alternate_product_name + ' synonym will be added in all selected products',\n            type: \"warning\",\n            showCancelButton: true,\n            confirmButtonColor: \"#3085d6\",\n            cancelButtonColor: \"#d33\",\n          }).then((result) => {\n            if (result.value) {\n              for (var i in this.checked_list){\n                for (var j in this.products_list_data){\n                  if (this.checked_list[i].id == this.products_list_data[j].id){\n                    this.products_list_data[j].synonyms.push(this.alternate_product_name);\n                  }\n                }\n              }\n              this.alternate_product_name = null;\n            }else {\n              this.alternate_product_name = null;\n            }\n          });\n        }else {\n          this.current_active_product.synonyms.push(this.alternate_product_name);\n          this.alternate_product_name = null;\n        }\n      }}else{\n        this.show_subscription_expired_swal();\n      }\n    },\n    edit_alternate_name(index) {\n      window.scrollTo(0, 0);\n      document.getElementById(\"table_id\").scrollTop = 0;\n      if (!this.is_edit_alternate_name) {\n        this.alternate_product_name = this.current_active_product.synonyms[\n          index\n        ];\n        this.current_edit_index = index;\n        this.is_edit_alternate_name = true;\n      } else {\n        this.reset_edit();\n      }\n    },\n    save_edit_alternate_name() {\n      this.current_active_product.synonyms[\n        this.current_edit_index\n      ] = this.alternate_product_name;\n      this.reset_edit();\n    },\n    delete_alternate_name(index) {\n      this.current_active_product.synonyms.splice(index, 1);\n    },\n    reset_edit() {\n      this.is_edit_alternate_name = false;\n      this.current_edit_index = null;\n      this.alternate_product_name = null;\n    },\n    set_current_product(index) {\n      this.reset_edit();\n      this.current_active_product = this.resultQuery[index];\n    },\n    check_current_product_active(index) {\n      if (Boolean(this.current_active_product) === true) {\n        return this.current_active_product.id ===\n          this.resultQuery[index].id\n          ? \"current-active-product\"\n          : null;\n      }\n    },\n    check_current_edit_synonym(index, tag) {\n      if (Boolean(this.is_edit_alternate_name) === true) {\n        if (tag === \"span\") {\n          return \"not-current-edit-synonym-span\";\n        } else {\n          return this.current_edit_index === index\n            ? \"current-edit-synonym\"\n            : \"not-current-edit-synonym\";\n        }\n      } else {\n        return \"not-editing-synonyms\";\n      }\n    },\n    save_synonyms() {\n      if(!this.disable_btn_expired){\n      Swal.fire({\n        title: \"Are you sure?\",\n        text: `You want to save these Synonyms Data?`,\n        type: \"question\",\n        showCancelButton: true,\n        confirmButtonColor: \"#3085d6\",\n        cancelButtonColor: \"#d33\",\n        confirmButtonText: \"Yes, Confirm!\",\n      }).then((result) => {\n        if (result.value) {\n          this.spinnerOn = true;\n          axios\n            .post(api_calls.template_synonyms(), {\n              company_name: this.$session.get(\"UserInformation\").company_name,\n              company_id: this.$session.get(\"UserInformation\").company_id,\n              is_add_or_edit: true,\n              template_id: this.retail_bot_template_id,\n              synonyms: this.products_list_data\n            },\n        {\n          headers: {\n            Authorization: `Bearer ${this.$session.get(\"at\")}`,\n        },\n        })\n            .then((response) => {\n              this.spinnerOn = false;\n              if (\n                response.data.status === \"Success\"\n              ) {\n                Swal({\n                  text:\n                    \"Your data is being saved now, please retrain the Model from NER Training page(under Training Centre Menu) for the changes to be reflected!\",\n                  type: \"success\",\n                  showConfirmButton: true,\n                  // timer: 5000,\n                });\n              } else {\n                Swal({\n                  text: \"Some Error Occurred. Please Try Again\",\n                  type: \"error\",\n                  showConfirmButton: false,\n                  timer: 2500,\n                });\n              }\n              this.checked_list = [];\n              $(\"input:checkbox\").prop(\"checked\", false);\n            })\n            .catch((e) => {\n              this.spinnerOn = false;\n              Swal({\n                text: \"Some Error Occurred. Please Try Again\",\n                type: \"error\",\n                showConfirmButton: false,\n                timer: 2500,\n              });\n              if (\n                Boolean(e.response) === true &&\n                (e.response.status === 410 ||\n                  e.response.status === 440 ||\n                  e.response.status === 409)\n              ) {\n                this.$root.$emit(\"Session_Expired\", e.response.data);\n              }\n            });\n        }\n      });}else{\n        this.show_subscription_expired_swal();\n      }\n    },\n    train_model() {\n      if(!this.disable_btn_expired){\n      Swal({\n        title: \"Are You Sure?\",\n        text: \"You want to Train The Model?\",\n        type: \"question\",\n        showCancelButton: true,\n        confirmButtonColor: \"#3085d6\",\n        cancelButtonColor: \"#d33\",\n        confirmButtonText: \"Yes, Confirm!\",\n        allowOutsideClick: false,\n        allowEscapeKey: false,\n      }).then((result) => {\n        if (result.value) {\n          this.spinnerOn = true;\n          axios\n            .post(\n              api_calls.train_intent_ner_model(),\n              {\n                email: this.$session.get(\"UserInformation\").email,\n                license_key: this.$session.get(\"UserInformation\").license_key,\n                token: this.$session.get(\"UserInformation\").tokens,\n                subscription: this.$session.get(\"UserInformation\").subscription,\n                company_name: this.$session.get(\"UserInformation\").company_name,\n                company_id: this.$session.get(\"UserInformation\").company_id,\n                update_model: true,\n              },\n              {\n                headers: {\n                  Authorization: `Bearer ${this.$session.get(\"at\")}`,\n                },\n              }\n            )\n            .then((response) => {\n              this.spinnerOn = false;\n              this.want_status = true;\n              this.$root.$emit(\"want_model_status\",this.want_status);\n              this.check_intent_ner_model_status();\n              if (response.data.MSG_CODE === 4046) {\n                toastr.success(response.data.MSG);\n              } else if (response.data.MSG_CODE === 1034) {\n                toastr.error(response.data.MSG);\n              } else {\n                toastr.error(\"Internal Server Error\");\n              }\n            })\n            .catch((e) => {\n              this.spinnerOn = false;\n              if (\n                e.response.status === 410 ||\n                e.response.status === 440 ||\n                e.response.status === 409\n              ) {\n                this.$root.$emit(\"Session_Expired\", e.response.data);\n              }\n            });\n        }\n      });}else{\n        this.show_subscription_expired_swal();\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n.alternate_products {\n  font-family: \"Roboto\";\n}\n.table-box tbody tr:hover td,\n.table-box tbody tr:hover th {\n  background: #ececec;\n}\n.table th {\n  border-top: none;\n}\n.table-responsive {\n  height: 75vh;\n  overflow-y: auto;\n  border: 1px solid #e3e2e5;\n}\n.table-responsive thead th {\n  top: 0;\n  position: sticky;\n}\n.table-responsive::-webkit-scrollbar {\n  max-height: 10px;\n  width: 7px;\n  height: 7px;\n  border-radius: 10px;\n  overflow-x: hidden;\n}\n.table-responsive::-webkit-scrollbar-track {\n  background: #ffffff;\n  border-radius: 10px;\n}\n.table-responsive::-webkit-scrollbar-thumb {\n  background: #27397b;\n  border-radius: 10px;\n}\n.table-responsive::-webkit-scrollbar-thumb:hover {\n  background: #19295f;\n  border-radius: 10px;\n}\n.form-control {\n  line-height: 16px;\n  padding: 10px 15px;\n}\n.current-active-product {\n  background: rgba(0, 0, 0, 0.1);\n}\n.current-edit-synonym {\n  transform: scale(1.02);\n  border: 1px solid #27397b;\n  z-index: 2;\n  background: #dddddd;\n  padding: 0.5rem;\n}\n.not-current-edit-synonym {\n  opacity: 0.2;\n  pointer-events: none;\n}\n.not-editing-synonyms {\n  border-bottom: 1px solid #e3e2e5;\n}\n/* .darkblue-btn {\n  font-family: \"Roboto\";\n  font-weight: 500;\n  border-radius: 0;\n} */\n</style>\n"]}]}