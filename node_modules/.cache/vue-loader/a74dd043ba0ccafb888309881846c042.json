{"remainingRequest":"/home/vimalesh/Elixir/chatbot-portal/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/vimalesh/Elixir/chatbot-portal/src/portal/analytics/components/Barchart.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/home/vimalesh/Elixir/chatbot-portal/src/portal/analytics/components/Barchart.vue","mtime":1643027096188},{"path":"/home/vimalesh/Elixir/chatbot-portal/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vimalesh/Elixir/chatbot-portal/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/vimalesh/Elixir/chatbot-portal/node_modules/@vue/cli-service/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/vimalesh/Elixir/chatbot-portal/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vimalesh/Elixir/chatbot-portal/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLyogLnRpY2sgbGluZSB7CiAgc3Ryb2tlOiAjMWIxMzljOwp9CiAueS5heGlzIHBhdGggewogICAgICAgIGRpc3BsYXk6IG5vbmU7CiAgICB9CiAgICAueS5heGlzIC50aWNrIGxpbmUgewogICAgICAgIGRpc3BsYXk6IG5vbmU7CiAgICB9CiAgI3hheGlzIHBhdGggewogICAgICAgIGRpc3BsYXk6IG5vbmU7CiAgICB9CgogICAgI3hheGlzIC50aWNrIGxpbmV7CiAgICAgICAgZGlzcGxheTogbm9uZTsKICAgIH0KLmJhci1wb3NpdGl2ZSB7CiAgIGZpbGw6ICMwMEM3RTY7Cn0KCi5iYXItcG9zaXRpdmU6aG92ZXIgewogIGZpbGw6IHJnYigxMDUsIDIxMywgMjA5KTs7Cn0KCi5zdmctY29udGFpbmVyIHsKICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7CiAgcG9zaXRpb246IHJlbGF0aXZlOwogIHdpZHRoOiAxMDAlOwogIHBhZGRpbmctYm90dG9tOiAxJTsKICB2ZXJ0aWNhbC1hbGlnbjogdG9wOwogIG92ZXJmbG93OiBoaWRkZW47Cn0KLnRvb2xUaXAgewogIHBvc2l0aW9uOiBhYnNvbHV0ZTsKICBkaXNwbGF5OiBub25lOwogIG1pbi13aWR0aDogODBweDsKICBoZWlnaHQ6IGF1dG87CiAgYmFja2dyb3VuZDogbm9uZSByZXBlYXQgc2Nyb2xsIDAgMCAjZmZmZmZmOwogIGJvcmRlcjogMXB4IHNvbGlkIHJnYmEoMTMwLCAxMjcsIDEyNywgMC43Mik7CiAgcGFkZGluZzogMTRweDsKICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgei1pbmRleDogMTAwMDsKfQouc3ViQmFyIHsgCiAgZmlsbDogZ3JheTsKICBvcGFjaXR5OiAwLjExOwp9CnJlY3QubW92ZXIgewogICAgICAgICAgICBzdHJva2U6IHJlZDsKICAgICAgICAgICAgc3Ryb2tlLW9wYWNpdHk6IC4xOwogICAgICAgICAgICBmaWxsOiAjNTA1MDUwOwogICAgICAgICAgICBmaWxsLW9wYWNpdHk6IC41OwogICAgICAgICAgICBib3JkZXItcmFkaXVzOiA0NXB4OwogICAgICAgIH0gKi8K"},{"version":3,"sources":["Barchart.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiXA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Barchart.vue","sourceRoot":"src/portal/analytics/components","sourcesContent":["<template>\n<div>\n  <div id=\"barchart\">\n\n  </div>\n  <!-- <button id=\"export\">  </button> -->\n</div>\n</template>\n\n<script>\nimport * as d3 from 'd3';\nimport d3_save_pdf from 'd3-save-pdf';\nexport default {\n  name: 'BarChart',\n  props: {\n    xKey: String,\n    yKey: String,\n    data: Array,\n    currency_key: String,\n  },\n  mounted() {\n    var vm = this;\n    this.data.sort(function(a, b) {\n            return b[vm.yKey] - a[vm.yKey];\n      });\n    // console.log(this.data, this.xKey, this.yKey)\n  //#region  - Dimensions and Scales\n    var margin = {top: 10, right: 110, bottom: 220, left: 90},\n        width = 1010 - margin.left - margin.right,\n        height = 570 - margin.top - margin.bottom;\n\n      \n    var marginOverview = {top: 30, right: 10, bottom: 20, left: 40};\n    var heightOverview = 80 - marginOverview.top - marginOverview.bottom;\n    var maxLength = d3.max(this.data.map(function(d){ return d[vm.xKey].length}))\n    // var maxLength = this.data.length;\n    // console.log(maxLength);\n    var barWidth = maxLength * 1.1;\n    var numBars = Math.round(width/barWidth);\n    var isScrollDisplayed = barWidth * this.data.length > width;\n    // console.log(maxLength,barWidth,numBars,barWidth*this.data.length,width);\n\n\n    var x = d3.scaleBand()\n              .range([0, width])\n              .padding(0.1);\n    var y = d3.scaleLinear()\n              .range([height, 0]);\n  //#endregion\n    // console.log(isScrollDisplayed,numBars);\n\n  //#region - Rectangles\n    var svg = d3.select(\"#barchart\").append(\"svg\")\n        .attr(\"width\", width + margin.left + margin.right)\n        .attr(\"height\", height + margin.top + margin.bottom)\n        .append(\"g\")\n        .attr(\"transform\", \n              \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n      if(isScrollDisplayed){\n        x.domain(this.data.slice(0,numBars).map(function(d) { return d[vm.xKey]; }));\n      } else {\n        x.domain(this.data.map(function(d) { return d[vm.xKey]; }));\n      }\n      y.domain([0, d3.max(this.data, function(d) { return d[vm.yKey]; })]);\n      if(isScrollDisplayed){\n        svg.selectAll(\".bar-positive\")\n          .data(this.data.slice(0, numBars), function (d) {return d[vm.xKey]; })\n          .enter().append(\"rect\")\n          .attr(\"class\", \"bar-positive\")\n          .attr(\"id\", function(d, i) {\n            return  d[vm.xKey]\n          })\n          .attr(\"x\", function(d) { return x(d[vm.xKey]); })\n          .attr(\"width\", x.bandwidth() / 1.19)\n          // .attr(\"y\", function(d) { return y(d[vm.yKey]); })\n          // .attr(\"height\", function(d) { return height - y(d[vm.yKey]); });\n          .attr(\"y\", function(d) { return y(0); })\n          .attr(\"height\", function(d) { return height - y(0); });\n        var xOverview = d3.scaleBand()\n                        .domain(this.data.map(function (d) { return d.label; }))\n                        .range([0, width], .2);\n        var yOverview = d3.scaleLinear().range([heightOverview, 0]);\n        yOverview.domain(y.domain());\n\n        var displayed = d3.scaleQuantize()\n                  .domain([0, width])\n                  .range(d3.range(this.data.length));\n        svg.append(\"g\").append(\"rect\")\n                  .attr(\"transform\", \"translate(0, \" + (height+3 ) + \")\")\n                  .attr(\"class\", \"mover\")\n                  .attr(\"x\", 0)\n                  .attr(\"y\", 0)\n                  .attr(\"rx\", 5)\n                  .attr(\"ry\", 10)\n                  .attr(\"height\", 10)\n                  .attr(\"width\",Math.round(parseFloat(numBars * width)/vm.data.length))\n                  .attr(\"pointer-events\", \"all\")\n                  .attr(\"cursor\", \"ew-resize\")\n                  .call(d3.drag().on(\"drag\", display));\n    svg.selectAll(\".bar-positive\")\n    .transition()\n    .duration(800)\n    .attr(\"y\", function(d) {return y(d[vm.yKey]); })\n    .attr(\"height\", function(d) {return height - y(d[vm.yKey]); })\n    .delay(function(d,i){ return(i*100)})\n\n      } else {\n        svg.selectAll(\".bar-positive\")\n          .data(this.data)\n          .enter().append(\"rect\")\n          .attr(\"class\", \"bar-positive\")\n          .attr(\"id\", function(d, i) {\n           return  d[vm.xKey];\n          })\n          .attr(\"x\", function(d) { return x(d[vm.xKey]); })\n          .attr(\"width\", x.bandwidth() / 1.19)\n          // .attr(\"y\", function(d) { return y(d[vm.yKey]); })\n          // .attr(\"height\", function(d) { return height - y(d[vm.yKey]); });\n          .attr(\"y\", function(d) { return y(0); })\n          .attr(\"height\", function(d) { return height - y(0); });\n\n            svg.selectAll(\"rect\")\n            .transition()\n            .duration(800)\n            .attr(\"y\", function(d) {return y(d[vm.yKey]); })\n            .attr(\"height\", function(d) {return height - y(d[vm.yKey]); })\n            .delay(function(d,i){ return(i*100)})\n      }\n  //#endregion\n\n  //#region - Axis\n        if(numBars > 9) {\n          xaxisforlargevalues();\n        } else {\n          xaxisforsmallvalues();\n        }\n        function xaxisforlargevalues() { svg.append(\"g\")\n          .attr(\"id\",\"xaxis\")\n          .attr(\"transform\", \"translate(0,\" + (height+10) + \")\")\n          .call(d3.axisBottom(x))\n          d3.selectAll(\"#xaxis text\")\n          .attr(\"y\", 0)\n          .attr(\"x\", -10)\n          .attr(\"dy\", \".35em\")\n          .attr(\"transform\", \"rotate(-70)\")\n          .style(\"text-anchor\", \"end\")\n       \n        } \n        // else {\n        function xaxisforsmallvalues() {   svg\n          .append(\"g\")\n          .attr(\"id\",\"xaxis\")\n            // .attr(\"class\", \"x axis\")\n          .attr(\"transform\", \"translate(0,\" +(height+10) + \")\")\n          .call(d3.axisBottom(x))\n          d3.selectAll(\".tick text\")\n          .call(wrap, x.bandwidth())\n          function wrap(text, width) {\n            text.each(function() {\n              var text = d3.select(this),\n                  words = text.text().split(/\\s+/).reverse(),\n                  word,\n                  line = [],\n                  lineNumber = 0,\n                  lineHeight = 1.1, // ems\n                  y = text.attr(\"y\"),\n                  dy = parseFloat(text.attr(\"dy\")),\n                  tspan = text.text(null).append(\"tspan\").attr(\"x\", 0).attr(\"y\", y).attr(\"dy\", dy + \"em\");\n              while (word = words.pop()) {\n                line.push(word);\n                tspan.text(line.join(\" \"));\n                if (tspan.node().getComputedTextLength() > width) {\n                  line.pop();\n                  tspan.text(line.join(\" \"));\n                  line = [word];\n                  tspan = text.append(\"tspan\").attr(\"x\", 0).attr(\"y\", y).attr(\"dy\", ++lineNumber * lineHeight + dy + \"em\").text(word)\n              \n                }\n              }\n            });\n          }\n        }\n        // }\n\n        // add the y Axis\n        svg.append(\"g\")\n            .attr(\"class\", \"y axis\")\n            .call(d3.axisLeft(y)\n            // .tickFormat(d3.format(\".0s\")));\n            .ticks(10, \"s\"));\n\n        svg.append(\"text\")\n        .attr(\"class\", \"y label\")\n        .attr(\"text-anchor\", \"end\")\n        .attr(\"y\", -60)\n        .attr(\"dy\", \".75em\")\n        .attr(\"dx\", \"-5.5em\")\n        .attr(\"transform\", \"rotate(-90)\")\n        .text(this.yKey);\n  //#endregion\n\n\n  //#region - ToolTip\n        var tooltip = d3.select(\".card-body\").append(\"div\").attr(\"class\", \"toolTip\");\n          d3.selectAll(\".bar-positive\")\n          .on(\"mouseover\", function(d){\n            var x = d3.select(this).attr('id'),\n              n= vm.data.length,\n              yval\n              for(let i=0;  i < n; i++ ){\n                if(vm.data[i][vm.xKey] === x) {\n                  yval = vm.data[i][vm.yKey]\n                }\n              }\n              // console.log(Number.isInteger(yval))\n                  tooltip\n                  .style(\"left\", event.pageX - 315 + \"px\")\n                  .style(\"top\", event.pageY - 170 + \"px\")\n                  .style(\"display\", \"inline-block\")\n                  // .html((vm.data[x][vm.yKey]) + \"<br>\"  + (vm.data[x][vm.xKey]));\n                  .html( x + \"<br>\"  +vm.currency_key + ' ' +  ((Number.isInteger(yval))? yval : yval.toFixed(2)));\n              })\n              .on(\"mouseout\", function(d){\n                  tooltip.style(\"display\", \"none\");\n              });\n  //#endregion\n\n  //#region - Animation\n    // svg.selectAll(\"rect\")\n    // .transition()\n    // .duration(4800)\n    // .attr(\"y\", function(d) { console.log(d);return y(d[vm.yKey]); })\n    // .attr(\"height\", function(d) { console.log(d);return height - y(d[vm.yKey]); })\n    // .delay(function(d,i){console.log(i) ; return(i*100)})\n  //#endregion\n\n\n   function display () {\n     // debugger;\n        var xy = parseInt(d3.select(this).attr(\"x\")),\n            nx = xy + d3.event.dx,\n            w = parseInt(d3.select(this).attr(\"width\")),\n            f, nf, new_data, rects;\n\n          // console.log('xy'+xy)\n          // console.log('nx'+nx)\n          // console.log('w'+w)\n          // console.log('widht'+ width)\n          \n        if ( nx < 0 || nx + w > width) return;\n\n        d3.select(this).attr(\"x\", nx);\n\n        f = displayed(xy);\n        nf = displayed(nx);\n        // console.log('f'+f)\n        // console.log('nf'+nf)\n\n        if ( f === nf ) return;\n\n        new_data = vm.data.slice(nf, nf + numBars);\n\n        x.domain(new_data.map(function (d) { return d[vm.xKey]; }));\n\n        if(numBars > 8 ){\n          // xaxisforlargevalues();\n          svg.select(\"#xaxis\").call(d3.axisBottom(x))\n        .selectAll(\"#xaxis text\")\n          .attr(\"y\", 0)\n          .attr(\"x\", -10)\n          .attr(\"dy\", \".35em\")\n          .attr(\"transform\", \"rotate(-70)\")\n          .style(\"text-anchor\", \"end\");\n        } else {\n          // xaxisforsmallvalues();\n           svg.select(\"#xaxis\").call(d3.axisBottom(x))\n            d3.selectAll(\".tick text\")\n          .call(wrap, x.bandwidth())\n           function wrap(text, width) {\n            text.each(function() {\n              var text = d3.select(this),\n                  words = text.text().split(/\\s+/).reverse(),\n                  word,\n                  line = [],\n                  lineNumber = 0,\n                  lineHeight = 1.1, // ems\n                  y = text.attr(\"y\"),\n                  dy = parseFloat(text.attr(\"dy\")),\n                  tspan = text.text(null).append(\"tspan\").attr(\"x\", 0).attr(\"y\", y).attr(\"dy\", dy + \"em\");\n              while (word = words.pop()) {\n                line.push(word);\n                tspan.text(line.join(\" \"));\n                if (tspan.node().getComputedTextLength() > width) {\n                  line.pop();\n                  tspan.text(line.join(\" \"));\n                  line = [word];\n                  tspan = text.append(\"tspan\").attr(\"x\", 0).attr(\"y\", y).attr(\"dy\", ++lineNumber * lineHeight + dy + \"em\").text(word)\n              \n                }\n              }\n            });\n          }\n        }\n        \n      // setTimeout(() => {\n        \n     \n        rects = svg.selectAll(\".bar-positive\")\n        .data(new_data, function (d) {return d[vm.xKey]; });\n          rects.attr(\"x\", function (d) { return x(d[vm.xKey]); });\n\n    // \t  rects.attr(\"transform\", function(d) { return \"translate(\" + xscale(d.label) + \",0)\"; })\n\n        rects.enter().append(\"rect\")\n        .attr(\"class\", \"bar-positive\")\n        .attr(\"id\", function(d, i) {\n            return  d[vm.xKey];\n          })\n        .attr(\"x\", function (d) { return x(d[vm.xKey]); })\n        .attr(\"y\", function (d) { return y(d[vm.yKey]); })\n        .attr(\"width\", x.bandwidth()/ 1.19)\n        .attr(\"height\", function (d) { return height - y(d[vm.yKey]); })\n        .on(\"mouseover\", function(d){\n              var x = d3.select(this).attr('id'),\n              n= vm.data.length,\n              yval\n              for(let i=0;  i < n; i++ ){\n                if(vm.data[i][vm.xKey] === x) {\n                  yval = vm.data[i][vm.yKey]\n                }\n              }\n                // console.log(vm.currency_key);\n                  tooltip\n                  .style(\"left\", event.pageX - 315 + \"px\")\n                  .style(\"top\", event.pageY - 170 + \"px\")\n                  .style(\"display\", \"inline-block\")\n                  // .html((vm.data[x][vm.yKey]) + \"<br>\"  + (vm.data[x][vm.xKey]));\n                  .html( x + \"<br>\"  + vm.currency_key + ' ' + ((Number.isInteger(yval))? yval : yval.toFixed(2)));\n              })\n              .on(\"mouseout\", function(d){\n                  tooltip.style(\"display\", \"none\");\n              });\n        rects.exit().remove();\n        //  }, 1000);\n    };\n\n    // d3.select('button#export').on('click', function() {\n    //   var config = {\n    //     filename: 'customFileName',\n    //   }\n    //   d3_save_pdf.save(d3.select('svg').node(), config);\n    //   svg\n    //   .append('g')\n    //   .append('image')\n    //   .attr('xlink:href', 'assets/test.png')\n    //   .attr(\"width\", 100)\n    //   .attr(\"height\", 100)\n    //   .attr(\"x\", (width / 2)  - 50)\n    //   .attr(\"y\", (height / 6) * 5);\n\n    // d3_save_pdf.embedRasterImages(svg.node())\n    // });\n\n  },\n}\n</script>\n\n<style>\n/* .tick line {\n  stroke: #1b139c;\n}\n .y.axis path {\n        display: none;\n    }\n    .y.axis .tick line {\n        display: none;\n    }\n  #xaxis path {\n        display: none;\n    }\n\n    #xaxis .tick line{\n        display: none;\n    }\n.bar-positive {\n   fill: #00C7E6;\n}\n\n.bar-positive:hover {\n  fill: rgb(105, 213, 209);;\n}\n\n.svg-container {\n  display: inline-block;\n  position: relative;\n  width: 100%;\n  padding-bottom: 1%;\n  vertical-align: top;\n  overflow: hidden;\n}\n.toolTip {\n  position: absolute;\n  display: none;\n  min-width: 80px;\n  height: auto;\n  background: none repeat scroll 0 0 #ffffff;\n  border: 1px solid rgba(130, 127, 127, 0.72);\n  padding: 14px;\n  text-align: center;\n  z-index: 1000;\n}\n.subBar { \n  fill: gray;\n  opacity: 0.11;\n}\nrect.mover {\n            stroke: red;\n            stroke-opacity: .1;\n            fill: #505050;\n            fill-opacity: .5;\n            border-radius: 45px;\n        } */\n</style>"]}]}