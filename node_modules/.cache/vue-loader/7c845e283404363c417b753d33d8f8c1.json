{"remainingRequest":"/home/vimalesh/CENSE/chatbot-portal/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/vimalesh/CENSE/chatbot-portal/src/portal/Chatbot/Dashboard/Data Inputs/ResponseBot.vue?vue&type=style&index=1&id=263e4b51&scoped=true&lang=css&","dependencies":[{"path":"/home/vimalesh/CENSE/chatbot-portal/src/portal/Chatbot/Dashboard/Data Inputs/ResponseBot.vue","mtime":1649135649281},{"path":"/home/vimalesh/CENSE/chatbot-portal/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vimalesh/CENSE/chatbot-portal/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/vimalesh/CENSE/chatbot-portal/node_modules/@vue/cli-service/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/vimalesh/CENSE/chatbot-portal/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vimalesh/CENSE/chatbot-portal/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["ResponseBot.vue"],"names":[],"mappingslfile":"ResponseBot.vue","sourceRoot":"src/portal/Chatbot/Dashboard/Data Inputs","sourcesContent":["<template>\n  <div :style=\"cssProps\">\n    <div\n      class=\"card-header d-block d-sm-flex flex-wrap justify-content-between\"\n    ></div>\n    <div\n      :class=\"{\n        'card-body d-block d-flex': $route.name != 'Direct Response Bot',\n        'card-body': $route.name == 'Direct Response Bot',\n      }\"\n    >\n      <div style=\"width: 25%\" v-if=\"isTextToBot && !isPreviewBot && !isDialogBot\">\n        Here administrator can check how the bot responds to the end users\n        questions.\n      </div>\n      <div class=\"chat-master ml-auto\" id=\"app\">\n        <!-- <div class=\"group_chat_btn\" v-if=\"live_chat_on\">\n          <a href=\"javascript:void(0)\" @click=\"disconnect_support_chat\"\n            >Stop Chat</a\n          >\n        </div> -->\n        <div\n          class=\"chat-wrap\"\n          :style=\"chat_bot_background_image\"\n          style=\"margin: 0 auto; z-index: 0; min-width: 450px\"\n          v-bind:class=\"{\n            'chat-wrap2': isexchange,\n            'chat-wrap1': !isexchange,\n          }\"\n        >\n          <div class=\"chat-head\">\n            <div\n              class=\"media\"\n              v-bind:class=\"{\n                media2: !isretailigence,\n                media3: isretailigence,\n              }\"\n            >\n              <img\n                :src=\"chat_widget.logo\"\n                :style=\"chat_widget.style\"\n                class=\"rounded\"\n                alt=\"...\"\n                style=\"max-width: 100%\"\n              />\n              <!-- <div\n                      class=\"media-body\"\n                      style=\"margin-left: 10px\"\n                      v-if=\"!isretailigence\"\n                    >\n                      <p\n                        style=\"\n                          font-size: 15px;\n                          font-weight: bold;\n                          margin-top: 6px;\n                          text-align: center;\n                        \"\n                      >\n                        {{ chat_widget.title }}\n                      </p>\n                    </div> -->\n            </div>\n          </div>\n          <div\n            style=\"position: absolute; z-index: 1000; top: 80%; left: 93%;cursor:pointer\"\n            class=\"bounce\"\n            @click=\"animate_chat_body_scroll(1, 50)\"\n          >\n            <img src=\"/img/down-arrow.png\" v-if=\"to_scroll\" />\n          </div>\n          <div\n            id=\"portal_chat_body_id\"\n            class=\"chat-body\"\n            @scroll=\"scroll_down\"\n            v-bind:class=\"{\n              'chat-body2': isexchange,\n              'chat-body1': !isexchange,\n            }\"\n          >\n            <div v-if=\"live_chat_on\" class=\"live-agent-window fadeInDown\">\n              <div class=\"d-flex\">\n                <img src=\"@/portal/assets/img/user-blue.png\" alt=\"\">\n                <span class=\"bot-font-style\" v-if=\"support_agent_info\" style=\"margin-top: 14px;\">Agent {{support_agent_info.first_name}} is online</span>\n                <span class=\"bot-font-style\" v-else style=\"margin-top: 14px;\">Connecting to our Support Agent ...</span>\n              </div>\n            </div>\n            <div\n              class=\"chat-inner\"\n              v-for=\"(single, item) in chat\"\n              :key=\"item\"\n              :id=\"'chat' + item\"\n            >\n              <div class=\"typewriter\" v-if=\"single.popup != null\">\n                <span\n                  class=\"chat\"\n                  style=\"\n                    color: black;\n                    font-size: 14px;\n                    font-weight: bold;\n                    border: 0px;\n                  \"\n                  v-html=\"popup_msg\"\n                ></span>\n              </div>\n              <div\n                class=\"chat-row receiver\"\n                v-if=\"Boolean(single.url) && single.receiving == false\"\n              >\n                <span class=\"chat\" style=\"width: max-content\">\n                  <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    width=\"24\"\n                    height=\"24\"\n                    viewBox=\"0 0 24 24\"\n                  >\n                    <path\n                      fill=\"#273679\"\n                      d=\"M6 2c-1.1 0-1.99.9-1.99 2L4 20c0 1.1.89 2 1.99 2H18c1.1 0 2-.9 2-2V8l-6-6H6zm7 7V3.5L18.5 9H13z\"\n                    />\n                    <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n                  </svg>\n                  <a\n                    href=\"#\"\n                    @click=\"download_file(single.url, single.file_name)\"\n                    target=\"_blank\"\n                  >\n                    <span>\n                      {{ single.file_name }}\n                      &nbsp;\n                    </span>\n                    <i class=\"fa fa-download\" aria-hidden=\"true\"></i>\n                  </a>\n                </span>\n              </div>\n              <div\n                v-if=\"single.is_leaf_note == 'leaf'\"\n                style=\"float: right; margin-bottom: 10px; margin-left: 30px\"\n                class=\"chat-row prompt\"\n              >\n                <span\n                  class=\"chat\"\n                  style=\"\n                    background: #273679;\n                    font-size: 14px;\n                    word-break: break-word;\n                  \"\n                  >{{ single.bot_response }}</span\n                >\n              </div>\n              <div v-if=\"single.flavor_text != null\">\n                <span>{{ single.flavor_text }}</span>\n              </div>\n\n              <div class=\"chat-row prompt-title\" v-if=\"single.title != null\">\n                <div class=\"chat\">{{ single.title }}</div>\n              </div>\n              <!-- <template v-if=\"single.is_table==true\">\n                  <div class=\"chat-row prompt\">\n                    <span style=\"margin-left:2%\">\n                      {{single.table_title}}\n                      <br />\n                    </span>\n                    <div class=\"chat\" style=\"width:96%;margin-left: 2%;margin-top:2%\">\n                      <div v-if=\"isexchange\">\n                        <div\n                          class=\"row\"\n                          v-for=\"(currency, index) in single.table_list\"\n                          :key=\"index\"\n                          style=\"margin-bottom:10px;margin-left:0;width:100%;box-shadow: 0px 1px 5px 0px rgba(0, 0, 0, 0.2);background-color: #fbfbfb;border-radius:4px;height:30px;align-items:center;color: 3d3d3d;\"\n                        >\n                          <div class=\"column\" style=\"align:center;width: 5%;padding-left:1.5%\">\n                            <img\n                              style=\"align:center;opacity:4.5;height:20px;color:#2b3184;vertical-align:top;\"\n                              :src=\"'../../../img/ForeignExchange/'+currency.currency_title+'.png'\"\n                            />\n                          </div>\n                          <div\n                            class=\"column\"\n                            v-show=\"currency.type=='TR'\"\n                            style=\"padding-left:5%;width: 65%;color:black\"\n                          >{{currency.currency_title}}</div>\n                          <div\n                            class=\"column\"\n                            v-show=\"currency.type=='TR'\"\n                            style=\"width:20%;text-align:right;color:black\"\n                          >{{currency.currency_value}}</div>\n                        </div>\n                      </div>\n\n                      <table v-if=\"!isexchange\">\n                        <tr\n                          v-for=\"(currency, index) in single.table_list\"\n                          :key=\"index\"\n                          style=\"line-height: 9.5px;\"\n                        >\n                          <th\n                            v-show=\"currency.type=='THEAD'\"\n                            style=\"text-align: left;width: auto;\"\n                          >{{currency.country_name}}</th>\n                          <th\n                            v-show=\"currency.type=='THEAD'\"\n                            style=\"text-align: left\"\n                          >{{currency.currency_name}}</th>\n                          <td\n                            v-show=\"currency.type=='TR'\"\n                            style=\"font-weight: bolder;\"\n                          >{{currency.currency_title}}</td>\n                          <td\n                            v-show=\"currency.type=='TR'\"\n                            style=\"font-weight: bolder;\"\n                          >{{currency.currency_value}}</td>\n                        </tr>\n                      </table>\n                    </div>\n                  </div>\n                    </template>-->\n              <template v-if=\"single.is_leaf_note == false\">\n                <div\n                  class=\"chat-row prompt\"\n                  @click=\"click_prompt(prompt)\"\n                  v-for=\"(prompt, index) in single.bot_response\"\n                  :key=\"index\"\n                >\n                  <div\n                    @click=\"show_popup\"\n                    style=\"cursor: pointer\"\n                    :value=\"single.level\"\n                    class=\"chat\"\n                  >\n                    {{ prompt }}\n                  </div>\n                </div>\n              </template>\n              <template v-if=\"single.is_leaf_note == true\">\n                <video-viewer\n                  :responses=\"single.bot_response\"\n                  :show=\"show\"\n                  :demourlbind=\"demourlbind\"\n                  :demourl=\"demourl\"\n                  :reviewsurlbind=\"reviewsurlbind\"\n                  :reviewsurl=\"reviewsurl\"\n                  @sub_leaf_node_call=\"sub_leaf_node_call\"\n                ></video-viewer>\n              </template>\n              <div\n                class=\"buy-products d-flex\"\n                style=\"overflow: auto hidden\"\n                @mousewheel=\"scroll_div\"\n                v-if=\"single.isproduct\"\n              >\n                <div\n                  class=\"image-container\"\n                  v-for=\"(product, index) in single.elements.products\"\n                  :key=\"index\"\n                >\n                  <img :src=\"product['Product Image Url']\" class=\"image-box\" />\n                  <p>{{ product[\"Product Name\"] }}</p>\n                  <p>{{ product[\"UnitPrice\"] }}</p>\n                  <p\n                    class=\"buy-now\"\n                    @click=\"\n                      generate_payment(\n                        product['UnitPrice'],\n                        product['Product Name']\n                      )\n                    \"\n                  >\n                    Buy Now\n                  </p>\n                </div>\n              </div>\n              <div\n                :class=\"Boolean(single.products_list.length > 1)?'d-flex':''\"\n                v-if=\"single.new_products && show_custom_cart\"\n              >\n                <button \n                  class=\"btn mr-2 product_scroll_btn\"\n                  style=\"border-radius:35px 0px 0px 35px !important\"\n                  @click=\"scroll_div_left(item)\"\n                  v-if=\"Boolean(single.products_list.length > 1)\"\n                >\n                  <span class=\"product_scroll_btn_icon\">\n                    <svg \n                      style=\"height: 22px !important;width: 22px !important;\"\n                      xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-chevron-left\" viewBox=\"0 0 16 16\">\n                      <path fill-rule=\"evenodd\" d=\"M11.354 1.646a.5.5 0 0 1 0 .708L5.707 8l5.647 5.646a.5.5 0 0 1-.708.708l-6-6a.5.5 0 0 1 0-.708l6-6a.5.5 0 0 1 .708 0z\"/>\n                    </svg>\n                  </span>\n                </button>\n                <div\n                  class=\"buy-products d-flex\"\n                  :id=\"'buy_product_id_' + item\"\n                  style=\"overflow: auto hidden; height: auto;\"\n                  @mousewheel=\"scroll_div1(item)\"\n                >\n                  <div\n                    class=\"image-container-woocommerce\"\n                    v-for=\"(product, index) in single.products_list\"\n                    :key=\"index\"\n                    :style=\"Boolean(single.products_list.length > 1)? '':'margin-left:8% !important'\"\n                  > <a :href=\"product.permalink\" target=\"_blank\">\n                    <img v-if=\"product.img_url != null\" :src=\"product.img_url\" class=\"image-box-woocommerce\" alt=\"Product Image\" />\n                    <img v-else src=\"/img/blank_product_image.png\" class=\"image-box-woocommerce\" alt=\"Product Image\" />\n                    </a>\n                    <div class=\"product-title-woocommerce\">\n                    <p class=\"textMaxLine bot-font-style m-0\" :title=\"product.title\">{{ product.title }}\n                    </p>\n                    <p class=\"product-variant-title bot-font-style\" v-if=\"product.variant_title\" :title=\"product.variant_title\">{{ product.variant_title }}</p>\n                    </div>\n                    <div class=\"d-flex\" style=\"justify-content: center;\">\n                    <p class=\"product-price-woocommerce bot-font-style\">{{retail_shop_currency}} {{parseInt(product.price).toLocaleString()}}.00</p>\n                    <p v-if=\"product.price != product.regular_price && (product.regular_price != '' && product.regular_price != null)\" class=\"product-price-woocommerce bot-font-style\"\n                      style=\"font-size: 10px;\n                            text-decoration: line-through;\n                            padding-left: 5px;\n                            padding-top: 2px;\n                            opacity: 1;\">\n                      {{retail_shop_currency}} {{parseInt(product.regular_price).toLocaleString()}}.00</p>\n                    </div>\n                    <div class=\"bot-font-style\" v-if=\"product.order_qty === 2  && product.stock_quantity != null\" style=\"color: red; font-size: 12px;\">\n                      Maximum limit {{available_qty(product.stock_quantity, product.id)}}\n                    </div>\n                    <div v-if=\"Boolean(custom_product_button_key.length)\" class=\"product-variation\" style=\"position: relative;\" >\n                      <div v-for=\"(product_button, index) in custom_product_button_key\"\n                        :key=\"index\">\n                        <select class=\"select-product-variation bot-font-style\" \n                          v-model=\"product.variant_title\" \n                          @change=\"update_variation(item, index, product.variant_title)\"\n                          :disabled=\"product_button.on_value == product[product_button.on_key]\"\n                          :style=\"product_button.on_value == product[product_button.on_key] ? 'background: #dddddd; cursor: not-allowed;' : ''\"\n                        >\n                          <option v-for=\"(variation, var_index) in product.variations\"\n                          :key=\"var_index\"\n                          :value=\"variation.variant_title\">{{variation.variant_title}}</option>\n                        </select>\n                        <svg class=\"select-icon\" data-element=\"option.selectIcon\" viewBox=\"0 0 24 24\"><path d=\"M21 5.176l-9.086 9.353L3 5.176.686 7.647 12 19.382 23.314 7.647 21 5.176z\"></path></svg>\n                      </div>\n                    </div>\n                    <div v-else class=\"product-variation\" style=\"position: relative;\" >\n                      <select class=\"select-product-variation bot-font-style\" \n                        v-model=\"product.variant_title\" \n                        @change=\"update_variation(item, index, product.variant_title)\" \n                        :disabled=\"!product.variations || product.variations.length <= 1\"\n                        :style=\"!product.variations || product.variations.length <= 1 ? 'background: #dddddd; cursor: not-allowed;' : ''\"\n                      >\n                        <option v-for=\"(variation, var_index) in product.variations\"\n                        :key=\"var_index\"\n                        :value=\"variation.variant_title\">{{variation.variant_title}}</option>\n                      </select>\n                      <svg class=\"select-icon\" data-element=\"option.selectIcon\" viewBox=\"0 0 24 24\"><path d=\"M21 5.176l-9.086 9.353L3 5.176.686 7.647 12 19.382 23.314 7.647 21 5.176z\"></path></svg>\n                    </div>\n                    <div v-if=\"Boolean(custom_product_button_key.length)\">\n                      <div class=\"product-qty\" v-for=\"(product_button, index) in custom_product_button_key\"\n                        :key=\"index\">\n                        <button\n                          type=\"button\"\n                          class=\"quantity-btn minus\"\n                          :disabled=\"product_button.on_value == product[product_button.on_key]\"\n                          :style=\"product_button.on_value == product[product_button.on_key] ? 'background: #dddddd; cursor: not-allowed;' : ''\"\n                          @click=\"update_quantity('-', item, index,product)\"\n                        >\n                        <span>-</span>\n                          <!-- <svg\n                            xmlns=\"http://www.w3.org/2000/svg\"\n                            style=\"height: 14px\"\n                            viewBox=\"0 0 16 16\"\n                          >\n                            <path d=\"M4 7h8v2H4z\"></path>\n                          </svg> -->\n                        </button>\n                        <input\n                          type=\"number\"\n                          min=\"1\"\n                          class=\"bot-font-style quantity-btn\"\n                          style=\"\n                            text-align: center; \n                            width: 45px; \n                            border-right: 0; \n                            border-left: 0;\n                            background-color: #ffffff;\"\n                          v-model.number=\"product.buy_qty\"\n                          :style=\"product_button.on_value == product[product_button.on_key] ? 'background: #dddddd; cursor: not-allowed;' : ''\"\n                          @focusout=\"update_quantity('manual', item, index, product)\"\n                          :disabled=\"product_button.on_value == product[product_button.on_key]\"\n                          name=\"quantity\"\n                          title=\"Qty\"\n                        />\n                        <button\n                          type=\"button\"\n                          class=\"quantity-btn plus\"\n                          @click=\"update_quantity('+', item, index,product)\"\n                          :disabled=\"product_button.on_value == product[product_button.on_key]\"\n                          :style=\"product_button.on_value == product[product_button.on_key] ? 'background: #dddddd; cursor: not-allowed;' : ''\"\n                        >\n                        <span>+</span>\n                          <!-- <svg\n                            xmlns=\"http://www.w3.org/2000/svg\"\n                            style=\"height: 14px\"\n                            viewBox=\"0 0 16 16\"\n                          >\n                            <path d=\"M12 7H9V4H7v3H4v2h3v3h2V9h3z\"></path>\n                          </svg> -->\n                        </button>\n                      </div>\n                    </div>\n                    <div v-else class=\"product-qty\">\n                      <button\n                        type=\"button\"\n                        class=\"quantity-btn minus\"\n                        @click=\"update_quantity('-', item, index,product)\"\n                      >\n                      <span>-</span>\n                        <!-- <svg\n                          xmlns=\"http://www.w3.org/2000/svg\"\n                          style=\"height: 14px\"\n                          viewBox=\"0 0 16 16\"\n                        >\n                          <path d=\"M4 7h8v2H4z\"></path>\n                        </svg> -->\n                      </button>\n                      <input\n                        type=\"number\"\n                        min=\"1\"\n                        class=\"bot-font-style quantity-btn\"\n                        style=\"\n                          text-align: center; \n                          width: 45px; \n                          border-right: 0; \n                          border-left: 0;\n                          background-color: #ffffff;\"\n                        v-model.number=\"product.buy_qty\"\n                        @focusout=\"update_quantity('manual', item, index, product)\"\n                        name=\"quantity\"\n                        title=\"Qty\"\n                      />\n                      <button\n                        type=\"button\"\n                        class=\"quantity-btn plus\"\n                        @click=\"update_quantity('+', item, index,product)\"\n                      >\n                      <span>+</span>\n                        <!-- <svg\n                          xmlns=\"http://www.w3.org/2000/svg\"\n                          style=\"height: 14px\"\n                          viewBox=\"0 0 16 16\"\n                        >\n                          <path d=\"M12 7H9V4H7v3H4v2h3v3h2V9h3z\"></path>\n                        </svg> -->\n                      </button>\n                    </div>\n                    <div v-if=\"Boolean(custom_product_button_key.length)\">\n                      <div v-for=\"(product_button, index) in custom_product_button_key\"\n                        :key=\"index\">\n                        <a v-if=\"product_button.function == 'permalink' && product_button.on_value == product[product_button.on_key]\" \n                          :href=\"product.permalink\" target=\"_blank\">\n                        <button \n                          class=\"btn add-to-cart\"\n                          style=\"\n                            font-size: 13px;\n                            width: 100% !important;\"\n                        >\n                          {{product_button.name}}\n                        </button>\n                        </a>\n                        <button \n                          class=\"btn add-to-cart\"\n                          v-else-if=\"product.stock_status != 'outofstock'\"\n                          style=\"\n                            font-size: 13px;\n                            width: 100% !important;\"\n                          @click=\"\n                            addproduct(product)\n                          \"\n                        >\n                          ADD TO CART\n                        </button>\n                        <button\n                          v-else\n                          class=\"btn add-to-cart\"\n                          style=\"\n                            font-size: 13px;\n                            cursor: not-allowed;\n                            width: 100% !important;\"\n                          disabled\n                        >\n                          OUT OF STOCK\n                        </button>\n                      </div>\n                    </div>\n                    <button\n                      class=\"btn add-to-cart\"\n                      id=\"addtocart\"\n                      v-else-if=\"product.stock_status != 'outofstock'\"\n                      style=\"font-size: 13px;\"\n                      @click=\"\n                        addproduct(product)\n                      \"\n                    >\n                      ADD TO CART\n                    </button>\n                    <button\n                      v-else\n                      class=\"btn add-to-cart\"\n                      style=\"font-size: 13px;\n                      cursor: not-allowed;\"\n                      disabled\n                    >\n                      OUT OF STOCK\n                    </button>\n                  </div>\n                </div>\n                <button \n                  style=\"border-radius:0px 35px 35px 0px !important;\"\n                  class=\"btn ml-2 product_scroll_btn\"\n                  @click=\"scroll_div_right(item)\"\n                  v-if=\"Boolean(single.products_list.length > 1)\"\n                >\n                  <span class=\"product_scroll_btn_icon\">\n                    <svg \n                      style=\"height: 22px !important;width: 22px !important;\"\n                      xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-chevron-right\" viewBox=\"0 0 16 16\">\n                      <path fill-rule=\"evenodd\" d=\"M4.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L10.293 8 4.646 2.354a.5.5 0 0 1 0-.708z\"/>\n                    </svg>\n                  </span>\n                </button>\n              </div>\n              <div\n                class=\"buy-products d-flex\"\n                style=\"overflow: auto hidden; height: auto\"\n                @mousewheel=\"scroll_div\"\n                v-else-if=\"Boolean(single.is_products_list)\"\n                id=\"products_list_div\"\n              >\n                <div\n                  :id=\"`product_${product_item.id}_`+item\"\n                  v-for=\"(product_item, index) in single.products_list\"\n                  :key=\"index\"\n                  class=\"m-3\"\n                  style=\"min-width: 200px\"\n                ></div>\n              </div>\n              <div class=\"chat-row receiver\" v-if=\"single.product_out_of_stock\">\n                <div class=\"d-flex\">\n                    <div class=\"bot-img\" :style=\"bot_img_icon\"></div>\n                    <div\n                      class=\"chat bot-font-receiver\"\n                    >\n                    Some products you searched for are out of stock, if you want to be notified via email when they are back in stock,\n                  <a\n                href=\"#\"\n                style=\"cursor: pointer;\"\n                @click=\"add_to_out_of_stock_list(single.product_out_of_stock_list)\"\n                data-toggle=\"modal\"\n                data-target=\"#notifyemail\"\n              >\n                click here\n              </a>            \n                    </div>\n                  </div>\n              </div>\n              <div class=\"chat-row receiver\" v-if=\"single.show_banner_img_url\">\n                <div class=\"d-flex\">\n                  <div v-if=\"single.show_bot_img\" class=\"bot-img\" :style=\"bot_img_icon\"></div>\n                  <br />\n                  <a \n                    style=\"width: -webkit-fill-available !important;\" \n                    :href=\"single.banner_img_link ? single.banner_img_link: 'javascript:void(0);'\"\n                    :target=\"single.banner_img_link ? '_blank' : ''\"\n                  >\n                    <img\n                      :src=\"single.banner_img_url\"\n                      :class=\"(Boolean(single.show_bot_img) == true)?'banner_img_url_id':'banner_img_url_only_id'\"\n                    />\n                  </a>\n                </div>\n                  <div class=\"chat-his\" v-if=\"single.time != null\">\n                  <span class=\"time\" style=\"color: #000\">{{ single.time }}</span>\n                </div>\n              </div>\n              <div class=\"chat-row receiver\" v-if=\"single.show_banner_description\">\n                <div class=\"d-flex\">\n                  <div v-if=\"single.show_bot_img\" class=\"bot-img\" :style=\"bot_img_icon\"></div>\n                  <div\n                    class=\"chat bot-font-receiver\"\n                    :style=\"(Boolean(single.show_bot_img) == true) ? '' : 'margin-left: 8% !important;'\"\n                    v-html=\"single.banner_description\"\n                  >\n                    {{ single.banner_description }}\n                  </div>\n                </div>\n                  <div class=\"chat-his\" v-if=\"single.time != null\">\n                  <span class=\"time\" style=\"color: #000\">{{ single.time }}</span>\n                </div>\n              </div>\n              <div class=\"chat-row receiver\" v-if=\"single.show_banner_video_url\">\n                <div class=\"d-flex\">\n                  <div v-if=\"single.show_bot_img\" class=\"bot-img\" :style=\"bot_img_icon\"></div>\n                  <br />\n                  <div\n                    class=\"plyr__video-embed\"\n                    id=\"player\"\n                  >\n                    <iframe\n                      :src=\"single.banner_video_url\"\n                      allowfullscreen\n                      allowtransparency\n                      allow=\"autoplay\"\n                      :class=\"(Boolean(single.show_bot_img) == true )?'banner_video_url_id':'banner_video_url_only_id'\"\n                    ></iframe>\n                  </div>\n                </div>\n                  <div class=\"chat-his\" v-if=\"single.time != null\">\n                  <span class=\"time\" style=\"color: #000\">{{ single.time }}</span>\n                </div>\n              </div>\n              <div class=\"chat-row receiver\" v-if=\"single.is_review_rating_product\">\n                <div class=\"d-flex\">\n                  <div class=\"bot-img\" :style=\"bot_img_icon\"></div>\n                  <div \n                    class=\"p-3 my-3 chat\"\n                  >\n                    <div class=\"col-sm-12 d-flex p-0\">\n                      <div class=\"col-sm-8 p-0\">\n                        <div class=\"bot-font-receiver\" style=\"width: 100% !important;\">\n                          <label style=\"text-align: justify !important;\" ><strong><b> {{single.not_reviewed_product_details.name}}</b></strong></label>\n                          <div\n                            style=\"\n                              width: 100% !important;\n                              text-align: justify !important;\"\n                          >\n                            {{single.review_message_first}}\n                          </div>\n                          <div\n                            style=\"\n                              width: 100% !important;\n                              text-align: justify !important;\"\n                          >\n                            {{single.review_message_second}}\n                          </div>\n                        </div>\n                      </div>\n                      <div class=\"col-sm-4 pl-2 pr-0\">\n                        <div style=\"text-align: end !important;contain: content !important;\">\n                          <img :src=\"single.product_review_img_url\" class=\"img-fluid\" />\n                        </div>\n                      </div>\n                    </div>\n                    <div class=\"card p-3 my-2\">\n                      <div \n                        class=\"card-body p-0 bot-font-receiver\" \n                        style=\"min-height: 10vh !important;\"\n                      >\n                        <form @submit.prevent=\"submit_review_rating(item)\">\n                          <div class=\"d-flex flex-wrap\">\n                            <label class=\"mr-4 my-auto\"><strong><b>Rating:</b></strong></label>\n                            <star-rating \n                              v-model=\"single.product_rating\"\n                              v-bind:star-size=\"17\"\n                              :showRating= false\n                            >\n                            </star-rating>\n                          </div>\n                          <br/>\n                          <label><strong><b>Review:</b></strong></label>\n                          <textarea\n                            required\n                            rows=\"3\"\n                            v-model.trim=\"single.product_review\"\n                            class=\"form-control\" \n                            type=\"text\"\n                            style=\"border: 1px solid #ced4da;\n                              border-radius: .25rem; fon-size: 16px;\n                              padding: 5px !important; resize: none !important\"\n                          />\n                          <hr>\n                          <div class=\"card-act btn-wrap d-block d-flex flex-wrap buttons-parent buttons-alignment mt-1\">\n                            <button \n                              class=\"btn custom-buttons mt-3\"\n                              style=\"text-align: center !important;\"  \n                              type=\"submit\"\n                            >\n                            <strong>Submit Your Review</strong> \n                            </button>\n                          </div>\n                        </form>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"chat-his\" v-if=\"single.time != null\">\n                  <span class=\"time\" style=\"color: #000\">{{ single.time }}</span>\n                </div>\n              </div>\n              <div class=\"chat-row receiver\" v-if=\"single.show_messaging_platforms\">\n                <div v-if=\"single.show_messaging_platforms\" class=\"d-flex\" style=\"justify-content: center\">\n                  <div  class=\"px-2\" v-for=\"(plt,plt_index) in single.messaging_platforms_data\" :key=\"plt_index\">\n                    <!-- {{plt}} -->\n                    <div v-if=\"Boolean(plt.TELEGRAM) === true\">\n                      <span @click=\"open_messaging_framework_integration(plt.TELEGRAM)\">\n                      <img :src=\"require('@/portal/assets/img/Webp.net-resizeimage_5.png')\" alt=\"Telegram\" class=\"image-box-msg-frmw\" style=\"cursor:pointer;background: inherit;\">\n                      </span>\n                    </div>\n                    <div v-if=\"Boolean(plt.WHATSAPP) === true\">\n                      <span @click=\"open_messaging_framework_integration(plt.WHATSAPP)\">\n                      <img :src=\"require('@/portal/assets/img/whatsapp-logo-png-2290.png')\" alt=\"WhatsApp\" class=\"image-box-msg-frmw\" style=\"cursor:pointer;background: inherit;\">\n                      </span>\n                    </div>\n                    <div v-if=\"Boolean(plt.FACEBOOK) === true\">\n                      <span @click=\"open_messaging_framework_integration(plt.FACEBOOK)\">\n                      <img :src=\"require('@/portal/assets/img/logo-256.png')\" alt=\"Facebook\" class=\"image-box-msg-frmw\" style=\"cursor:pointer;background: inherit;\">\n                      </span>\n                    </div>\n                    <div v-if=\"Boolean(plt.INSTAGRAM) === true\">\n                      <span @click=\"open_messaging_framework_integration(plt.INSTAGRAM)\">\n                      <img :src=\"require('@/portal/assets/img/instagram_bot_logo.png')\" alt=\"Instagram\" class=\"image-box-msg-frmw\" style=\"cursor:pointer;background: inherit;\">\n                      </span>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"chat-his\" v-if=\"single.time != null\">\n                  <span class=\"time\" style=\"color: #000\">{{ single.time }}</span>\n                </div>\n              </div>\n              <div\n                v-if=\"single.carousel_card_list\"\n                :id=\"'carousel_card' + item\"\n                class=\"carousel_card \" data-ride=\"carousel\"\n                style=\" position: relative !important;\"\n              >\n                <div :class=\"Boolean(single.carousel_card_list.length>1)?'d-flex':''\"\n                  :style=\"Boolean(single.carousel_card_list.length===1)? 'width:66%':''\"\n                >\n                  <a class=\"carousel_scroll_btn1 ml-1\" @click=\"scroll_card_left(item)\" type=\"button\"\n                    v-if=\"single.carousel_card_list.length > 1\"\n                    :id=\"'carousel_scroll_btn1_' + item\"\n                    style=\"display: none;\"\n                  >\n                    <svg \n                        style=\"transform: rotateY(180deg) !important\"\n                        xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-chevron-right product_scroll_btn_icon1\" viewBox=\"0 0 16 16\">\n                        <path fill-rule=\"evenodd\" d=\"M4.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L10.293 8 4.646 2.354a.5.5 0 0 1 0-.708z\"/>\n                    </svg>\n                  </a>\n                  <div \n                    :id=\"'carousel_cards_id_'+item\"\n                    style=\"overflow:hidden; margin-right:0.2em;\" class=\" cards_carsol d-flex\"\n                  > \n                    <div \n                    v-for=\"(carousel, index) in single.carousel_card_list\"\n                    :key=\"index\"\n                    class=\"carousel_cards\"\n                    >\n                      <div class=\"carousel_card_single\">\n                        <div v-if=\"carousel.image\">\n                          <img :src =carousel.image  alt=\"carousel Image\">\n                        </div>\n                        <div v-if=\"carousel.video\">\n                            <iframe\n                              :src=\"carousel.video\"\n                              allowfullscreen\n                              allowtransparency\n                              allow=\"autoplay\"\n                            ></iframe>\n                        </div>\n                        <div class=\"carousel_card_single_content\">\n                          <h4 v-if=\"carousel.title\">{{carousel.title}}</h4>\n                          <div class=\"carousel_card_single_para\">\n                            <div v-if=\"carousel.text\">\n                              <p>{{carousel.text}}</p>\n                            </div>\n                          </div>\n                          <div>\n                            <div v-for=\"(bttn,indx) in carousel.buttons\" :key=\"indx\" class=\"carousel_card_button\">\n                              <div v-if=\"Boolean(bttn.title) && Boolean(bttn.value)\">\n                                <a type=\"button\" :href=bttn.value  target=\"_blank\"\n                                v-if=\"Boolean(check_type_button(bttn))\"\n                                >\n                                  {{bttn.title}}\n                                </a>\n                                <a\n                                  v-else\n                                  type=\"button\"\n                                  :class=\"{ retailigence: isretailigence }\"\n                                  @click=\"send_message('is_button', bttn, item)\"\n                                  :disabled=\"input_disabled\"\n                                  :key=\"index\"\n                                >\n                                  {{bttn.title}}\n                                </a>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>  \n                    </div>\n                  </div>\n                  <a class=\"carousel_scroll_btn2 ml-1\" @click=\"scroll_card_right(item)\" type=\"button\"\n                    v-if=\"single.carousel_card_list.length > 1\"\n                    :id=\"'carousel_scroll_btn2_' + item\"\n                >\n                  <svg\n                    xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" class=\"bi bi-chevron-right product_scroll_btn_icon1\" viewBox=\"0 0 16 16\">\n                    <path fill-rule=\"evenodd\" d=\"M4.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L10.293 8 4.646 2.354a.5.5 0 0 1 0-.708z\"/>\n                  </svg>\n                  </a>\n                </div>\n              </div>\n              <template v-if=\"single.conversation_only\">\n                <div\n                  v-if=\"single.sending\"\n                  class=\"chat-row sender\"\n                  :class=\"{ retailigence: isretailigence }\"\n                >\n                  <div class=\"chat bot-font-sender\">{{ single.sent }}</div>\n                  <div class=\"chat-his\" v-if=\"single.time != null\">\n                    <span class=\"time\" style=\"color: #000\">{{\n                      single.time\n                    }}</span>\n                    <span class=\"del-note delivered\">Sent</span>\n                  </div>\n                </div>\n                <div\n                  v-if=\"single.receiving\"\n                  class=\"chat-row receiver\"\n                  :class=\"{ 'pr-0': single.fetch_shopify_details }\"\n                >\n                  <div class=\"d-flex\">\n                    <div v-if=\"!(Boolean(single.received) == false &&\n                        (Boolean(single.image) == true ||\n                        Boolean(single.custom_buttons) == true ||\n                        Boolean(single.videos) == true))\"\n                        class=\"bot-img\" :style=\"bot_img_icon\">\n                    </div>\n                    <div\n                      v-if=\"Boolean(single.received) == true\"\n                      class=\"chat bot-font-receiver\"\n                      v-html=\"single.received\"\n                    >\n                      {{ single.received }}\n                    </div>\n                  </div>\n                  <template\n                    v-if=\"\n                      single.fetch_shopify_details &&\n                      !shopify_is_token_valid(item, single.is_refund)\n                    \"\n                  >\n                    <form\n                      id=\"shopify_login_form\"\n                      enctype=\"multipart/form-data\"\n                      @submit.prevent=\"\n                        shopify_create_customer_token(item, single.is_refund)\n                      \"\n                      v-if=\"retail_order_retreival_only_email_required || (retail_web_framework != 'shopify' && retail_web_framework != 'woocommerce' && retail_web_framework != 'magento')\"\n                    >\n                    <!-- {{single}} -->\n                      <div class=\"form-group\">\n                        <input\n                          :placeholder=\"retail_order_retreival_only_email_required ? 'Enter your Email or Phone number' : 'Enter your Email'\" \n                          name=\"email\"\n                          class=\"form-control\"\n                          id=\"email\"\n                          v-model=\"single.customer_email_id\"\n                          required\n                          type=\"text\"\n                          @focus=\"shopify_form_focus(item)\"\n                        />\n                      </div>\n                      <div class=\"form-group\" v-if=\"!retail_order_retreival_only_email_required\">\n                      <!-- <div class=\"form-group\"> -->\n                        <input\n                          placeholder=\"Enter your Password\"\n                          name=\"password\"\n                          class=\"form-control\"\n                          id=\"password\"\n                          v-model=\"single.customer_password\"\n                          required\n                          type=\"password\"\n                          @focus=\"shopify_form_focus(item)\"\n                        />\n                      </div>\n                      <button type=\"submit\" class=\"btn btn-primary dynamic-button\">\n                        {{shopify_login_button_text}}\n                      </button>\n                    </form>\n                    <div v-else class=\"bot-font-receiver\">\n                      {{change_chat_text_to_login_redirect(item)}}\n                    </div>\n                  </template>\n                  <div\n                    v-if=\"single.refund_orders_list\"\n                    style=\"\n                      background: #ffffff;\n                      text-align: center;\n                      margin: 10px 0px;\n                      padding: 10px;\n                    \"\n                  >\n                    <div\n                      v-if=\"!single.refund_order_view_details.line_items\"\n                      style=\"display: grid\"\n                    >\n                    <div>\n\n                    </div>\n                    <div\n                        class=\"d-flex bot-font-receiver\"\n                      >\n                        <p style=\"font-weight:600; margin: 0;\"\n                          >Order#</p>\n                        <p style=\"font-weight:600; margin: 0;\">Order Date</p>\n                        <p style=\"font-weight:600; margin: 0;\">Order Status</p>\n                        <p\n                          v-if=\"retail_web_framework != 'shopify'\" \n                          style=\"font-weight:600; margin: 0;\">Notes</p>\n                      </div>\n                      <div\n                        v-for=\"(order, orderIndex) in single.refund_orders_list\"\n                        :key=\"orderIndex\"\n                        class=\"d-flex bot-font-receiver\"\n                      >\n                        <a\n                          class=\"bot-font-receiver\"\n                          href=\"javascript:void(0)\"\n                          @click=\"\n                            view_order_details(\n                              item,\n                              orderIndex,\n                              order.line_items,\n                              order.refunds,\n                            )\n                          \"\n                          >{{ order.name }}</a\n                        >\n                        <a\n                          class=\"bot-font-receiver\"\n                          href=\"javascript:void(0)\"\n                          @click=\"\n                            view_order_details(\n                              item,\n                              orderIndex,\n                              order.line_items,\n                              order.refunds,\n                            )\n                          \"\n                          >{{ order.created_at }}</a>\n                        <!-- <a \n                          href=\"javascript:void(0)\"\n                          @click=\"\n                            view_order_details(\n                              item,\n                              orderIndex,\n                              order.line_items,\n                              order.refunds,\n                            )\n                          \"\n                        >{{ order.processed_date }}</a> -->\n                        <a\n                          class=\"bot-font-receiver\"\n                          href=\"javascript:void(0)\"\n                          @click=\"\n                            view_order_details(\n                              item,\n                              orderIndex,\n                              order.line_items,\n                              order.refunds,\n                            )\n                          \"\n                        >{{ order.fulfillment_status }}</a>\n                        <a\n                          class=\"bot-font-receiver\"\n                          v-if=\"retail_web_framework != 'shopify'\" \n                          href=\"#\"\n                          @click=\"order_notes_data = order.order_notes; selected_order_name = order.name\"\n                          data-toggle=\"modal\"\n                          data-target=\"#ordernotesmodel\"\n                          title=\"View Notes\"\n                        >View Notes</a>\n                      </div>\n                    </div>\n                    <div v-else-if=\"single.refund_order_view_details.line_items\">\n                      <div class=\"mb-3 text-left\">\n                        <a\n                          href=\"javascript:void(0)\"\n                          @click=\"refresh_or_remove_order_details(item, 'remove')\"\n                          >&lt;&lt; Back to Orders</a\n                        >\n                        <a href=\"javascript:void(0)\" class=\"ml-2\">{{\n                          single.refund_order_view_details.name\n                        }}</a>\n                      </div>\n                      <div>\n                        <p class=\"bot-font-receiver w-auto text-left\">\n                          To Return, follow these steps: \n                          <ol>\n                            <li>\n                              Select the checkbox for the items to be returned\n                            </li>\n                            <li>\n                              Update the quantity\n                            </li>\n                            <li>\n                              Click on Proceed button\n                            </li>\n                          </ol>\n                        </p>\n                      </div>\n                      <div\n                        v-for=\"(\n                          lineItem, lineItemIndex\n                        ) in single.refund_order_view_details.line_items\"\n                        :key=\"lineItemIndex\"\n                        class=\"mb-0\"\n                      >\n                        <div class=\"col-sm-12 bot-font-receiver p-0 px-2\" style=\"display: inline-flex !important;\">\n                          <!-- <img\n                            height=\"75\"\n                            width=\"75\"\n                            :src=\"lineItem.variant.image.originalSrc\"\n                          /> -->\n                          <div class=\"col-sm-1 p-0 pl-2\">\n                            <input\n                              :title=\"((lineItem.qty_available_for_refund) <= 0) ?'No product quantity available for refund':null\"\n                              type=\"checkbox\"\n                              v-model=\"single.refund_selected_items\"\n                              :value=\"retail_web_framework == 'magento' ? lineItem.product_id : lineItem.id\"\n                              :style=\"((lineItem.qty_available_for_refund) <= 0) ?'cursor: not-allowed !important':null\"\n                              style=\"margin-left: 2%; margin-top: 1%;\"\n                              :disabled=\"(lineItem.qty_available_for_refund) <= 0\"\n                            />\n                          </div>\n                          <div class=\"col-sm-5 p-0 pl-2\">\n                            <p style=\"width: 100% !important;text-align: center !important;\">\n                              {{ lineItem.name }}\n                            </p>\n                          </div>\n                          <div class=\"col-sm-3 p-0 pl-2\" style=\"flex: content !important;\">\n                            <p style=\"width: 100% !important; text-align: center !important;\">\n                              {{ single.refund_order_view_details.presentment_currency }}\n                              {{ lineItem.price }}\n                            </p>\n                          </div>\n                          <div class=\"col-sm-3 p-0 pl-2\" style=\"flex: content !important;\">\n                            <div class=\"\">\n                              <!-- {{lineItem.selected_quantity}}\n                              {{lineItem.qty_available_for_refund}}\n                              {{lineItem.already_refunded_qty}} -->\n                              <template>\n                                <div class=\"input-group margin-bottom\">\n                                  <vue-numeric-input\n                                    :title=\"((lineItem.qty_available_for_refund) <= 0) ?'No product quantity available for refund':null\"\n                                    id=\"return_increment_numeric_input\"\n                                    style=\"width: fit-content !important;\"  \n                                    v-model.number=\"lineItem.selected_quantity\" \n                                    :min=\"1\"  \n                                    :max=\"lineItem.qty_available_for_refund\" \n                                    :step=\"1\"\n                                    controls-type=\"updown\"\n                                    :disabled=\"(lineItem.qty_available_for_refund) <= 0\"\n                                    :style=\"((lineItem.qty_available_for_refund) <= 0) ?'cursor: not-allowed !important':null\"\n                                  >\n                                    <span class=\"input-group-addon addon-inline input-source-observer\">days</span>\n                                  </vue-numeric-input>\n                                </div>\n                              </template>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                      <div class=\"col-sm-12 p-0 px-2 d-flex\"> \n                        <div class=\"col-sm-5 p-0 bot-font-receiver\">\n                          <label class=\"bot-font-receiver text-left\">\n                            Reason for Return*\n                            <br>\n                          <sup v-if=\"show_shopify_reason_for_refund_error\" style=\"color:red;top: -.25em !important;\">\n                            ( This cannot be empty!! )\n                          </sup>\n                          </label>\n                        </div>\n                        <div class=\"col-sm-7 p-0\">\n                          <div class=\"form-group bot-font-receiver\">\n                            <multiselect\n                              v-model=\"single.shopify_reason_for_refund_list\"\n                              id=\"shopify_reason_for_refund_id\"\n                              :options=\"shopify_reason_for_refund_option\"\n                              :searchable=\"true\"\n                              :close-on-select=\"true\"\n                              :show-labels=\"false\"\n                              @input=\"refresh_or_remove_order_details(item)\"\n                              placeholder=\"Select Reason\"\n                              :max-height=\"100\"\n                            >\n                            </multiselect>\n                          </div>\n                          <div class=\"bot-font-receiver\" v-if=\"single.shopify_reason_for_refund_list === 'Others'\">\n                            <textarea\n                              class=\"form-control\"\n                              style=\"border: 1px solid #ced4da;\n                              border-radius: .25rem; fon-size: 16px;\n                              padding: 5px !important; resize: none !important\"\n                              rows=\"3\"\n                              v-model.trim=\"single.shopify_reason_for_refund\"\n                              id=\"product_refund_txt_area\"\n                            />\n                          </div>\n                      </div>\n                      </div>\n                      <div\n                        class=\"d-block d-flex flex-wrap buttons-parent buttons-alignment mt-1\"\n                      >\n                        <button\n                          :title=\"((single.refund_selected_items.length) <= 0) ?'Select the checkbox for the items to be returned':null\"\n                          class=\"btn custom-buttons bot-font-buttons\"\n                          :disabled=\"(single.refund_selected_items.length) <= 0\"\n                          :style=\"((single.refund_selected_items.length) <= 0) ?'cursor: not-allowed !important':null\"\n                          style=\"font-size: 16px !important;\"\n                          @click=\"\n                            submit_refund_request(\n                              single.refund_order_view_details, item\n                            )\n                          \"\n                        >\n                          Proceed\n                        </button>\n                      </div>\n                    </div>\n                  </div>\n                  <div\n                    class=\"bot-font-receiver\"\n                    v-if=\"single.show_all_orders_list\"\n                    style=\"\n                      background: #ffffff;\n                      text-align: center;\n                      margin: 10px 0px;\n                      padding: 10px;;\n                    \"\n                  >\n                  <div\n                    class=\"d-flex\"\n                  >\n                    <p style=\"font-weight:600; margin: 0;\">Order#</p>\n                    <p style=\"font-weight:600; margin: 0;\">Order Date</p>\n                    <p style=\"font-weight:600; margin: 0;\">Order Status</p>\n                    <p\n                      v-if=\"retail_web_framework != 'shopify'\" \n                      style=\"font-weight:600; margin: 0;\">Notes</p>\n                  </div>\n                  <div\n                        v-for=\"(order, orderIndex) in single.all_orders_list\"\n                        :key=\"orderIndex\"\n                        class=\"d-flex\"\n                      >\n                        <a\n                          class=\"bot-font-receiver\"\n                          :href=\"order.status_url\"\n                          target=\"_blank\"\n                        >{{ order.name }}</a\n                        >\n                        <a \n                          class=\"bot-font-receiver\"\n                          :href=\"order.status_url\"\n                          target=\"_blank\"\n                        >{{ order.processed_date }}</a>\n                        <a \n                          class=\"bot-font-receiver\"\n                          :href=\"order.status_url\"\n                          target=\"_blank\"\n                        >{{ order.fulfillment_status }}</a>\n                        <a\n                          class=\"bot-font-receiver\"\n                          v-if=\"retail_web_framework != 'shopify'\" \n                          href=\"#\"\n                          @click=\"order_notes_data = order.order_notes; selected_order_name = order.name\"\n                          data-toggle=\"modal\"\n                          data-target=\"#ordernotesmodel\"\n                          title=\"View Notes\"\n                        >View Notes</a>\n                      </div>\n                  </div>\n                  <div v-else>\n                    <!-- {{no_orders_to_be_shown(item)}} -->\n                  </div>\n                  <template v-if=\"Boolean(single.image)\">\n                    <div class=\"d-flex\">\n                      <div v-if=\"(Boolean(single.received) == false &&\n                        Boolean(single.image) == true)\" class=\"bot-img\" :style=\"bot_img_icon\"></div>\n                      <br />\n                      <img\n                        :class=\"!(Boolean(single.received) == false &&\n                        Boolean(single.image) == true)? 'img_only_id':'img_id'\"\n                        :src=\"single.image\"\n                      />\n                    </div>\n                  </template>\n                  <div v-if=\"single.show_buttons && single.support_buttons\">\n                    <button\n                      class=\"btn custom-buttons\"\n                      @click=\"call_support('Yes')\"\n                    >\n                      Yes\n                    </button>\n                    <button\n                      class=\"btn custom-buttons\"\n                      @click=\"call_support('No')\"\n                    >\n                      No\n                    </button>\n                  </div>\n                  <div\n                    v-if=\"single.custom_buttons\"\n                  >\n                    <div :class=\"(Boolean(single.received) == false &&\n                          Boolean(single.custom_buttons) == true)?'d-flex':null\" style=\"align-items: center;\">\n                      <div v-if=\"(Boolean(single.received) == false &&\n                        Boolean(single.custom_buttons) == true)\" class=\"bot-img\" :style=\"bot_img_icon\">\n                      </div>\n                      <div\n                        class=\"d-block d-flex flex-wrap buttons-parent buttons-alignment mt-1\"\n                        :style=\"(Boolean(single.received) == false &&\n                        Boolean(single.custom_buttons) == true)?'width: -webkit-fill-available !important;': null\"\n                      >\n                        <button\n                          :style=\"(Boolean(single.received) == false &&\n                          Boolean(single.custom_buttons) == true)?'margin-top:1% !important; margin-bottom:2% !important': null\"\n                          class=\"btn custom-buttons\"\n                          :class=\"{ retailigence: isretailigence }\"\n                          @click=\"send_message('is_button', button, item)\"\n                          v-for=\"(button, index) in single.buttons_list\"\n                          :disabled=\"input_disabled\"\n                          :key=\"index\"\n                        >\n                          {{ button.title }}\n                        </button>\n                      </div>\n                    </div>\n                  </div>\n                  <div v-if=\"single.show_text_area\">\n                    <textarea\n                      class=\"form-control\"\n                      placeholder=\"Enter text here\"\n                      :id=\"'textarea' + item\"\n                      style=\"padding-left: 2%\"\n                      :disabled=\"single.disabled\"\n                    >\n                    </textarea>\n                  </div>\n                  <div\n                    v-if=\"Boolean(single.is_order_status)\"\n                    class=\"chat\"\n                    style=\"margin-left: 33px; margin-top: 10px\"\n                    v-html=\"single.order_status\"\n                  ></div >\n                  <div\n                    v-if=\"Boolean(single.offers)\"\n                    class=\"chat\"\n                    style=\"margin-left: 33px; margin-top: 10px\"\n                  >\n                    <span\n                      v-for=\"(offer, offerIndex) in single.offers\"\n                      :key=\"offerIndex\"\n                    >\n                    <span><strong style=\"padding-right:0.25rem\">{{offerIndex+1}}:</strong></span>\n                    <span v-html=\"offer.offer +'<br>' \" style=\"margin-bottom: 1rem\"></span>\n                    </span>\n                  </div>\n                  <!-- Apply logic here -->\n                  <div v-if=\"single.is_multiselect\">\n                    <multiselect\n                      :close-on-select=\"false\"\n                      :taggable=\"true\"\n                      :multiple=\"true\"\n                      :options=\"single.multiselect_values\"\n                      :placeholder=\"single.placeholder\"\n                      track-by=\"value\"\n                      :group-select=\"true\"\n                      label=\"title\"\n                      v-model=\"single.value_mapping\"\n                      @input=\"adddropdownvalue\"\n                      :disabled=\"single.disabled\"\n                    ></multiselect>\n                  </div>\n                  <!-- <div v-if=\"single.show_messaging_platforms\" class=\"d-flex\" style=\"justify-content: center\">\n                    <div  class=\"px-2\" v-for=\"(plt,plt_index) in single.messaging_platforms_data\" :key=\"plt_index\">\n                      <div v-if=\"Boolean(plt.TELEGRAM) === true\">\n                        <span @click=\"open_messaging_framework_integration(plt.TELEGRAM)\">\n                        <img :src=\"require('@/portal/assets/img/Webp.net-resizeimage_5.png')\" alt=\"Telegram\" class=\"image-box-msg-frmw\" style=\"cursor:pointer;background: inherit;\">\n                        </span>\n                      </div>\n                      <div v-if=\"Boolean(plt.WHATSAPP) === true\">\n                        <span @click=\"open_messaging_framework_integration(plt.WHATSAPP)\">\n                        <img :src=\"require('@/portal/assets/img/whatsapp-logo-png-2290.png')\" alt=\"WhatsApp\" class=\"image-box-msg-frmw\" style=\"cursor:pointer;background: inherit;\">\n                        </span>\n                      </div>\n                      <div v-if=\"Boolean(plt.FACEBOOK) === true\">\n                        <span @click=\"open_messaging_framework_integration(plt.FACEBOOK)\">\n                        <img :src=\"require('@/portal/assets/img/logo-256.png')\" alt=\"Facebook\" class=\"image-box-msg-frmw\" style=\"cursor:pointer;background: inherit;\">\n                        </span>\n                      </div>\n                      <div v-if=\"Boolean(plt.INSTAGRAM) === true\">\n                        <span @click=\"open_messaging_framework_integration(plt.INSTAGRAM)\">\n                        <img :src=\"require('@/portal/assets/img/instagram_bot_logo.png')\" alt=\"Instagram\" class=\"image-box-msg-frmw\" style=\"cursor:pointer;background: inherit;\">\n                        </span>\n                      </div>\n                    </div>\n                  </div> -->\n                  <!-- <div v-if=\"single.is_table\">\n                      <div class=\"row\" style=\"margin-bottom:10px;margin-left:0;width:100%;box-shadow: 0px 1px 5px 0px rgba(0, 0, 0, 0.2);background-color: #fbfbfb;border-radius:4px;height:30px;align-items:center;color: 3d3d3d;\">\n                        <div class=\"column\" style=\"align:center;opacity:4.5;height:20px;color:#2b3184;vertical-align:top;\" v-for=\"(head, index1) in single.col_list\" :key=\"index1\">\n                          {{head}}\n                        </div>\n                      </div>\n                      <div class=\"row\" style=\"margin-bottom:10px;margin-left:0;width:100%;box-shadow: 0px 1px 5px 0px rgba(0, 0, 0, 0.2);background-color: #fbfbfb;border-radius:4px;height:30px;align-items:center;color: 3d3d3d;\" v-for=\"(value, index2) in single.table_value\" :key=\"index2\">\n                        <div class=\"column\" style=\"align:center;opacity:4.5;height:20px;color:#2b3184;vertical-align:top;\" v-for=\"(head, index3) in single.col_list\" :key=\"index3\">\n                          {{value[head]}}\n                        </div>\n                      </div>\n                        </div>-->\n                  <table\n                    v-if=\"single.is_table\"\n                    style=\"\n                      margin-left: 2%;\n                      margin-top: 2%;\n                      font-size: 14px;\n                      font-weight: 300;\n                      background-color: #fff;\n                    \"\n                    class=\"table\"\n                  >\n                    <tr>\n                      <th\n                        v-for=\"(head, index1) in single.col_list\"\n                        :key=\"index1\"\n                      >\n                        {{ head }}\n                      </th>\n                    </tr>\n                    <tr\n                      v-for=\"(value, index2) in single.table_value\"\n                      :key=\"index2\"\n                    >\n                      <td\n                        v-for=\"(head, index3) in single.col_list\"\n                        :key=\"index3\"\n                      >\n                        {{ value[head] }}\n                      </td>\n                    </tr>\n                  </table>\n                  <!-- <div v-if=\"single.is_table\">\n                      <div  class=\"row\">\n                          <div  class=\"column\"\n                                v-for=\"(value,index2)in single.row_list\"\n                                :key=\"index2\">\n                                {{value}}\n                          </div>\n                      </div>\n                      <div  class=\"row\"\n                            v-for=\"(key, index) in single.row_list\"\n                            :key=\"index\">\n                            <div  class=\"column\"\n                                  v-for=\"(value,index2)in key\"\n                                  :key=\"index2\">\n                                  {{value}}\n                            </div>\n\n                      </div>\n                        </div>-->\n                  <template v-if=\"Boolean(single.videos)\">\n                    <div class=\"d-flex\">\n                      <div v-if=\"(Boolean(single.received) == false &&\n                        Boolean(single.videos) == true)\" class=\"bot-img\" :style=\"bot_img_icon\"></div>\n                      <br />\n                      <div\n                        class=\"plyr__video-embed\"\n                        id=\"player\"\n                        style=\"ma\"\n                      >\n                        <iframe\n                          :src=\"single.videos\"\n                          allowfullscreen\n                          allowtransparency\n                          allow=\"autoplay\"\n                          :class=\"!(Boolean(single.received) == false &&\n                            Boolean(single.videos) == true)? 'video_url_only_id':'video_url_id'\"\n                        ></iframe>\n                      </div>\n                    </div>\n                  </template>\n                  <div class=\"chat-his\" v-if=\"single.time != null\">\n                    <span class=\"time\">{{ single.time }}</span>\n                  </div>\n                  <div\n                    class=\"d-flex bot-font-receiver\"\n                    style=\"margin-top: 5px\"\n                    v-if=\"single.ask_feedback\"\n                  >\n                    <div class=\"bot-img\" :style=\"bot_img_icon\"></div>\n                    <div class=\"chat\">\n                      <!-- <div class=\"chat\"> -->\n                      Was this answer helpful?\n                      <a style=\"margin-left:1rem; margin-right:1rem;\" href=\"#\" \n                        @click=\"add_bot_unanswered_question(item, true)\" >\n                        <strong>Yes</strong>\n                      </a>\n                      <a href=\"#\" @click=\"add_bot_unanswered_question(item, false)\">\n                        <strong>No</strong>\n                      </a>\n                      <!-- <img\n                        :src=\"thumbs_up_icon\"\n                        @click=\"add_bot_unanswered_question(item, true)\"\n                      />\n                      <img\n                        :src=\"thumbs_down_icon\"\n                        @click=\"add_bot_unanswered_question(item, false)\"\n                      /> -->\n                    </div>\n                  </div>\n                </div>\n              </template>\n            </div>\n              <cense-cart \n                :addtoCart=\"addtoCartdata\"\n                :retail_currency=\"retail_shop_currency\"\n                :retail_framework=\"retail_web_framework\"\n                :shop_url=\"(retail_web_framework === 'shopify') ? shopify_retail_shop_name: shop_url\"\n                @close_cart=\"closecart\"\n                @cart_data=\"cart_communication\"\n                v-if=\"is_cense_cart && !input_disabled\"/>\n            <div id=\"cartDiv\"></div>\n          </div>\n\n          <div\n            v-if=\"isexchange\"\n            class=\"row\"\n            style=\"margin-left: auto; margin-right: auto; width: 100%\"\n          >\n            <!-- <button @click=\"ForeignExchangeConversion\" id=\"XYZ\" class=\"FE_button\">\n                <img\n                  src=\"../../../img/ForeignExchange/ui-12.png\"\n                  style=\"height:14px\"\n                  alt=\"Warning!\"\n                />\n                Exchange Rate\n                  </button>-->\n            <!-- <button @click=\"FXPaymentMode\" class=\"FE_button\">\n                <img\n                  src=\"../../../img/ForeignExchange/ui-11.png\"\n                  style=\"height:14px\"\n                  alt=\"Warning!\"\n                />\n                Payment\n                  </button>-->\n            <!-- <button @click=\"FXTrackingParcel\" class=\"FE_button\">\n                        <img\n                          src=\"../../../img/ForeignExchange/ui-13.png\"\n                          style=\"height:14px\"\n                          alt=\"Warning!\"\n                        />\n                        Track My Parcel\n                  </button>-->\n          </div>\n          <div class=\"col-sm-12 d-flex px-0\" style=\"overflow: hidden;\">\n            <div id=\"custom-cart\" v-if=\"show_custom_cart\" class=\"col-sm-2 px-1\" style=\"margin-top: 6px;\">\n            <div\n            id=\"cense-cart-btn\"\n            type=\"button\" class=\"btn cense-cart-btn\"\n            @click=\"is_cense_cart = !is_cense_cart\"\n            >\n            <div id=\"cart-qty-num\" \n                class=\"cart-qty-num bot-font-buttons\"\n                v-if=\"total_products_qty.toLocaleString() < 100\"\n                >{{parseInt(total_products_qty).toLocaleString()}}\n            </div>\n            <div id=\"cart-qty-num\" \n                class=\"cart-qty-num bot-font-buttons\"\n                style=\"margin-bottom: 20px; margin-left: -2px; margin-right: -1px;\"\n                v-else>\n                  {{99}}<sup style=\"font-size: 85%; top: -0.25em;\">+</sup> \n            </div>\n            <!-- <img\n              id=\"cart-img\" \n              src=\"/img/cart.svg\" alt=\"\" \n              style=\"height: 20px; width: 20px;\"> -->\n              <span\n              id=\"cart-img\" \n              v-html=\"cart_icon_svg\"\n              style=\"height: 20px; width: 20px;\">\n              </span>\n            </div>\n            </div>\n            <!-- <div v-else :class=\"cart_button_alignment\" id=\"toggle\"></div> -->\n            <!-- <div\n              :class=\"custom_greetings_buttom_alignment\"\n              v-if=\"visible_custom_greetings_buttom && Boolean(chat[greeting_buttons_position]) && Boolean(chat[greeting_buttons_position].custom_buttons)\"\n            > -->\n            <div\n              :class=\"custom_greetings_buttom_alignment\"\n              v-if=\"Boolean(chat[greeting_buttons_position]) && Boolean(chat[greeting_buttons_position].greeting_button)\"\n            >\n              <!-- <div\n                class=\"d-block d-flex flex-wrap buttons-alignment\"\n                v-if=\"visible_custom_greetings_buttom && Boolean(chat[greeting_buttons_position]) && Boolean(chat[greeting_buttons_position].custom_buttons === true)\"\n              > -->\n              <div\n                class=\"d-block d-flex flex-wrap buttons-alignment\"\n                v-if=\"Boolean(chat[greeting_buttons_position]) && Boolean(chat[greeting_buttons_position].greeting_button === true)\"\n              >\n                <button\n                  :disabled=\"input_disabled\"\n                  :style=\"input_disabled ? 'cursor: not-allowed' : null\"\n                  style = \"\n                    margin-top: 2.5% !important; \n                    margin-left: 2.5% !important;\"\n                  class=\"btn custom-buttons bot-font-buttons\"\n                  @click=\"send_message('is_button', button, greeting_buttons_position)\"\n                  v-for=\"(button, index) in chat[greeting_buttons_position].buttons_list\"\n                  :key=\"index\"\n                >\n                  {{ button.title }}\n                </button>\n              </div>\n            </div>\n          </div>\n          <div class=\"chat-footer\">\n            <div\n              class=\"typing-indicator\"\n              :class=\"{\n                'd-block': is_typing_indicator_on,\n                'd-none': !is_typing_indicator_on,\n              }\"\n            >\n              <p style=\"font-size: 13px; font-weight: 300\" v-show=\"is_agent_typing\">\n                Support Agent is typing\n              </p>\n              <p\n                style=\"font-size: 13px; font-weight: 300; margin-left: 5%\"\n                v-show=\"!is_agent_typing\"\n              >\n                typing\n              </p>\n              <span></span>\n              <span></span>\n              <span></span>\n            </div>\n            <span \n              v-show=\"this.chat_widget.is_powered_by_cense\"\n              class=\"powered-by\">\n              Powered by &nbsp;\n              <!-- <img src=\"/img/cense_image.png\"\n                  href=\"javascript:void(0)\"\n                  class=\"open_cense_website\"\n                  data-target=\"https://cense.ai\" \n               /> -->\n              <a href=\"https://cense.ai\" target=\"_blank\"\n                title=\"click here to visit\"\n                class=\"open_cense_website\"><img src=\"/img/cense_image.png\" style=\"height: 20px\"/></a>\n            </span>\n          </div>\n          <div class=\"chat-txt\">\n            <div class=\"input-group mb-0\">\n              <input\n                :id=\"isexchange ? 'response_bot_text' : ''\"\n                type=\"text\"\n                class=\"form-control\"\n                v-model=\"to_send\"\n                @keyup.enter=\"send_message\"\n                :disabled=\"input_disabled\"\n                :placeholder=\"Boolean(is_retail_bot === true)? 'Search products or type your message here ...': 'Type your message here ...'\"\n              />\n          <div class=\"pr-2 pl-2\" title=\"Stop chat\" style=\"background-color: #fff;\" v-if=\"live_chat_on\">\n            <a href=\"javascript:void(0)\" @click=\"disconnect_support_chat\" id=\"stop-chat-button\"\n            ><i class=\"fas fa-ban pt-2\" style=\"font-size: 22px;\"></i></a>\n          </div>\n              <div class=\"input-group-append\">\n                <button\n                  class=\"btn voice-button\"\n                  type=\"button\"\n                  @click=\"voice_communication\"\n                  :disabled=\"input_disabled\"\n                >\n                  <i class=\"fa fa-microphone\" id=\"microphone\"></i>\n                </button>\n              </div>\n              <div class=\"input-group-append\">\n                <button\n                  class=\"btn\"\n                  type=\"button\"\n                  :id=\"isexchange ? 'button_addon2' : 'send_btn'\"\n                  @click=\"send_message\"\n                >\n                  <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    id=\"send_button\"\n                    style=\"fill: #8a8a8a63\"\n                    width=\"40\"\n                    height=\"25\"\n                    viewBox=\"0 0 24 24\"\n                  >\n                    <path d=\"M2.01 21L23 12 2.01 3 2 10l15 2-15 2z\" />\n                    <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n                  </svg>\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div\n      id=\"notifyemail\"\n      class=\"modal fade dash-modal\"\n      role=\"dialog\"\n      data-backdrop=\"static\"\n      data-keyboard=\"false\"\n      >\n      <div class=\"modal-dialog modal-lg\">\n        <div class=\"modal-content\">\n          <div class=\"modal-body\">\n            <div class=\"modal-head d-flex align-items-center\">\n              <div class=\"head-icn\">\n                <img src=\"/img/msg-blue.png\" alt />\n              </div>\n              <h3>Out of Stock products</h3>\n              <button type=\"button\" class=\"close\" data-dismiss=\"modal\">\n                <img src=\"/img/close-icn.png\" alt />\n              </button>\n            </div>\n            <div>\n              <!-- <div class=\"col-sm-12 d-flex p-0\"> -->\n              <div\n                class=\"p-0\"\n                style=\"overflow-y: auto\"\n              >\n              <label>Please check the products regarding which you want notification</label>\n                <div class=\"table-box\">\n                  <div class=\"table-responsive\">\n                    <table class=\"table\">\n                      <thead>\n                        <tr>\n                          <th scope=\"col\">\n                            <div class=\"form-check checkbox checkbox-success\">\n                              <label class=\"form-check-label\">\n                                <input\n                                  class=\"form-check-input\"\n                                  id=\"selectall\"\n                                  type=\"checkbox\"\n                                  @change=\"selected_product('all')\"\n                                />\n                                <span class=\"icn\"></span>\n                              </label>\n                            </div>\n                          </th>\n                          <th\n                            scope=\"col\"\n                            class=\"text-left\"\n                            style=\"\n                              font: normal normal normal 16px/22px Roboto;\n                              letter-spacing: 0px;\n                              color: #414141;\n                              border-left: 0;\n                            \"\n                          >\n                            Select All\n                          </th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        <tr>\n                        <tr\n                          v-for=\"(product, index) in product_out_of_stock_list\"\n                          :key=\"index\"\n                          :class=\"check_current_product_active(index)\"\n                        >\n                          <th scope=\"col\">\n                            <div class=\"form-check checkbox checkbox-success\">\n                              <label class=\"form-check-label\">\n                                <input\n                                  class=\"form-check-input\"\n                                  type=\"checkbox\"\n                                  :id=\"'product_checkbox_'+product.product_id\"\n                                  @change=\"\n                                    selected_product(product)\n                                  \"\n                                />\n                                <span class=\"icn\"></span>\n                              </label>\n                            </div>\n                          </th>\n                          <td\n                           @click=\"show_product(index)\"\n                            :title=\"product.product_title\"\n                          >\n                            <template>\n                              <p style=\"margin-bottom: 0\">\n                                {{ product.product_title }} {{product.variant_title}}\n                              </p>\n                            </template>\n                          </td>\n                        </tr>\n                      </tbody>\n                    </table>\n                  </div>\n                </div>\n                <hr>\n              <!-- </div> -->\n              <!-- <div class=\"col-sm-6 dash-modal\" style=\"margin-top: 25%; text-align: center; justify-content: center;\"> -->\n                <div class=\"form-group\">\n              <input\n                type=\"text\"\n                class=\"form-control\"\n                style=\"border: 1px solid #ced4da;\n                border-radius: .25rem; fon-size: 16px;\"\n                v-model=\"customer_email\"\n                placeholder=\"Enter Your Email Id\"\n              />\n            </div>\n            <div style=\"text-align: center;\">\n            <button\n                type=\"submit\"\n                class=\"darkblue-btn\"\n                id=\"res_n_int_save\"\n                @click=\"submit_out_of_stock_products()\"\n              >\n                Notify me\n            </button>\n            </div>\n              </div>\n            <!-- </div> -->\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div\n      id=\"ordernotesmodel\"\n      class=\"modal fade dash-modal\"\n      role=\"dialog\"\n      data-backdrop=\"static\"\n      data-keyboard=\"false\"\n      >\n      <div class=\"modal-dialog modal-lg\">\n        <div class=\"modal-content\">\n          <div class=\"modal-body\">\n            <div class=\"modal-head d-flex align-items-center\">\n              <div class=\"head-icn\">\n                <img src=\"/img/msg-blue.png\" alt />\n              </div>\n              <h3>Notes for Order No. {{selected_order_name}}</h3>\n              <button type=\"button\" class=\"close\" data-dismiss=\"modal\">\n                <img src=\"/img/close-icn.png\" alt />\n              </button>\n            </div>\n            <div v-if=\"order_notes_data.length > 0\">\n            <div v-for=\"(note ,index) in order_notes_data\"\n            :key=\"index\">\n              <ul style=\"list-style-type: disc;\">\n                <li><p> <strong>{{note.date_created}}</strong>  : {{note.note}}</p></li>\n              </ul>\n            </div>\n            </div>\n            <div v-else>\n              <p>No updates</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\nimport api_calls from \"@/portal/api_calls\";\nimport fingerprint from \"@/portal/components/fingerprint\";\nimport { bus } from \"@/portal/main\";\nimport { setTimeout } from \"timers\";\nimport Multiselect from \"vue-multiselect\";\nimport VideoViewer from \"@/portal/components/Response Bot/VideoViewer.vue\";\nimport debounce from \"vue-debounce/dist/debounce.min.js\";\n// import { Socket } from \"phoenix-socket\";\nimport { Socket, Presence } from \"phoenix\";\nimport StarRating from 'vue-star-rating';\nimport {\n  voicerecorder,\n  start_voice_communication,\n  foreignxchange_custom,\n  generate_time,\n} from \"@/portal/mixins\";\nimport moment from \"moment\";\nimport swal from \"sweetalert2\";\nimport CenseCart from './CenseCart.vue';\nimport VueNumericInput from 'vue-numeric-input';\nimport sound from \"@/portal/assets/audio/mixkit-add-to-cart.wav\";\nimport \"@/portal/assets/js/shopify.min.js\"\nexport default {\n  name: \"response-bot\",\n  components: {\n    Multiselect,\n    VideoViewer,\n    StarRating,\n    CenseCart,\n    VueNumericInput,\n  },\n  mixins: [\n    voicerecorder,\n    start_voice_communication,\n    foreignxchange_custom,\n    generate_time,\n  ],\n  data() {\n    return {\n      companyid: this.$session.get(\"UserInformation\").company_id,\n      companyname: this.$session.get(\"UserInformation\").company_name,\n      popup_msg:\n        \"You can type 'Restart'”  at </br>any  time to get back</br> to the Main Menu\",\n      refreshed_or_closed: true,\n      qus_ans: \"answers\",\n      to_send: \"\",\n      cense_enquiry: false,\n      is_agent_typing: false,\n      user_name: \"\",\n      show: false,\n      chat: [],\n      fingerprint: null,\n      bot_response_token_value: this.$session.get(\"BotToken\"),\n      level: 0,\n      recognition: null,\n      json_data: {\n        create_appointment:\n          '{\"User\": {\"Physician\": {\"ID\": \"DT000000000000000237\"},\"UserName\":\"ac\",\"ID\":\"US000000000000000138\",\"Account\": {\"ID\": \"CO00023\"},\"Token\": \"Z1rSGGm0XpMWjt3giAErPPWZ84TQN9FsFMBLsU+/LAu6yualMg6EP2bsrwZjLPwm3j4DpPcGc5LcIp3NjgfUsA==\",\"Specialty\": {\"ID\": \"PG000000000000000141\", \"Name\": \"AC\", \"Code\": \"AC\"},\"Domain\": \"gogreenbills.com\"},\"Appointment\": {\"Date\": \"08/30/2018\", \"IsJSONNote\": 0, \"Patient\": {\"CaseID\": \"\"}}}',\n        visits_finalized:\n          '{\"User\": {\"Physician\": {\"ID\": \"DT000000000000011886\"},\"UserName\": \"ch\",\"ID\": \"US000000000000000143\",\"Account\":{\"ID\":\"CO00023\"},\"Token\":\"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyIjoiYXZkaHV0IiwiZXhwIjoxNTI5NDgyNjYzfQ.v1c0HbuWuZXXpJfDrXVc1HPVuffbnGcLqkpg0zm6AoQ\",\"Specialty\": {\"ID\": \"PG000000000000000142\",\"Code\": \"ch\"},\"Domain\": \"greenyourbills.com\"},\"SearchParameters\": {\"Status\": \"\",\"OrderBy\": \"\",\"FromDate\": \"01/01/2018\",\"Count\": \"10\",\"SearchText\": \"\",\"TypeOfVisit\": \"ALL\",\"SortOrder\": \"appointment\",\"StartIndex\": \"1\",\"EndIndex\": \"10\",\"ToDate\": \"08/06/2018\"}}',\n        appointments_count:\n          '{\"User\": {\"Physician\": {\"ID\": \"DT000000000000011886\"},\"UserName\": \"ch\",\"ID\": \"US000000000000000143\",\"Account\":{\"ID\":\"CO00023\"},\"Token\":\"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VyIjoiYXZkaHV0IiwiZXhwIjoxNTI5NDgyNjYzfQ.v1c0HbuWuZXXpJfDrXVc1HPVuffbnGcLqkpg0zm6AoQ\",\"Specialty\": {\"ID\": \"PG000000000000000142\",\"Code\": \"ch\"},\"Domain\": \"greenyourbills.com\"},\"SearchParameters\": {\"Status\": \"\",\"OrderBy\": \"\",\"FromDate\": \"01/01/2018\",\"Count\": \"10\",\"SearchText\": \"\",\"TypeOfVisit\": \"ALL\",\"SortOrder\": \"appointment\",\"StartIndex\": \"1\",\"EndIndex\": \"10\",\"ToDate\": \"08/06/2018\"}}',\n        create_ticket:\n          '{\"AccountName\":null,\"CallbackPhone\":\"\",\"CompanyID\":\"CO00023\",\"Description\":\"De\",\"DomainName\":null,\"EmailCC\":\"abhay.w@codearray.tech\",\"EmailDefault\":\"manish.y@codearray.tech\",\"Priority\":\"3\",\"PriorityID\":0,\"RaisedBy\":\"lawuser\",\"Status\":0,\"StatusCode\":null,\"StatusText\":null,\"SType\":\"WP\",\"Subject\":\"De\",\"SubType\":\"SAMD-P\",\"TicketID\":0,\"TicketNumber\":null,\"Type\":0,\"TypeText\":\"Website Problem\",\"listFiles1\":[\"chq1.pdf\"]}',\n        get_report: '{\"companyId\": \"CO00023\"}',\n      },\n      stop: true,\n      demourlbind: false,\n      reviewsurlbind: false,\n      reviewsurl: \"https://www.youtube.com/embed/paAeW86eQZ4\",\n      demourl: [\n        \"https://www.youtube.com/embed/videoseries?KcrJm9UxW3s&index=13&list=PL_jXlih8dgkTE8CrPpiWcA9KxQeKHZAnt&t=0s\",\n        \"https://www.youtube.com/embed/videoseries?qzS2qINI6IM&list=PL_jXlih8dgkRu5ddGXAGqZ4uLLkoJzCj8&index=2\",\n      ],\n      chat_widget: {\n        logo: \"\",\n        title: \"\",\n        style: \"\",\n        bot_theme: \"\",\n        button_border_theme: \"#273679\",\n        user_response_bg_color: \"#273679\",\n        bot_response_bg_color: \"#ffffff\",\n        delivery_note_color: \"#273679\",\n        button_theme: \"\",\n        button_alignment: \"\",\n        bot_icon: \"\",\n        bot_background_image: \"\",\n        button_horizontal_spacing: \"3\",\n        button_vertical_spacing: \"5\",\n        header_background: \"\",\n        bot_font_style: \"\",\n        bot_font_color_sender: \"\",\n        bot_font_color_receiver: \"\",\n        bot_font_color_buttons: \"\",\n        is_powered_by_cense: true,\n      },\n      selected_date: \"\",\n      selected_time: \"\",\n      reason_of_visit: \"\",\n      patient_name: \"\",\n      visitor_number: \"\",\n      full_time_slots: [],\n      time_slots: [],\n      TODAY_DATE: \"\",\n      channel: null,\n      chat_socket: null,\n      voice_socket: null,\n      live_chat_on: false,\n      live_chat_token: null,\n      chat_group_name: null,\n      to_scroll: false,\n      form_payload: null,\n      phone_number_validity: /[0-9]{10,11}$/,\n      // url_match_regex: /\\b(https?|ftp):\\/\\/([\\S])+\\.((pdf|csv|xlsx))([\\w?=]+)/g,\n      url_match_regex: /^https?:\\/\\/.*[\\\\\\/].+\\.[(pdf|csv|xlsx)]{2,4}/,\n      // harsh\n      isexchange: false,\n      isretailigence: false,\n      currencyexchange_list: null,\n      selected_indication: [],\n      welcome_message_not_yet_received: true,\n      res: {},\n      is_typing_indicator_on: false,\n      thumbs_up_icon: require(\"@/portal/assets/img/Group 7.svg\"),\n      thumbs_down_icon: require(\"@/portal/assets/img/Group 6.svg\"),\n      shopify_ui: null,\n      shopify_customer_id: null,\n      // refund_order_view_details: {},\n      // refund_selected_items: [],\n      shopify_retail_shop_name: null,\n      shop_url: null,\n      is_retail_bot: false,\n      shopify_reason_for_refund: null,\n      show_shopify_reason_for_refund_error: false,\n      support_channel: null,\n      is_support_agent_present: false,\n      support_agent_info: null,\n      retail_shop_storefront_token: null,\n      retail_order_retreival_only_email_required: false,\n      retail_shop_currency: null,\n      product_list: [],\n      product_out_of_stock_list: [],\n      checked_list: [],\n      current_product: \"\",\n      customer_email: \"\",\n      is_sender_email: false,\n      reg_email: /^([0-9a-zA-Z]([-.\\w]*[0-9a-zA-Z])*@([0-9a-zA-Z][-\\w]*[0-9a-zA-Z]\\.)+[a-zA-Z]{2,9})$/,\n      scrollPosition: 0,\n      visible_custom_greetings_buttom:false,\n      review_message_first:'',\n      review_message_second:'',\n      review_response_message:'',\n      display_products:false,\n      retail_web_framework: \"\",\n      is_cense_cart: false,\n      show_custom_cart: false,\n      addtoCartdata: [],\n      total_products_qty: 0,\n      over_qty_warning: false,\n      contact_help_email: null,\n      shopify_reason_for_refund_list: null,\n      shopify_reason_for_refund_option:[\n        'Ordered by mistake',\n        'Ordered wrong product',\n        'Order not Received',\n        'No longer needed',\n        'Better price available',\n        'Received damaged products',\n        'Others'\n      ],\n      order_notes_data: [],\n      selected_order_name: \"\",\n      is_woocommerce_order: false,\n      visitors_current_location: null,\n      is_display_banner_on_landing: false,\n      visitors_current_location_url: `https://ipgeolocation.abstractapi.com/v1/?api_key=${process.env.VUE_APP_CURRENT_LOCATION_TOKEN}`,\n      greeting_buttons_position: null,\n      // custom_product_button_key: [{'name': 'customize it', 'function':'route', 'on_key': 'product_type', 'on_value':'custom'}],\n      custom_product_button_key:[],\n      reg_host: /https:\\/\\/[(www\\.)?a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_\\+.~#?&\\/\\/=]*)/i,\n    };\n  },\n  props: {\n    isPreviewBot: Boolean,\n    isDialogBot: Boolean,\n    current_preview_banner_id: String,\n    isTextToBot: {\n      type: Boolean,\n      default: true,\n    },\n    isCalledFromSetup: {\n      type: Boolean,\n      default: false,\n    },\n  },\n  computed: {\n    custom_greetings_buttom_alignment(){\n      if(this.is_retail_bot){\n        return \"col-sm-10 px-0\";\n      }else{\n        return \"col-sm-12 px-0\";\n      }\n    },\n    cart_button_alignment(){\n    if(this.is_retail_bot){\n        return \"col-sm-2 px-0\";\n      }else{\n        return null;\n      }\n    },\n    input_disabled() {\n      return this.refreshed_or_closed || this.welcome_message_not_yet_received;\n    },\n    cssProps() {\n      let botAttributes = {\n        head_color: this.chat_widget.header_background,\n      };\n      if (this.companyid === \"retailigence84926\") {\n        botAttributes.head_color = this.chat_widget.bot_theme;\n      } else if (this.isexchange) {\n        return {\n          \"--bot-head-color\": \"#fff\",\n          \"--bot-sender-color\": \"#2b3184\",\n          \"--bot-button-color\": \"#fdcf38\",\n          \"--bot-link-color\": \"#2b3184\",\n          \"--bot-button-border\": \"#273679\",\n          \"--user-response-bg-color\": \"#273679\",\n          \"--delivery-note-color\": \"#273679\",\n          \"--bot-response-bg-color\": \"#273679\",\n          \"--bot-button-background\": \"#1daae1\",\n          \"--bot-buttons-alignment\": \"center\",\n          \"--bot-buttons-vertical-spacing\": \"5%\",\n          \"--bot-buttons-horizontal-spacing\": \"3%\",\n        };\n      }\n      return {\n        \"--bot-head-color\": botAttributes.head_color,\n        \"--bot-sender-color\": this.chat_widget.bot_theme,\n        \"--bot-button-color\": this.chat_widget.bot_theme,\n        \"--bot-link-color\": this.chat_widget.bot_theme,\n        \"--bot-button-border\": this.chat_widget.button_border_theme,\n        \"--user-response-bg-color\": this.chat_widget.user_response_bg_color,\n        \"--bot-response-bg-color\":this.chat_widget.bot_response_bg_color,\n        \"--delivery-note-color\":this.chat_widget.delivery_note_color,\n        \"--bot-button-background\": this.chat_widget.button_theme,\n        \"--bot-buttons-alignment\": this.chat_widget.button_alignment.value,\n        \"--bot-buttons-vertical-spacing\": `${this.chat_widget.button_vertical_spacing}%`,\n        \"--bot-buttons-horizontal-spacing\": `${this.chat_widget.button_horizontal_spacing}%`,\n        \"--bot-font-style\": this.chat_widget.bot_font_style.value,\n        \"--bot-font-color-sender\": this.chat_widget.bot_font_color_sender,\n        \"--bot-font-color-receiver\": this.chat_widget.bot_font_color_receiver,\n        \"--bot-font-color-buttons\": this.chat_widget.bot_font_color_buttons,\n      };\n    },\n    bot_img_icon() {\n      return {\n        \"background-image\": `url(${this.chat_widget.bot_icon})`,\n      };\n    },\n    chat_bot_background_image() {\n      return {\n        \"background-image\": `url(${this.chat_widget.bot_background_image})`,\n      };\n    },\n    shopify_login_button_text() {\n      if (this.retail_order_retreival_only_email_required) {\n        return \"Go\";\n      }\n      return \"Login\";\n    },\n    cart_icon_svg(){\n     return `<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.0\" width=\"18.000000pt\" height=\"18.000000pt\" viewBox=\"0 0 512.000000 512.000000\" preserveAspectRatio=\"xMidYMid meet\"><g transform=\"translate(0.000000,512.000000) scale(0.100000,-0.100000)\" fill=\"${this.chat_widget.bot_font_color_buttons}\" stroke=\"none\"><path d=\"M81 5002 c-100 -50 -106 -186 -12 -249 33 -23 39 -23 317 -23 l284 0 5 -22 c3 -13 172 -745 375 -1628 279 -1209 376 -1612 392 -1636 47 -69 -72 -64 1599 -64 1367 0 1514 2 1545 16 37 18 68 62 79 111 9 45 -24 117 -67 143 -33 20 -45 20 -1475 20 -1364 0 -1442 1 -1447 18 -12 37 -106 454 -106 468 0 12 206 14 1503 14 1472 0 1503 0 1534 20 18 10 39 33 48 50 26 50 468 2030 461 2068 -7 44 -39 86 -80 106 -31 15 -208 16 -2014 16 l-1980 0 -27 118 c-73 319 -94 395 -117 419 -49 53 -51 53 -430 53 -316 0 -357 -2 -387 -18z m4702 -869 c2 -5 -81 -381 -184 -838 -104 -456 -188 -831 -189 -833 0 -1 -656 -1 -1457 0 l-1458 3 -192 830 c-105 457 -192 833 -192 838 -1 9 3667 9 3672 0z\"/><path d=\"M2038 1165 c-190 -48 -356 -216 -398 -400 -15 -64 -15 -186 0 -250 31 -137 151 -290 277 -354 173 -87 387 -78 538 23 219 146 306 407 216 647 -55 144 -181 268 -326 320 -78 27 -227 34 -307 14z m217 -295 c48 -19 104 -71 129 -121 111 -223 -147 -449 -354 -310 -176 118 -130 382 78 437 45 12 105 9 147 -6z\"/><path d=\"M3806 1164 c-133 -32 -278 -146 -343 -270 -113 -213 -75 -462 97 -634 213 -213 542 -214 754 -4 35 35 78 88 95 118 38 66 71 190 71 266 0 76 -33 200 -71 266 -17 30 -60 83 -95 118 -134 133 -323 185 -508 140z m195 -288 c48 -8 112 -56 146 -108 25 -38 28 -52 28 -128 0 -76 -3 -90 -27 -127 -51 -78 -118 -115 -209 -115 -109 0 -203 69 -233 173 -20 65 -20 73 0 138 16 56 69 123 117 147 32 17 104 33 127 29 8 -2 31 -6 51 -9z\"/></g></svg>`\n    }\n    \n  },\n  watch: {\n    scrollPosition(){\n      if(this.scrollPosition > 150){\n        this.visible_custom_greetings_buttom = true;\n      }else if(this.scrollPosition < 150){\n        this.visible_custom_greetings_buttom = false;\n      }\n    },\n    to_send() {\n      this.button_fill();\n    },\n    chat() {\n      this.scroll_down();\n    },\n  },\n  beforeCreated(){\n    let route_params = this.$route.params;\n    if (route_params.reload === true) {\n      this.$router.go();\n    }\n  },\n  beforeDestroy(){\n    if(this.live_chat_on) this.disconnect_support_chat();\n  },\n  created() {\n    this.load_widget_settings();\n    let bot_templates_data = this.$session.get(\"BotTemplates\");\n    for (let i = 0; i < bot_templates_data.length; i++) {\n      if (\n        bot_templates_data[i].domain === \"Retail\" &&\n        bot_templates_data[i].subscribed === true\n      ) {\n        this.is_retail_bot = true;\n        break;\n      }\n    }\n    if (this.$session.has(\"BotResponse_Conversation\")) {\n      // this.chat = this.$session.get(\"BotResponse_Conversation\");\n    }\n    // if (!this.$session.has(\"ChatBotImageParameters\")) {\n    // } else {\n    //   this.chat_widget = this.$session.get(\"ChatBotImageParameters\");\n    //   this.chat_widget.style = \"margin-top: 5px;height:30px;width:auto;margin-left: auto;margin-right: 0;\";\n    // }\n    if (!this.isPreviewBot) {\n      if (!this.$session.has(\"BotToken\")) {\n        axios\n          .post(api_calls.bot_response_token(), {\n            license_key: this.$session.get(\"UserInformation\").license_key,\n            username: this.$session.get(\"UserInformation\").email,\n          })\n          .then((response) => {\n            this.$session.set(\"BotToken\", response.data);\n            this.bot_response_token_value = response.data;\n            this.refresh_chatbot();\n          });\n      } else {\n        this.bot_response_token_value = this.$session.get(\"BotToken\");\n        this.refresh_chatbot();\n      }\n    }\n    // harsh\n    if (\n      this.$session.get(\"UserInformation\").license_key ==\n      \".eJxTcssvSs1Mz6tIzkjMS081NDexNIQKKUDFMkpKCoqt9PXLy8v10lBU6yXn5-olluobGRha6hqY6xqYKBgaWBkZW5ma6hmbm5gYmSoBAGa9Hp0.XR3Tuw.X77F_7LDtOLp2Vt9snFDSo31nTw\"\n    ) {\n      this.isexchange = true;\n    } else if (this.companyid == \"retailigence84926\") {\n      this.isretailigence = true;\n    }\n    var d = new Date();\n    axios\n      .post(api_calls.bot_user_data(), {\n        license_key: this.$session.get(\"UserInformation\").license_key,\n        tz: Intl.DateTimeFormat().resolvedOptions().timeZone,\n        datetime: d.toISOString(),\n        token: this.bot_response_token_value,\n        username: this.$session.get(\"UserInformation\").email,\n        source: \"Web\",\n        token: this.bot_response_token_value,\n        role: this.$session.get(\"UserInformation\").role,\n      })\n      .then((response) => {});\n\n    axios\n      .post(\n        api_calls.product_settings(),\n        {\n          company_name: this.companyname,\n          company_id: this.companyid,\n          is_email_verification_status: true,\n        },\n        {\n          headers: {\n            Authorization: `Bearer ${this.$session.get(\"at\")}`,\n          },\n        }\n      )\n      .then((response) => {\n        this.big_spinner = false;\n        if (\n          response.data != \"\" &&\n          response.data != null &&\n          response.data != \"Internal server Error\" &&\n          response.data.msg !== \"NO DATA AVAILABLE\"\n        ) {\n          var status = response.data.verification_status;\n          if (status == \"Success\") {\n            this.is_sender_email = true;\n          } else {\n            this.is_sender_email = false;\n          }\n        } else {\n          this.is_sender_email = false;\n        }\n      })\n      .catch((e) => {\n        this.big_spinner = false;\n        if (\n          e.response.status === 410 ||\n          e.response.status === 440 ||\n          e.response.status === 409\n        ) {\n          this.$root.$emit(\"Session_Expired\", e.response.data);\n        }\n      });\n  },\n  beforeDestroy() {\n    this.$forceUpdate();\n  },\n  mounted() {\n    var vm = this;\n    document.addEventListener('scroll', function (ev) {\n      if (ev.target.id === 'portal_chat_body_id'){\n        vm.scrollPosition = ev.target[\"scrollTop\"]\n      }\n    }, true)\n    // let recaptchaScript = document.createElement('script')\n    // recaptchaScript.setAttribute('src', 'https://sdks.shopifycdn.com/buy-button/latest/buybutton.js')\n    // document.head.appendChild(recaptchaScript)\n    // const plugin = document.createElement(\"script\");\n    // plugin.setAttribute(\n    //   \"src\",\n    //   \"https://sdks.shopifycdn.com/buy-button/latest/buybutton.js\"\n    // );\n    // plugin.async = true;\n    // document.head.appendChild(plugin);\n    this.show = false;\n    if (this.$route.name == \"Train the Bot\") {\n      $(\".chat-wrap\").css(\"right\", \"auto\");\n    }\n    if (this.$route.name == \"Direct Response Bot\") {\n      $(\".chat-wrap\").css(\"marginTop\", \"5%\");\n    }\n    window.SpeechRecognition =\n      window.webkitSpeechRecognition || window.SpeechRecognition;\n    window.AudioContext = window.AudioContext || window.webkitAudioContext;\n    navigator.getUserMedia =\n      navigator.getUserMedia ||\n      navigator.webkitGetUserMedia ||\n      navigator.mozGetUserMedia ||\n      navigator.msGetUserMedia;\n\n    document.addEventListener(\"click\", someListener);\n\n    function someListener(event) {\n      let element = event.target;\n      if (\n        (element.tagName == \"I\" || element.tagName == \"A\") &&\n        element.classList.contains(\"fa-clipboard\")\n      ) {\n        var msg = element.getAttribute(\"data-copy-content\");\n        var temp = document.createElement(\"textarea\");\n        var tempMsg = document.createTextNode(msg);\n        temp.appendChild(tempMsg);\n\n        document.body.appendChild(temp);\n        temp.select();\n        document.execCommand(\"copy\");\n        document.body.removeChild(temp);\n      }\n    }\n    this.$root.$emit(\"change_sidebar_main_menu\", \"Simulate Interaction\");\n\n    //To hide cense cart if clicked outside\n    document.onclick = function(e){\n      if((e.target).closest(\"#cart-box\") || (e.target).closest(\"#custom-cart\")){\n      }else{\n        vm.is_cense_cart = false;\n      }\n    };\n  },\n  updated() {\n    this.submit_custom_form();\n  },\n  methods: {\n    load_widget_settings(){\n      axios\n        .post(\n          api_calls.get_widget_settings(),\n          {\n            companyname: this.companyname,\n            companyid: this.companyid,\n            email: this.$session.get(\"UserInformation\").email,\n            license_key: this.$session.get(\"UserInformation\").license_key,\n            token: this.$session.get(\"UserInformation\").tokens,\n            isShow: true,\n          },\n          {\n            headers: {\n              Authorization: `Bearer ${this.$session.get(\"at\")}`,\n            },\n          }\n        )\n        .then((response) => {\n          this.chat_widget.title = response.data.WidgetTitle;\n          this.chat_widget.logo = response.data.ImageUrl;\n          this.chat_widget.button_theme = response.data.ButtonTheme;\n          this.chat_widget.button_border_theme = response.data.ButtonBorderTheme === null ?\n                                                this.chat_widget.button_border_theme : response.data.ButtonBorderTheme;\n          this.chat_widget.user_response_bg_color = response.data.UserResponseBgColor === null ?\n                                                this.chat_widget.user_response_bg_color : response.data.UserResponseBgColor;\n          this.chat_widget.bot_response_bg_color = response.data.BotResponseBgColor === null ?\n                                                this.chat_widget.bot_response_bg_color : response.data.BotResponseBgColor;\n          this.chat_widget.delivery_note_color = response.data.DeliveryNoteColor === null ?\n                                                this.chat_widget.delivery_note_color : response.data.DeliveryNoteColor;                                          \n          this.chat_widget.bot_font_style = response.data.BotFont.FontStyle;\n          this.chat_widget.bot_font_color_sender = response.data.BotFont.FontColorSender;\n          this.chat_widget.bot_font_color_receiver = response.data.BotFont.FontColorReceiver;\n          this.chat_widget.bot_font_color_buttons = response.data.BotFont.FontColorButtons;\n          this.chat_widget.bot_theme = response.data.BotTheme;\n          this.chat_widget.is_powered_by_cense = response.data.IsPoweredByCense === undefined ? \n                                                  this.chat_widget.is_powered_by_cense : response.data.IsPoweredByCense;                                   \n          this.chat_widget.button_alignment = response.data.BotStyling;\n          this.chat_widget.bot_icon = response.data.BotImageUrl;\n          this.chat_widget.button_vertical_spacing =\n            response.data.ButtonStyling.vertical;\n          this.chat_widget.button_horizontal_spacing =\n            response.data.ButtonStyling.horizontal;\n          this.chat_widget.bot_background_image = response.data.BgImageUrl;\n          this.chat_widget.header_background = response.data.HeaderTheme;\n          if (response.data.BotGreetings.data.responses.length > 0) {\n            let is_visible_greetings = response.data.BotGreetings.data.responses.map(item => {\n              return (item.visible !== undefined) ? item.visible : true\n            });\n            if(is_visible_greetings.includes(true)){\n              this.greeting_buttons_position = response.data.BotGreetings.data.responses.length -1;\n              if (Boolean(response.data.BotGreetings.data.responses[this.greeting_buttons_position]['buttons'])){\n                var visible_buttons = response.data.BotGreetings.data.responses[this.greeting_buttons_position]['buttons'];\n                visible_buttons = visible_buttons.filter((button)=>{\n                  return button['visible'] === true;\n                });\n                response.data.BotGreetings.data.responses[this.greeting_buttons_position]['buttons'] = visible_buttons;\n              }\n              const visible_greetings_map = is_visible_greetings.reduce((acc, e) => acc.set(e, (acc.get(e) || 0) + 1), new Map());\n              let splice_index = [];\n              if((visible_greetings_map.get(true) !== response.data.BotGreetings.data.responses.length)){\n                if(response.data.BotGreetings.data.responses[this.greeting_buttons_position].visible === false){\n                  try {\n                    for(let i = response.data.BotGreetings.data.responses.length-1; i >= 0; i--){\n                      if(response.data.BotGreetings.data.responses[i].visible === false){\n                        response.data.BotGreetings.data.responses[(i-1 < 0) ? i : i-1]['buttons'] = visible_buttons;\n                        this.greeting_buttons_position = (this.greeting_buttons_position-1 < 0) ? this.greeting_buttons_position : this.greeting_buttons_position-1;\n                        splice_index.push(i)\n                      } \n                    }\n                  } catch (error) {\n                    console.log(error);\n                  }\n                } else {\n                  for(let i = response.data.BotGreetings.data.responses.length-1; i >= 0; i--){\n                    if(response.data.BotGreetings.data.responses[i].visible === false){\n                      this.greeting_buttons_position = (this.greeting_buttons_position-1 < 0) ? this.greeting_buttons_position : this.greeting_buttons_position-1;\n                      splice_index.push(i)\n                    }\n                  }\n                }\n                for (let index = 0; index < splice_index.length; index++) {\n                  response.data.BotGreetings.data.responses.splice(splice_index[index],1);\n                }\n              }\n              this.push_msg(\n                response.data.BotGreetings,\n                response.data.BotGreetings.data.responses\n              );\n            }\n          }else {\n            if (this.is_retail_bot) {\n              this.load_chatbot_integration_details();\n            }\n          }\n          if (this.chat_widget.button_alignment === undefined) {\n            this.chat_widget.button_alignment = \"flex-end\";\n          }\n          if (this.chat_widget.bot_icon === undefined) {\n            this.chat_widget.bot_icon = \"/img/Bot_img.png\";\n          }\n          this.$session.set(\"ChatBotImageParameters\", this.chat_widget);\n          let styling_value = response.data.HeaderStyling.value;\n          let temp_string = \"\";\n          if (styling_value === \"left\") {\n            temp_string = \"margin-left: 0;margin-right: auto;\";\n          } else if (styling_value === \"right\") {\n            temp_string = \"margin-left: auto;margin-right: 0;\";\n          } else if (styling_value === \"center\") {\n            temp_string = \"margin-left: auto;margin-right: auto;\";\n          } else {\n            temp_string = \"margin-left: auto;margin-right: auto;\";\n          }\n          this.chat_widget.style =\n            \"margin-top: 5px;height:30px;width:auto;max-width:100% !important;\" +\n            temp_string;\n        })\n        .catch((e) => {\n          if (this.is_retail_bot) {\n            this.load_chatbot_integration_details();\n          }\n          if (e.response) {\n            if (\n              e.response.status === 410 ||\n              e.response.status === 440 ||\n              e.response.status === 409\n            ) {\n              this.$root.$emit(\"Session_Expired\", e.response.data);\n            }\n          } else {\n            if (this.$session.get(\"UserInformation\").company_name == \"gogyb\") {\n              this.chat_widget.style =\n                \"margin-top: 5px;height:30px;width:60px;margin-left: auto;margin-right: auto;\";\n              this.chat_widget.logo = \"/img/cense_image.png\";\n              this.chat_widget.bot_icon = \"/img/Bot_img.png\";\n              this.chat_widget.button_vertical_spacing = \"5\";\n              this.chat_widget.button_horizontal_spacing = \"3\";\n              this.chat_widget.bot_background_image = \"\";\n              this.chat_widget.header_background = \"#ffffff\";\n              this.chat_widget.button_theme = \"#1daae1\";\n              this.chat_widget.user_response_bg_color = \"#273679\";\n              this.chat_widget.bot_response_bg_color = \"#ffffff\";\n              this.chat_widget.delivery_note_color = \"#273679\";\n              this.chat_widget.bot_theme = \"#273679\";\n              this.chat_widget.button_border_theme = \"#273679\";\n            } else if (\n              this.$session.get(\"UserInformation\").company_name == \"MT Care\"\n            ) {\n              this.chat_widget.logo = \"/img/robomate_logo.png\";\n              this.chat_widget.style =\n                \"margin-top: 5px;height:50px;width:95px;margin-left: auto;margin-right: auto;\";\n              this.chat_widget.bot_icon = \"/img/Bot_img.png\";\n              this.chat_widget.button_vertical_spacing = \"5\";\n              this.chat_widget.button_horizontal_spacing = \"3\";\n              this.chat_widget.bot_background_image = \"\";\n              this.chat_widget.header_background = \"#ffffff\";\n              this.chat_widget.button_theme = \"#1daae1\";\n              this.chat_widget.bot_theme = \"#273679\";\n              this.chat_widget.button_border_theme = \"#273679\";\n              this.chat_widget.user_response_bg_color = \"#273679\";\n              this.chat_widget.bot_response_bg_color = \"#ffffff\";\n              this.chat_widget.delivery_note_color = \"#273679\";\n            } else {\n              this.chat_widget.logo = \"/img/cense_image.png\";\n              this.chat_widget.style =\n                \"margin-top: 5px;height:30px;width:60px;margin-left: auto;margin-right: auto;\";\n              this.chat_widget.bot_icon = \"/img/Bot_img.png\";\n              this.chat_widget.button_vertical_spacing = \"5\";\n              this.chat_widget.button_horizontal_spacing = \"3\";\n              this.chat_widget.bot_background_image = \"\";\n              this.chat_widget.header_background = \"#ffffff\";\n              this.chat_widget.button_theme = \"#1daae1\";\n              this.chat_widget.bot_theme = \"#273679\";\n              this.chat_widget.button_border_theme = \"#273679\";\n              this.chat_widget.user_response_bg_color = \"#273679\";\n              this.chat_widget.bot_response_bg_color = \"#ffffff\";\n              this.chat_widget.delivery_note_color = \"#273679\";\n              this.chat_widget.bot_font_style = 'Roboto';\n              this.chat_widget.bot_font_color_sender = '#ffffff';\n              this.chat_widget.bot_font_color_receiver = '#000000';\n              this.chat_widget.bot_font_color_buttons = '#ffffff';\n            }\n            this.$session.set(\"ChatBotImageParameters\", this.chat_widget);\n          }\n        });\n    },\n    load_chatbot_integration_details(){\n      axios\n        .post(\n          api_calls.chatbot_integration_details(),\n          {\n            is_get: true,\n            company_name: this.companyname,\n            company_id: this.companyid,\n            email: this.$session.get(\"UserInformation\").email,\n            license_key: this.$session.get(\"UserInformation\").license_key,\n            token: this.$session.get(\"UserInformation\").tokens,\n          },\n          {\n            headers: {\n              Authorization: `Bearer ${this.$session.get(\"at\")}`,\n            },\n          }\n        )\n        .then((response) => {\n          if (response.data.status === \"success\") {\n            this.chatbot_integration_details_response(response);\n          }\n        })\n        .catch((e) => {\n          // this.shopify_retail_shop_name = \"earthon\";\n          if (\n            e.response.status === 410 ||\n            e.response.status === 440 ||\n            e.response.status === 409\n          ) {\n            this.$root.$emit(\"Session_Expired\", e.response.data);\n            setTimeout(() => {\n              axios\n                .post(\n                  api_calls.chatbot_integration_details(),\n                  {\n                    is_get: true,\n                    company_name: this.companyname,\n                    company_id: this.companyid,\n                    email: this.$session.get(\"UserInformation\").email,\n                    license_key: this.$session.get(\"UserInformation\")\n                      .license_key,\n                    token: this.$session.get(\"UserInformation\").tokens,\n                  },\n                  {\n                    headers: {\n                      Authorization: `Bearer ${this.$session.get(\"at\")}`,\n                    },\n                  }\n                )\n                .then((response) => {\n                  if (response.data.status === \"success\") {\n                    this.chatbot_integration_details_response(response);\n                  }\n                });\n            }, 1000);\n          }\n        });\n    },\n    chatbot_integration_details_response(response){\n      this.retail_web_framework = response.data.data.retail_web_framework;\n      var webframework = response.data.data[this.retail_web_framework + '_details'];\n      this.show_custom_cart = this.retail_web_framework != null ? true : false;\n      if(webframework !== null &&\n        webframework !== {}){\n        this.retail_shop_currency = webframework.base_currency.value || \"USD\";\n        this.retail_order_retreival_only_email_required = webframework.order_retrieval_only_email_required || false;\n        this.contact_help_email = webframework.contact_help_email;\n        this.review_response_message = webframework.review_response_message;\n        this.review_message_first = webframework.review_message_first;\n        this.review_message_second = webframework.review_message_second;\n        this.display_products = webframework.display_products_on_landing;\n        this.is_display_banner_on_landing = webframework.is_display_banner_on_landing;\n        if(this.retail_web_framework == \"shopify\"){\n          this.shopify_retail_shop_name = webframework.shopify_shop_name;\n          this.custom_product_button_key = webframework.custom_product_button_key == undefined || null ? [] : webframework.custom_product_button_key;\n        }else{\n          this.shop_url = webframework[this.retail_web_framework + '_shop_url'];\n        }\n      }\n      // setTimeout(() => {\n        if(!this.isPreviewBot){\n          this.get_visitors_current_location();\n        }else if(Boolean(this.current_preview_banner_id)){\n          this.preview_banner();\n        }\n      // }, 3000);\n    },\n    contact_us_phone_number(phone_number){\n      if(Boolean(phone_number)){\n        return \" or call us at: \" + phone_number;\n      }else{\n        return '';\n      }\n    },\n    update_variation(chat_id, product_index, title){\n      for(var i in this.chat[chat_id].products_list[product_index].variations){\n        if (this.chat[chat_id].products_list[product_index].variations[i].variant_title == title){\n          this.chat[chat_id].products_list[product_index].img_url = (this.chat[chat_id].products_list[product_index].variations[i].img_url);\n          this.chat[chat_id].products_list[product_index].id = this.chat[chat_id].products_list[product_index].variations[i].id;\n          this.chat[chat_id].products_list[product_index].permalink = this.chat[chat_id].products_list[product_index].variations[i].permalink;\n          this.chat[chat_id].products_list[product_index].price = this.chat[chat_id].products_list[product_index].variations[i].price;\n          this.chat[chat_id].products_list[product_index].regular_price = this.chat[chat_id].products_list[product_index].variations[i].regular_price;\n          this.chat[chat_id].products_list[product_index].stock_quantity = this.chat[chat_id].products_list[product_index].variations[i].stock_quantity;\n          this.chat[chat_id].products_list[product_index].stock_status = this.chat[chat_id].products_list[product_index].variations[i].stock_status;\n          this.chat[chat_id].products_list[product_index].variant_title = this.chat[chat_id].products_list[product_index].variations[i].variant_title;\n        }\n      }\n      // const found = this.chat[chat_id].products_list[product_index].variations.some(el => el.variant_title == \"Default\");\n      // if (!found) this.chat[chat_id].products_list[product_index].variations.push(default_values);\n    },\n    get_visitors_current_location(){\n      if(this.is_display_banner_on_landing === true){\n        let cutoff = new Date;\n        var date_time = moment.utc(cutoff, [\n              \"YYYY-MM-DD HH:mm:ss\",\n            ]).format(\"YYYY-MM-DD HH:mm:ss\")\n        var vm = this;\n        $.getJSON(vm.visitors_current_location_url, function(data) {\n          if(data){\n            vm.visitors_current_location = {\n              \"ip_address\" : data.ip_address,\n              \"city\" : data.city,\n              \"city_geoname_id\" : data.city_geoname_id,\n              \"region\" : data.region,\n              \"region_iso_code\" : data.region_iso_code,\n              \"region_geoname_id\" : data.region_geoname_id,\n              \"postal_code\" : data.postal_code,\n              \"country\" : data.country,\n              \"country_code\" : data.country_code,\n              \"country_geoname_id\" : data.country_geoname_id,\n              \"country_is_eu\" : data.country_is_eu,\n              \"continent\" : data.continent,\n              \"continent_code\" : data.continent_code,\n              \"continent_geoname_id\" : data.continent_geoname_id,\n              \"longitude\" : data.longitude,\n              \"latitude\" : data.latitude,\n              \"security\" : data.security,\n              \"date_time\" : date_time,\n            }\n            vm.is_display_banner();\n          }else{\n            vm.is_display_products();\n          }\n        }).error(function() { \n          vm.is_display_products();\n        });\n      }else{\n        this.is_display_products();\n      }\n    },\n    preview_banner(){\n      axios\n        .post(\n          api_calls.banner_template(),\n          {\n            company_name: this.companyname,\n            company_id: this.companyid,\n            email: this.$session.get(\"UserInformation\").email,\n            license_key: this.$session.get(\"UserInformation\").license_key,\n            token: this.$session.get(\"UserInformation\").tokens,\n            subscription: this.$session.get(\"UserInformation\").subscription,\n            is_preview_banner: true,\n            banner_id: this.current_preview_banner_id,\n          },\n          {\n            headers: {\n              Authorization: `Bearer ${this.$session.get(\"at\")}`,\n            },\n          }\n        )\n        .then((response) => {\n          if (response.status == 200) {\n            if(Boolean(response.data.responses.length > 0)){\n              this.response_handling(response);\n            }\n          }\n        })\n        .catch((e) => {\n          if (\n            e.response.status === 410 ||\n            e.response.status === 440 ||\n            e.response.status === 409\n          ) {\n            this.$root.$emit(\"Session_Expired\", e.response.data);\n          }\n        });\n    },\n    is_display_banner(){\n      axios\n        .get(api_calls.banner_template(),{\n          params: {      \n            license_key: this.$session.get(\"UserInformation\").license_key,\n            username: this.$session.get(\"UserInformation\").email,\n            email: this.$session.get(\"UserInformation\").email,\n            token: this.bot_response_token_value,\n            is_display_banner: true,\n            visitors_current_location: this.visitors_current_location,\n            \n          },\n        })\n        .then((response) => {\n          if (response.status == 200) {\n            if(Boolean(response.data.responses.length > 0)){\n              this.response_handling(response);\n            }\n          }\n          this.is_display_products();\n        })\n        .catch((e) => {\n          this.is_display_products();\n          if (\n            e.response.status === 410 ||\n            e.response.status === 440 ||\n            e.response.status === 409\n          ) {\n            this.$root.$emit(\"Session_Expired\", e.response.data);\n          }\n        });\n    },\n    is_display_products(){\n      if(this.display_products === true){\n        axios\n        .post(api_calls.display_landing_products(), {\n          license_key: this.$session.get(\"UserInformation\").license_key,\n          token: this.bot_response_token_value,\n          username: this.$session.get(\"UserInformation\").email,\n          source: \"Web\",\n        })\n        .then((response) => { \n          var products_count = response.data.responses[0].products.products_list.length;\n          if (products_count > 0){\n            this.response_handling(response);\n          }\n          this.is_review_rating();\n        })\n        .catch((e) => {\n          this.is_review_rating();\n          if (\n            e.response.status === 410 ||\n            e.response.status === 440 ||\n            e.response.status === 409\n          ) {\n            this.$root.$emit(\"Session_Expired\", e.response.data);\n          }\n        });\n      }else{\n        this.is_review_rating();\n      }\n    },\n    check_shopify_customer_token_expiry() {\n      let cutoff = this.$session.get(\"shopify_customer_token_expiry\");\n      cutoff = moment(cutoff, [\"YYYY-MM-DDThh:mm:ssZ\"]);\n      var current_time = new Date(cutoff);\n      if (moment().isBefore(current_time)) {\n        return true;\n      } else {\n        return false;\n      }\n    },\n    is_review_rating() {\n      if(Boolean(this.$session.get(\"shopify_customer_id\")) || Boolean(this.$session.get(\"shopify_customer_token\"))) {\n        let stringified_customer_payload = JSON.stringify({\n          customerId: this.$session.get(\"shopify_customer_id\"),\n          email: this.$session.get(\"shopify_customer_token\")\n        });\n        axios\n          .post(api_calls.chatbot_response_cense(), {\n            license_key: this.$session.get(\"UserInformation\").license_key,\n            token: this.bot_response_token_value,\n            username: this.$session.get(\"UserInformation\").email,\n            source: \"Web\",\n            chat: `/retrieve_customer_orders${stringified_customer_payload}`,\n            role: this.$session.get(\"UserInformation\").role,\n            refreshed_or_closed: false,\n          })\n          .then((response) => {\n            if(Boolean(response.data.responses[0].custom)){\n              if(Boolean(response.data.responses[0].custom.orders_list.length > 0)){\n                this.call_review_rating(response.data.responses[0].custom.orders_list);\n              }\n            }\n          }); \n      }\n    },\n    call_review_rating(data){\n      var fulfilled_orders = data.filter(fulfilled_order=>{\n        return fulfilled_order.fulfillment_status === \"fulfilled\";\n      });\n      var sorted_fulfilled_orders = fulfilled_orders.map(item=>{\n        return item.line_items.map(product=> {\n          return product;\n        });\n      });\n      axios\n        .post(\n          api_calls.product_review_rating(),\n          {\n            company_name: this.companyname,\n            company_id: this.companyid,\n            email: this.$session.get(\"UserInformation\").email,\n            license_key: this.$session.get(\"UserInformation\").license_key,\n            token: this.bot_response_token_value,\n            username: this.$session.get(\"UserInformation\").email,\n            web_framework: this.retail_web_framework,\n            is_get_reviewed_product_id: true,\n            review_rating_customer_id: this.$session.get(\"shopify_customer_id\"),\n            review_rating_customer_email: this.$session.get(\"shopify_customer_token\")\n          },\n          {\n            headers: {\n              Authorization: `Bearer ${this.$session.get(\"at\")}`\n            }\n          }\n        )\n        .then(response => {\n          if(response.data.is_review === true){\n            var reviewed_product_details = [];\n            var not_reviewed_product_details = [];\n            var reviewed_product_id_list = response.data.product_id_list;\n            for (let i = 0; i < sorted_fulfilled_orders.length; i++){\n              for (let j = 0; j < sorted_fulfilled_orders[i].length; j++) {\n                if (reviewed_product_id_list.includes(sorted_fulfilled_orders[i][j].product_id)){\n                  reviewed_product_details.push(sorted_fulfilled_orders[i][j]);\n                }else{\n                  not_reviewed_product_details.push(sorted_fulfilled_orders[i][j]);\n                }\n              }\n            }\n            if(not_reviewed_product_details.length > 0 &&\n              Boolean(this.review_message_first) === true &&\n              Boolean(this.review_message_second) === true &&\n              Boolean(this.review_response_message) === true\n            ){\n              axios\n                .post(\n                  api_calls.product_review_rating(),\n                  {\n                    company_name: this.companyname,\n                    company_id: this.companyid,\n                    email: this.$session.get(\"UserInformation\").email,\n                    license_key: this.$session.get(\"UserInformation\").license_key,\n                    token: this.bot_response_token_value,\n                    username: this.$session.get(\"UserInformation\").email,\n                    web_framework: this.retail_web_framework,\n                    is_get_product_image: true,\n                    product_id: not_reviewed_product_details[0].product_id\n                  },\n                  {\n                    headers: {\n                      Authorization: `Bearer ${this.$session.get(\"at\")}`\n                    }\n                  }\n                )\n                .then(response => {\n                  if(response.data.MSG === 'Image Received Successfully'){\n                    var product_review_img_url = response.data.image_src;\n                    var msg = {\n                      is_review_rating_product: true,\n                      not_reviewed_product_details: not_reviewed_product_details[0],\n                      review_message_first: this.review_message_first,\n                      review_message_second: this.review_message_second,\n                      product_review_img_url: product_review_img_url,\n                      product_rating: null,\n                      product_review: '',\n                      time: this.generate_time(),\n                    };\n                    this.chat.push(msg);\n                    this.update_scrollbar(\"upto_end\", \"response\");\n                  }\n                });\n            }\n          }\n        })\n        .catch(e => {\n          toastr.error(\"Some Error Occurred.\");\n          if (\n            e.response.status === 410 ||\n            e.response.status === 440 ||\n            e.response.status === 409\n          ) {\n            this.$root.$emit(\"Session_Expired\", e.response.data);\n          }\n        });\n    },\n    submit_review_rating(index){\n      if (Boolean(this.chat[index].product_rating) === false){\n        swal({\n          text: \"Please give rating\",\n          toast: true,\n          showCancelButton: false,\n          showConfirmButton: false,\n          type: \"warning\",\n          position: \"top-end\",\n          timer: 5000,\n        });\n        return\n      }\n      if (Boolean(this.chat[index].product_review) === false){\n        swal({\n          text: \"Please write review\",\n          toast: true,\n          showCancelButton: false,\n          showConfirmButton: false,\n          type: \"warning\",\n          position: \"top-end\",\n          timer: 5000,\n        });\n        return\n      }\n      if (this.retail_web_framework == \"shopify\"){\n        var product_details = {\n          \"product_id\":this.chat[index].not_reviewed_product_details.product_id,\n          \"name\":this.chat[index].not_reviewed_product_details.name,\n          \"image_src\":this.chat[index].product_review_img_url,\n          \"price\":this.chat[index].not_reviewed_product_details.price,\n          \"quantity\":this.chat[index].not_reviewed_product_details.quantity,\n          \"variant_id\":this.chat[index].not_reviewed_product_details.variant_id,\n        }\n      }else if(this.retail_web_framework == \"woocommerce\"){\n        var product_details = {\n          \"product_id\":this.chat[index].not_reviewed_product_details.product_id,\n          \"name\":this.chat[index].not_reviewed_product_details.name,\n          \"image_src\":this.chat[index].product_review_img_url,\n          \"price\":this.chat[index].not_reviewed_product_details.price,\n          \"quantity\":this.chat[index].not_reviewed_product_details.quantity,\n          \"variant_id\":this.chat[index].not_reviewed_product_details.variation_id\n        }\n      }else if(this.retail_web_framework == \"magento\"){\n        var product_details = {\n          \"product_id\":this.chat[index].not_reviewed_product_details.product_id,\n          \"name\":this.chat[index].not_reviewed_product_details.name,\n          \"image_src\":this.chat[index].product_review_img_url,\n          \"price\":this.chat[index].not_reviewed_product_details.price,\n          \"quantity\":this.chat[index].not_reviewed_product_details.qty_shipped,\n          \"variant_id\":this.chat[index].not_reviewed_product_details.sku\n        }\n      }\n      axios\n        .post(\n          api_calls.product_review_rating(),\n          {\n            company_name: this.companyname,\n            company_id: this.companyid,\n            email: this.$session.get(\"UserInformation\").email,\n            license_key: this.$session.get(\"UserInformation\").license_key,\n            token: this.bot_response_token_value,\n            username: this.$session.get(\"UserInformation\").email,\n            is_save_review_rating: true,\n            review_rating_customer_id: this.$session.get(\"shopify_customer_id\"),\n            review_rating_customer_email: this.$session.get(\"shopify_customer_token\"),\n            product_rating: this.chat[index].product_rating,\n            product_review: this.chat[index].product_review,\n            product_details: product_details\n          },\n          {\n            headers: {\n              Authorization: `Bearer ${this.$session.get(\"at\")}`\n            }\n          }\n        )\n        .then(response => {\n          if (\n            response.data != \"\" &&\n            response.data != null &&\n            response.data != \"Internal server Error\"\n          ) {\n            this.chat[index].is_review_rating_product = false;\n            // this.chat[index].received = this.review_response_message;\n            // this.chat[index].time = this.generate_time();\n            var msg = {\n              received: this.review_response_message,\n              conversation_only: true,\n              receiving: true,\n              time: this.generate_time(),\n            };\n            this.chat.push(msg);\n            this.update_scrollbar(\"upto_end\", \"response\");\n            if(response.data.MSG === 'Review Saved Successfully'){\n              swal({\n                text: this.review_response_message,\n                toast: true,\n                showCancelButton: false,\n                showConfirmButton: false,\n                type: \"success\",\n                position: \"top-end\",\n                timer: 5000,\n              });\n            }else if(response.data.MSG === \"Review Not Saved Successfully\"){\n              swal({\n                text: \"Some Error Occurred.\",\n                toast: true,\n                showCancelButton: false,\n                showConfirmButton: false,\n                type: \"error\",\n                position: \"top-end\",\n                timer: 5000,\n              });\n            }\n          } else {\n            toastr.error(\"Internal Server Error\");\n          }\n        })\n        .catch(e => {\n          toastr.error(\"Some Error Occurred.\");\n          if (\n            e.response.status === 410 ||\n            e.response.status === 440 ||\n            e.response.status === 409\n          ) {\n            this.$root.$emit(\"Session_Expired\", e.response.data);\n          }\n        });\n    },\n    closecart(close_cart) {\n      this.is_cense_cart = close_cart;\n    },\n    cart_communication(cart_data){\n      this.addtoCartdata = [];\n      this.total_products_qty = 0;\n      for (var i in cart_data){\n        this.addtoCartdata.push(cart_data[i]);\n      }\n      for (var j in this.addtoCartdata){\n         this.total_products_qty = this.total_products_qty + this.addtoCartdata[j].order_qty;\n      }\n    },\n    update_quantity(func, chat_id, index, product) {\n      var vm = this;\n      this.over_qty_warning = false;\n      var buy = parseInt(this.chat[chat_id].products_list[index].buy_qty);\n      var order = this.chat[chat_id].products_list[index].order_qty;\n      var stock = this.chat[chat_id].products_list[index].stock_quantity;\n      if (this.addtoCartdata.length !== 0 && stock != null ){\n        for (var i in this.addtoCartdata){\n          if (this.addtoCartdata[i].id == product.id ){\n            let cart_order_qty = this.addtoCartdata[i].order_qty;\n            stock = stock - cart_order_qty;\n          }\n        }\n      }\n      var total = buy + order;\n      if (func === \"+\") {\n        this.chat[chat_id].products_list[index].order_qty = 1;\n        if((total <= stock) || stock == null && !isNaN(total)){\n          this.chat[chat_id].products_list[index].buy_qty += 1;\n          vm.$set(\n            vm.chat, chat_id,\n            vm.chat[chat_id]\n          );\n        }else {\n          this.chat[chat_id].products_list[index].order_qty = 2;\n          if (stock === 0 ){\n            this.chat[chat_id].products_list[index].buy_qty = 1;\n          }else{\n          this.chat[chat_id].products_list[index].buy_qty = stock;\n          }\n        }\n      }\n      if (func === \"-\") {\n        if (buy > 1 && !isNaN(total)){\n          this.chat[chat_id].products_list[index].order_qty = 1;\n          this.chat[chat_id].products_list[index].buy_qty -= 1;\n          vm.$set(\n            vm.chat, chat_id,\n            vm.chat[chat_id]\n          );\n        }else{\n          this.chat[chat_id].products_list[index].buy_qty = 1;\n          this.chat[chat_id].products_list[index].order_qty = 1;\n        }\n      }\n      if (func === \"manual\") {\n        var quantity = Math.abs(parseInt(product.buy_qty));\n        if (!isNaN(quantity)){\n          this.chat[chat_id].products_list[index].order_qty = 1;\n          if (quantity){\n            if ((quantity <= stock) || stock == null){\n              this.chat[chat_id].products_list[index].buy_qty = quantity;\n            }else {\n              this.chat[chat_id].products_list[index].order_qty = 2;\n              if (stock === 0 ){\n                this.chat[chat_id].products_list[index].buy_qty = 1;\n              }else{\n                this.chat[chat_id].products_list[index].buy_qty = stock;\n              }\n            }\n            vm.$set(\n              vm.chat, chat_id,\n              vm.chat[chat_id]\n            );\n          }\n        }else if (isNaN(total)) {\n          this.chat[chat_id].products_list[index].buy_qty = 1;\n          this.chat[chat_id].products_list[index].order_qty = 1\n          vm.$set(\n            vm.chat, chat_id,\n            vm.chat[chat_id]\n          );         \n        }\n      }\n    },\n    addproduct(product){\n      this.total_products_qty = 0;\n      this.over_qty_warning = false;\n      var audio = new Audio(sound);\n      audio.play();\n      var cart = $('#cense-cart-btn');\n      var cart_qty = $('#cart-qty-num');\n      var cart_img = $('#cart-img');\n      if (this.addtoCartdata.length != 0 && product.buy_qty !== ''){\n        var check = false;\n        for (var i in this.addtoCartdata) {\n          if (this.addtoCartdata[i].id == product.id){\n            check = true\n            var buy = product.buy_qty + this.addtoCartdata[i].order_qty;\n            if ((product.stock_quantity > this.addtoCartdata[i].order_qty) && \n            (buy <= product.stock_quantity)){\n              this.addtoCartdata[i].order_qty = buy;\n              product.order_qty = 1;\n              setTimeout(function(){\n                cart_qty.addClass('cart-qty');\n                cart_img.addClass('cart-img');\n                cart.addClass('shake');\n                setTimeout(function(){\n                  cart_qty.removeClass('cart-qty');\n                  cart_img.removeClass('cart-img');\n                  cart.removeClass('shake');\n                },500)\n              },0)\n            }else if(product.stock_quantity == null){\n              this.addtoCartdata[i].order_qty = buy;\n              product.order_qty = 1;\n              setTimeout(function(){\n                cart_qty.addClass('cart-qty');\n                cart_img.addClass('cart-img');\n                cart.addClass('shake');\n                setTimeout(function(){\n                  cart_qty.removeClass('cart-qty');\n                  cart_img.removeClass('cart-img');\n                  cart.removeClass('shake');\n                },500)\n              },0)\n            }else{\n              product.order_qty = 2;\n              let res = product.stock_quantity - this.addtoCartdata[i].order_qty;\n              product.buy_qty = res === 0 ? 1 : res;\n              this.over_qty_warning = true;\n            }\n          }\n        }\n        if(check != true && ((product.buy_qty <= product.stock_quantity) || product.stock_quantity == null)){\n          this.addtoCartdata.push({\n            id: product.id,\n            img_url: product.img_url,\n            price: product.price,\n            stock_quantity: product.stock_quantity,\n            order_qty: product.buy_qty,\n            buy_qty: 1,\n            variant_title: product.variant_title,\n            stock_status: product.stock_status,\n            title: product.title\n          });\n            setTimeout(function(){\n              cart_qty.addClass('cart-qty');\n              cart_img.addClass('cart-img');\n              cart.addClass('shake');\n              setTimeout(function(){\n                cart_qty.removeClass('cart-qty');\n                cart_img.removeClass('cart-img');\n                cart.removeClass('shake');\n              },500)\n            },0)\n        }else if(check != true && (product.buy_qty > product.stock_quantity)){\n          this.over_qty_warning = true;\n        }\n      }else if((product.buy_qty <= product.stock_quantity)&& product.buy_qty !== '' || product.stock_quantity == null){\n      this.addtoCartdata.push({\n            id: product.id,\n            img_url: product.img_url,\n            price: product.price,\n            stock_quantity: product.stock_quantity,\n            order_qty: product.buy_qty,\n            buy_qty: 1,\n            variant_title: product.variant_title,\n            stock_status: product.stock_status,\n            title: product.title\n          });\n        setTimeout(function(){\n        cart_qty.addClass('cart-qty');\n        cart_img.addClass('cart-img');\n        cart.addClass('shake');\n        setTimeout(function(){\n          cart_qty.removeClass('cart-qty');\n          cart_img.removeClass('cart-img');\n          cart.removeClass('shake');\n        },500)\n      },0)\n      }else{\n        this.over_qty_warning = true;\n      }\n      for (var j in this.addtoCartdata){\n         this.total_products_qty = this.total_products_qty + this.addtoCartdata[j].order_qty;\n      }\n    },\n    selected_product(value) {\n      if (event.target.checked) {\n        if (value == \"all\") {\n          this.checked_list = [];\n          for (var i in this.product_out_of_stock_list) {\n            this.checked_list.push(this.product_out_of_stock_list[i]);\n          }\n          $(\"input:checkbox\").prop(\"checked\", false);\n          for (let i = 0; i < this.checked_list.length; i++) {\n            $(\n              \"#product_checkbox_\" +\n                this.product_out_of_stock_list[i].product_id\n            ).prop(\"checked\", true);\n            $(\"#selectall\").prop(\"checked\", true);\n          }\n        } else {\n          this.checked_list.push(value);\n        }\n      } else if (!event.target.checked) {\n        if (value != \"all\") {\n          var selectall = document.querySelector(\"#selectall\");\n          if (selectall.checked) {\n            selectall.checked = false;\n          }\n          var temp = this.checked_list.filter((product_id) => {\n            return product_id != value;\n          });\n          this.checked_list = temp;\n        } else {\n          $(\"input:checkbox\").prop(\"checked\", false);\n          for (let i = 0; i < this.checked_list.length; i++) {\n            $(\n              \"#product_checkbox_\" +\n                this.product_out_of_stock_list[i].product_id\n            ).prop(\"checked\", false);\n            $(\"#selectall\").prop(\"checked\", false);\n          }\n          this.checked_list = [];\n        }\n      }\n    },\n    check_current_product_active(index) {\n      // console.table(index, this.templatelist[index], this.current_template);\n      if (Boolean(this.product_out_of_stock_list[index]) === true) {\n        return this.product_out_of_stock_list[index].product_id ===\n          this.current_product.product_id\n          ? \"current-active-template\"\n          : null;\n      }\n    },\n    show_product(index) {\n      this.current_product = this.product_out_of_stock_list[index];\n    },\n    add_to_out_of_stock_list(items) {\n      this.product_out_of_stock_list = items;\n      this.checked_list = [];\n      $(\"input:checkbox\").prop(\"checked\", false);\n    },\n    submit_out_of_stock_products() {\n      if (this.checked_list.length == 0) {\n        swal({\n          text: \"Please select some products\",\n          toast: true,\n          position: \"top-end\",\n          type: \"warning\",\n          showConfirmButton: false,\n          timer: 2500,\n        });\n        return;\n      } else if (\n        this.customer_email == \"\" ||\n        !this.reg_email.test(this.customer_email)\n      ) {\n        swal({\n          text: \"Please enter a valid email address\",\n          toast: true,\n          position: \"top-end\",\n          type: \"warning\",\n          showConfirmButton: false,\n          timer: 2500,\n        });\n        return;\n      }\n      swal({\n        text: \"Please wait while we are submitting your details...\",\n        type: \"info\",\n        toast: true,\n        showConfirmButton: false,\n      });\n      this.spinnerOn = true;\n      axios\n        .post(\n          api_calls.outofstockemailnotification(),\n          {\n            company_id: this.companyid,\n            company_name: this.companyname,\n            license_key: this.$session.get(\"UserInformation\").license_key,\n            email: this.customer_email,\n            product_list: this.checked_list,\n            token:this.bot_response_token_value,\n            username:this.$session.get(\"UserInformation\").email,\n          },\n          {\n            headers: {\n              Authorization: `Bearer ${this.$session.get(\"at\")}`,\n            },\n          }\n        )\n        .then(({ data }) => {\n          if (data.message == \"Query Executed Successfully\") {\n            swal({\n              type: \"success\",\n              text:\n                \"You'll be notified through email when the products get back in stock\",\n              timer: 2500,\n            }).then((result) => {\n              this.customer_email = \"\";\n              this.checked_list = [];\n              $(\"input:checkbox\").prop(\"checked\", false);\n              $(\"#notifyemail\").modal(\"hide\");\n            });\n          }\n        })\n        .catch((e) => {\n          this.spinnerOn = false;\n          if (\n            e.response.status === 410 ||\n            e.response.status === 440 ||\n            e.response.status === 409\n          ) {\n            this.$root.$emit(\"Session_Expired\", e.response.data);\n          }\n        });\n    },\n    refresh_chatbot(type) {\n      this.refreshed_or_closed = true;\n      axios\n        .post(api_calls.chatbot_response_cense(), {\n          license_key: this.$session.get(\"UserInformation\").license_key,\n          token: this.bot_response_token_value,\n          username: this.$session.get(\"UserInformation\").email,\n          source: \"Web\",\n          chat: \"\",\n          data: \"\",\n          role: this.$session.get(\"UserInformation\").role,\n          refreshed_or_closed: this.refreshed_or_closed,\n        })\n        .then((resp) => {\n          this.refreshed_or_closed = false;\n          let welcome_msg_companies = [\n            \"CustomerHappiness95185\",\n            \"3x5ive99534\",\n            \"Foreignxchange17491\",\n            \"360_technology\",\n          ];\n          setTimeout(() => {\n            // if (this.shopify_ui == null && this.retail_web_framework == \"shopify\") {\n            //   this.initialize_shopify_ui();\n            // }\n          }, 100);\n          if (type == \"support\") {\n            this.chat.push({\n              receiving: true,\n              received: \"Is there anything else I can help you with?\",\n              conversation_only: true,\n              time: this.generate_time(),\n            });\n          }\n          if (welcome_msg_companies.includes(this.companyid)) {\n            axios\n              .post(api_calls.chatbot_response_cense(), {\n                chat: \"/welcome_message\",\n                token: this.bot_response_token_value,\n                username: this.$session.get(\"UserInformation\").email,\n                source: \"Web\",\n                license_key: this.$session.get(\"UserInformation\").license_key,\n                data: \"\",\n                role: this.$session.get(\"UserInformation\").role,\n                refreshed_or_closed: false,\n              })\n              .then((response) => {\n                this.push_msg(response, response.data.responses);\n                // this.response_handling(response);\n              });\n          } else {\n            this.welcome_message_not_yet_received = false;\n          }\n        });\n    },\n    download_file(url, file_name) {\n      event.preventDefault();\n      var link = document.createElement(\"a\");\n      link.href = url;\n      link.setAttribute(\"download\", file_name);\n      document.body.appendChild(link);\n      link.click();\n    },\n    scroll_div() {\n      var doc = document.querySelector(\".buy-products\");\n      if (event.deltaX > event.deltaY) {\n        doc.scrollLeft += 10;\n      } else if (event.deltaX < event.deltaY) {\n        doc.scrollLeft -= 10;\n      }\n    },\n    scroll_div1(item) {\n      var doc = document.querySelector(`#buy_product_id_${item}`);\n      if (event.deltaX > event.deltaY) {\n        doc.scrollLeft += 10;\n      } else if (event.deltaX < event.deltaY) {\n        doc.scrollLeft -= 10;\n      }\n    },\n    scroll_div_right(item) {\n      var doc = document.querySelector(`#buy_product_id_${item}`);\n        doc.scrollLeft += 100;\n    },\n    scroll_div_left(item) {\n      var doc = document.querySelector(`#buy_product_id_${item}`);\n        doc.scrollLeft -= 100;\n    },\n    call_support(type) {\n      if (type == \"Yes\") {\n        axios\n          .post(api_calls.chatbot_response_cense(), {\n            license_key: this.$session.get(\"UserInformation\").license_key,\n            token: this.bot_response_token_value,\n            username: this.$session.get(\"UserInformation\").email,\n            source: \"Web\",\n            chat: \"/call_support\",\n            token: this.bot_response_token_value,\n            role: this.$session.get(\"UserInformation\").role,\n            refreshed_or_closed: this.refreshed_or_closed,\n          })\n          .then((resp) => {\n            this.chat.push({\n              conversation_only: true,\n              receiving: true,\n              received: resp.data.responses[0].text,\n              time: this.generate_time(),\n            });\n            // this.$session.set(\"BotResponse_Conversation\", this.chat);\n            this.update_scrollbar(\"upto_end\", \"response\");\n          });\n      } else if (type == \"No\") {\n        this.chat.push(this.chat[0]);\n        this.chat.push(this.chat[1]);\n        this.update_scrollbar(\"upto_end\", \"response\");\n        // this.refresh_chatbot(\"support\");\n      }\n    },\n    parse(string) {\n      return string.replace(/{{.*?}}/g, (match) => {\n        var today = new Date();\n        var dd = today.getDate();\n\n        var mm = today.getMonth() + 1;\n        var yyyy = today.getFullYear();\n        if (dd < 10) {\n          dd = \"0\" + dd;\n        }\n\n        if (mm < 10) {\n          mm = \"0\" + mm;\n        }\n        today = dd + \"-\" + mm + \"-\" + yyyy;\n        var expression = match.slice(2, -2);\n        this.$data[expression] = today;\n        return this.$data[expression];\n      });\n    },\n    show_popup() {\n      this.show = false;\n      this.stop = false;\n    },\n    sub_leaf_node_call(divclick) {\n      // var divclick = event.target.innerText\n      if (divclick == \"Watch Demo Video\") {\n        this.demourlbind = true;\n        this.reviewsurlbind = false;\n      } else if (divclick == \"User Reviews/Testimonials\") {\n        this.reviewsurlbind = true;\n        this.demourlbind = false;\n      }\n      if (\n        divclick == \"Watch Demo Video\" ||\n        divclick == \"User Reviews/Testimonials\"\n      ) {\n        this.show = !this.show;\n        this.update_scrollbar();\n        setTimeout(() => {\n          this.is_typing_indicator_on = false;\n        }, 1000);\n      } else if (divclick == \"Buy Tutorial\") {\n        this.cense_enquiry = true;\n        axios\n          .post(api_calls.chatbot_response_cense(), {\n            username: this.$session.get(\"UserInformation\").email,\n            token: this.bot_response_token_value,\n            chat: \"/personal_details\",\n            source: \"Web\",\n            license_key: this.$session.get(\"UserInformation\").license_key,\n            role: this.$session.get(\"UserInformation\").role,\n            refreshed_or_closed: \"\",\n          })\n          .then((response) => {\n            var msg = {\n              received: response.data.responses[0].text,\n              conversation_only: true,\n              receiving: true,\n              time: this.generate_time(),\n            };\n            this.chat.push(msg);\n            this.update_scrollbar();\n            setTimeout(() => {\n              this.is_typing_indicator_on = false;\n            }, 1000);\n            // this.$session.set(\"BotResponse_Conversation\", this.chat);\n          });\n      }\n    },\n    ticket_number() {\n      let random_num = Math.floor(1000000 + Math.random() * 9000000);\n      let company = this.companyname.slice(0, 1).toUpperCase();\n      return `${company}_${random_num}`;\n    },\n    send_message(type, message, to_be_displayed) {\n      // harsh\n      event.preventDefault();\n      if (this.selected_indication[0] != undefined) {\n        if (type == \"is_button\") {\n          this.to_send = message.value + JSON.stringify(this.res);\n        } else {\n          type = \"is_prompt\";\n          to_be_displayed = this.to_send;\n          this.to_send =\n            this.selected_indication[0].value.split(\"{\")[0] +\n            JSON.stringify(this.res);\n        }\n      }\n      if (type == \"is_button\") {\n        $(\"#response_bot_text\").prop(\"disabled\", false);\n        if (\n          message.value == \"isdisabled\" &&\n          this.companyid == \"clinicaltrials81352\" &&\n          message.title == \"No\"\n        ) {\n        } else if (message.value === \"/live_chat\") {\n          this.start_live_chat();\n        } else {\n          var vm = this;\n          function send_msg(toSend, customDisplayMsg) {\n            vm.is_typing_indicator_on = true;\n            vm.update_scrollbar(\"upto_end\", \"sender\");\n            setTimeout(() => {\n              vm.chat.push({\n              sent: customDisplayMsg\n                ? `${message.title} ${customDisplayMsg}`\n                : message.title,\n              sending: true,\n              time: vm.generate_time(),\n              conversation_only: true,\n              delivered: true,\n              dropdown: \"\",\n            });\n            }, 850);\n            if (\n              vm.chat[to_be_displayed] &&\n              vm.chat[to_be_displayed].removable == true\n            ) {\n              document\n                .querySelector(\"#chat\" + to_be_displayed)\n                .classList.add(\"--delete\");\n              setTimeout(() => {\n                vm.chat.splice(to_be_displayed, 1);\n              }, 850);\n              // document.getElementById(\"response_bot_text\").disabled = false;\n            }\n            if (\n              vm.chat[to_be_displayed - 1] &&\n              vm.chat[to_be_displayed - 1].is_multiselect &&\n              (message.title == \"Approve\" ||\n                message.title == \"Reject\" ||\n                message.title == \"Comment and Return\")\n            ) {\n              vm.chat[to_be_displayed - 1].disabled = true;\n            }\n            axios\n              .post(api_calls.chatbot_response_cense(), {\n                chat: toSend,\n                token: vm.bot_response_token_value,\n                username: vm.$session.get(\"UserInformation\").email,\n                source: \"Web\",\n                license_key: vm.$session.get(\"UserInformation\").license_key,\n                role: vm.$session.get(\"UserInformation\").role,\n                refreshed_or_closed: vm.refreshed_or_closed,\n              })\n              .then((response) => {\n                vm.response_handling(response);\n              });\n            vm.selected_indication = [];\n            vm.to_send = \"\";\n          }\n\n          if (this.companyid == \"360_technology\") {\n            if (\n              this.chat[to_be_displayed - 1] &&\n              this.chat[to_be_displayed - 1].value_mapping\n            ) {\n              let valueMappingData = JSON.parse(\n                JSON.stringify(this.chat[to_be_displayed - 1].value_mapping)\n              );\n              this.adddropdownvalue(valueMappingData).then(() => {\n                this.to_send = message.value + JSON.stringify(this.res);\n                if (this.chat[to_be_displayed - 1].value_mapping) {\n                  if (valueMappingData.length === 0) {\n                    send_msg(message.value);\n                  } else {\n                    send_msg(\n                      this.to_send,\n                      `for ${this.selected_indication\n                        .map((obj) => {\n                          return obj.title;\n                        })\n                        .toString()}`\n                    );\n                  }\n                }\n              });\n            } else if (message.value.split(\"{\").length > 1) {\n              let customDisplayMsg = Object.values(\n                JSON.parse(`{${message.value.split(\"{\")[1]}`)\n              )[0];\n              send_msg(message.value, `for ${customDisplayMsg}`);\n            } else if (\n              this.chat[to_be_displayed - 1] &&\n              this.chat[to_be_displayed - 1].show_text_area\n            ) {\n              send_msg(message.value);\n              this.chat[to_be_displayed - 1].disabled = true;\n            } else {\n              send_msg(message.value);\n            }\n          } else {\n            send_msg(message.value);\n          }\n        }\n      } else if (type == \"is_prompt\") {\n        this.is_typing_indicator_on = true;\n        this.chat.push({\n          sent: to_be_displayed,\n          sending: true,\n          time: this.generate_time(),\n          conversation_only: true,\n          delivered: true,\n        });\n        this.update_scrollbar(\"upto_end\", \"sender\");\n        axios\n          .post(api_calls.chatbot_response_cense(), {\n            // host: this.user_data.host,\n            role: this.$session.get(\"UserInformation\").role,\n            license_key: this.$session.get(\"UserInformation\").license_key,\n            token: this.bot_response_token_value,\n            username: this.$session.get(\"UserInformation\").email,\n            source: \"Web\",\n            chat: this.to_send,\n          })\n          .then((response) => {\n            this.response_handling(response);\n            this.ex1();\n          });\n      } else if (this.to_send == \"Restart\" || this.to_send == \"restart\") {\n        axios\n          .post(api_calls.prompt_url(), {\n            uid: \"cense\", // this.fingerprint\n            companyid: this.$session.get(\"UserInformation\").company_id,\n            license_key: this.$session.get(\"UserInformation\").license_key,\n            chat: \"\",\n          })\n          .then((response) => {\n            this.chat.push(response.data);\n            this.update_scrollbar(\"upto_end\", \"response\");\n            // this.$session.set(\"BotResponse_Conversation\", this.chat);\n            this.level = response.data.level;\n          })\n          .catch((e) => {});\n      } else if (this.cense_enquiry == true && Boolean(this.to_send)) {\n        this.is_typing_indicator_on = true;\n        var send_msg = {\n          sent: this.to_send,\n          conversation_only: true,\n          sending: true,\n          time: this.generate_time(),\n        };\n        this.chat.push(send_msg);\n        // this.$session.set(\"BotResponse_Conversation\", this.chat);\n        this.update_scrollbar(\"upto_end\");\n        axios\n          .post(api_calls.chatbot_response_cense(), {\n            username: this.$session.get(\"UserInformation\").email,\n            token: this.bot_response_token_value,\n            chat: \"/personal_details\",\n            source: \"Web\",\n            Companyid: \"CO00023\",\n            data: \"\",\n            role: this.$session.get(\"UserInformation\").role,\n            refreshed_or_closed: \"\",\n            license_key: this.$session.get(\"UserInformation\").license_key,\n          })\n          .then((response) => {\n            var msg = {\n              received: response.data.responses[0].text,\n              conversation_only: true,\n              receiving: true,\n              time: this.generate_time(),\n            };\n            this.chat.push(msg);\n            // this.$session.set(\"BotResponse_Conversation\", this.chat);\n            this.refreshed_or_closed = false;\n            this.update_scrollbar(\"upto_end\", \"response\");\n          })\n          .catch((e) => {\n            this.is_typing_indicator_on = false;\n          });\n      } else if (this.live_chat_on) {\n        // LIVE CHAT ON CUSTOMER MESSAGES\n        if (Boolean(this.user_name) === false) {\n          this.channel.push(\"new_name\", { name: this.to_send });\n          this.user_name = this.to_send;\n          this.update_scrollbar(\"upto_end\", \"response\");\n        } else {\n          this.channel.push(\"new_name\", { name: this.user_name });\n          this.channel.push(\"new_chat_message\", { message: this.to_send });\n          this.update_scrollbar(\"upto_end\", \"response\");\n        }\n        this.chat.push({\n          sent: this.to_send,\n          sending: true,\n          conversation_only: true,\n          time: this.generate_time(),\n        });\n        // this.$session.set(\"BotResponse_Conversation\", this.chat);\n        this.update_scrollbar(\"upto_end\", \"sender\");\n      } else if (Boolean(this.to_send) && this.cense_enquiry != true) {\n        this.chat.push({\n          conversation_only: true,\n          sending: true,\n          sent: this.to_send,\n          time: this.generate_time(),\n        });\n        // this.$session.set(\"BotResponse_Conversation\", this.chat);\n        this.update_scrollbar(\"upto_end\", \"sender\");\n        axios\n          .post(api_calls.chatbot_response_cense(), {\n            license_key: this.$session.get(\"UserInformation\").license_key,\n            token: this.bot_response_token_value,\n            username: this.$session.get(\"UserInformation\").email,\n            source: \"Web\",\n            chat: this.to_send,\n            token: this.bot_response_token_value,\n            role: this.$session.get(\"UserInformation\").role,\n            refreshed_or_closed: this.refreshed_or_closed,\n          })\n          .then((response) => {\n            this.response_handling(response);\n          })\n          .catch((e) => {\n            this.update_scrollbar(\"upto_end\", \"response\");\n          });\n      }\n      this.to_send = \"\";\n    },\n    initiate_support_chat() {\n      this.chat.push({\n        receiving: true,\n        received: \"Sorry I am not getting your question\",\n        conversation_only: true,\n      });\n      this.chat.push({\n        receiving: true,\n        received: \"Would you like to talk with support team?\",\n        conversation_only: true,\n        show_buttons: true,\n        support_buttons: true,\n        time: this.generate_time(),\n      });\n      this.update_scrollbar(\"upto_end\", \"response\");\n    },\n    disconnect_support_chat() {\n      this.channel.push(\"stopped_chat\", {\n        name: this.user_name,\n        message: \" has ended the conversation.\",\n      });\n      this.channel.leave();\n      this.live_chat_token = null;\n      this.chat_group_name = null;\n      this.support_agent_info = null;\n      this.user_name = \"\";\n      this.chat_socket.disconnect();\n      this.live_chat_on = false;\n    },\n    generate_payment(price, name) {\n      var vm = this;\n      var options = {\n        key: \"rzp_test_SnDTaPnncfliDt\",\n        amount: price * 100,\n        company_id: this.$session.get(\"UserInformation\").company_id,\n        company_name: this.$session.get(\"UserInformation\").company_name,\n        name: \"Cense AI\",\n        currency: \"INR\",\n        description: \"Instill Intelligence\",\n        image: \"/img/cense_image.png\", // COMPANY LOGO\n        handler: function (response) {\n          var contact = $('#contact[type=\"tel\"]').value;\n          var email = $('#email[type=\"email\"]').value;\n          vm.paymentid = response.razorpay_payment_id;\n\n          if (transfer_account != null) {\n            vm.transfer_payment(transfer_account, price * 100, \"INR\", name);\n          }\n        },\n        prefill: {\n          name: \"\", // pass customer name\n          email: \"\", // customer email\n          contact: \"\", // customer phone no.\n        },\n        notes: {\n          address: \"address\", // customer address\n        },\n        theme: {\n          color: \"#283777\", // screen color\n        },\n      };\n      var rzp1 = new Razorpay(options);\n      rzp1.open();\n      event.preventDefault();\n    },\n    chat_response_error() {\n      this.chat.push({\n        conversation_only: true,\n        receiving: true,\n        received: \"Sorry I'm not getting your question\",\n        time: this.generate_time(),\n      });\n      // this.$session.set(\"BotResponse_Conversation\", this.chat);\n      this.update_scrollbar(\"upto_end\", \"response\");\n    },\n    send_request_json(message) {\n      axios\n        .post(api_calls.chatbot_response_cense(), {\n          license_key: this.$session.get(\"UserInformation\").license_key,\n          token: this.bot_response_token_value,\n          username: this.$session.get(\"UserInformation\").email,\n          token: this.bot_response_token_value,\n          role: this.$session.get(\"UserInformation\").role,\n          refreshed_or_closed: this.refreshed_or_closed,\n          chat: \"\",\n          source: \"Web\",\n          data: this.json_data[message.responses[0].intent],\n        })\n        .then((resp) => {\n          this.chat.push({\n            conversation_only: true,\n            receiving: true,\n            received:\n              resp.data.responses.length == 0\n                ? \"Sorry I'm not getting your question\"\n                : resp.data.responses[0].text,\n            time: this.generate_time(),\n            image:\n              resp.data.responses[0].img == \"\"\n                ? null\n                : resp.data.responses[0].img,\n          });\n          // this.$session.set(\"BotResponse_Conversation\", this.chat);\n          this.update_scrollbar(\"upto_end\", \"response\");\n        });\n    },\n    response_handling(response, type) {\n      var i = 0;\n      var delay = 50;\n      // response.data.responses[i].text != undefined ? 500\n      // response.data.responses[i].text.length > 10\n      //   ? 500\n      //   : 500;\n      var vm = this;\n      vm.is_typing_indicator_on = true;\n      setTimeout(() => {\n        handle_response();\n      }, delay);\n      function handle_response() {\n        setTimeout(() => {\n          vm.is_typing_indicator_on = false;\n          if (response.data == null || response.data.responses.length == 0) {\n            vm.chat_response_error();\n          } else if (Boolean(response.data.responses[i].request_json) == true) {\n            if (response.data.responses[i].text != null) {\n              vm.chat.push({\n                conversation_only: true,\n                receiving: true,\n                received: response.data.responses[i].text,\n                time: vm.generate_time(),\n                image: response.data.responses[i].img,\n                video: response.data.responses[i].video,\n              });\n              // vm.$session.set(\"BotResponse_Conversation\", vm.chat);\n              vm.update_scrollbar(\"upto_end\", \"response\");\n            }\n            if (response.data.responses[i].intent == \"gogyb450_create_ticket\") {\n              var name = `${vm.$session.get(\"UserInformation\").first_name} ${\n                vm.$session.get(\"UserInformation\").last_name\n              }`;\n              var payload = {\n                username: name,\n                companyname: vm.companyname,\n                companyid: vm.companyid,\n                user_role: vm.$session.get(\"UserInformation\").role,\n                email: vm.$session.get(\"UserInformation\").email,\n                license_key: vm.$session.get(\"UserInformation\").license_key,\n                token: vm.$session.get(\"UserInformation\").tokens,\n                ticket_issue: \"\",\n                ticket_number: vm.ticket_number(),\n                description: \"\",\n                file_content: null,\n                file_name: null,\n                isEdit: false,\n              };\n              payload = JSON.stringify(payload);\n              axios\n                .post(api_calls.chatbot_response_cense(), {\n                  license_key: vm.$session.get(\"UserInformation\").license_key,\n                  token: vm.bot_response_token_value,\n                  username: vm.$session.get(\"UserInformation\").email,\n                  token: vm.bot_response_token_value,\n                  role: vm.$session.get(\"UserInformation\").role,\n                  refreshed_or_closed: vm.refreshed_or_closed,\n                  chat: \"\",\n                  source: \"Web\",\n                  data: payload,\n                })\n                .then((resp) => {\n                  vm.chat.push({\n                    conversation_only: true,\n                    receiving: true,\n                    received:\n                      resp.data.responses.length == 0\n                        ? \"Sorry I'm not getting your question\"\n                        : resp.data.responses[i].text,\n                    time: vm.generate_time(),\n                    image: resp.data.responses[i].img,\n                    video: resp.data.responses[i].video || null,\n                  });\n                  // vm.$session.set(\"BotResponse_Conversation\", vm.chat);\n                  vm.new_update_response(i);\n                });\n            } else if (\n              response.data.responses[i].intent == \"create_appointment\"\n            ) {\n              let today_date = new Date();\n              axios\n                .post(api_calls.schedule_appointment_url(), {\n                  companyname: vm.companyname,\n                  companyid: vm.companyid,\n                  Date:\n                    today_date.getFullYear() +\n                    \"-\" +\n                    (today_date.getMonth() < 9\n                      ? \"0\" + (today_date.getMonth() + 1)\n                      : today_date.getMonth() + 1) +\n                    \"-\" +\n                    today_date.getDate(), // Month object document it\n                  // Date: start_time,\n                })\n                .then((response) => {\n                  // console.log(response.data);\n                  // this.time_slots = this.full_time_slots;\n                  // if (response.data.Slot != undefined) {\n                  //   if (response.data.Slot.length > 0) {\n                  //     let index;\n                  //     for (var i in response.data.Slot) {\n                  //       index = this.time_slots.indexOf(response.data.Slot[i]);\n                  //       if (index != -1) {\n                  //         this.time_slots.splice(index, 1);\n                  //       }\n                  //     }\n                  //   } else {\n                  //   }\n                  // }\n                })\n                .catch((e) => {\n                  console.log(e);\n                });\n            } else {\n              vm.send_request_json(response.data);\n            }\n          } \n          else if (\n            response.data.responses[i].intent == \"re_order_products_action\"\n          ) {\n            // vm.send_shopify_customer_id();\n            let msg = {\n              conversation_only: true,\n              time:\n                i == response.data.responses.length - 1\n                  ? vm.generate_time()\n                  : null,\n            ask_feedback: Boolean(response.data.responses[i].ask_feedback),\n            };\n            msg.receiving = true;\n            msg.fetch_shopify_details = true;\n            msg.is_refund = false;\n            msg.return_shopify_email = true;\n            msg.received =  \"Please login with your credentials for better experience :)\";\n            msg.metadata = {\n               entity: response.data.responses[i].entity,\n              text: response.data.responses[i].text \n              }\n            vm.chat.push(msg)\n            // vm.send_shopify_customer_id(null,false,response.data.responses[i]);\n          } \n           else if (\n            response.data.responses[i].intent == \"support_subscription_data\"\n          ) {\n            // vm.send_shopify_customer_id();\n            vm.support_subscription_data();\n          } else if (response.data.responses[i].intent == \"product_by_date\") {\n              vm.is_typing_indicator_on = true;\n              let cutoff = new Date;\n              var current_date_time = moment(cutoff).format(\"YYYY-MM-DD HH:mm:ss\")\n              \n              let form_payload = JSON.stringify({\n                usr_msg: response.data.responses[i].usr_msg,\n                current_user_date: current_date_time\n              });\n              \n              axios\n                .post(api_calls.chatbot_response_cense(), {\n                  license_key: vm.$session.get(\"UserInformation\").license_key,\n                  token: vm.bot_response_token_value,\n                  username: vm.$session.get(\"UserInformation\").email,\n                  token: vm.bot_response_token_value,\n                  role: vm.$session.get(\"UserInformation\").role,\n                  refreshed_or_closed: vm.refreshed_or_closed,\n                  chat: `/product_by_date${form_payload}`,\n                  source: \"Web\",\n                })\n                .then((response) => {\n                  vm.response_handling(response);\n                });\n          } else if (\n            Boolean(response.data.responses[i].return_intent) == true\n          ) {\n            this.is_typing_indicator_on = true;\n            axios\n              .post(api_calls.chatbot_response_cense(), {\n                license_key: vm.$session.get(\"UserInformation\").license_key,\n                token: vm.bot_response_token_value,\n                username: vm.$session.get(\"UserInformation\").email,\n                token: vm.bot_response_token_value,\n                role: vm.$session.get(\"UserInformation\").role,\n                refreshed_or_closed: vm.refreshed_or_closed,\n                chat: \"/\" + response.data.responses[i].intent,\n                source: \"Web\",\n              })\n              .then((response) => {\n                vm.handle_response(response);\n              });\n          } else if (\n            vm.companyid == \"3x5ive99534\" &&\n            response.data.responses[i].intent != undefined &&\n            response.data.responses[i].intent == \"confusion\"\n          ) {\n            vm.confusion_message(\"/need_help\");\n          } else if (response.data.responses[i].buttons != undefined &&\n            response.data.responses[i].buttons.length > 0) {\n            vm.load_buttons(response.data.responses[i], i, type);\n          } else if (Boolean(response.data.responses[i].custom) && response.data.responses[i].custom.type) {\n            // CHange  the condition here\n            if (\n              response.data.responses[i].custom.type != undefined &&\n              response.data.responses[i].custom.type == \"multiselect_dropdown\"\n            ) {\n              vm.multiselect_load(response.data.responses[i], i);\n            } else if (\n              response.data.responses[i].custom.type != undefined &&\n              response.data.responses[i].custom.type == \"table\"\n            ) {\n              vm.load_table(response.data.responses[i], i);\n            } else if (\n              response.data.responses[i].custom.type != undefined &&\n              response.data.responses[i].custom.type == \"retail\"\n            ) {\n              vm.display_products_chat(response.data.responses[i], i, type);\n            } else if (response.data.responses[i].custom.show_text_area) {\n              vm.load_text_area(response.data.responses[i], i);\n            } else if (response.data.responses[i].custom.buttons != undefined) {\n              vm.load_buttons(response.data.responses[i].custom, i, type);\n            }\n          } else if (\n            Boolean(response.data.responses[i].messaging_platforms) &&\n            response.data.responses[i].messaging_platforms.length > 0\n          ) {\n            var msg = {\n              // conversation_only: true,\n              time:\n                i == response.data.responses.length - 1\n                  ? vm.generate_time()\n                  : null,\n              ask_feedback: Boolean(response.data.responses[i].ask_feedback),\n              show_messaging_platforms: true,\n              // receiving: true,\n              // received:\"Please feel free to reachout to us at : \" + response.data.responses[i].contact_us_email  + vm.contact_us_phone_number(response.data.responses[i].contact_us_phone_number) +\" or drop us a message\",\n              messaging_platforms_data:\n                response.data.responses[i].messaging_platforms,\n            };\n            vm.chat.push(msg);\n          } else if (Boolean(response.data.responses[i].is_preview_banner)) {\n            vm.display_banner(response.data.responses, i);\n          } else if (Boolean(response.data.responses[i].is_display_banner)) {\n            vm.display_banner(response.data.responses, i);\n          }else {\n            var msg = {\n              conversation_only: true,\n              time:\n                i == response.data.responses.length - 1\n                  ? vm.generate_time()\n                  : null,\n              ask_feedback: Boolean(response.data.responses[i].ask_feedback),\n            };\n            if (response.data.responses.length == 0) {\n              msg.received = \"Sorry we are not getting your question.\";\n              msg.receiving = true;\n            }else if(response.data.responses[i].template === \"utter_default\"){\n                msg.receiving = true;\n                msg.received = response.data.responses[i].message.split('{email}').join(vm.contact_help_email);\n                vm.chat.push(msg);\n            }else if (\n              response.data.responses[i].text != undefined &&\n              vm.url_match_regex.test(response.data.responses[i].text)\n            ) {\n              vm.display_file_chat(response.data.responses[i].text);\n            } else if (response.data.responses[i].get_company_details === \"True\" && response.data.responses[i].intent === \"cense_support_ticket\"){\n\n               let c_id = vm.return_document_cookies('company_id');\n               let c_name = vm.return_document_cookies('company_name');\n               let c_email = vm.return_document_cookies('company_email');\n                axios\n              .post(api_calls.chatbot_response_cense(), {\n                license_key: vm.$session.get(\"UserInformation\").license_key,\n                token: vm.bot_response_token_value,\n                username: vm.$session.get(\"UserInformation\").email,\n                token: vm.bot_response_token_value,\n                role: vm.$session.get(\"UserInformation\").role,\n                refreshed_or_closed: vm.refreshed_or_closed,\n                chat:JSON.stringify({company_id : c_id,\n                      company_name : c_name,\n                      email : c_email,\n                }),\n                source: \"Web\",\n              })\n              .then((response) => {\n                vm.response_handling(response);\n              });\n            }  \n            else if (\n              response.data.responses[i].text != undefined &&\n              !response.data.responses[i].text.includes(\n                \"Download your manifest here\"\n              )\n            ) {\n              msg.received = response.data.responses[i].text;\n              msg.receiving = true;\n              msg.image = response.data.responses[i].img;\n              msg.image = response.data.responses[i].image;\n              msg.videos = response.data.responses[i].video || false;\n              msg.order_status = response.data.responses[i].order_status;\n              msg.is_order_status =\n                response.data.responses[i].is_order_status || false;\n              msg.offers = response.data.responses[i].offers || false;\n              msg.fetch_shopify_details =\n                response.data.responses[i].fetch_shopify_details || false;\n              msg.order_items = response.data.responses[i].order_items;\n              msg.shopify_fetch_customer_id_for_offers =\n                response.data.responses[i]\n                  .shopify_fetch_customer_id_for_offers || false;\n              // if (msg.shopify_fetch_customer_id_for_offers === true) {\n              //   vm.shopify_check_customer_logged_in();\n              //   return true;\n              // }\n              if(msg.offers.length < 1){\n                msg.offers = false;\n                msg.received = \"Sorry we do not have any offers currently, please check back later.\"\n              }\n              vm.chat.push(msg);\n              vm.new_update_response(i);\n            } else if (response.data.responses[i].intent == \"chat_support\") {\n              vm.start_live_chat();\n            } else if (\n              response.data.responses[i].text != undefined &&\n              (response.data.responses[i].text.includes(\n                \"Download your manifest here\"\n              ) ||\n                response.data.responses[i].text.includes(/.pdf/))\n            ) {\n              vm.display_file_chat(response.data.responses[i]);\n            } else if (\n              Boolean(response.data.responses[i].products) &&\n              (response.data.responses[i].products.length > 0 ||\n                Object.keys(response.data.responses[i].products).length)\n            ) {\n              vm.display_products_chat(response.data.responses[i], i, type);\n            } else if (response.data.responses[i].is_refund == \"True\") {\n              vm.load_refunds(response.data.responses[i]);\n            } else if (\n              response.data.responses[i].shopify_fetch_customer_id === true\n            ) {\n              vm.shopify_check_customer_logged_in();\n            }else if(response.data.responses[i].image != undefined){\n              msg.image = response.data.responses[i].image;\n              msg.receiving = true;\n              vm.chat.push(msg);\n              vm.new_update_response(i);\n            }else if(response.data.responses[i].video != undefined){\n              msg.videos = response.data.responses[i].video || false;;\n              msg.receiving = true;\n              vm.chat.push(msg);\n              vm.new_update_response(i);\n            }else if (response.data.responses[i].card != undefined && response.data.responses[i].card.length !== 0 ){\n              msg.carousel_card_list = response.data.responses[i].card;\n              vm.chat.push(msg);\n              vm.new_update_response(i);\n            }\n          }\n          if (i < response.data.responses.length - 1) {\n            i += 1;\n            vm.is_typing_indicator_on = true;\n            // delay =\n            //   response.data.responses[i].text != undefined &&\n            //   response.data.responses[i].text.length > 10\n            //     ? 2000\n            //     : 500;\n            delay = 500;\n            handle_response();\n          }\n        }, delay);\n      }\n    },\n    display_banner(response, i){\n      var vm = this;\n      var position_1 = response[i].banner_content_position[0]['id'];\n      var position_2 = response[i].banner_content_position[1]['id'];\n      var position_3 = response[i].banner_content_position[2]['id'];\n      var is_data_position_1 = response[i][position_1];\n      var is_data_position_2 = response[i][position_2];\n      var is_data_position_3 = response[i][position_3];\n      if(Boolean(is_data_position_1)){\n        var msg = {\n          conversation_only: true,\n          time:\n            (i == response.length - 1) && !(Boolean(is_data_position_2) || (Boolean(is_data_position_3)))\n              ? vm.generate_time()\n              : null,\n          ask_feedback: Boolean(response[i].ask_feedback),\n          banner_img_link: response[i].banner_img_link,\n        };\n        msg.show_bot_img = true;\n        msg['show_'+ position_1] = true;\n        msg[position_1] = is_data_position_1;\n        vm.chat.push(msg);\n        vm.new_update_response(i);\n        if(Boolean(is_data_position_2)){\n          var msg = {\n            conversation_only: true,\n            time:\n              (i == response.length - 1) && !(Boolean(is_data_position_3))\n                ? vm.generate_time()\n                : null,\n            ask_feedback: Boolean(response[i].ask_feedback),\n            banner_img_link: response[i].banner_img_link,\n          };\n          msg.show_bot_img = false;\n          msg['show_'+ position_2] = true;\n          msg[position_2] = is_data_position_2;\n          vm.chat.push(msg);\n          vm.new_update_response(i);\n        }\n        if(Boolean(is_data_position_3)){\n          var msg = {\n            conversation_only: true,\n            time:\n              i == response.length - 1\n                ? vm.generate_time()\n                : null,\n            ask_feedback: Boolean(response[i].ask_feedback),\n            banner_img_link: response[i].banner_img_link,\n          };\n          msg.show_bot_img = false;\n          msg['show_'+ position_3] = true;\n          msg[position_3] = is_data_position_3;\n          vm.chat.push(msg);\n          vm.new_update_response(i);\n        }\n      }else if(Boolean(is_data_position_2)){\n        var msg = {\n          conversation_only: true,\n          time:\n            (i == response.length - 1) && !(Boolean(is_data_position_3))\n              ? vm.generate_time()\n              : null,\n          ask_feedback: Boolean(response[i].ask_feedback),\n          banner_img_link: response[i].banner_img_link,\n        };\n        msg.show_bot_img = true;\n        msg['show_'+ position_2] = true;\n        msg[position_2] = is_data_position_2;\n        vm.chat.push(msg);\n        vm.new_update_response(i);\n        if(Boolean(is_data_position_3)){\n          var msg = {\n            conversation_only: true,\n            time:\n              i == response.length - 1\n                ? vm.generate_time()\n                : null,\n            ask_feedback: Boolean(response[i].ask_feedback),\n            banner_img_link: response[i].banner_img_link,\n          };\n          msg.show_bot_img = false;\n          msg['show_'+ position_3] = true;\n          msg[position_3] = is_data_position_3;\n          vm.chat.push(msg);\n          vm.new_update_response(i);\n        }\n      }else if(Boolean(is_data_position_3)){\n        var msg = {\n          conversation_only: true,\n          time:\n            i == response.length - 1\n              ? vm.generate_time()\n              : null,\n          ask_feedback: Boolean(response[i].ask_feedback),\n          banner_img_link: response[i].banner_img_link,\n        };\n        msg.show_bot_img = true;\n        msg['show_'+ position_3] = true;\n        msg[position_3] = is_data_position_3;\n        vm.chat.push(msg);\n        vm.new_update_response(i);\n      }\n    },\n    push_msg(responses, response) {\n      var index = 0;\n      var vm = this;\n      var delay = 50;\n      // push_chat(response[index], delay);\n      // function push_chat(msg, time_delay) {\n        for(let i = 0; i < response.length; i++) {\n          setTimeout(() => {\n          // while (i < response.length) {\n          // setTimeout(() => {\n            var msg = response[i];\n            vm.is_typing_indicator_on = true;\n            // setTimeout(() => {\n              vm.is_typing_indicator_on = false;\n              if (responses.data.responses[i].buttons != undefined && Boolean(responses.data.responses[i].buttons.length > 0)) {\n                vm.load_buttons(\n                  responses.data.responses[i],\n                  \"is_button\",\n                  \"welcome_message\",\n                  true\n                );\n              } else {\n                  vm.chat.push({\n                    conversation_only: true,\n                    receiving: true,\n                    received: msg.text,\n                    offers: msg.offers || false,\n                    time:\n                      i == response.length - 1 ? vm.generate_time() : undefined,\n                  });\n              }\n              if (this.greeting_buttons_position == i) {\n                  if (vm.is_retail_bot) vm.load_chatbot_integration_details();\n              }\n            }, i  * 1050);\n              $(\".time\").last().css(\"display\", \"none\");\n              setTimeout(() => {\n                $(\".time\").last().css(\"display\", \"block\");\n                if (i < response.length - 1) {\n                  // i += 1;\n                  // delay = 500;\n                  // push_chat(response[index], delay);\n                } else {\n                  vm.welcome_message_not_yet_received = false;\n                }\n              }, 500);\n              // setTimeout(() => {\n              // }, 1000);\n              // setTimeout(() => {\n                // i +=1;\n            // }\n              // }, 400);\n            // }, time_delay);\n            // }, i* 500);\n          }\n        setTimeout(() => {\n          vm.demo_retail_question();\n        }, delay);\n      // }\n    },  \n    confusion_message(msg_string) {\n      axios\n        .post(api_calls.chatbot_response_cense(), {\n          chat: msg_string,\n          token: this.bot_response_token_value,\n          username: this.$session.get(\"UserInformation\").email,\n          source: \"Web\",\n          license_key: this.$session.get(\"UserInformation\").license_key,\n          data: \"\",\n          role: this.$session.get(\"UserInformation\").role,\n          refreshed_or_closed: false,\n        })\n        .then((response) => {\n          this.response_handling(response);\n        });\n    },\n    display_products_chat(message, index, type) {\n      var msg = {\n        conversation_only: true,\n        time: this.generate_time(),\n      };\n      if (message.products.is_products_list) {\n        msg.is_products_list = message.products.is_products_list;\n        msg.products_list = message.products.products_list;\n        if (message.products.products_list.length === 0) {\n          msg.received = \"Sorry, we could not find what you searched for\";\n          msg.receiving = true;\n        }\n        // setTimeout(() => {\n          if(Boolean(message.products.text) === true){\n            msg.received = message.products.text;\n            msg.receiving = true;\n          }\n          this.product_out_of_stock_list = [];\n\n          if (this.retail_web_framework == 'shopify') {\n            msg.products_list.forEach((product) => {\n            for (let i = 0; i < product.variations.length; i++){\n              this.product_list.push({\n                product_id: product.variations[i].id,\n                product_title: product.title,\n                variant_title: product.variations[i].variant_title,\n                variant_id: product.variations[i].id,\n                stock_status: product.variations[i].stock_status || \"instock\",\n                back_in_stock: false,\n                productImage: product.variations[i].img_url == null ? product.img_url : product.variations[i].img_url,\n                onlineStoreURL: product.variations[i].permalink\n              })\n            }\n            });\n          }else if(this.retail_web_framework == 'woocommerce'){\n            msg.products_list.forEach((product) => {\n            if (product.variations && product.variations.length > 0){\n              for (let i = 0; i < product.variations.length; i++) {\n                  this.product_list.push({\n                    product_id: product.id,\n                    product_title: product.title,\n                    variant_title: product.variations[i].variant_title,\n                    variant_id: product.variations[i].id,\n                    stock_status: product.variations[i].stock_status || \"instock\",\n                    back_in_stock: false,\n                    productImage: product.variations[i].img_url == null ? product.img_url : product.variations[i].img_url,\n                    onlineStoreURL: product.permalink\n                  })\n              }\n            }else{\n              this.product_list.push({\n                product_id: product.id,\n                product_title: product.title,\n                variant_title: null,\n                variant_id: null,\n                stock_status: product.stock_status || \"instock\",\n                back_in_stock: false,\n                productImage: product.img_url,\n                onlineStoreURL: product.permalink\n              })\n            }\n            });\n          }else if(this.retail_web_framework == 'magento'){\n            msg.products_list.forEach((product) => {\n              if (product.variations && product.variations.length > 0){\n                for (let i = 0; i < product.variations.length; i++) {\n                  this.product_list.push({\n                    product_id: product.id,\n                    product_title: product.title,\n                    variant_title: product.variations[i].variant_title,\n                    variant_id: product.variations[i].id,\n                    stock_status: product.stock_status || \"instock\",\n                    back_in_stock: false,\n                    productImage: product.variations[i].img_url == null ? product.img_url : product.variations[i].img_url,\n                    onlineStoreURL: product.variations[i].permalink\n                  })\n                }\n              }else{\n                this.product_list.push({\n                  product_id: product.id,\n                  product_title: product.title,\n                  variant_title: null,\n                  variant_id: null,\n                  stock_status: product.stock_status || \"instock\",\n                  back_in_stock: false,\n                  productImage: product.img_url,\n                  onlineStoreURL: product.permalink\n                })\n              }\n            });\n          }\n          for (var i in msg.products_list){\n            msg.products_list[i].buy_qty = 1;\n            msg.products_list[i].order_qty = 1;\n            if (msg.products_list[i].variations && msg.products_list[i].variations.length > 0){\n              msg.products_list[i].id = msg.products_list[i].variations[0].id;\n              msg.products_list[i].img_url = (msg.products_list[i].variations[0].img_url === null) ? msg.products_list[i].img_url : msg.products_list[i].variations[0].img_url;\n              msg.products_list[i].permalink = msg.products_list[i].variations[0].permalink;\n              msg.products_list[i].variant_title = msg.products_list[i].variations[0].variant_title;\n              msg.products_list[i].stock_quantity = msg.products_list[i].variations[0].stock_quantity;\n              msg.products_list[i].stock_status = msg.products_list[i].variations[0].stock_status;\n              msg.products_list[i].price = msg.products_list[i].variations[0].price;\n              msg.products_list[i].regular_price = msg.products_list[i].variations[0].regular_price;\n            }\n          }\n          msg.new_products = true;\n          this.show_custom_cart = true;\n          var newlist = this.product_list.filter(\n            (product) => product[\"stock_status\"] === \"outofstock\"\n          );\n\n          msg.product_out_of_stock_list = newlist;\n          if (\n            msg.product_out_of_stock_list.length > 0 && !this.display_products\n          ) {\n              msg.product_out_of_stock = true;\n          }\n          this.display_products = false;\n        // }, 2000);\n        if (type === \"display_success_toastr\") {\n          setTimeout(() => {\n            swal({\n              text:\n                \"Testing Completed Successfully! Please Proceed to the next step.\",\n              toast: true,\n              showCancelButton: false,\n              showConfirmButton: false,\n              type: \"success\",\n              timer: 5000,\n              timerProgressBar: true,\n            });\n          }, 1200);\n        }\n      // }, 30);\n      } else if (message.products.length) {\n        msg.isproduct = true;\n        msg.elements = message;\n      }\n      this.chat.push(msg);\n      // this.$session.set(\"BotResponse_Conversation\", this.chat);\n      this.new_update_response(index);\n      this.product_list = [];\n    },\n    display_file_chat(message) {\n      var msg = {\n        conversation_only: true,\n        time: this.generate_time(),\n      };\n      let temp = message.split(\"Download your manifest here \");\n      let url = message.match(this.url_match_regex)[0];\n      msg.url = message.includes(\"Download your manifest here \")\n        ? temp[1]\n        : url;\n      msg.receiving = false;\n      msg.file_name = url\n        .split(/^.*[\\\\\\/]/)[1]\n        .split(\"/\")\n        .pop()\n        .split(\"?\")[0];\n      this.chat.push(msg);\n      // this.$session.set(\"BotResponse_Conversation\", this.chat);\n      this.update_scrollbar(\"upto_end\", \"response\");\n    },\n    generate_order_details(order) {},\n    async adddropdownvalue(value) {\n      this.selected_indication = value;\n      if (value.length > 0) {\n        this.to_send = \"\";\n        this.res = {};\n        for (let i = 0; i < this.selected_indication.length; i++) {\n          let parsedJson = JSON.parse(\n            `{${this.selected_indication[i].value.split(\"{\")[1]}`\n          );\n          if (i == 0) {\n            this.to_send = this.selected_indication[i].title;\n          } else {\n            this.to_send =\n              this.to_send + \", \" + this.selected_indication[i].title;\n          }\n          if (this.res[Object.keys(parsedJson)[0].toString()] == undefined) {\n            this.res[Object.keys(parsedJson)[0].toString()] = Object.values(\n              parsedJson\n            )[0].toString();\n          } else {\n            this.res[Object.keys(parsedJson)[0].toString()] =\n              this.res[Object.keys(parsedJson)[0].toString()] +\n              \",\" +\n              Object.values(parsedJson)[0].toString();\n          }\n        }\n        this.button_fill();\n      } else {\n        this.to_send = \"\";\n        this.res = {};\n      }\n      this.button_fill();\n    },\n    button_fill() {\n      if (this.to_send == \"\") {\n        document.querySelector(\"#send_button\").classList.remove(\"filled\");\n      } else if (this.to_send != \"\") {\n        if (this.live_chat_on) {\n          this.channel.push(\"started_typing\");\n          this.stop_typing(this);\n        }\n        document.querySelector(\"#send_button\").classList.add(\"filled\");\n      }\n    },\n    stop_typing: debounce(function (vm) {\n      vm.channel.push(\"stopped_typing\");\n    }, 1000),\n    scroll_down() {\n      if (\n        document.querySelector(\".chat-body\").scrollHeight -\n          document.querySelector(\".chat-body\").scrollTop <=\n        document.querySelector(\".chat-body\").clientHeight\n      ) {\n        this.to_scroll = false;\n      } else {\n        this.to_scroll = true;\n      }\n    },\n    load_buttons(message, index, type , greeting_button) {\n      if (type === \"display_success_toastr\") {\n        swal({\n          text: \"Some error occurred while testing.\",\n          toast: true,\n          showCancelButton: false,\n          showConfirmButton: false,\n          type: \"error\",\n          timer: 5000,\n        });\n        var msg = {\n          conversation_only: true,\n          time: this.generate_time(),\n          ask_feedback: false,\n          received:\n            \"Some error occurred while testing. Please try by refreshing the browser! If the issue persists, please contact system admin.\",\n          receiving: true,\n        };\n        this.chat.push(msg);\n        return;\n      }\n      var msg = {\n        conversation_only: true,\n        buttons_list: [],\n        button_prefix: message.prefix,\n        receiving: true,\n        received: message.text,\n        time: null,\n        removable: type == \"welcome_message\" ? false : true,\n      };\n      if(Boolean(greeting_button)){\n       msg.greeting_button = false\n      }else{\n        msg.custom_buttons = false\n      }\n      if (message.buttons.length == 3) {\n        if (\n          message.buttons[0].title == \"Exchange Rate\" &&\n          message.buttons[1].title == \"Track My Parcel\" &&\n          message.buttons[2].title == \"Call Helpdesk\"\n        ) {\n          msg.removable = false;\n        }\n      }\n      if (\n        message.text == \"Would you like to share your name and number?\" &&\n        this.isexchange\n      ) {\n        $(\"#response_bot_text\").prop(\"disabled\", true);\n      }\n      for (var i in message.buttons) {\n        if (msg.button_prefix != null) {\n          msg.buttons_list.push({\n            title: message.buttons[i].title,\n            value: msg.button_prefix + message.buttons[i].value,\n          });\n        } else {\n          msg.buttons_list.push({\n            title: message.buttons[i].title,\n            value: message.buttons[i].value,\n          });\n        }\n        if (\n          msg.buttons_list[i].title == \"No\" &&\n          message.text != \"Can I help you with anything else?\" &&\n          this.companyid == \"clinicaltrials81352\"\n        ) {\n          msg.buttons_list[i].value = \"isdisabled\";\n        }\n      }\n      // setTimeout(() => {\n        var chatIndex = this.chat.push(msg);\n        if (index == \"is_button\" || index == 0) {\n          setTimeout(() => {\n            if (\n              $(\".chat-body\").children().last().height() /\n                $(\".chat-body\").height() <\n              0.5\n            ) {\n              this.animate_chat_body_scroll(1, 1500);\n            } else {\n              this.animate_chat_body_scroll(50, 1500, true);\n            }\n          }, 1000);\n        } else {\n          this.scroll_down();\n        }\n        if(Boolean(greeting_button)){\n          this.chat[chatIndex - 1].greeting_button = true;\n        }else{\n          this.chat[chatIndex - 1].custom_buttons = true;\n        }\n        // this.$session.set(\"BotResponse_Conversation\", this.chat);\n        setTimeout(() => {\n          this.chat[chatIndex - 1].time = this.generate_time();\n        }, 500);\n      // }, 500);\n    },\n    multiselect_load(message, index) {\n      var msg = {\n        conversation_only: true,\n        multiselect_values: message.custom.values,\n        placeholder: message.custom.placeholder,\n        is_multiselect: true,\n        value_mapping: [],\n        receiving: true,\n        received: message.text,\n        disabled: false,\n        time: this.generate_time(),\n      };\n      this.chat.push(msg);\n    },\n    load_table(message, index) {\n      let msg = {\n        conversation_only: true,\n        col_list: Object.keys(message.custom.values[0]),\n        table_value: message.custom.values,\n        receiving: true,\n        received: message.text,\n        is_table: true,\n        time: this.generate_time(),\n      };\n\n      setTimeout(() => {\n        this.chat.push(msg);\n        if (index == 0) {\n          setTimeout(() => {\n            if (\n              $(\".chat-body\").children().last().height() /\n                $(\".chat-body\").height() <\n              0.5\n            ) {\n              this.animate_chat_body_scroll(1, 1500);\n            } else {\n              this.animate_chat_body_scroll(0.7, 1500);\n            }\n          }, 1000);\n        } else {\n          this.animate_chat_body_scroll(100, 1500, true);\n          this.scroll_down();\n        }\n      }, 2500);\n    },\n    load_text_area(message, index) {\n      let msg = {\n        conversation_only: true,\n        receiving: true,\n        received: message.text,\n        show_text_area: true,\n        disabled: false,\n        time: this.generate_time(),\n      };\n\n      setTimeout(() => {\n        this.chat.push(msg);\n        if (index == 0) {\n          setTimeout(() => {\n            if (\n              $(\".chat-body\").children().last().height() /\n                $(\".chat-body\").height() <\n              0.5\n            ) {\n              this.animate_chat_body_scroll(1, 1500);\n            } else {\n              this.animate_chat_body_scroll(0.7, 1500);\n            }\n          }, 1000);\n        } else {\n          this.animate_chat_body_scroll(100, 1500, true);\n\n          this.scroll_down();\n        }\n      }, 2500);\n    },\n    start_live_chat() {\n      // var msg = {};\n      // msg.receiving = true;\n      // msg.received =\n      //   \"I am connecting you to one of our support agents. Please wait for a while.\";\n      // msg.conversation_only = true;\n      // msg.time = this.generate_time();\n      // this.update_scrollbar(\"upto_end\", \"response\");\n      // this.chat.push(msg);\n      // this.chat.push({\n      //   receiving: true,\n      //   received: \"What's your name?\",\n      //   conversation_only: true,\n      //   time: this.generate_time(),\n      // });\n      // this.new_update_response(0);\n      // this.scroll_down();\n      this.chat_socket = new Socket(\n        process.env.VUE_APP_LIVE_CHAT_WEBSOCKET_ENDPOINT,\n        {\n          params: {\n            username: this.$session.get(\"UserInformation\").email,\n            token: this.$session.get(\"UserInformation\").tokens,\n            role: this.$session.get(\"UserInformation\").role,\n          },\n        }\n      );\n      this.chat_socket.connect();\n      this.support_channel = this.chat_socket.channel(\n        \"companies:\" + this.$session.get(\"UserInformation\").company_name\n      );\n      this.support_channel.join();\n      const vm = this;\n      this.support_channel.push(\"customer_wants_presence\");\n      this.support_channel.on(\"customer_gets_presence\", (res) => {\n        // console.log(\"customer_gets_presence res\", res);\n        if (Boolean(res[vm.companyname]) === true) {\n          var company_presence = res[vm.companyname][\"metas\"];\n          // console.log(company_presence);\n          let self_user_index = company_presence\n            .map(function (e) {\n              return e.user_info.username;\n            })\n            .indexOf(vm.$session.get(\"UserInformation\").email);\n          if (self_user_index !== -1) {\n            company_presence.splice(self_user_index, 1);\n          }\n          let present_role_list = [];\n          company_presence.filter((each) =>\n            present_role_list.push(each.user_info.role)\n          );\n          let unique_role_list = present_role_list.filter(\n            (x, i, a) => a.indexOf(x) == i\n          );\n          if (\n            unique_role_list.includes(\"support agent\")\n          ) {\n            vm.is_support_agent_present = true;\n          } else {\n            vm.is_support_agent_present = false;\n          }\n        } else {\n          vm.is_support_agent_present = false;\n        }\n        vm.connect_support_agent();\n        // console.log(res)\n      });\n\n      // presence.onSync((res) => {\n      // console.log(res)\n      // })\n      // axios.get(api_calls.chat_group_api()).then((response) => {\n      //   this.chat_group_name = response.data.chat_group_name;\n      //   this.live_chat_token = response.data.token;\n      //   this.live_chat_on = true;\n      //   this.chat_socket = new Socket(\n      //     process.env.VUE_APP_LIVE_CHAT_WEBSOCKET_ENDPOINT,\n      //     {\n      //       params: {\n      //         company: this.$session.get(\"UserInformation\").company_name,\n      //         chat_group_name: this.chat_group_name,\n      //         token: this.live_chat_token,\n      //       },\n      //     }\n      //   );\n      //   this.chat_socket.connect();\n      //   this.channel = this.chat_socket.channel(\n      //     \"customers_groups:\" + this.chat_group_name\n      //   );\n      //   this.channel.join();\n      //   this.channel.push(\"customer_needs_support_agent\");\n      //   this.channel.on(\"new_chat_message\", (res) => {\n      //     if (res.sender != \"customer\") {\n      //       this.chat.push({\n      //         receiving: true,\n      //         received: res.message,\n      //         time: this.generate_time(),\n      //         conversation_only: true,\n      //       });\n      //       setTimeout(() => {\n      //         this.scroll_down();\n      //         if (\n      //           $(\".chat-body\").children().last().height() /\n      //             $(\".chat-body\").height() <\n      //           0.5\n      //         ) {\n      //           this.animate_chat_body_scroll(1, 1500);\n      //         } else if (\n      //           $(\".receiver\").last().parent().height() /\n      //             $(\".chat-body\").height() >\n      //             0.5 &&\n      //           $(\".receiver\").last().parent().height() /\n      //             $(\".chat-body\").height() <\n      //             0.6\n      //         ) {\n      //           this.animate_chat_body_scroll(0.9, 1500);\n      //         } else {\n      //           this.animate_chat_body_scroll(0.75, 1500);\n      //         }\n      //       }, 1000);\n      //       if (\n      //         $(\".chat-body\").height() - $(\".chat-body\").prop(\"scrollHeight\") !=\n      //         0\n      //       ) {\n      //         this.scroll_down();\n      //       }\n      //     }\n      //   });\n      //   this.channel.on(\"stopped_chat\", (res) => {\n      //     this.chat.push({\n      //       conversation_only: true,\n      //       receiving: true,\n      //       received: \"Support agent \" + res.message,\n      //       time: this.generate_time(),\n      //     });\n      //     this.live_chat_on = false;\n      //     this.update_scrollbar(\"upto_end\", \"response\");\n      //   });\n      //   this.channel.on(\"started_typing\", (res) => {\n      //     this.is_agent_typing = true;\n      //     this.is_typing_indicator_on = true;\n      //   });\n      //   this.channel.on(\"stopped_typing\", (res) => {\n      //     this.is_agent_typing = false;\n      //     this.is_typing_indicator_on = false;\n      //   });\n      // });\n    },\n    connect_support_agent() {\n      var vm = this;\n      this.support_channel.leave();\n      this.chat_socket.disconnect();\n      this.chat_socket = null;\n      if (this.is_support_agent_present === true) {\n        var msg = {};\n        msg.receiving = true;\n        msg.received =\n          \"I am connecting you to one of our support agents. Please wait for a while.\";\n        msg.conversation_only = true;\n        msg.time = this.generate_time();\n        this.update_scrollbar(\"upto_end\", \"response\");\n        this.chat.push(msg);\n        this.chat.push({\n          receiving: true,\n          received: \"What's your name?\",\n          conversation_only: true,\n          time: this.generate_time(),\n        });\n        this.new_update_response(0);\n        this.scroll_down();\n        axios.get(api_calls.chat_group_api()).then((response) => {\n          this.chat_group_name = response.data.chat_group_name;\n          this.live_chat_token = response.data.token;\n          this.live_chat_on = true;\n          this.chat_socket = new Socket(\n            process.env.VUE_APP_LIVE_CHAT_WEBSOCKET_ENDPOINT,\n            {\n              params: {\n                company: this.$session.get(\"UserInformation\").company_name,\n                chat_group_name: this.chat_group_name,\n                token: this.live_chat_token,\n              },\n            }\n          );\n          this.chat_socket.connect();\n          this.channel = this.chat_socket.channel(\n            \"customers_groups:\" + this.chat_group_name\n          );\n          this.channel.join();\n          this.channel.push(\"customer_needs_support_agent\");\n          \n          setInterval(function () {\n            vm.channel.push(\"customer_group_presence\");\n          }, 2000);\n          setInterval(function () {\n            vm.channel.push(\"customer_group_self_presence\");\n          }, 2000);\n          this.channel.on(\"customer_group_self_presence\", (res) => {\n            // console.log(\"CUSTOMER GROUP PRESENCE\", res);\n            var meta = res.metas;\n            for (var i in meta) {\n              if(!meta[i].user_info.is_customer) {\n                this.support_agent_info = meta[i].user_info;\n              }\n            }\n          });\n          this.channel.on(\"new_chat_message\", (res) => {\n            if (res.sender != \"customer\") {\n              this.chat.push({\n                receiving: true,\n                received: res.message,\n                time: this.generate_time(),\n                conversation_only: true,\n              });\n              setTimeout(() => {\n                this.scroll_down();\n                if (\n                  $(\".chat-body\").children().last().height() /\n                    $(\".chat-body\").height() <\n                  0.5\n                ) {\n                  this.animate_chat_body_scroll(1, 1500);\n                } else if (\n                  $(\".receiver\").last().parent().height() /\n                    $(\".chat-body\").height() >\n                    0.5 &&\n                  $(\".receiver\").last().parent().height() /\n                    $(\".chat-body\").height() <\n                    0.6\n                ) {\n                  this.animate_chat_body_scroll(0.9, 1500);\n                } else {\n                  this.animate_chat_body_scroll(0.75, 1500);\n                }\n              }, 1000);\n              if (\n                $(\".chat-body\").height() -\n                  $(\".chat-body\").prop(\"scrollHeight\") !=\n                0\n              ) {\n                this.scroll_down();\n              }\n            }\n          });\n          this.channel.on(\"stopped_chat\", (res) => {\n            this.chat.push({\n              conversation_only: true,\n              receiving: true,\n              received: \"Support agent \" + res.message,\n              time: this.generate_time(),\n            });\n            this.live_chat_on = false;\n            this.support_agent_info = null;\n            this.channel.leave();\n            this.live_chat_token = null;\n            this.chat_group_name = null;\n            this.user_name = \"\";\n            this.chat_socket.disconnect();\n            this.update_scrollbar(\"upto_end\", \"response\");\n          });\n          this.channel.on(\"started_typing\", (res) => {\n            this.is_agent_typing = true;\n            this.is_typing_indicator_on = true;\n          });\n          this.channel.on(\"stopped_typing\", (res) => {\n            this.is_agent_typing = false;\n            this.is_typing_indicator_on = false;\n          });\n        });\n      } else {\n        this.support_subscription_data();\n      }\n    },\n    submit_custom_form() {\n      if (document.querySelector(\"#details_form\") != null) {\n        var element = document.querySelector(\"#details_form\");\n        element.addEventListener(\"submit\", (event) => {\n          event.preventDefault();\n          // actual logic, e.g. validate the form\n          var queryString = $(\"#details_form\").serializeArray();\n          if (this.form_payload == null) {\n            this.form_payload = {};\n            for (var i in queryString) {\n              this.form_payload[queryString[i].name] = queryString[i].value;\n            }\n            axios\n              .post(api_calls.bot_user_data(), {\n                license_key: this.$session.get(\"UserInformation\").license_key,\n                data: this.form_payload,\n                token: this.bot_response_token_value,\n                username: this.$session.get(\"UserInformation\").email,\n                source: \"Web\",\n                token: this.bot_response_token_value,\n                role: this.$session.get(\"UserInformation\").role,\n              })\n              .then((response) => {\n                if (response.data == \"Bot User Data Saved Successfully\") {\n                  $(\"#details_form :input\").prop(\"disabled\", true);\n                  $(\"#details_form :button\").prop(\"disabled\", true);\n                  this.update_scrollbar(\"upto_end\", \"response\");\n                  axios\n                    .post(api_calls.chatbot_response_cense(), {\n                      chat: \"/details_form\",\n                      token: this.bot_response_token_value,\n                      username: this.$session.get(\"UserInformation\").email,\n                      source: \"Web\",\n                      license_key: this.$session.get(\"UserInformation\")\n                        .license_key,\n                      Details: JSON.stringify(this.form_payload),\n                      role: this.$session.get(\"UserInformation\").role,\n                      refreshed_or_closed: false,\n                    })\n                    .then((resp) => {\n                      this.response_handling(resp);\n                      this.animate_chat_body_scroll(1, 1000);\n                    });\n                }\n              })\n              .catch((e) => {\n                console.log(e);\n              });\n          }\n        });\n      }\n    },\n    update_scrollbar(type, msgType, iswelcome, delay_value) {\n      var scroll_delay = iswelcome == \"is_welcome\" ? delay_value : 2000;\n      this.is_typing_indicator_on = true;\n      if (msgType == \"response\") {\n        setTimeout(() => {\n          this.is_typing_indicator_on = false;\n        }, scroll_delay);\n      } else if (msgType == \"sender\") {\n        this.animate_chat_body_scroll(1, 750);\n      }\n      if (msgType == \"response\") {\n        if (type == \"upto_end\") {\n          setTimeout(() => {\n            if (\n              $(\".chat-body\").prop(\"scrollTop\") <\n              $(\".chat-body\").prop(\"scrollHeight\")\n            ) {\n              if (\n                $(\".receiver\").last().parent().height() /\n                  $(\".chat-body\").height() >\n                0.5\n              ) {\n                this.animate_chat_body_scroll(0.75, 1500);\n                this.scroll_down();\n              }\n            } else if (\n              $(\".receiver\").last().parent().height() /\n                $(\".chat-body\").height() <\n              0.5\n            ) {\n              this.animate_chat_body_scroll(1, scroll_delay);\n            }\n          }, scroll_delay);\n        } else {\n          setTimeout(() => {\n            document.querySelector(\".chat-body\").scrollTop =\n              document.querySelector(\".chat-body\").scrollHeight -\n              document.querySelector(\".chat-body\").lastChild.scrollHeight;\n          }, 1000);\n        }\n      }\n    },\n    new_update_response(index) {\n      if (index == 0) {\n        setTimeout(() => {\n          this.scroll_down();\n          if (\n            $(\".chat-body\").children().last().height() /\n              $(\".chat-body\").height() <\n            0.5\n          ) {\n            this.animate_chat_body_scroll(1, 1500);\n          } else if (\n            $(\".receiver\").last().parent().height() / $(\".chat-body\").height() >\n              0.5 &&\n            $(\".receiver\").last().parent().height() / $(\".chat-body\").height() <\n              0.6\n          ) {\n            this.animate_chat_body_scroll(1, 1500);\n          } else {\n            this.animate_chat_body_scroll(1, 1500);\n          }\n        }, 1000);\n      }\n      if (\n        $(\".chat-body\").height() - $(\".chat-body\").prop(\"scrollHeight\") !=\n        0\n      ) {\n        this.scroll_down();\n      }\n      if (\n        $(\".chat-body\").height() - $(\".chat-body\").prop(\"scrollHeight\") ===\n        0\n      ) {\n        this.to_scroll = false;\n      }\n    },\n    animate_chat_body_scroll(scale, delay, offset) {\n      if (Boolean(offset)) {\n        $(\".chat-body\").animate(\n          {\n            scrollTop: $(\".chat-body\").prop(\"scrollTop\") + scale,\n          },\n          delay\n        );\n      } else {\n        $(\".chat-body\").animate(\n          {\n            scrollTop: scale * $(\".chat-body\").prop(\"scrollHeight\"),\n          },\n          delay\n        );\n      }\n    },\n    add_bot_unanswered_question(index, method) {\n      axios\n        .put(\n          api_calls.get_unanswered_url(),\n          {\n            license_key: this.$session.get(\"UserInformation\").license_key,\n            token: this.bot_response_token_value,\n            bot_answer: this.chat[index].received,\n            user_query: this.chat[index - 1].sent,\n            feedback: method ? \"like\" : \"dislike\",\n            username: this.$session.get(\"UserInformation\").email,\n            companyid: this.$session.get(\"UserInformation\").company_id,\n            companyname: this.$session.get(\"UserInformation\").company_name,\n          },\n          {\n            headers: {\n              Authorization: `Bearer ${this.$session.get(\"at\")}`,\n            },\n          }\n        )\n        .then(() => {\n          this.chat[index].ask_feedback = false;\n        })\n        .catch(() => {});\n    },\n    load_refunds() {\n      let msg = {\n        conversation_only: true,\n        is_refund: true,\n        receiving: true,\n        received: this.retail_order_retreival_only_email_required\n          ? \"Please enter email to fetch your orders.\"\n          : \"Please login to fetch your recent orders\",\n        time: this.generate_time(),\n      };\n\n      setTimeout(() => {\n        let latestChatIndex = this.chat.push(msg);\n        latestChatIndex -= 1;\n        this.chat[latestChatIndex].fetch_shopify_details = true;\n        this.scroll_down();\n      }, 1000);\n    },\n    view_order_details(chatIndex, orderIndex, orderLineItems, orderRefunds) {\n      this.chat[chatIndex].refund_selected_items = [];\n      this.chat[chatIndex].shopify_reason_for_refund_list = null;\n      this.chat[chatIndex].shopify_reason_for_refund = null;\n      this.chat[chatIndex].refund_order_view_details = Object(\n        this.chat[chatIndex].refund_orders_list[orderIndex]\n      );\n      this.chat[chatIndex].refund_order_view_details.line_items = orderLineItems.map(\n        (lineItem) => {\n          let lineItemNode = lineItem;\n          lineItemNode.selected_quantity = this.retail_web_framework == \"magento\" ? lineItem.qty_ordered : lineItem.quantity;\n          lineItemNode.already_refunded_qty = this.retail_web_framework == \"magento\" ? lineItem.qty_refunded : 0;\n          lineItemNode.qty_available_for_refund = this.retail_web_framework == \"magento\" ? lineItem.qty_ordered : lineItem.quantity;\n          lineItemNode.product_id = lineItem.product_id;\n          lineItemNode.variant_id = this.retail_web_framework == \"magento\" ? lineItem.sku : lineItem.variant_id;\n          return lineItemNode;\n        }\n      );\n      if (Boolean(orderRefunds) === true){\n        orderRefunds = orderRefunds.map(lineItem=>{ return lineItem.refund_line_items[0]});\n        var AlreadyRefundedQty = [];\n        orderRefunds.reduce(function(res, value) {\n          if (!res[value.line_item_id]) {\n            res[value.line_item_id] = { line_item_id: value.line_item_id, quantity: 0 };\n            AlreadyRefundedQty.push(res[value.line_item_id])\n          }\n          res[value.line_item_id].quantity += value.quantity;\n          return res;\n        }, {});\n        let temp = this.chat[chatIndex].refund_order_view_details.line_items;\n        this.chat[chatIndex].refund_order_view_details.line_items = temp.map(lineItem=>{\n            let lineItemNode = lineItem;\n            for(var i in AlreadyRefundedQty){\n                if (lineItem.id == AlreadyRefundedQty[i].line_item_id){\n                    lineItemNode.already_refunded_qty = AlreadyRefundedQty[i]['quantity'];\n                    lineItemNode.qty_available_for_refund = (lineItem.quantity)-(AlreadyRefundedQty[i]['quantity']);\n                    lineItemNode.selected_quantity = (lineItem.quantity)-(AlreadyRefundedQty[i]['quantity']);\n                    lineItemNode.product_id = lineItem.product_id;\n                    lineItemNode.variant_id = this.retail_web_framework == \"magento\" ? lineItem.sku : lineItem.variant_id;\n                }\n            };\n        return lineItemNode;\n        });\n      }\n      this.$set(\n            this.chat, chatIndex,\n            this.chat[chatIndex]\n          );\n    },\n    refresh_or_remove_order_details(chatIndex, val) {\n      if (val == \"remove\") {\n        this.chat[chatIndex].refund_order_view_details = {};\n      }\n      this.$set(\n            this.chat, chatIndex,\n            this.chat[chatIndex]\n          );\n    },\n    load_customer_orders(ordersData, index, order_type) {\n      // this.chat[index].received = `Order ${orderName}`;\n      this.is_typing_indicator_on = true;\n      if (order_type === \"refund\") {\n        this.chat[index].received = \"Fetching your orders ...\";\n        this.chat[index].refund_orders_list = ordersData.map((order) => {\n          let orderObject = order;\n          orderObject.created_at = moment(orderObject.created_at, [\n            \"YYYY-MM-DDTh:m:sZ\",\n          ]).format(\"Do MMM YYYY\");\n          orderObject.name = this.retail_web_framework == \"shopify\" ? orderObject.name : orderObject.id;\n          orderObject.processedAt = moment(orderObject.created_at, [\n            \"YYYY-MM-DDThh:mm:ssZ\",\n          ]).format(\"Do MMM YYYY\");\n            // cur_node.fulfillmentStatus = cur_node.fulfillment_status;\n          orderObject.fulfillment_status =\n            Boolean(orderObject.fulfillment_status) === true\n              ? orderObject.fulfillment_status\n              : \"Unfulfilled\";\n          // Set only first character to uppercase while remaining characters set to lowercase\n          orderObject.fulfillment_status =\n          orderObject.fulfillment_status.charAt(0).toUpperCase() +\n          orderObject.fulfillment_status.slice(1).toLowerCase();\n\n          if(this.retail_web_framework != \"shopify\") {\n            for (let i = 0; i < orderObject.order_notes.length; i++){\n              orderObject.order_notes[i].date_created = moment(orderObject.order_notes[i].date_created, [\n            \"YYYY-MM-DDThh:mm:ssZ\",\n            ]).format(\"Do MMM YYYY HH:mm a\")\n            }\n          }\n          return orderObject;\n        });\n        if (this.chat[index].refund_orders_list.length === 0) {\n          this.chat[index].received = \"There are no orders to be displayed\";\n        } else {\n          this.chat[index].received =\n            \"Select the order that you wish to return\";\n        }\n        // this.refund_order_view_details = {};\n        this.chat[index].refund_order_view_details = {};\n        this.chat[index].refund_selected_items = [];\n        this.chat[index].shopify_reason_for_refund_list = null;\n        this.chat[index].shopify_reason_for_refund = null;\n        this.chat[index].conversation_only = false;\n        this.chat[index].conversation_only = true;\n      } else if (order_type === \"all_orders\") {\n        let orders_data = ordersData,\n          complete_orders_data = [];\n        for (let i = 0; i < orders_data.length; i++) {\n          var cur_node = orders_data[i];\n          cur_node.processedAt = moment(cur_node.created_at, [\n            \"YYYY-MM-DDThh:mm:ssZ\",\n          ]).format(\"Do MMM YYYY\");\n          // cur_node.fulfillmentStatus = cur_node.fulfillment_status;\n          cur_node.fulfillment_status =\n            Boolean(cur_node.fulfillment_status) === true\n              ? cur_node.fulfillment_status\n              : \"Unfulfilled\";\n          // // Set only first character to uppercase while remaining characters set to lowercase\n          cur_node.fulfillment_status =\n            cur_node.fulfillment_status.charAt(0).toUpperCase() +\n            cur_node.fulfillment_status.slice(1).toLowerCase();\n          if(this.retail_web_framework != \"shopify\") {\n            for (let i = 0; i < cur_node.order_notes.length; i++){\n              cur_node.order_notes[i].date_created = moment(cur_node.order_notes[i].date_created, [\n            \"YYYY-MM-DDThh:mm:ssZ\",\n            ]).format(\"Do MMM YYYY HH:mm a\")\n            }\n          }\n          complete_orders_data.push({\n            name: this.retail_web_framework == \"shopify\" ? cur_node.name : cur_node.id,\n            processed_date: cur_node.processedAt,\n            fulfillment_status: cur_node.fulfillment_status,\n            status_url: cur_node.order_status_url,\n            order_notes: this.retail_web_framework == \"shopify\" ? null : cur_node.order_notes,\n          });\n        }\n        this.chat[index].show_all_orders_list = true;\n        this.chat[index].all_orders_list = complete_orders_data;\n        if (this.chat[index].all_orders_list.length === 0) {\n          this.chat[index].received = \"There are no orders to be displayed\";\n          this.chat[index].show_all_orders_list = false;\n        }else {\n          this.chat[index].received =\n          \"Please Find Below Your Latest Orders:\";\n        }\n        this.chat[index].recent_orders_list = complete_orders_data;\n        setTimeout(() => {\n          this.chat[index].conversation_only = true;\n        }, 500);\n      }\n      this.is_typing_indicator_on = false;\n    },\n    submit_refund_request(refund_order_view_details, index) {\n      if (\n        this.chat[index].shopify_reason_for_refund_list === null\n      ) {\n        this.show_shopify_reason_for_refund_error = true;\n        return\n      } \n      if(        \n        this.chat[index].shopify_reason_for_refund_list === 'Others'\n      ){\n        if (this.chat[index].shopify_reason_for_refund === null ||\n          this.chat[index].shopify_reason_for_refund === \"\")\n          {\n            this.show_shopify_reason_for_refund_error = true;\n            return\n          }\n      }else{\n        this.chat[index].shopify_reason_for_refund = this.chat[index].shopify_reason_for_refund_list;\n      } \n      // else {\n        this.show_shopify_reason_for_refund_error = false;\n        let items_to_refund = refund_order_view_details.line_items.filter((lineItem) => {\n          if (this.retail_web_framework == 'magento') {\n            return this.chat[index].refund_selected_items.includes(lineItem.product_id);\n          } else {\n            return this.chat[index].refund_selected_items.includes(lineItem.id);\n          }\n        });\n        for (let i = 0; i <items_to_refund.length; i++){\n          if(items_to_refund[i].selected_quantity === null ||\n            Boolean(items_to_refund[i].selected_quantity) === false){\n             swal({\n              text: \"Please enter the product quantity in numeric only\",\n              toast: true,\n              position: \"top-end\",\n              type: \"warning\",\n              showConfirmButton: false,\n              timer: 5000,\n            });\n            return;\n          }\n        }\n        let refund_payload_string = JSON.stringify({\n          orderId: refund_order_view_details.id,\n          order_name: refund_order_view_details.name,\n          customer_id: this.shopify_customer_id,\n          fulfillment_status: refund_order_view_details.fulfillment_status,\n          payment_status: refund_order_view_details.payment_status,\n          currency: this.retail_shop_currency,\n          lineItems: items_to_refund.map((item) => {\n            return {\n              line_item_id: this.retail_web_framework == 'magento' ? item.product_id : item.id,\n              quantity: item.selected_quantity,\n              product_id: item.product_id,\n              variant_id: item.variant_id,\n            };\n          }),\n          refundReason: this.chat[index].shopify_reason_for_refund,\n        });\n        let refund_intent = `/process_refund_request${refund_payload_string}`;\n        let refund_object = {\n          title: \"Proceed\",\n          value: refund_intent,\n        };\n        // console.log(refund_intent);\n        this.send_message(\"is_button\", refund_object);\n        this.chat[index].refund_order_view_details = {};\n        this.chat[index].refund_selected_items = [];\n        this.chat[index].shopify_reason_for_refund_list = null;\n        this.chat[index].shopify_reason_for_refund = null;\n        this.chat.splice(index, 1);\n      // }\n    },\n    shopify_form_focus(index) {\n      if (\n        this.chat[index].received ===\n        \"We are sorry, your credentials are invalid. Please try again :)\"\n      ) {\n        this.chat[index].received = \"Please login with your credentials for better experience :)\";\n      }\n    },\n    shopify_create_customer_token(index, isRefund) {\n      this.is_typing_indicator_on = true;\n      isRefund = isRefund || false;\n      if (this.chat[index].return_shopify_email === true && !isRefund) {\n        this.send_shopify_customer_id(index, true);\n        return;\n      }\n      let shop_endpoint = this.shopify_retail_shop_name + \".myshopify.com\";\n      let queryString = $(\"#shopify_login_form\").serializeArray();\n      let form_payload = {};\n      form_payload[\n        \"shopify_is_only_email\"\n      ] = this.retail_order_retreival_only_email_required;\n      form_payload['email'] = this.chat[index].customer_email_id;\n      form_payload['password'] = this.chat[index].customer_password;\n      // for (var i in queryString) {\n      //   form_payload[queryString[i].name] = this.chat[index].customer_email_id;\n      // }\n      form_payload = JSON.stringify(form_payload);\n      axios\n        .post(api_calls.chatbot_response_cense(), {\n          license_key: this.$session.get(\"UserInformation\").license_key,\n          token: this.bot_response_token_value,\n          username: this.$session.get(\"UserInformation\").email,\n          source: \"Web\",\n          chat: `/shopify_create_customer_token${form_payload}`,\n          token: this.bot_response_token_value,\n          role: this.$session.get(\"UserInformation\").role,\n          refreshed_or_closed: this.refreshed_or_closed,\n        })\n        .then(({ data }) => {\n          // console.log(data);\n          // if (Boolean(data.responses[0].Data.accessToken)) {\n          //   let customerToken = data.responses[0].Data.accessToken;\n          //   let tokenExpiry = data.responses[0].Data.expiresAt;\n          //   this.$session.set(\"shopify_customer_token\", customerToken);\n          //   this.$session.set(\"shopify_customer_token_expiry\", tokenExpiry);\n          //   this.shopify_fetch_orders(customerToken, index, isRefund);\n          // } else {\n          //   this.chat[index].received =\n          //     \"We are sorry, your credentials are invalid. Please try again :)\";\n          // }\n          if (data.responses[0].token_type === \"customer_token\") {\n            if (Boolean(data.responses[0].Data)) {\n              if (this.retail_web_framework == \"shopify\"){\n                let customerToken = data.responses[0].Data.accessToken;\n                let tokenExpiry = data.responses[0].Data.expiresAt;\n                this.$session.set(\"shopify_customer_token\", customerToken);\n                this.$session.set(\"shopify_customer_token_expiry\", tokenExpiry);\n                this.shopify_fetch_orders(\n                  customerToken,\n                  index,\n                  isRefund,\n                  \"shopify_customer_token\"\n                );\n              } else if(this.retail_web_framework == \"woocommerce\"){\n                let customerToken = data.responses[0].customer_data.customer_email;\n                let tokenExpiry = data.responses[0].Data.expiresAt;\n                let customerId = data.responses[0].customer_data.customer_id;\n                this.shopify_customer_id = customerId;\n                this.$session.set(\"shopify_customer_token\", customerToken);\n                this.$session.set(\"shopify_customer_token_expiry\", tokenExpiry);\n                this.$session.set(\"shopify_customer_id\", customerId);\n                this.shopify_fetch_orders(\n                  customerToken,\n                  index,\n                  isRefund,\n                  \"shopify_customer_token\"\n                );\n              } else if(this.retail_web_framework == \"magento\"){\n                let customerToken = data.responses[0].customer_data.customer_email;\n                let tokenExpiry = data.responses[0].Data.expiresAt;\n                let customerId = data.responses[0].customer_data.customer_id;\n                this.shopify_customer_id = customerId;\n                this.$session.set(\"shopify_customer_token\", customerToken);\n                this.$session.set(\"shopify_customer_token_expiry\", tokenExpiry);\n                this.$session.set(\"shopify_customer_id\", customerId);\n                this.shopify_fetch_orders(\n                  customerToken,\n                  index,\n                  isRefund,\n                  \"shopify_customer_token\"\n                );\n              }\n            } else {\n              this.chat[index].received =\n                \"We are sorry, your credentials are invalid. Please try again :)\";\n              this.is_typing_indicator_on = false;  \n            }\n          } else if (data.responses[0].token_type === \"customer_id\") {\n            // if (Boolean(data.responses[0].customer_id)) {\n              if (this.retail_web_framework == \"shopify\"){\n                let customerId = data.responses[0].customer_id;\n                let customerEmail = data.responses[0].customer_email;\n                this.shopify_customer_id = customerId;\n                this.$session.set(\"shopify_customer_id\", customerId);\n                this.$session.set(\"shopify_customer_token\", customerEmail);\n                this.shopify_fetch_orders(\n                  customerId,\n                  index,\n                  isRefund,\n                  \"shopify_customer_id\"\n                );\n              } else if(this.retail_web_framework == \"woocommerce\"){\n                let customerId = data.responses[0].customer_id;\n                let customerEmail = data.responses[0].customer_email;\n                this.$session.set(\"shopify_customer_id\", customerId);\n                this.$session.set(\"shopify_customer_token\", customerEmail);\n                this.shopify_fetch_orders(\n                  customerId,\n                  index,\n                  isRefund,\n                  \"shopify_customer_id\"\n                );\n              } else if(this.retail_web_framework == \"magento\"){\n                let customerId = data.responses[0].customer_id;\n                let customerEmail = data.responses[0].customer_email;\n                this.$session.set(\"shopify_customer_id\", customerId);\n                this.$session.set(\"shopify_customer_token\", customerEmail);\n                this.shopify_fetch_orders(\n                  customerId,\n                  index,\n                  isRefund,\n                  \"shopify_customer_id\"\n                );\n              }\n            // } \n            else {\n              this.chat[index].received =\n                \"We are sorry, could not find any records with this email. Please try again :)\";\n              this.is_typing_indicator_on = false;\n            }\n          } else {\n            this.chat[index].received =\n              \"We are sorry, your credentials are invalid. Please try again :)\";\n            this.is_typing_indicator_on = false;\n          }\n          // this.chat.splice(index, 1);\n        });\n    },\n    shopify_fetch_customer_id(customerAccessToken, index, token_type) {\n      let shop_endpoint = this.shopify_retail_shop_name + \".myshopify.com\";\n      this.is_typing_indicator_on = true;\n      if (!Boolean(this.chat[index].refund_orders_list)) {\n        if (token_type === \"shopify_customer_token\") {\n          let stringified_customer_payload = JSON.stringify({\n            customer_access_token: customerAccessToken, //shopify access token == email for woocommerce\n          });\n          axios\n            .post(api_calls.chatbot_response_cense(), {\n              license_key: this.$session.get(\"UserInformation\").license_key,\n              token: this.bot_response_token_value,\n              username: this.$session.get(\"UserInformation\").email,\n              source: \"Web\",\n              chat: `/shopify_get_customer_id_and_orders${stringified_customer_payload}`,\n              token: this.bot_response_token_value,\n              role: this.$session.get(\"UserInformation\").role,\n              refreshed_or_closed: this.refreshed_or_closed,\n            })\n            .then(({ data }) => {\n              if (Boolean(data.responses[0].custom)) {\n                this.load_customer_orders(\n                  data.responses[0].custom.orders_list,\n                  index,\n                  \"refund\"\n                );\n                // this.shopify_customer_id = data.responses[0].custom.customer_id;\n              } else {\n                this.chat[index].received =\n                  \"Some Error Occurred. Please Try Again\";\n                this.is_typing_indicator_on = false;\n              }\n              //   let customerId = atob(data.data.customer.id);\n              //   this.shopify_customer_id = customerId.slice(\n              //     customerId.lastIndexOf(\"/\") + 1\n              //   );\n              //   let stringified_customer_payload = JSON.stringify({\n              //     customerId: this.shopify_customer_id,\n              //   });\n              //   this.chat[index].received = \"Fetching your order details ...\";\n              //   axios\n              //     .post(api_calls.chatbot_response_cense(), {\n              //       license_key: this.$session.get(\"UserInformation\").license_key,\n              //       token: this.bot_response_token_value,\n              //       username: this.$session.get(\"UserInformation\").email,\n              //       source: \"Web\",\n              //       chat: `/retrieve_customer_orders${stringified_customer_payload}`,\n              //       token: this.bot_response_token_value,\n              //       role: this.$session.get(\"UserInformation\").role,\n              //       refreshed_or_closed: this.refreshed_or_closed,\n              //     })\n              //     .then((response) => {\n              //       this.load_customer_orders(\n              //         response.data.responses[0].custom.orders_list,\n              //         index\n              //       );\n              //     })\n              //     .catch((e) => {\n              //       console.log(e);\n              //       this.update_scrollbar(\"upto_end\", \"response\");\n              //     });\n            });\n        } else if (token_type == \"shopify_customer_id\") {\n          let stringified_customer_payload = JSON.stringify({\n            customerId: this.shopify_customer_id,\n          });\n          this.chat[index].received = \"Fetching your order details ...\";\n          axios\n            .post(api_calls.chatbot_response_cense(), {\n              license_key: this.$session.get(\"UserInformation\").license_key,\n              token: this.bot_response_token_value,\n              username: this.$session.get(\"UserInformation\").email,\n              source: \"Web\",\n              chat: `/retrieve_customer_orders${stringified_customer_payload}`,\n              token: this.bot_response_token_value,\n              role: this.$session.get(\"UserInformation\").role,\n              refreshed_or_closed: this.refreshed_or_closed,\n            })\n            .then((response) => {\n              this.load_customer_orders(\n                response.data.responses[0].custom.orders_list,\n                index,\n                \"refund\"\n              );\n            })\n            .catch((e) => {\n              this.is_typing_indicator_on = false;\n              console.log(e);\n              this.update_scrollbar(\"upto_end\", \"response\");\n            });\n        }\n      }\n    },\n    shopify_fetch_orders(customerAccessToken, index, isRefund, token_type) {\n      this.is_typing_indicator_on = true;\n      isRefund = isRefund || false;\n      this.chat[index].conversation_only = false;\n      let shop_endpoint = this.shopify_retail_shop_name + \".myshopify.com\";\n      if (token_type === \"shopify_customer_token\") {\n        let stringified_customer_payload = JSON.stringify({\n          customer_access_token: customerAccessToken, //woocommerce customer email\n        });\n        axios\n          .post(api_calls.chatbot_response_cense(), {\n            license_key: this.$session.get(\"UserInformation\").license_key,\n            token: this.bot_response_token_value,\n            username: this.$session.get(\"UserInformation\").email,\n            source: \"Web\",\n            chat: `/shopify_get_customer_orders${stringified_customer_payload}`,\n            token: this.bot_response_token_value,\n            role: this.$session.get(\"UserInformation\").role,\n            refreshed_or_closed: this.refreshed_or_closed,\n          })\n          .then(({ data }) => {\n            this.is_typing_indicator_on = false;\n            try {\n              let customerId = atob(data.responses[0].data.customer.id);\n              this.shopify_customer_id = customerId.slice(\n                customerId.lastIndexOf(\"/\") + 1\n              );\n              this.$session.set(\"shopify_customer_id\", this.shopify_customer_id);\n            } catch (e) {}\n            \n            if (this.retail_web_framework == \"shopify\"){\n              let ordersData = data.responses[0].data.customer.orders.edges;\n              if (typeof index == \"number\" && ordersData.length > 0) {\n                // ordersData = ordersData[0].node;\n                // let orderName = ordersData.name;\n                // let orderStatusUrl = ordersData.statusUrl;\n                // let orderProcessingDate = moment(ordersData.processedAt, [\n                //   \"YYYY-MM-DDThh:mm:ssZ\",\n                // ]).format(\"Do MMM YYYY\");\n                if (isRefund) {\n                  this.shopify_fetch_customer_id(\n                    customerAccessToken,\n                    index,\n                    \"shopify_customer_token\"\n                  );\n                } else {\n                  this.is_typing_indicator_on = false;\n                  //   let orderFulfillmentStatus = ordersData.fulfillmentStatus.replace(\n                  //     \"_\",\n                  //     \" \"\n                  //   );\n                  //   let successfulOrderFulfillments =\n                  //     ordersData.successfulFulfillments;\n                  //   // Set only first character to uppercase while remaining characters set to lowercase\n                  //   orderFulfillmentStatus =\n                  //     orderFulfillmentStatus.charAt(0).toUpperCase() +\n                  //     orderFulfillmentStatus.slice(1).toLowerCase();\n\n                  //   let orderDetailsMsg = `Here's the status of your recent order:<br>\n                  // Order - <a href=\"${orderStatusUrl}\" target=\"_blank\">#${orderName}</a><br>\n                  // Order Processed On: ${orderProcessingDate}<br>\n                  // Fulfillment Status: ${orderFulfillmentStatus}<br>`;\n                  //   if (orderFulfillmentStatus == \"FULFILLED\") {\n                  //     successfulOrderFulfillments = successfulOrderFulfillments[0];\n                  //     orderDetailsMsg += `You can track your order here<a href=\"${successfulOrderFulfillments.trackingInfo.url}\" data-copy-content=\"${successfulOrderFulfillments.trackingInfo.number}\">\n                  //   ${successfulOrderFulfillments.trackingInfo.number}</a><i class=\"fa fa-clipboard ml-2\" aria-hidden=\"true\" data-copy-content=\"${successfulOrderFulfillments.trackingInfo.number}\"></i><br>`;\n                  //   }\n                  //   this.chat[index].received = orderDetailsMsg;\n                  let orders_data = data.responses[0].data.customer.orders.edges,\n                    complete_orders_data = [];\n                  for (let i = 0; i < orders_data.length; i++) {\n                    var cur_node = orders_data[i].node;\n                    cur_node.processedAt = moment(cur_node.processedAt, [\n                      \"YYYY-MM-DDThh:mm:ssZ\",\n                    ]).format(\"Do MMM YYYY\");\n                    cur_node.fulfillmentStatus = cur_node.fulfillmentStatus.replace(\n                      \"_\",\n                      \" \"\n                    );\n                    // Set only first character to uppercase while remaining characters set to lowercase\n                    cur_node.fulfillmentStatus =\n                      cur_node.fulfillmentStatus.charAt(0).toUpperCase() +\n                      cur_node.fulfillmentStatus.slice(1).toLowerCase();\n                    complete_orders_data.push({\n                      name: cur_node.name,\n                      processed_date: cur_node.processedAt,\n                      fulfillment_status: cur_node.fulfillmentStatus,\n                      status_url: cur_node.statusUrl,\n                    });\n                  }\n                  this.chat[index].show_all_orders_list = true;\n                  this.chat[index].all_orders_list = complete_orders_data;\n                  this.chat[index].received =\n                    \"Please Find Below Your Latest Orders:\";\n                    \n                  this.chat[index].recent_orders_list =\n                    data.responses[0].data.customer.orders.edges;\n                } \n              }\n              setTimeout(() => {\n                this.chat[index].conversation_only = true;\n              }, 500);\n            } else if (this.retail_web_framework == \"woocommerce\"){\n              if (isRefund) {\n                  this.load_customer_orders(\n                    data.responses[0].data.customer.orders,\n                    index,\n                    isRefund ? \"refund\" : \"all_orders\"\n                  );\n                }else{\n                  this.is_typing_indicator_on = false;\n              let orders_data = data.responses[0].data.customer.orders,\n                complete_orders_data = [];\n              for (let i = 0; i < orders_data.length; i++) {\n                var cur_node = orders_data[i];\n                cur_node.processedAt = moment(cur_node.created_at, [\n                  \"YYYY-MM-DDThh:mm:ssZ\",\n                ]).format(\"Do MMM YYYY\");\n                cur_node.fulfillment_status =\n                Boolean(cur_node.fulfillment_status) === true\n                  ? cur_node.fulfillment_status\n                  : \"Unfulfilled\";\n                // Set only first character to uppercase while remaining characters set to lowercase\n                cur_node.fulfillment_status =\n                  cur_node.fulfillment_status.charAt(0).toUpperCase() +\n                  cur_node.fulfillment_status.slice(1).toLowerCase();\n                for (let i = 0; i < cur_node.order_notes.length; i++){\n                  cur_node.order_notes[i].date_created = moment(cur_node.order_notes[i].date_created, [\n                \"YYYY-MM-DDThh:mm:ssZ\",\n                ]).format(\"Do MMM YYYY HH:mm a\")\n                }\n                complete_orders_data.push({\n                  name: cur_node.id,\n                  processed_date: cur_node.processedAt,\n                  fulfillment_status: cur_node.fulfillment_status,\n                  status_url: cur_node.order_status_url,\n                  order_notes: cur_node.order_notes\n                });\n              }\n              this.chat[index].show_all_orders_list = true;\n              this.chat[index].all_orders_list = complete_orders_data;\n              this.chat[index].received =\n                \"Please Find Below Your Latest Orders:\";\n              this.chat[index].show_all_orders_list = true;\n              this.chat[index].recent_orders_list = complete_orders_data;\n                }\n              setTimeout(() => {\n                this.chat[index].conversation_only = true;\n              }, 500);\n            } else if(this.retail_web_framework == \"magento\"){\n              if (isRefund) {\n                  this.load_customer_orders(\n                    data.responses[0].data.customer.orders,\n                    index,\n                    isRefund ? \"refund\" : \"all_orders\"\n                  );\n                }else{\n                  this.is_typing_indicator_on = false;\n              let orders_data = data.responses[0].data.customer.orders,\n                complete_orders_data = [];\n              for (let i = 0; i < orders_data.length; i++) {\n                var cur_node = orders_data[i];\n                cur_node.processedAt = moment(cur_node.created_at, [\n                  \"YYYY-MM-DDThh:mm:ssZ\",\n                ]).format(\"Do MMM YYYY\");\n                cur_node.fulfillment_status =\n                Boolean(cur_node.fulfillment_status) === true\n                  ? cur_node.fulfillment_status\n                  : \"Unfulfilled\";\n                // Set only first character to uppercase while remaining characters set to lowercase\n                cur_node.fulfillment_status =\n                  cur_node.fulfillment_status.charAt(0).toUpperCase() +\n                  cur_node.fulfillment_status.slice(1).toLowerCase();\n                for (let i = 0; i < cur_node.order_notes.length; i++){\n                  cur_node.order_notes[i].date_created = moment(cur_node.order_notes[i].date_created, [\n                \"YYYY-MM-DDThh:mm:ssZ\",\n                ]).format(\"Do MMM YYYY HH:mm a\")\n                }\n                complete_orders_data.push({\n                  name: cur_node.id,\n                  processed_date: cur_node.processedAt,\n                  fulfillment_status: cur_node.fulfillment_status,\n                  status_url: cur_node.order_status_url,\n                  order_notes: cur_node.order_notes\n                });\n              }\n              this.chat[index].show_all_orders_list = true;\n              this.chat[index].all_orders_list = complete_orders_data;\n              this.chat[index].received =\n                \"Please Find Below Your Latest Orders:\";\n              this.chat[index].show_all_orders_list = true;\n              this.chat[index].recent_orders_list = complete_orders_data;\n                }\n              setTimeout(() => {\n                this.chat[index].conversation_only = true;\n              }, 500);\n            }\n          });\n      } else if (token_type === \"shopify_customer_id\") {\n        if(Boolean(this.shopify_customer_id) === false){\n          this.shopify_customer_id = this.$session.get(\"shopify_customer_id\");\n        }\n        var shopify_customer_email = this.$session.get(\"shopify_customer_token\");\n        let stringified_customer_payload = JSON.stringify({\n          customerId: this.shopify_customer_id,\n          email: shopify_customer_email\n        });\n        this.chat[index].received = \"Fetching your order details ...\";\n        axios\n          .post(api_calls.chatbot_response_cense(), {\n            license_key: this.$session.get(\"UserInformation\").license_key,\n            token: this.bot_response_token_value,\n            username: this.$session.get(\"UserInformation\").email,\n            source: \"Web\",\n            chat: `/retrieve_customer_orders${stringified_customer_payload}`,\n            token: this.bot_response_token_value,\n            role: this.$session.get(\"UserInformation\").role,\n            refreshed_or_closed: this.refreshed_or_closed,\n          })\n          .then((response) => {\n            if (response.data.responses[0].custom.orders_list.length == 0 && this.retail_order_retreival_only_email_required){\n              this.is_typing_indicator_on = false;\n              this.chat[index].conversation_only = true;\n              this.chat[index].received = \"There are no orders to be displayed for the given Email or Phone number\";\n              this.shopify_customer_id = null;\n            }else{\n              this.load_customer_orders(\n              response.data.responses[0].custom.orders_list,\n              index,\n              isRefund ? \"refund\" : \"all_orders\"\n            );\n            }\n          })\n          .catch((e) => {\n            this.is_typing_indicator_on = false;\n            console.log(e);\n            this.update_scrollbar(\"upto_end\", \"response\");\n          });\n      }\n    },\n    shopify_is_token_valid(index, isRefund) {\n      isRefund = isRefund || false;\n      if (this.retail_web_framework == \"shopify\"){\n        if (\n        (this.chat[index].fetch_shopify_details &&\n          !Boolean(this.chat[index].is_refund) &&\n          !Boolean(this.chat[index].recent_orders_list)) ||\n        (this.chat[index].fetch_shopify_details &&\n          Boolean(this.chat[index].is_refund) &&\n          !Boolean(this.chat[index].refund_orders_list)) ||\n        (this.chat[index].fetch_shopify_details &&\n          Boolean(this.chat[index].return_shopify_email))\n        ) {\n          if (this.retail_order_retreival_only_email_required) {\n            if (Boolean(this.shopify_customer_id)) {\n              let customerToken = this.$session.get(\"shopify_customer_token\");\n              if (this.chat[index].is_refund) {\n                this.shopify_fetch_customer_id(\n                  customerToken,\n                  index,\n                  \"shopify_customer_id\"\n                );\n              }\n              else if (this.chat[index].return_shopify_email) {\n                this.send_shopify_customer_id(index, false);\n              }\n              else {\n                this.shopify_fetch_orders(\n                  customerToken,\n                  index,\n                  isRefund,\n                  \"shopify_customer_id\"\n                );\n              }\n              return true;\n            }\n            return false;\n          } else {\n            let shopify_store_cid = this.get_shopify_store_window_customer_id();\n            if (Boolean(shopify_store_cid) === false) {\n              return false;\n            } else {\n              // let cutoff = this.$session.get(\"shopify_customer_token_expiry\");\n              // cutoff = moment(cutoff, [\"YYYY-MM-DDThh:mm:ssZ\"]);\n              // if (moment().isBefore(cutoff)) {\n\n\n                // let shopify_store_cid = this.get_shopify_store_window_customer_id();\n                // let shopify_store_cid = 5302001893447; //hardcoded: remove after testing\n                if(shopify_store_cid === null || shopify_store_cid == undefined || shopify_store_cid == \"\"){\n                  return false;\n                } else {\n                  this.shopify_customer_id = shopify_store_cid;\n                }\n                let customerToken = this.$session.get(\"shopify_customer_token\");\n                if (this.chat[index].is_refund) {\n                  this.shopify_fetch_customer_id(\n                    customerToken,\n                    index,\n                    \"shopify_customer_id\"\n                  );\n                }\n                else if (this.chat[index].return_shopify_email) {\n                  this.send_shopify_customer_id(index, false);\n                }\n                else {\n                  this.shopify_fetch_orders(\n                    customerToken,\n                    index,\n                    isRefund,\n                    \"shopify_customer_id\"\n                  );\n                }\n                return true;\n              // } else {\n              //   return false;\n              // }\n            }\n          }\n        } else {\n          return true;\n        }\n      } else if(this.retail_web_framework == \"woocommerce\"){\n        if (\n        (this.chat[index].fetch_shopify_details &&\n          !Boolean(this.chat[index].is_refund) &&\n          !Boolean(this.chat[index].recent_orders_list)) ||\n        (this.chat[index].fetch_shopify_details &&\n          Boolean(this.chat[index].is_refund) &&\n          !Boolean(this.chat[index].refund_orders_list)) ||\n        (this.chat[index].fetch_shopify_details &&\n          Boolean(this.chat[index].return_shopify_email))\n        ) {\n        if (this.retail_order_retreival_only_email_required) {\n          this.shopify_customer_id = this.$session.get(\"shopify_customer_id\");\n          if (Boolean(this.shopify_customer_id)) {\n              let customerToken = this.$session.get(\"shopify_customer_id\");\n              this.shopify_fetch_orders(\n                      customerToken,\n                      index,\n                      isRefund,\n                      \"shopify_customer_id\"\n                    );\n              return true \n          }else {\n            return false;\n          }\n        }else {\n          let woocommerce_store_login_detail = this.get_woocommerce_store_window_customer_email();\n            if (Boolean(woocommerce_store_login_detail) == false) {\n              return false;\n            } else {\n                this.$session.set(\"shopify_customer_id\", woocommerce_store_login_detail[0]);\n                this.$session.set(\"shopify_customer_token\", woocommerce_store_login_detail[1])\n                if (this.chat[index].is_refund) {\n                  this.shopify_fetch_customer_id(woocommerce_store_login_detail[0], index, \"shopify_customer_id\");\n                } else {\n                  this.shopify_fetch_orders(woocommerce_store_login_detail[0], index, isRefund, \"shopify_customer_id\");\n                }\n                return true;\n            }\n          // if (!this.$session.has(\"shopify_customer_token_expiry\")) {\n          //     return false;\n          //   } else {\n          //     let cutoff = this.$session.get(\"shopify_customer_token_expiry\");\n          //     cutoff = moment(cutoff, [\"YYYY-MM-DDThh:mm:ssZ\"]);\n          //     let current_time = new Date(cutoff);\n          //     if (moment().isBefore(current_time)) {\n          //       let customerToken = this.$session.get(\"shopify_customer_token\");\n          //       this.shopify_fetch_orders(\n          //           customerToken,\n          //           index,\n          //           isRefund,\n          //           \"shopify_customer_token\"\n          //         );\n          //       return true;            \n          //     }else {\n          //       return false;\n          //     }\n          //   }\n        }\n        }else {\n          return true;\n        }\n      } else if(this.retail_web_framework == \"magento\"){\n        if (\n        (this.chat[index].fetch_shopify_details &&\n          !Boolean(this.chat[index].is_refund) &&\n          !Boolean(this.chat[index].recent_orders_list)) ||\n        (this.chat[index].fetch_shopify_details &&\n          Boolean(this.chat[index].is_refund) &&\n          !Boolean(this.chat[index].refund_orders_list)) ||\n        (this.chat[index].fetch_shopify_details &&\n          Boolean(this.chat[index].return_shopify_email))\n        ) {\n        if (this.retail_order_retreival_only_email_required) {\n          this.shopify_customer_id = this.$session.get(\"shopify_customer_id\");\n          if (Boolean(this.shopify_customer_id)) {\n              let customerToken = this.$session.get(\"shopify_customer_id\");\n              this.shopify_fetch_orders(\n                      customerToken,\n                      index,\n                      isRefund,\n                      \"shopify_customer_id\"\n                    );\n              return true \n          }else {\n            return false;\n          }\n        }else {\n          let magento_store_login_detail = this.get_magento_store_window_customer_email();\n            if (Boolean(magento_store_login_detail) == false) {\n              return false;\n            } else {\n                this.$session.set(\"shopify_customer_id\", magento_store_login_detail[0]);\n                this.$session.set(\"shopify_customer_token\", magento_store_login_detail[1])\n                if (this.chat[index].is_refund) {\n                  this.shopify_fetch_customer_id(magento_store_login_detail[0], index, \"shopify_customer_id\");\n                } else {\n                  this.shopify_fetch_orders(magento_store_login_detail[0], index, isRefund, \"shopify_customer_id\");\n                }\n                return true;\n            }\n          // if (!this.$session.has(\"shopify_customer_token_expiry\")) {\n          //     return false;\n          //   } else {\n          //     let cutoff = this.$session.get(\"shopify_customer_token_expiry\");\n          //     cutoff = moment(cutoff, [\"YYYY-MM-DDThh:mm:ssZ\"]);\n          //     let current_time = new Date(cutoff);\n          //     if (moment().isBefore(current_time)) {\n          //       let customerToken = this.$session.get(\"shopify_customer_token\");\n          //       this.shopify_fetch_orders(\n          //           customerToken,\n          //           index,\n          //           isRefund,\n          //           \"shopify_customer_token\"\n          //         );\n          //       return true;            \n          //     }else {\n          //       return false;\n          //     }\n          //   }\n        }\n        }else {\n          return true;\n        }\n      }\n    },\n    initialize_shopify_ui() {\n      if (\n        window.Shopify ||\n        this.is_retail_bot ||\n        this.companyid == \"censeretail49140\"\n      ) {\n        var client = ShopifyBuy.buildClient({\n          domain: window.Shopify\n            ? window.Shopify.shop\n            : this.shopify_retail_shop_name + \".myshopify.com\",\n          storefrontAccessToken: this.retail_shop_storefront_token,\n        });\n        this.shopify_ui = ShopifyBuy.UI.init(client);\n        // if (this.$session.get(\"IsPortalMaintainence\") === false) {\n        this.shopify_ui.createComponent(\"cart\", {\n          node: document.getElementById(\"cartDiv\"),\n          toggles: [{ node: document.getElementById(\"toggle\") }],\n          moneyFormat: this.retail_shop_currency + \" {{money_with_currency}}\",\n          options: {\n            toggle: {\n              sticky: false,\n            },\n            popup: false,\n          },\n        });\n        // }\n      }\n    },\n    initialize_shopify_buttons(product_id, index, variant_id) {\n      try {\n          this.shopify_ui\n          .createComponent(\"product\", {\n            id: product_id,\n            variantId: variant_id,\n            moneyFormat: this.retail_shop_currency + \" {{money_with_currency}}\",\n            options: {\n              product: {\n                contents: {\n                  options: true,\n                  quantity: true,\n                  quantityIncrement: true,\n                  quantityDecrement: true,\n                  variantTitle: true,\n                  // buttonWithQuantity: false,\n                },\n                styles: {\n                  quantity: {\n                    display: \"flex\",\n                    \"justify-content\": \"center\",\n                  },\n                },\n              },\n            },\n            node: document.getElementById(`product_${product_id}_${index}`),\n          })\n          .then((response) => {\n            this.check_no_products();\n            for (var i in this.product_list) {\n              if (product_id == this.product_list[i].product_id) {\n                this.product_list[i].availableForSale =\n                  response.viewData.availableForSale;\n                this.product_list[i].productImage = response.cachedImage.src;\n                this.product_list[i].onlineStoreURL = response.onlineStoreURL;\n              }\n            }\n          });\n      } catch (e) {\n        var msg = {\n          conversation_only: true,\n          time: this.generate_time(),\n          ask_feedback: false,\n          received:\n            \"Some error occurred while testing. Please try by refreshing the browser! If the issue persists, please contact system admin.\",\n          receiving: true,\n        };\n        this.chat.push(msg);\n      }\n    },\n    demo_retail_question() {\n      if (this.is_retail_bot && this.isCalledFromSetup) {\n        axios\n          .post(\n            api_calls.template_synonyms(),\n            {\n              company_id: this.companyid,\n              company_name: this.companyname,\n              is_get_product_list: true,\n            },\n            {\n              headers: {\n                Authorization: `Bearer ${this.$session.get(\"at\")}`,\n              },\n            }\n          )\n          .then(({ data }) => {\n            this.spinnerOn = false;\n            if (data.status === \"Success\") {\n              let product_names_list = data.product_names_list;\n              let item =\n                product_names_list[\n                  Math.floor(Math.random() * product_names_list.length)\n                ];\n              this.to_send = `Please show me ${item}`;\n              swal({\n                text:\n                  \"Testing of Bot in Progress, Searching for a product from your Store!\",\n                toast: true,\n                showCancelButton: false,\n                showConfirmButton: false,\n                type: \"info\",\n                timer: 5000,\n              });\n              setTimeout(() => {\n                // $(\"#send_btn\").click()\n                this.chat.push({\n                  conversation_only: true,\n                  sending: true,\n                  sent: this.to_send,\n                  time: this.generate_time(),\n                });\n                // this.$session.set(\"BotResponse_Conversation\", this.chat);\n                this.update_scrollbar(\"upto_end\", \"sender\");\n                axios\n                  .post(api_calls.chatbot_response_cense(), {\n                    chat: this.to_send,\n                    token: this.bot_response_token_value,\n                    username: this.$session.get(\"UserInformation\").email,\n                    source: \"Web\",\n                    license_key: this.$session.get(\"UserInformation\")\n                      .license_key,\n                    role: this.$session.get(\"UserInformation\").role,\n                    refreshed_or_closed: this.refreshed_or_closed,\n                  })\n                  .then((response) => {\n                    // response.data = {\n                    //   responses: [\n                    //     {\n                    //       buttons: [\n                    //         { title: \"Call Support\", value: \"/call_support\" },\n                    //         { title: \"Live Chat\", value: \"/live_chat\" },\n                    //       ],\n                    //       intent: \"confusion\",\n                    //       text: \"Sorry I am not getting your question\",\n                    //     },\n                    //   ],\n                    // };\n\n                    this.response_handling(response, \"display_success_toastr\");\n                    // swal({\n                    //   text: \"Testing Completed Successfully! Please Proceed to the next step.\",\n                    //   toast: true,\n                    //   showCancelButton: false,\n                    //   showConfirmButton: false,\n                    //   type: \"success\",\n                    //   timer: 5000,\n                    //   timerProgressBar: true,\n                    // })\n                  });\n                this.to_send = \"\";\n              }, 3200);\n            }\n          })\n          .catch((e) => {\n            this.spinnerOn = false;\n            // console.log(e);\n            // swal({\n            //   text: \"Testing Finished.Some Error Occurred, Please Try Again\",\n            //   toast: true,\n            //   showCancelButton: false,\n            //   showConfirmButton: false,\n            //   type: \"error\",\n            //   timer: 2000,\n            //   timerProgressBar: true,\n            // })\n            var msg = {\n              conversation_only: true,\n              time: this.generate_time(),\n              ask_feedback: false,\n              received:\n                \"Some error occurred while testing. Please try by refreshing the browser! If the issue persists, please contact system admin.\",\n              receiving: true,\n            };\n            this.chat.push(msg);\n          });\n      }\n    },\n    shopify_check_customer_logged_in() {\n      let customer_data = {\n        is_customer_logged_in: false,\n        customer_id: null,\n      };\n\n      if (Boolean(this.shopify_customer_id)) {\n        customer_data.is_customer_logged_in = true;\n        customer_data.customer_id = this.shopify_customer_id;\n      }\n      let stringified_customer_payload = JSON.stringify({\n        customer_data,\n      });\n      this.is_typing_indicator_on = true;\n      axios\n        .post(api_calls.chatbot_response_cense(), {\n          license_key: this.$session.get(\"UserInformation\").license_key,\n          token: this.bot_response_token_value,\n          username: this.$session.get(\"UserInformation\").email,\n          source: \"Web\",\n          chat: `/shopify_retreive_customer_specific_offers${stringified_customer_payload}`,\n          token: this.bot_response_token_value,\n          role: this.$session.get(\"UserInformation\").role,\n          refreshed_or_closed: this.refreshed_or_closed,\n        })\n        .then((response) => {\n          this.response_handling(response, null);\n        })\n        .catch((e) => {\n          console.log(e);\n          this.update_scrollbar(\"upto_end\", \"response\");\n        });\n    },\n    send_shopify_customer_id(index, is_login, metadata) {\n      // debugger;\n      // console.log(\"send_shopify_customer_clg\");\n      // is_login = false;\n      if (is_login === true) {\n        let queryString = $(\"#shopify_login_form\").serializeArray();\n        let form_payload = {};\n        form_payload[\n          \"shopify_is_only_email\"\n        ] = this.retail_order_retreival_only_email_required;\n        form_payload[\n          \"text\"\n        ] = this.chat[index].metadata.text;\n        form_payload[\n          \"entity\"\n        ] = this.chat[index].metadata.entity;\n        for (var i in queryString) {\n          form_payload[queryString[i].name] = this.chat[index].customer_email_id;\n        }\n        form_payload = JSON.stringify(form_payload);\n        axios\n          .post(api_calls.chatbot_response_cense(), {\n            license_key: this.$session.get(\"UserInformation\").license_key,\n            token: this.bot_response_token_value,\n            username: this.$session.get(\"UserInformation\").email,\n            source: \"Web\",\n            chat: `/re_order_products_action${form_payload}`,\n            token: this.bot_response_token_value,\n            role: this.$session.get(\"UserInformation\").role,\n            refreshed_or_closed: this.refreshed_or_closed,\n          })\n          .then((response) => {\n            this.chat[index].received = \"\";\n            this.chat[index].fetch_shopify_details = false;\n            this.chat.splice(index,1);\n            this.response_handling(response)\n          })\n          .catch((err) => {\n            console.log(\"Error :>> \", err);\n          });\n      } else {\n        // let form_payload = {\n        //   email:'ashish.i@codearray.tech',\n        //   password: \"\",\n        //   shopify_is_only_email: false,\n        //   text: this.chat[index].metadata.text,\n        //   entity : this.chat[index].metadata.entity\n        // };\n        // form_payload = JSON.stringify(form_payload);\n        // axios\n        //   .post(api_calls.chatbot_response_cense(), {\n        //     license_key: this.$session.get(\"UserInformation\").license_key,\n        //     token: this.bot_response_token_value,\n        //     username: this.$session.get(\"UserInformation\").email,\n        //     source: \"Web\",\n        //     chat: `/re_order_products_action${form_payload}`,\n        //     token: this.bot_response_token_value,\n        //     role: this.$session.get(\"UserInformation\").role,\n        //     refreshed_or_closed: this.refreshed_or_closed,\n        //   })\n        //   .then((response) => {\n        //     console.log(response.data);\n        //     console.log(this);\n        //     this.response_handling(response)\n        //   })\n        //   .catch((err) => {\n        //     console.log(\"Error :>> \", err);\n        //   });\n      }\n    },\n    open_messaging_framework_integration(url) {\n      var link = document.createElement(\"a\");\n      link.href = url;\n      // link.setAttribute(\"download\", file_name);\n      link.setAttribute(\"target\", \"_blank\");\n      document.body.appendChild(link);\n      link.click();\n      link.remove();\n    },\n    support_subscription_data() {\n      axios\n        .post(api_calls.chatbot_response_cense(), {\n          license_key: this.$session.get(\"UserInformation\").license_key,\n          token: this.bot_response_token_value,\n          username: this.$session.get(\"UserInformation\").email,\n          token: this.bot_response_token_value,\n          role: this.$session.get(\"UserInformation\").role,\n          refreshed_or_closed: this.refreshed_or_closed,\n          chat: \"/support_subscription_data\",\n          source: \"Web\",\n        })\n        .then((response) => {\n          this.response_handling(response);\n        });\n    },\n    check_no_products() {\n      let products_div = document.getElementById('products_list_div');\n      let display_none_count = 0;\n      for (let i = 0; i<products_div.children.length; i++){\n        if(products_div.children[i].style.display === \"none\"){\n          display_none_count +=1;\n        }\n      }\n      if(display_none_count === products_div.children.length) {\n        var msg = {\n          conversation_only: true,\n          time: this.generate_time(),\n          received : \"Sorry, we could not find any products. Please try rephrasing to search a different product!\",\n          receiving : true\n        };\n        this.chat.push(msg);\n      }\n    },\n    get_magento_store_window_customer_email(){\n      try {\n        let curr = JSON.parse(this.user_data.magento_customer_data);\n        if (Boolean(curr.id) == true && Boolean(curr.email) == true) {\n          var customer = [curr.id, curr.email]\n          return customer;\n        }\n      } catch(e) { }\n      return null;\n    },\n    get_woocommerce_store_window_customer_email(){\n      try {\n        let curr = this.user_data.woo_current_user;\n        if (curr.ID !== 0 && curr.allcaps.customer == true) {\n          var customer = [curr.data.ID, curr.data.user_email]\n          return customer;\n        }\n      } catch(e) { }\n      return null;\n    },\n    get_shopify_store_window_customer_id(){\n      try {\n      let curr = window.ShopifyAnalytics.meta.page.customerId;\n      if (curr !== undefined && curr !== null && curr !== \"\") {\n        return curr;\n      }\n      } catch(e) { }\n      try {\n        let curr = window.meta.page.customerId;\n        if (curr !== undefined && curr !== null && curr !== \"\") {\n          return curr;\n        }\n      } catch (e) { }    \n      try {\n        let curr = _st.cid;\n        if (curr !== undefined && curr !== null && curr !== \"\") {\n          return curr;\n        }\n      } catch (e) { }\n      return null;\n    },\n    no_orders_to_be_shown(index){\n      this.chat[index].received = \"It seems you have no orders right now!\"\n    },\n    change_chat_text_to_login_redirect(index){\n      this.chat[index].received = '<p style=\"width:auto;margin-bottom:0;\"> Please login on the store by clicking <a title=\"This feature is only available on the store website.\"class=\"bot-response-style\" style=\"cursor: not-allowed;\" href=\"javascript: void(0)\"> here </a></p>';\n    },\n    return_document_cookies(name) {\n      // const value = `; ${document.cookie}`;\n      // const parts = value.split(`; ${name}=`);\n      // if (parts.length === 2) return parts.pop().split(';').shift();\n      let cookie = {};\n      document.cookie.split(';').forEach(function(el) {\n      let [k,v] = el.split('=');\n      cookie[k.trim()] = v;\n    })\n    return cookie[name];\n    },\n    available_qty(stock_qty, id){\n      if (this.addtoCartdata.length != 0){\n        for (var i in this.addtoCartdata) {\n          if (this.addtoCartdata[i].id === id){\n            let res = stock_qty - this.addtoCartdata[i].order_qty;\n            return (res == 0) ? \"reached\" : res;\n          }\n        }\n        return stock_qty;\n      } else{\n        return stock_qty;\n      }\n    },\n    scroll_card_right(item) {\n      var doc = document.querySelector(`#carousel_cards_id_${item}`);\n      doc.scrollLeft += 250;\n      var maxScrollLeft = doc.scrollWidth - doc.clientWidth;\n      maxScrollLeft = maxScrollLeft- 230 ;\n      let second_bttn = document.querySelector(`#carousel_scroll_btn2_${item}`);\n      let first_bttn = document.querySelector(`#carousel_scroll_btn1_${item}`);\n      first_bttn.style.display = \"block\";\n      if (doc.scrollLeft >= maxScrollLeft){\n        second_bttn.style.display = \"none\";\n      }\n    },\n    scroll_card_left(item) {\n      var doc = document.querySelector(`#carousel_cards_id_${item}`);\n      doc.scrollLeft -= 250;\n      let first_bttn = document.querySelector(`#carousel_scroll_btn1_${item}`);\n      let second_bttn = document.querySelector(`#carousel_scroll_btn2_${item}`);\n      second_bttn.style.display = \"block\";\n      if (doc.scrollLeft <= 250){\n        first_bttn.style.display = \"none\";\n      }\n    },\n    check_type_button(bttn){\n      let is_website = this.reg_host.test(bttn.value);\n      if (is_website === true){\n        return true;\n      }else{\n        return false;\n      }\n    }       \n  },\n};\n</script>\n<style>\n.bot-font-sender {\n  font-family: var(--bot-font-style) !important;\n  color: var(--bot-font-color-sender) !important;\n}\n.bot-font-receiver {\n  font-family: var(--bot-font-style) !important;\n  color: var(--bot-font-color-receiver) !important;\n  background: var(--bot-response-bg-color) !important;\n}\n\na.bot-response-style, \na.bot-response-style:hover,\na.bot-response-style:focus{\n    text-decoration: underline !important;\n    font-weight: 500;\n}\n.bot-font-buttons {\n  font-family: var(--bot-font-style) !important;\n  color: var(--bot-font-color-buttons) !important;\n}\n.open_cense_website:hover{\n  cursor: pointer;\n}\n.bot-font-style {\n  font-family: var(--bot-font-style) !important;\n}\n.product-variant-title {\n  font-size: 18px;\n  color: #666;\n  font-weight: 400;\n  text-align: center;\n  margin-top: 0px !important;\n  margin-bottom: 0px !important;\n}\n.dynamic-button {\n  background-color: var(--bot-button-background) !important;\n  border-color: var(--bot-button-border) !important;\n  color: var(--bot-font-color-buttons) !important;\n}\n.add-to-cart {\n  background-color: var(--bot-button-background);\n  margin-top: 10px;\n  margin-bottom: 20px;\n  padding: 12px 40px;\n  letter-spacing: .3px;\n  border-radius: 3px;\n  border-color: var(--bot-button-border) !important;\n  font-size: 15px;\n  font-family: var(--bot-font-style) !important;\n  color: var(--bot-font-color-buttons) !important;\n  font: 400 13.3333px Arial;\n  color: #fff;\n}\n.add-to-cart:hover{\n  background-color: var(--bot-button-background) !important;\n}\n.add-to-cart:active{\n  background-color: var(--bot-button-background) !important;\n  border-color: var(--bot-button-border) !important;\n}\n.product-price-woocommerce{\n  font-size: 12px; \n  font-weight: bold; \n  color: #4a4a4a;\n  margin-bottom: 6px !important;    \n  /* font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif; */\n}\n.cart-qty-num {\n  font-size: 15px;\n  margin-bottom: 17px;\n  margin-left: -2px;\n  display: inline-block;\n  vertical-align: middle;\n  height: 29px;\n  border-radius: 50%;\n  color: #fff;\n  -ms-flex-align: center;\n  align-items: center;\n  -ms-flex-pack: center;\n  justify-content: center;\n}\n.cense-cart-btn {\n  height: 40px;\n  background-color: var(--bot-button-background); \n  border-color: var(--bot-button-border) !important;\n  border-radius: 3px; \n  padding: 0px 10px;\n}\n.product_scroll_btn{\n  margin-top:2.3% !important;\n  margin-bottom:3% !important;\n  height: 170px !important;\n  width: 22px !important;\n  background-color: var(--bot-button-background) !important; \n  border-color: var(--bot-button-border) !important;\n  /* border-radius: 3px !important;  */\n  padding: 0px 0px !important;\n  color: var(--bot-font-color-buttons) !important;\n  opacity:1 !important;\n}\n.product_scroll_btn:hover{\n  opacity:0.8 !important;\n}\n.product_scroll_btn:focus, \n.product_scroll_btn:active:focus{\n  outline: none !important;\n  box-shadow: none !important;\n  -webkit-box-shadow: none !important;\n}\n.product_scroll_btn_icon{\n  margin-top: 77px !important;\n  color: var(--bot-font-color-buttons) !important;\n}\n.shopify-buy-cart-wrapper.shopify-buy-frame.shopify-buy-frame--cart.is-initialized {\n  position: fixed;\n  right: 0;\n  transition: all 250ms cubic-bezier(0.165, 0.84, 0.44, 1);\n  display: none !important;\n}\n.shopify-buy-cart-wrapper.shopify-buy-frame.shopify-buy-frame--cart.is-initialized.is-active {\n  position: absolute;\n  transition: translateX(0);\n  display: block !important;\n}\n.shopify-buy-frame--cart{\n\tdisplay: none !important;\n}\n.shopify-buy__btn {\n  font-size: 12px !important;\n  padding: 12px 10px !important;\n}\n\n.order-elem {\n  background: #ffffff;\n}\n\n.order-elem img {\n  width: 30%;\n  height: 30%;\n  object-fit: contain;\n}\n\n.order-elem .order-title,\n.order-elem .order-price {\n  font-size: 14px;\n}\n\n.order-elem .order-quantity {\n  font-size: 12px;\n}\n\n.media3,\n.retailigence.sender .chat,\n.retailigence.group_chat_btn > a {\n  background: var(--bot-sender-color);\n}\n.chat-row.receiver .chat a {\n  color: var(--bot-link-color) !important;\n}\n.bot-img {\n  /* background-image: url(/img/Bot_img.png); */\n  background-size: cover;\n  background-repeat: no-repeat;\n  background-position: center;\n  width: 23px;\n  height: 23px;\n  border-radius: 100%;\n}\n.vue-star-rating-rating-text{\n  display: none !important;\n}\n.vue-star-rating-pointer .vue-star-rating-star{\n margin-right: 10px !important;\n margin-bottom: 4px !important;\n}\n</style>\n<style scoped>\n.sender .chat{\n  background: var(--user-response-bg-color) !important;\n}\n.live-agent-window {\n  position: absolute;\n  z-index: 1;\n  width: 100%;\n  height: 50px;\n  background-color: white;\n  -webkit-animation-duration: 3s;\n  animation-duration: 3s;\n}\n@-webkit-keyframes fadeInDown {\n  0% {\n      opacity: 0;\n      -webkit-transform: translateY(-20px);\n  }\n  100% {\n      opacity: 1;\n      -webkit-transform: translateY(0);\n  }\n}\n\n@keyframes fadeInDown {\n  0% {\n      opacity: 0;\n      transform: translateY(-20px);\n  }\n  100% {\n      opacity: 1;\n      transform: translateY(0);\n  }\n}\n.fadeInDown {\n  -webkit-animation-name: fadeInDown;\n  animation-name: fadeInDown;\n}\n.del-note {\n  color: var(--delivery-note-color) !important;\n}\n.chat-his > .time {\n  color: var(--delivery-note-color) !important;\n}\n.img_only_id {\n  margin-top: 4% !important; \n  margin-left: 8.5% !important;\n  max-width: calc(100% - 36px) !important;\n}\n.img_id {\n  margin-top: 4% !important; \n  margin-left: 2.5% !important;\n  max-width: calc(100% - 36px) !important;\n}\n.banner_img_url_only_id {\n  margin-top: 4% !important; \n  margin-left: 8% !important;\n  max-width: calc(100% - 31px) !important;\n}\n.banner_img_url_id {\n  margin-top: 4% !important; \n  margin-left: 3% !important;\n  max-width: calc(100% - 12px) !important;\n}\n.video_url_id {\n\tmargin-top: 4% !important; \n\twidth: 10.25cm !important;\n\tmargin-left: 2% !important;\n\tmax-width: calc(100% - 6px)!important;\n}\n.video_url_only_id {\n\tmargin-top: 4% !important; \n\twidth: 10.25cm !important;\n\tmargin-left: 8% !important;\n\tmax-width: calc(100% - 23px)!important;\n}\n.banner_video_url_only_id {\n\tmargin-top: 4% !important; \n\twidth: 10.25cm !important;\n\tmargin-left: 8% !important;\n\tmax-width: calc(100% - 23px)!important;\n}\n.banner_video_url_id {\n\tmargin-top: 4% !important; \n\twidth: 10.25cm !important;\n\tmargin-left: 2% !important;\n\tmax-width: calc(100% - 6px)!important;\n}\n.product-variation {\n  border: 1px solid #d3dbe2;\n  border-radius: 3px;\n  -webkit-box-sizing: border-box;\n  box-sizing: border-box;\n  position: relative;\n  background: #fff;\n  overflow: hidden;\n  vertical-align: bottom;\n}\n.select-product-variation {\n  padding: 7px 10px;\n  font-weight: 400 !important;\n  font-size: 13.3333px !important;\n  padding-right: 32px;\n  border: 0;\n  width: 100%;\n  background: transparent;\n  -webkit-appearance: none;\n}\n.select-icon {\n  cursor: pointer;\n  display: block;\n  fill: #798c9c;\n  position: absolute;\n  right: 10px;\n  top: 50%;\n  margin-top: -6px;\n  pointer-events: none;\n  width: 12px;\n  height: 12px;\n}\n#return_increment_numeric_input :focus-visible{\n\tbox-shadow: 0 0 0 .2rem rgba(0,123,255,.25) !important;\n\toutline: none !important;\n}\n.receiver > .d-flex{\n  align-items: center;\n}\n#send_button.filled {\n  fill: var(--bot-button-color) !important;\n}\n.table td,\n.table th {\n  padding: 0.5rem !important;\n}\n.stop-chat {\n  width: 100%;\n}\n.chat-footer > a {\n  color: #283879 !important;\n}\n.buy-now {\n  font-weight: 800;\n  color: #fff;\n  font-size: 12px;\n  cursor: pointer;\n  margin-top: -5%;\n}\n.chat-inner.--delete {\n  -webkit-animation: fadein 0.9s linear;\n  -moz-animation: fadein 0.9s linear;\n  animation: fadein 0.9s linear;\n}\n@keyframes fadein {\n  from {\n    opacity: 1;\n  }\n  to {\n    opacity: 0;\n  }\n}\n@-webkit-keyframes fadein {\n  from {\n    opacity: 1;\n  }\n  to {\n    opacity: 0;\n  }\n}\n\n@-moz-keyframes fadein {\n  from {\n    opacity: 1;\n  }\n  to {\n    opacity: 0;\n  }\n}\n.image-box-woocommerce {\n  width: 170px;\n  height: 170px;\n  margin-top: 6%;\n  margin-bottom: 6%;\n}\n.product-title-woocommerce{\n  font-size: 18px;\n  line-height: 1.2;\n  color: #4a4a4a;\n  margin-bottom: 0px !important;\n  font-weight: 700;\n  /* font-family: \"Helvetica Neue\", Helvetica, Arial, sans-serif; */\n  /* display: inline-block; */\n  box-sizing: border-box;\n  white-space: pre-line;\n  word-wrap: break-word;\n}\n.product-title-woocommerce .textMaxLine {\n  display: -webkit-box;\n  -webkit-box-orient: vertical;\n  -webkit-line-clamp: 2;\n  overflow: hidden;\n  font-size: 16px;\n  height: 40px;\n}\n.product-title-woocommerce .product-variant-title{\n  display: -webkit-box;\n  -webkit-box-orient: vertical;\n  -webkit-line-clamp: 1 !important;\n  overflow: hidden;\n  font-size: 16px;\n  height: 20px;\n}\n.plus {\n  border-radius: 0px 3px 3px 0px;\n  /* border: 1px solid #767676; */\n  border-left: 0px;\n}\n.minus {\n  border-radius: 3px 0px 0px 3px;\n  /* border: 1px solid #767676; */\n  border-right: 0px;\n}\n.plus,\n.minus {\n  width: 26px;\n  cursor: pointer;\n  padding: 0;\n}\n.product-qty{\n  display: inline-flex !important;\n  margin-top: 10px !important;\n}\n.quantity-btn {\n  height: 30px;\n  font-size: 16px;\n  border: 1px solid #d3dbe2;\n  vertical-align: bottom;\n  background: white;\n}\n.quantity-btn:focus {\n  outline: -webkit-focus-ring-color auto 1px !important;\n}\n.image-box {\n  height: 90px;\n  width: 100px;\n  margin-top: 6%;\n}\n.image-box-msg-frmw{\n  /* height: 55px;\n  width: 50px; */\n  margin-top: 10%;\n  display: block;\n  max-width:100px;\n  max-height:65px;\n  width: auto;\n  height: auto;\n}\n.buy-products {\n  height: 180px;\n}\n.image-container-woocommerce {\n  /* background: #fff; */\n  /* border: #fff 1px solid; */\n  text-align: center;\n  border-radius: 5px 5px 5px 5px;\n  margin-right: 3% !important;\n  width: 50% !important;\n  /* overflow: hidden; */\n  border: none;\n  height: auto;\n  display: block;\n}\n.image-container {\n  background: #fff;\n  border: #fff 1px solid;\n  border-radius: 5px 5px 5px 5px;\n  margin-left: 5%;\n  height: 180px;\n}\n.image-container > p {\n  font-size: 10px;\n  text-align: center;\n}\n.chat-row.sender .chat,\n.chat-row.receiver .chat {\n  font-weight: 450;\n}\n.chat-body {\n  overflow-y: auto;\n}\n.chat-body .chat-row.receiver p,\n.chat-body .chat-row.receiver a {\n  width: 50%;\n}\n.chat-body .chat-row.receiver a{\n  color: var(--bot-button-background) !important;\n  font-weight: 400;\n}\n.chat-row.receiver .chat {\n  background-color: var(--bot-response-bg-color) !important;\n  color: #000;\n  width: fit-content;\n  margin-left: 10px;\n}\nbutton.custom-buttons {\n  background: var(--bot-button-background);\n  min-width: 100px;\n  font-family: var(--bot-font-style) !important;\n  color: var(--bot-font-color-buttons) !important;\n  border-color: var(--bot-button-border) !important;\n  font-size: 13px;\n  border-radius: 50px;\n  padding: 0.375rem 0.75rem !important;\n  margin-top: var(--bot-buttons-horizontal-spacing);\n  margin-left: var(--bot-buttons-vertical-spacing);\n}\nbutton.custom-buttons[disabled] {\n  opacity: 1;\n}\n.buttons-alignment {\n  justify-content: var(--bot-buttons-alignment);\n}\nbutton.custom-buttons.retailigence {\n  border-radius: 10px !important;\n  background: #9d2924 !important;\n}\nbutton.custom-buttons.retailigence:hover {\n  background: #9d2924bf !important;\n}\ndiv::-webkit-scrollbar {\n  max-height: 20px;\n  width: 6px;\n  height: 4px;\n  border-radius: 10px;\n}\n.bounce {\n  animation: bounce 4s infinite;\n}\n.fa.fa-microphone {\n  color: #8a8a8a63;\n  font-size: 24px;\n}\n.fas.fa-video {\n  color: #8a8a8a63;\n  font-size: 18px;\n}\n.fa.fa-microphone :hover {\n  color: red;\n}\n\n#stop-chat-button {\n  color: red;\n}\n/* #stop-chat-button :hover{ \n  color: red;\n  animation: none;\n} */\n/* #stop-chat-button {\n  animation-name: flicker;\n  animation-duration: 0.7s;\n  animation-iteration-count: infinite;\n\n  -webkit-animation-name: flicker;\n  -webkit-animation-duration: 0.7s;\n  -webkit-animation-iteration-count: infinite;\n} */\n\n#microphone.voice-on {\n  animation-name: flicker;\n  animation-duration: 0.7s;\n  animation-iteration-count: infinite;\n\n  -webkit-animation-name: flicker;\n  -webkit-animation-duration: 0.7s;\n  -webkit-animation-iteration-count: infinite;\n}\n/* Track */\ndiv::-webkit-scrollbar-track {\n  background: #f1f1f1;\n  border-radius: 10px;\n}\n.toast-message {\n  margin-top: 1000px;\n}\n/* Handle */\ndiv::-webkit-scrollbar-thumb {\n  background: #7d7d7d;\n  border-radius: 10px;\n}\n\n/* Handle on hover */\ndiv::-webkit-scrollbar-thumb:hover {\n  background: #555;\n  border-radius: 10px;\n}\n.toast-container {\n  margin-left: 800px;\n}\n.typewriter span {\n  color: #fff;\n  font-family: monospace;\n  overflow: hidden; /* Ensures the content is not revealed until the animation */\n  border-right: 0.15em solid orange; /* The typwriter cursor */\n  white-space: nowrap; /* Keeps the content on a single line */\n  margin: 0 auto; /* Gives that scrolling effect as the typing happens */\n  letter-spacing: 0.15em; /* Adjust as needed */\n  animation: typing 3.5s steps(30, end), blink-caret 0.5s step-end infinite;\n}\n\n/* Harsh */\n.chat-head .media .media-body p {\n  font-weight: bold;\n}\n#response_bot_text {\n  margin-top: 5px;\n  margin-bottom: 5px;\n  margin-left: 5px;\n  margin-right: 5px;\n  border-radius: 100px;\n}\n#button_addon2 {\n  margin-top: 5px;\n  margin-bottom: 5px;\n  border-radius: 100px;\n}\n.prompt .chat {\n  background: #fff;\n}\np {\n  font-family: Arial, Helvetica, sans-serif;\n}\n\n.chat-footer p {\n  font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto,\n    \"Helvetica Neue\", Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\",\n    \"Segoe UI Symbol\", \"Noto Color Emoji\";\n}\n\n.btn:focus,\n.btn:active:focus {\n  outline: none !important;\n  box-shadow: none;\n  -webkit-box-shadow: none;\n}\n\n/**/\n#product_refund_txt_area:focus {\n    outline: none;\n    box-shadow: none;\n    border-color: #53b9d0 !important;\n    color: #9499C2 !important;\n}\n.form-control {\n  line-height: 20px;\n  font-size: 13px;\n  color: #494d69;\n  border-radius: 10px;\n  border: none;\n  height: auto;\n  font-weight: 300;\n}\n\n#shopify_login_form {\n  margin-left: 30px;\n  margin-top: 10px;\n}\n\n#shopify_login_form .form-control {\n  padding: 10px 0 10px 15px;\n}\n\n#details_form .form-group,\n#details_form .form-group input {\n  width: 25vw !important;\n}\n\n#details_form,\n#details_form .form-group,\n#details_form .form-group input {\n  box-sizing: content-box !important;\n}\n\n.chat-txt input {\n  border-top-left-radius: 0;\n}\ninput[type=\"number\"]::-webkit-inner-spin-button,\ninput[type=\"number\"]::-webkit-outer-spin-button {\n  -webkit-appearance: none;\n  -moz-appearance: none;\n  appearance: none;\n  margin: 0;\n}\n.country,\n.country2 {\n  margin-left: 2%;\n  height: 20px;\n}\n/* .media1 {\n  background: #fff !important;\n  color: #2b3184 !important;\n} */\n/* .media2 {\n  background: #fff;\n} */\n.media3 {\n  justify-content: space-around;\n}\n.media3 img {\n  max-width: 100% !important;\n  width: 75% !important;\n  object-fit: contain;\n}\n.chat-wrap1 {\n  min-width: 320px;\n  max-width: 320px;\n}\n.chat-wrap2 {\n  min-width: 415px;\n  max-width: 415px;\n}\n.chat-body1 {\n  max-height: 300px;\n  min-height: 60vh;\n}\n.chat-body2 {\n  max-height: 400px;\n  min-height: 60vh;\n}\n\n.receiver .chat {\n  font-size: 14px !important;\n  font-weight: 300 !important;\n}\n\n.FE_button {\n  width: 33%;\n  cursor: pointer;\n  margin-left: 2%;\n  font-size: 13px;\n  margin-bottom: 0;\n  background-color: white;\n  border-radius: 10px;\n  text-align: center;\n  box-shadow: 0px 1px 5px 0px;\n  height: 26px;\n}\n.FE_button img {\n  vertical-align: sub;\n}\n\n.FE_button :active {\n  background-color: #1eaae1;\n  color: #fff;\n}\n.FE_button :active img {\n  color: #fff;\n}\n\n.chat-act1 {\n  position: fixed;\n  bottom: 30px;\n  right: 30px;\n  z-index: 1111;\n}\n\n.chat-act1 a {\n  display: block;\n  width: 50px;\n  height: 50px;\n  border-radius: 50%;\n  background: #273679 url(/public/img/ForeignExchange/ui-15.png) center / cover\n    no-repeat;\n  box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.5);\n}\n.chat-act1.active a img {\n  width: 100%;\n}\n.chat-act1 a.active {\n  -webkit-animation-delay: 0;\n  -webkit-animation-duration: 0.5s;\n  /* -webkit-animation-name: rotation-rl; */\n  -webkit-animation-fill-mode: forwards;\n  -moz-animation-delay: 0;\n  -moz-animation-duration: 0.5s;\n  /* -moz-animation-name: rotation-rl; */\n  -moz-animation-fill-mode: forwards;\n  animation-delay: 0;\n  animation-duration: 0.5s;\n  /* animation-name: rotation-rl; */\n  animation-fill-mode: forwards;\n}\n.chat-act1 a.inactive {\n  -webkit-animation-delay: 0;\n  -webkit-animation-duration: 0.5s;\n  /* -webkit-animation-name: rotation-lr; */\n  -webkit-animation-fill-mode: forwards;\n  -moz-animation-delay: 0;\n  -moz-animation-duration: 0.5s;\n  /* -moz-animation-name: rotation-lr; */\n  -moz-animation-fill-mode: forwards;\n  animation-delay: 0;\n  animation-duration: 0.5s;\n  /* animation-name: rotation-lr; */\n  animation-fill-mode: forwards;\n}\n@media (max-width: 991px) {\n  .chat-act1 {\n    bottom: 15px;\n    right: 15px;\n  }\n  .chat-act1 a {\n    width: 50px;\n    height: 50px;\n  }\n}\n/* v-bind:class=\"{'chat-act1': isexchange,'chat-act': !isexchange}\"  */\n\n/* The typing effect */\n@keyframes typing {\n  from {\n    width: 0;\n  }\n  to {\n    width: 100%;\n  }\n}\n\n/* The typewriter cursor effect */\n@keyframes blink-caret {\n  from,\n  to {\n    border-color: transparent;\n  }\n  50% {\n    border-color: orange;\n  }\n}\n\n@keyframes flicker {\n  from {\n    color: red;\n  }\n  to {\n    color: #8a8a8a63;\n  }\n}\n@-webkit-keyframes flicker {\n  from {\n    color: red;\n  }\n  to {\n    color: #8a8a8a63;\n  }\n}\n@-moz-keyframes flicker {\n  from {\n    color: red;\n  }\n  to {\n    color: #8a8a8a63;\n  }\n}\n@-o-keyframes flicker {\n  from {\n    color: red;\n  }\n  to {\n    color: #8a8a8a63;\n  }\n}\n\n@keyframes bounce {\n  0%,\n  20%,\n  50%,\n  80%,\n  100% {\n    transform: translateY(0);\n  }\n  40% {\n    transform: translateY(-180%);\n  }\n  60% {\n    transform: translateY(-90%);\n  }\n}\n@-webkit-keyframes bounce {\n  0%,\n  20%,\n  50%,\n  80%,\n  100% {\n    -webkit-transform: translateY(0);\n  }\n  40% {\n    -webkit-transform: translateY(-200%);\n  }\n  60% {\n    -webkit-transform: translateY(-100%);\n  }\n}\n@-moz-keyframes bounce {\n  0%,\n  20%,\n  50%,\n  80%,\n  100% {\n    -moz-transform: translateY(0);\n  }\n  40% {\n    -moz-transform: translateY(-200%);\n  }\n  60% {\n    -moz-transform: translateY(-100%);\n  }\n}\n@-o-keyframes bounce {\n  0%,\n  20%,\n  50%,\n  80%,\n  100% {\n    -o-transform: translateY(0);\n  }\n  40% {\n    -o-transform: translateY(-200%);\n  }\n  60% {\n    -o-transform: translateY(-100%);\n  }\n}\n.cart-img {\n  height: 25px !important;\n  width: 25px !important;\n}\n/* .cart-qty {\n  font-size: 22px;\n} */\n.shake {\n    /* width: 90%; */\n    /* height: 60%; */\n    /* padding-top: 4px; */\n    animation: shakeCart .4s ease-in-out forwards;\n}\n@keyframes shakeCart {\n  25% {\n    transform:translateX(6px)\n  }\n  50% {\n    transform:translateX(-4px);\n  }\n  75% {\n    transform:translateX(2px);\n  }\n  100% {\n    transform:translateX(0);\n  }\n}\n.carousel_card{\n  width: 100% !important;\n}\n.carousel_cards{\n  min-width:55% !important;\n  margin-left: 0.9em !important;\n  height: auto !important;\n  margin-bottom: 0.8rem!important;\n}\n.cards_carsol{\n  scroll-behavior: smooth !important;\n}\n.carousel_card_single {\n  height: auto !important;\n  min-width:55% !important;\n  border-radius: 0.25rem!important;\n  box-shadow: 0 .5rem 1rem rgba(0,0,0,.15)!important;\n  background-color: #f0f2f5!important;\n  border-radius: 1.3rem !important;\n    \n}\n.carousel_card_single_content{\n  padding: 0.6em 0.6em 0.2em 0.6em !important;\n}\n.carousel_card_single_para {\n  padding-bottom: 0.4em !important;\n}\n.carousel_card_single img {\n  width: 100% !important;\n  height: 10em !important;\n  background-position: center center !important;\n  background-size: cover !important;\n  border-top-left-radius: 1.6em !important ;\n  border-top-right-radius: 1.6em !important;\n  display: block !important;\n}\n.carousel_card_single iframe {\n  width: 100% !important;\n  height: 10em !important;\n  background-position: center center !important;\n  background-size: cover !important;\n  border-top-left-radius: 1.6em !important ;\n  border-top-right-radius: 1.6em !important;\n  display: block !important;\n}\n.carousel_card_single p {\n  font-family:var(--bot-font-style)!important;\n  width: 100% !important;\n  font-size: .8805rem!important;\n  font-weight: 300 !important;\n  line-height: 1em !important;\n  text-align: initial !important;\n  color: #4a4a4a !important;\n  margin-bottom: 0.3em !important;\n}\n.carousel_card_single h4 {\n  font-family:var(--bot-font-style)!important;\n  color: rgba(0, 0, 0, 1) !important;\n  font-weight: 700 !important;\n  font-size: 0.95rem !important;\n  margin-bottom: 0.3em !important;\n}\n.carousel_card_single a {\n  width: 95% !important;\n  font-family:var(--bot-font-style)!important;\n  margin-bottom: 0.3em !important;\n  border-radius: 8px !important;\n  font-size: 14px !important;\n  text-align: center !important;\n  color: rgba(0, 0, 0, 1) !important;\n  background: #e4e6eb !important;\n  border: 1px solid #e4e6eb !important;\n  padding: 6px 15px !important;\n  font-weight: 550 !important;\n  line-height: 1.9vh !important;\n  display: inline-block !important;\n  border-radius: 4px !important;\n  cursor: pointer !important;\n}\n.carousel_card_button{\n  text-align: center !important;\n}\n.carousel_card_single a:hover{\n  opacity: 0.8 !important;\n  background: #c8cbce !important;\n}\n.carousel_card_single a:active{\n  transform: translateY(1px) !important;\n  background: #a5cff1 !important;\n}\n.carousel_scroll_btn1{\n  position: absolute !important;\n  cursor:pointer !important;\n  top: 9em !important;\n  border-radius: 30%;\n  background: #e4e6eb !important;\n  border: 1px solid #e4e6eb !important;\n  padding: 0.2em !important;\n}\n.carousel_scroll_btn1:hover {\n  opacity:0.8 !important;\n  background: #c8cbce !important;  \n}\n.carousel_scroll_btn1:active {\n  transform: translateY(3px) !important;\n}\n.carousel_scroll_btn2{\n  position: absolute !important;\n  cursor:pointer !important;\n  top: 9em !important;\n  right: 0vh !important;\n  border-radius: 30% !important;\n  background: #e4e6eb !important;\n  border: 1px solid #e4e6eb !important;\n  padding: 0.2em !important;\n}\n.carousel_scroll_btn2:hover {\n  opacity:0.8 !important;\n  background: #c8cbce !important;\n}\n.carousel_scroll_btn2:active {\n  transform: translateY(3px) !important;\n}\n</style>"]}]}