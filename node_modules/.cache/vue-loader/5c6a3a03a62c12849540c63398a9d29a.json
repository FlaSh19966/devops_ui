{"remainingRequest":"/home/vimalesh/CENSE/chatbot-portal/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/vimalesh/CENSE/chatbot-portal/src/portal/analytics/components/ScrollableBarChart.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/home/vimalesh/CENSE/chatbot-portal/src/portal/analytics/components/ScrollableBarChart.vue","mtime":1643027096188},{"path":"/home/vimalesh/CENSE/chatbot-portal/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vimalesh/CENSE/chatbot-portal/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/vimalesh/CENSE/chatbot-portal/node_modules/@vue/cli-service/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/vimalesh/CENSE/chatbot-portal/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vimalesh/CENSE/chatbot-portal/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgovKiAuYmFyIHsKICBmaWxsOiBzdGVlbGJsdWU7CiAgY2xpcC1wYXRoOiB1cmwoI2NsaXApOwp9ICovCiAgCi8qIC5zdWJCYXIgeyAKICBmaWxsOiBncmF5OwogIG9wYWNpdHk6IDAuMTE7Cn0gKi8KCi8qIC5heGlzIHBhdGgsCi5heGlzIGxpbmUgewogICAgZGlzcGxheTogbm9uZTsKICBmaWxsOiBub25lOwogIHN0cm9rZTogIzAwMDsKICBzaGFwZS1yZW5kZXJpbmc6IGNyaXNwRWRnZXM7Cn0gKi8KCi8qIC5icnVzaCAuZXh0ZW50IHsKICBzdHJva2U6ICNmZmY7CiAgZmlsbDogc3RlZWxibHVlOwogIGZpbGwtb3BhY2l0eTogLjI1OwogIHNoYXBlLXJlbmRlcmluZzogY3Jpc3BFZGdlczsKfSAqLwoKICAvKiByZWN0Lm1vdmVyIHsKICAgICAgICAgICAgc3Ryb2tlOiByZWQ7CiAgICAgICAgICAgIHN0cm9rZS1vcGFjaXR5OiAuMTsKICAgICAgICAgICAgZmlsbDogbGlnaHRTdGVlbEJsdWU7CiAgICAgICAgICAgIGZpbGwtb3BhY2l0eTogLjU7CiAgICAgICAgfSAqLwo="},{"version":3,"sources":["ScrollableBarChart.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyUA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"ScrollableBarChart.vue","sourceRoot":"src/portal/analytics/components","sourcesContent":["<template>\n  <div id=\"barchart\">\n\n  </div>\n</template>\n<script>\nimport * as d3 from 'd3-3';\n\nexport default {\n  name: 'ScrollableBarChart',\n//   props: {\n//     xKey: String,\n//     yKey: String,\n//     data: Array,\n//   },\n  mounted() {\n    // var DATA_COUNT = 90;         \n    // var MAX_LABEL_LENGTH = 30; \n        \n    // var data = [];\n    \n    // for (var i = 0; i < DATA_COUNT; i++) {\n    //     var datum = {};\n    //     datum.label = stringGen(MAX_LABEL_LENGTH)\n    //     datum.value = Math.floor(Math.random() * 600);\n    //     data.push(datum);\n    // }\n    data = [\n        {\n          label: \"Roses\",\n          value: 25\n        },\n        {\n          label: \"Tulips\",\n          value: 22\n        },\n        {\n          label: \"Daisies\",\n          value: 15\n        },\n        {\n          label: \"Narcissuses\",\n          value: 9\n        },\n        {\n          label: \"Tul6ips\",\n          value: 40\n        },\n        {\n          label: \"Dai4sies\",\n          value: 15\n        },\n        {\n          label: \"Narciss2uses\",\n          value: 9\n        },\n        {\n          label: \"Narcissus6es\",\n          value: 9\n        },\n        {\n          label: \"Ros5es\",\n          value: 25\n        },\n        {\n          label: \"Tulip4s\",\n          value: 40\n        },\n        {\n          label: \"3Daisies\",\n          value: 15\n        },\n        {\n          label: \"Narcis2suses\",\n          value: 9\n        },\n        {\n          label: \"Narcis1suses\",\n          value: 9\n        },\n        {\n          label: \"Rose11s\",\n          value: 25\n        },\n        {\n          label: \"Tulip21s\",\n          value: 40\n        },\n        {\n          label: \"Daisi44es\",\n          value: 15\n        },\n        {\n          label: \"Narcissuttses\",\n          value: 9\n        },\n        {\n          label: \"Narcissutttttttses\",\n          value: 9\n        },\n        {\n          label: \"Rosetertes\",\n          value: 25\n        },\n        {\n          label: \"Tulertips\",\n          value: 40\n        },\n        {\n          label: \"Daaaisies\",\n          value: 15\n        },\n        {\n          label: \"Narcissuqqqses\",\n          value: 9\n        },\n        {\n          label: \"Narcissussaes\",\n          value: 9\n        },\n        {\n          label: \"Ros233es\",\n          value: 25\n        },\n        {\n          label: \"Tulips212\",\n          value: 40\n        },\n        {\n          label: \"Daisi555es\",\n          value: 15\n        },\n        {\n          label: \"Narcissus555es\",\n          value: 9\n        },\n        {\n          label: \"Narcissu5555ses\",\n          value: 9\n        },\n        {\n          label: \"Daisi55es\",\n          value: 15\n        },\n        {\n          label: \"Narcissusweres\",\n          value: 9\n        },\n        {\n          label: \"Narcissusetrvcs\",\n          value: 9\n        },\n        {\n          label: \"Rose4s\",\n          value: 25\n        },\n        {\n          label: \"Tuli3ps\",\n          value: 40\n        }\n      ],\n    // function stringGen(maxLength) {\n    //     var text = \"\";\n    //     var charset = \"abcdefghijklmnopqrstuvwxyz0123456789\";\n\n    //     for( var i=0; i < getRandomArbitrary(1, maxLength) ; i++ ) {\n    //         text += charset.charAt(Math.floor(Math.random() * charset.length));\n    //     }                                                \n\n    //     return text;\n    // }\n    \n    function getRandomArbitrary(min, max) {\n        return Math.round(Math.random() * (max - min) + min);\n    }  \n                        \n    var margin =  {top: 20, right: 10, bottom: 120, left: 40};\n    var marginOverview = {top: 30, right: 10, bottom: 20, left: 40};\n    var selectorHeight = 40;\n    var width = 800 - margin.left - margin.right;\n    var height = 600 - margin.top - margin.bottom - selectorHeight;\n    var heightOverview = 80 - marginOverview.top - marginOverview.bottom;\n        \n    var maxLength = d3.max(data.map(function(d){ console.log(d.label);return d.label.length}))\n    var barWidth = maxLength * 2;\n    var numBars = Math.round(width/barWidth);\n    var isScrollDisplayed = barWidth * data.length > width;\n        \n\n    console.log(isScrollDisplayed)\n    \n    var xscale = d3.scale.ordinal()\n                .domain(data.slice(0,numBars).map(function (d) { return d.label; }))\n                .rangeBands([0, width], .2);\n\n    var yscale = d3.scale.linear()\n                .domain([0, d3.max(data, function (d) { return d.value; })])\n                .range([height, 0]);\n    \n    var xAxis  = d3.svg.axis().scale(xscale).orient(\"bottom\");\n    var yAxis  = d3.svg.axis().scale(yscale).orient(\"left\");\n    \n    var svg = d3.select(\"#barchart\").append(\"svg\")\n                        .attr(\"width\", width + margin.left + margin.right)\n                .attr(\"height\", height + margin.top + margin.bottom + selectorHeight);\n    \n    var diagram = \n    svg.append(\"g\")\n    .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n    \n    diagram.append(\"g\")\n            .attr(\"class\", \"x axis\")\n        .attr(\"transform\", \"translate(0, \" + height + \")\")\n        .call(xAxis)\n        .selectAll(\"text\")\n        .attr(\"y\", 0)\n        .attr(\"x\", -10)\n        .attr(\"dy\", \".35em\")\n        .attr(\"transform\", \"rotate(-70)\")\n        .style(\"text-anchor\", \"end\");\n    \n    diagram.append(\"g\")\n        .attr(\"class\", \"y axis\")\n        .call(yAxis);\n    \n    var bars = diagram.append(\"g\");\n    \n    bars.selectAll(\"rect\")\n                .data(data.slice(0, numBars), function (d) {return d.label; })\n                // .data(data)\n                .enter().append(\"rect\")\n                .attr(\"class\", \"bar\")\n                .attr(\"x\", function (d) { return xscale(d.label); })\n                .attr(\"y\", function (d) { return yscale(d.value); })\n                .attr(\"width\", xscale.rangeBand())\n                .attr(\"height\", function (d) { return height - yscale(d.value); });\n\n    // isScrollDisplayed = false;\n    if (isScrollDisplayed)\n    {\n    var xOverview = d3.scale.ordinal()\n                    .domain(data.map(function (d) { return d.label; }))\n                    .rangeBands([0, width], .2);\n    var yOverview = d3.scale.linear().range([heightOverview, 0]);\n    yOverview.domain(yscale.domain());\n\n    // var subBars = diagram.selectAll('.subBar')\n    //     .data(data)\n\n    // subBars.enter().append(\"rect\")\n    //     .classed('subBar', true)\n    //     .attr({\n    //         height: function(d) {\n    //             return heightOverview - yOverview(d.value);\n    //         },\n    //         width: function(d) {\n    //             return xOverview.rangeBand()\n    //         },\n    //         x: function(d) {\n\n    //             return xOverview(d.label);\n    //         },\n    //         y: function(d) {\n    //             return height + heightOverview + yOverview(d.value)\n    //         }\n    //     })\n\n    var displayed = d3.scale.quantize()\n                .domain([0, width])\n                .range(d3.range(data.length));\n    console.log(Math.round(parseFloat(numBars * width)/data.length));\n    diagram.append(\"rect\")\n                .attr(\"transform\", \"translate(0, \" + (height ) + \")\")\n                .attr(\"class\", \"mover\")\n                .attr(\"x\", 0)\n                .attr(\"y\", 0)\n                .attr(\"height\", 10)\n                .attr(\"width\", Math.round(parseFloat(numBars * width)/data.length))\n                .attr(\"pointer-events\", \"all\")\n                .attr(\"cursor\", \"ew-resize\")\n                .call(d3.behavior.drag().on(\"drag\", display));\n    }\n    function display () {\n        var x = parseInt(d3.select(this).attr(\"x\")),\n            nx = x + d3.event.dx,\n            w = parseInt(d3.select(this).attr(\"width\")),\n            f, nf, new_data, rects;\n\n        if ( nx < 0 || nx + w > width ) return;\n\n        d3.select(this).attr(\"x\", nx);\n\n        f = displayed(x);\n        nf = displayed(nx);\n\n        if ( f === nf ) return;\n\n        new_data = data.slice(nf, nf + numBars);\n\n        xscale.domain(new_data.map(function (d) { return d.label; }));\n        diagram.select(\".x.axis\").call(xAxis)\n        .selectAll(\"text\")\n          .attr(\"y\", 0)\n          .attr(\"x\", -10)\n          .attr(\"dy\", \".35em\")\n          .attr(\"transform\", \"rotate(-70)\")\n          .style(\"text-anchor\", \"end\");;\n\n        rects = bars.selectAll(\"rect\")\n        .data(new_data, function (d) {return d.label; });\n\n            rects.attr(\"x\", function (d) { return xscale(d.label); });\n\n    // \t  rects.attr(\"transform\", function(d) { return \"translate(\" + xscale(d.label) + \",0)\"; })\n\n        rects.enter().append(\"rect\")\n        .attr(\"class\", \"bar\")\n        .attr(\"x\", function (d) { return xscale(d.label); })\n        .attr(\"y\", function (d) { return yscale(d.value); })\n        .attr(\"width\", xscale.rangeBand())\n        .attr(\"height\", function (d) { return height - yscale(d.value); });\n\n        rects.exit().remove();\n    };\n  }\n}\n\n</script>\n<style>\n/* .bar {\n  fill: steelblue;\n  clip-path: url(#clip);\n} */\n  \n/* .subBar { \n  fill: gray;\n  opacity: 0.11;\n} */\n\n/* .axis path,\n.axis line {\n    display: none;\n  fill: none;\n  stroke: #000;\n  shape-rendering: crispEdges;\n} */\n\n/* .brush .extent {\n  stroke: #fff;\n  fill: steelblue;\n  fill-opacity: .25;\n  shape-rendering: crispEdges;\n} */\n\n  /* rect.mover {\n            stroke: red;\n            stroke-opacity: .1;\n            fill: lightSteelBlue;\n            fill-opacity: .5;\n        } */\n</style>"]}]}