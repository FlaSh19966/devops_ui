{"remainingRequest":"/home/vimalesh/Learning/devops_ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/vimalesh/Learning/devops_ui/src/portal/components/RequestChart.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/vimalesh/Learning/devops_ui/src/portal/components/RequestChart.vue","mtime":1659334208864},{"path":"/home/vimalesh/Learning/devops_ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vimalesh/Learning/devops_ui/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/vimalesh/Learning/devops_ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vimalesh/Learning/devops_ui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["RequestChart.vue"],"names":[],"mappings":";;;;;;;;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"RequestChart.vue","sourceRoot":"src/portal/components","sourcesContent":["<template>\n  <canvas\n    height=\"80%\"\n    id=\"canvas1\"\n  ></canvas>\n</template>\n\n<script>\nimport { bus } from \"@/portal/main\";\nimport Chart from \"chart.js\";\nexport default {\n  name: \"request-chart\",\n  data () {\n    return {\n      BarChart: null\n    };\n  },\n  props: {\n    Successful: {\n      type: Array,\n      default: []\n    },\n    Unsuccessful: {\n      type: Array,\n      default: []\n    },\n    Total: {\n      type: Array,\n      default: []\n    },\n    labels: {\n      type: Array,\n      default: []\n    },\n    scaleLabel: {\n      type: String,\n      default: 'Last 7 days'\n    },\n    scaleLabelY: {\n      type: String,\n      default: 'Total Requests Count'\n    },\n    labelSuccessfulResponse: {\n      type: String,\n      default: 'Successful Response'\n    },\n    labelTotalRequests: {\n      type: String,\n      default: 'Total Requests'\n    },\n    labelUnsuccessfulResponse: {\n      type: String,\n      default: 'Unsuccessful Response'\n    }\n  },\n  watch: {\n    Successful (newVal) {\n      this.BarChart.config.data.datasets[0].data = newVal;\n      this.BarChart.update();\n    },\n    Total (newVal) {\n      this.BarChart.config.data.datasets[1].data = newVal;\n      this.BarChart.update();\n    },\n    Unsuccessful (newVal) {\n      this.BarChart.config.data.datasets[2].data = newVal;\n      this.BarChart.update();\n    },\n    labels (newVal) {\n      this.BarChart.config.data.labels = newVal;\n      this.BarChart.update();\n    },\n    scaleLabel (newVal) {\n      this.BarChart.options.scales.xAxes[0].scaleLabel.labelString = newVal;\n      this.BarChart.update();\n    },\n    scaleLabelY (newVal) {\n      this.BarChart.options.scales.yAxes[0].scaleLabel.labelString = newVal;\n      this.BarChart.update();\n    },\n    labelSuccessfulResponse (newVal) {\n      this.BarChart.data.datasets[0].label = newVal;\n      this.BarChart.update();\n    },\n    labelTotalRequests (newVal) {\n      this.BarChart.data.datasets[1].label = newVal;\n      this.BarChart.update();\n    },\n    labelUnsuccessfulResponse (newVal) {\n      this.BarChart.data.datasets[2].label = newVal;\n      this.BarChart.update();\n    }\n  },\n  mounted () {\n    var chartColors = {\n      red: \"rgb(255, 99, 132)\",\n      orange: \"rgb(255, 159, 64)\",\n      yellow: \"rgb(255, 216, 62)\",\n      green: \"rgb(83, 185, 99)\",\n      blue: \"rgb(29, 170, 225)\",\n      purple: \"rgb(153, 102, 255)\",\n      grey: \"rgb(231,233,237)\"\n    };\n\n    Chart.helpers.drawRoundedTopRectangle = function (\n      ctx,\n      x,\n      y,\n      width,\n      height,\n      radius\n    ) {\n      ctx.beginPath();\n      ctx.moveTo(x + radius, y);\n      ctx.lineTo(x + width - radius, y);\n      ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n      ctx.lineTo(x + width, y + height);\n      ctx.lineTo(x, y + height);\n      ctx.lineTo(x, y + radius);\n      ctx.quadraticCurveTo(x, y, x + radius, y);\n      ctx.closePath();\n    };\n    Chart.defaults.global.legend.labels.boxWidth = 20;\n    Chart.elements.RoundedTopRectangle = Chart.elements.Rectangle.extend({\n      draw: function () {\n        var ctx = this._chart.ctx;\n        var vm = this._view;\n        var left, right, top, bottom, signX, signY, borderSkipped;\n        var borderWidth = vm.borderWidth;\n\n        if (!vm.horizontal) {\n          left = vm.x - vm.width / 3;\n          right = vm.x + vm.width / 3;\n          top = vm.y;\n          bottom = vm.base;\n          signX = 1;\n          signY = bottom > top ? 1 : -1;\n          borderSkipped = vm.borderSkipped || \"bottom\";\n        } else {\n          left = vm.base;\n          right = vm.x;\n          top = vm.y - vm.height / 4;\n          bottom = vm.y + vm.height / 4;\n          signX = right > left ? 1 : -1;\n          signY = 1;\n          borderSkipped = vm.borderSkipped || \"left\";\n        }\n\n        if (borderWidth) {\n          var barSize = Math.max(\n            Math.abs(left - right),\n            Math.abs(top - bottom)\n          );\n          borderWidth = borderWidth > barSize ? barSize : borderWidth;\n          var halfStroke = borderWidth / 4;\n          var borderLeft =\n            left + (borderSkipped !== \"left\" ? halfStroke * signX : 0);\n          var borderRight =\n            right + (borderSkipped !== \"right\" ? -halfStroke * signX : 0);\n          var borderTop =\n            top + (borderSkipped !== \"top\" ? halfStroke * signY : 0);\n          var borderBottom =\n            bottom + (borderSkipped !== \"bottom\" ? -halfStroke * signY : 0);\n          if (borderLeft !== borderRight) {\n            top = borderTop;\n            bottom = borderBottom;\n          }\n          if (borderTop !== borderBottom) {\n            left = borderLeft;\n            right = borderRight;\n          }\n        }\n\n        var barWidth = Math.abs(left - right);\n        var roundness = this._chart.config.options.barRoundness || 0.8;\n        var radius = barWidth * roundness * 0.5;\n\n        var prevTop = top;\n\n        top = prevTop + radius;\n        var barRadius = top - prevTop;\n        ctx.beginPath();\n        ctx.fillStyle = vm.backgroundColor;\n        ctx.strokeStyle = vm.borderColor;\n        ctx.lineWidth = borderWidth;\n\n        Chart.helpers.drawRoundedTopRectangle(\n          ctx,\n          left,\n          top - barRadius + 1,\n          barWidth,\n          bottom - prevTop,\n          barRadius\n        );\n\n        ctx.fill();\n        if (borderWidth) {\n          ctx.stroke();\n        }\n\n        top = prevTop;\n      }\n    });\n    Chart.defaults.roundedBar = Chart.helpers.clone(Chart.defaults.bar);\n\n    Chart.controllers.roundedBar = Chart.controllers.bar.extend({\n      dataElementType: Chart.elements.RoundedTopRectangle\n    });\n    var ctx = document.getElementById(\"canvas1\").getContext(\"2d\");\n    this.BarChart = new Chart(ctx, {\n      type: \"roundedBar\",\n      data: {\n        labels: this.labels,\n        datasets: [\n          {\n            label: this.labelSuccessfulResponse,\n            backgroundColor: chartColors.blue,\n            data: []\n          },\n          {\n            label: this.labelTotalRequests,\n            backgroundColor: chartColors.green,\n            data: []\n          },\n          {\n            label: this.labelUnsuccessfulResponse,\n            backgroundColor: chartColors.yellow,\n            data: []\n          }\n        ]\n      },\n      options: {\n        responsive: true,\n        barRoundness: 1,\n        title: {\n          display: false\n        },\n        scales: {\n          yAxes: [\n            {\n              position: \"left\",\n              scaleLabel: {\n                display: true,\n                fontSize: 18,\n                labelString: this.scaleLabelY\n              },\n              ticks: {\n                display: true,\n                beginAtZero: true,\n                precision: 0\n              }\n            }\n          ],\n          xAxes: [\n            {\n              position: \"bottom\",\n              scaleLabel: {\n                display: true,\n                fontSize: 18,\n                //constrain: true,\n                labelString: this.scaleLabel\n              }\n            }\n          ]\n        }\n      }\n    });\n    // bus.$on(\"chart is updated\", (data1, data2, data3, data4, data5, data6) => {\n    //   if (data1 == \"True\") {\n    //     this.BarChart.config.data.datasets[1].data = data3;\n    //     this.BarChart.config.data.datasets[2].data = data4;\n    //   }\n    // });\n  }\n};\n</script>\n\n"]}]}