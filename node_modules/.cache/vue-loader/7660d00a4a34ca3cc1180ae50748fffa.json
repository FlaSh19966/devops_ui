{"remainingRequest":"/home/vimalesh/CENSE/chatbot-portal/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/vimalesh/CENSE/chatbot-portal/src/portal/Chatbot/Dashboard/WhatsappChat.vue?vue&type=template&id=4c28409f&scoped=true&","dependencies":[{"path":"/home/vimalesh/CENSE/chatbot-portal/src/portal/Chatbot/Dashboard/WhatsappChat.vue","mtime":1655807120969},{"path":"/home/vimalesh/CENSE/chatbot-portal/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vimalesh/CENSE/chatbot-portal/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/vimalesh/CENSE/chatbot-portal/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vimalesh/CENSE/chatbot-portal/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:
<div class="log-wrap d-flex align-items-center">
  <div class="spinner" v-show="show_spinner" id="spinner"></div>
  <div class="container">
    <!-- <div class="container-fluid front-container p-0 m-0">
      <div class="back-top"></div>
      <div class="back-main"></div>
    </div> -->
    <div class="container-fluid" style="padding: 50px;">
      <div class="col-sm-12 d-flex p-0">
        <button
          type="button"
          class="close"
          aria-label="Close"
          style="padding-bottom: 10px;"
          @click="$router.push('/bot/dashboard')"
        >
          <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" fill="currentColor" class="bi bi-box-arrow-in-left" viewBox="0 0 16 16">
            <path fill-rule="evenodd" d="M10 3.5a.5.5 0 0 0-.5-.5h-8a.5.5 0 0 0-.5.5v9a.5.5 0 0 0 .5.5h8a.5.5 0 0 0 .5-.5v-2a.5.5 0 0 1 1 0v2A1.5 1.5 0 0 1 9.5 14h-8A1.5 1.5 0 0 1 0 12.5v-9A1.5 1.5 0 0 1 1.5 2h8A1.5 1.5 0 0 1 11 3.5v2a.5.5 0 0 1-1 0v-2z"/>
            <path fill-rule="evenodd" d="M4.146 8.354a.5.5 0 0 1 0-.708l3-3a.5.5 0 1 1 .708.708L5.707 7.5H14.5a.5.5 0 0 1 0 1H5.707l2.147 2.146a.5.5 0 0 1-.708.708l-3-3z"/>
          </svg>
          <span> Go back</span>
        </button>
      </div>
      <div class="col-sm-12 row">
        <div class="col-sm-4 chat-top p-0" v-show="!is_profile_setup" style="height: 600px;">
        <div class="d-flex p-2"
          style="align-items: center;">
          <!-- top-bar -->
          <div>
            <img v-if="whatsapp_profile.photo" 
              :src=whatsapp_profile.photo
              class="rounded-circle" 
              @click="show_profile_setup"
              height="40px" width="40px"
              style="cursor: pointer;">
            <img v-else src="/img/whatsapp-dp.png" 
              class="rounded-circle" 
              @click="show_profile_setup"
              height="40px" width="40px"
              style="cursor: pointer;">
          </div>
          <span class="ml-auto mt-1 d-flex">
            <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" fill="currentColor"
              class="bi bi-chat-left-text mr-4" viewBox="0 0 16 16" @click="show_all_contacts" style="cursor:pointer;">
              <path
                d="M14 1a1 1 0 0 1 1 1v8a1 1 0 0 1-1 1H4.414A2 2 0 0 0 3 11.586l-2 2V2a1 1 0 0 1 1-1h12zM2 0a2 2 0 0 0-2 2v12.793a.5.5 0 0 0 .854.353l2.853-2.853A1 1 0 0 1 4.414 12H14a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2H2z" />
              <path
                d="M3 3.5a.5.5 0 0 1 .5-.5h9a.5.5 0 0 1 0 1h-9a.5.5 0 0 1-.5-.5zM3 6a.5.5 0 0 1 .5-.5h9a.5.5 0 0 1 0 1h-9A.5.5 0 0 1 3 6zm0 2.5a.5.5 0 0 1 .5-.5h5a.5.5 0 0 1 0 1h-5a.5.5 0 0 1-.5-.5z" />
            </svg>
            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="18" fill="currentColor"
              class="bi bi-three-dots-vertical" viewBox="0 0 16 16">
              <path
                d="M9.5 13a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0z" />
            </svg>
          </span>
        </div>
        <div class="contacts pr-0">
          <!-- seach tab -->
          <div class="search-chat">
            <div>
              <input type="text" placeholder="Search or start new chat" v-model="search_value">
              <svg xmlns="http://www.w3.org/2000/svg" width="12" height="12" fill="currentColor" class="bi bi-search"
                viewBox="0 0 16 16">
                <path
                  d="M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001c.03.04.062.078.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1.007 1.007 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0z" />
              </svg>
            </div>
          </div>
          <div class="contact-table-scroll">
            <table class="table table-hover" style="margin-bottom: 0rem !important">
              <tbody v-if="contact_list.length > 0">
                <tr v-for="(contact, index) in contact_list" :key="index"
                  @click="get_history_data(contact.whatsapp_phone_number, contact.profile_name, index)"
                  style="cursor:pointer" :style="is_active_chat(index)">
                  <td class="" style="width: 22%;"><img src="/img/whatsapp-dp.png" alt=""
                      class="user-profile-picture rounded-circle"></td>
                  <td class="pl-0 pb-1 pr-3" style="font-size: 13px;">
                    <div class="user-name-date d-flex">
                      <div class="user-name">
                        <span v-if="contact.profile_name">{{ contact.profile_name }}</span>
                        <span v-else>{{ contact.whatsapp_phone_number }}</span>
                      </div>
                      <div class="date" v-if="contact.last_bot_response">
                        <span>{{ formatContactLastMessageDate(contact.last_bot_response.date, contact.last_bot_response.time) }}</span>
                      </div>
                    </div>
                    <div>
                      <span v-if="contact.last_bot_response" class="user-msg-latest-conv"><span
                          :title="contact.last_bot_response.text">{{ latest_bot_text(contact.last_bot_response.text)
                          }}</span></span>
                          <!-- <span v-if="contact.is_new_notification || false" style="float: right">{{contact.new_message_count || 1}}</span> -->
                    </div>
                  </td>
                </tr>
              </tbody>
              <tbody v-else>
                <tr>
                  <td style="position: relative; padding:44px; text-align: center;">
                    <span class="contact-list-empty">No chats,contacts or messages found</span>
                  </td>
                </tr>
              </tbody>
            </table>
          </div>
        </div>
        </div>
        <div class="col-sm-4 p-0" v-show="is_profile_setup && !is_contact_list" style="height: 600px;">
          <!-- profile -->
          <div
            style="border-right: 1px solid rgba(0,0,0,0.2);align-items: center; justify-content: space-between; height: 100%;">
            <div class="profile-top d-flex">
              <span style="margin:0 0 10px 17px;cursor: pointer;" @click="show_profile_setup"><svg
                  xmlns="http://www.w3.org/2000/svg" width="38" height="22" fill="currentColor"
                  class="bi bi-arrow-left left-arrow" viewBox="0 0 16 16">
                  <path fill-rule="evenodd"
                    d="M15 8a.5.5 0 0 0-.5-.5H2.707l3.147-3.146a.5.5 0 1 0-.708-.708l-4 4a.5.5 0 0 0 0 .708l4 4a.5.5 0 0 0 .708-.708L2.707 8.5H14.5A.5.5 0 0 0 15 8z" />
                </svg>
              </span>
              <span style="opacity:2;font-size:1.1rem;margin:0 0 8px 17px;">Profile</span>
            </div>
            <!-- profile pic -->
            <div class="profile-bottom">
              <div class="profile-pic ">
                <div style="width: 100%;height: 100%;position: relative;">
                  <div class="second-circle" v-if="whatsapp_profile.photo === ''">
                    <input type="file" id="imgupload" @change="update_profile_image"/> 
                    <div class="img-circle-gry">
                      <span class="img-circle-title-cam">
                        <span>ADD PROFILE</span>
                        <span>PHOTO</span>
                      </span>
                    </div>
                  </div>
                  <div class="second-circle-image" v-else>
                    <div style="width:300px">
                      <input type="file" id="imgupload" @change="update_profile_image"/>
                    </div>
                    <img :src=whatsapp_profile.photo  alt="">
                  </div>                
                </div>
              </div>
              <div class="img-cricle">
                <div class="remove-profile-pic" v-if="whatsapp_profile.photo != ''">
                  <svg xmlns="http://www.w3.org/2000/svg" style="cursor: pointer;" @click="remove_profile_image()" width="16" height="16" fill="currentColor" class="bi bi-trash" viewBox="0 0 16 16">
                    <path d="M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z"/>
                    <path fill-rule="evenodd" d="M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z"/>
                  </svg>
                </div>
                <div class="no-image">
                </div>
              </div>
              <!-- profile-details -->
              <div class="profile-details">
                <div class="all-basic-info">
                  <div class="user-email-details">
                    <div class="user-email" v-if="!edit_email">
                      <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-envelope-fill" viewBox="0 0 16 16">
                        <path d="M.05 3.555A2 2 0 0 1 2 2h12a2 2 0 0 1 1.95 1.555L8 8.414.05 3.555ZM0 4.697v7.104l5.803-3.558L0 4.697ZM6.761 8.83l-6.57 4.027A2 2 0 0 0 2 14h12a2 2 0 0 0 1.808-1.144l-6.57-4.027L8 9.586l-1.239-.757Zm3.436-.586L16 11.801V4.697l-5.803 3.546Z"/>
                      </svg>
                      <span v-if="whatsapp_profile.email == ''"> Email Address</span>
                      <span v-else>{{whatsapp_profile.email}}</span>
                      <svg v-if="!edit_address && !edit_description && !edit_website" xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-pencil-fill" viewBox="0 0 16 16" @click="edit_email = true"  style="cursor: pointer;">
                        <path d="M12.854.146a.5.5 0 0 0-.707 0L10.5 1.793 14.207 5.5l1.647-1.646a.5.5 0 0 0 0-.708l-3-3zm.646 6.061L9.793 2.5 3.293 9H3.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.207l6.5-6.5zm-7.468 7.468A.5.5 0 0 1 6 13.5V13h-.5a.5.5 0 0 1-.5-.5V12h-.5a.5.5 0 0 1-.5-.5V11h-.5a.5.5 0 0 1-.5-.5V10h-.5a.499.499 0 0 1-.175-.032l-.179.178a.5.5 0 0 0-.11.168l-2 5a.5.5 0 0 0 .65.65l5-2a.5.5 0 0 0 .168-.11l.178-.178z"/>
                      </svg>
                    </div>
                    <div class="edit-user-email" v-if="edit_email">
                      <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-envelope-fill" viewBox="0 0 16 16">
                        <path d="M.05 3.555A2 2 0 0 1 2 2h12a2 2 0 0 1 1.95 1.555L8 8.414.05 3.555ZM0 4.697v7.104l5.803-3.558L0 4.697ZM6.761 8.83l-6.57 4.027A2 2 0 0 0 2 14h12a2 2 0 0 0 1.808-1.144l-6.57-4.027L8 9.586l-1.239-.757Zm3.436-.586L16 11.801V4.697l-5.803 3.546Z"/>
                      </svg>                      
                      <textarea 
                        class="input ml-1" 
                        id="user_email_address" 
                        v-model="whatsapp_profile.email" 
                        placeholder="Email Address"
                        @keydown="expand_textbox('#user_email_address')"
                        >
                      </textarea>
                      <svg xmlns="http://www.w3.org/2000/svg" width="16" height="22" fill="currentColor" class="bi bi-check2" viewBox="0 0 16 16"  @click="update_profile_details()" style="cursor: pointer;top:1vh !important;right:0 !important;
                        position: absolute;"
                      >
                        <path d="M13.854 3.646a.5.5 0 0 1 0 .708l-7 7a.5.5 0 0 1-.708 0l-3.5-3.5a.5.5 0 1 1 .708-.708L6.5 10.293l6.646-6.647a.5.5 0 0 1 .708 0z"/>
                      </svg>
                    </div>
                  </div>
                  <div class="user-address-details">
                    <div class="user-address" v-if="!edit_address">
                      <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-geo-alt" viewBox="0 0 16 16">
                        <path d="M12.166 8.94c-.524 1.062-1.234 2.12-1.96 3.07A31.493 31.493 0 0 1 8 14.58a31.481 31.481 0 0 1-2.206-2.57c-.726-.95-1.436-2.008-1.96-3.07C3.304 7.867 3 6.862 3 6a5 5 0 0 1 10 0c0 .862-.305 1.867-.834 2.94zM8 16s6-5.686 6-10A6 6 0 0 0 2 6c0 4.314 6 10 6 10z"/>
                        <path d="M8 8a2 2 0 1 1 0-4 2 2 0 0 1 0 4zm0 1a3 3 0 1 0 0-6 3 3 0 0 0 0 6z"/>
                      </svg>
                      <span v-if="whatsapp_profile.address == ''">Business Address</span>
                      <span v-else>{{whatsapp_profile.address}}</span>
                      <svg v-if="!edit_email && !edit_description && !edit_website" xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-pencil-fill" viewBox="0 0 16 16" @click="edit_address = true"  style="cursor: pointer;">
                        <path d="M12.854.146a.5.5 0 0 0-.707 0L10.5 1.793 14.207 5.5l1.647-1.646a.5.5 0 0 0 0-.708l-3-3zm.646 6.061L9.793 2.5 3.293 9H3.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.207l6.5-6.5zm-7.468 7.468A.5.5 0 0 1 6 13.5V13h-.5a.5.5 0 0 1-.5-.5V12h-.5a.5.5 0 0 1-.5-.5V11h-.5a.5.5 0 0 1-.5-.5V10h-.5a.499.499 0 0 1-.175-.032l-.179.178a.5.5 0 0 0-.11.168l-2 5a.5.5 0 0 0 .65.65l5-2a.5.5 0 0 0 .168-.11l.178-.178z"/>
                      </svg>                    
                    </div>
                    <div class="edit-user-address" v-if="edit_address">
                      <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-geo-alt" viewBox="0 0 16 16">
                        <path d="M12.166 8.94c-.524 1.062-1.234 2.12-1.96 3.07A31.493 31.493 0 0 1 8 14.58a31.481 31.481 0 0 1-2.206-2.57c-.726-.95-1.436-2.008-1.96-3.07C3.304 7.867 3 6.862 3 6a5 5 0 0 1 10 0c0 .862-.305 1.867-.834 2.94zM8 16s6-5.686 6-10A6 6 0 0 0 2 6c0 4.314 6 10 6 10z"/>
                        <path d="M8 8a2 2 0 1 1 0-4 2 2 0 0 1 0 4zm0 1a3 3 0 1 0 0-6 3 3 0 0 0 0 6z"/>
                      </svg>                     
                      <textarea 
                        class="input ml-1"
                        id="business_address"
                        v-model="whatsapp_profile.address"
                        placeholder="Business Address"
                        @keydown="expand_textbox('#business_address')"
                        ></textarea>
                      <svg xmlns="http://www.w3.org/2000/svg" width="16" height="22" fill="currentColor" class="bi bi-check2" viewBox="0 0 16 16"  @click="update_profile_details()" style="cursor: pointer;top:1vh !important;right:0 !important;
                        position: absolute;"
                      >
                        <path d="M13.854 3.646a.5.5 0 0 1 0 .708l-7 7a.5.5 0 0 1-.708 0l-3.5-3.5a.5.5 0 1 1 .708-.708L6.5 10.293l6.646-6.647a.5.5 0 0 1 .708 0z"/>
                      </svg>
                    </div>  
                  </div>
                  <div class="description-details">
                    <div class="description" v-if="!edit_description">
                      <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-shop" viewBox="0 0 16 16">
                        <path d="M2.97 1.35A1 1 0 0 1 3.73 1h8.54a1 1 0 0 1 .76.35l2.609 3.044A1.5 1.5 0 0 1 16 5.37v.255a2.375 2.375 0 0 1-4.25 1.458A2.371 2.371 0 0 1 9.875 8 2.37 2.37 0 0 1 8 7.083 2.37 2.37 0 0 1 6.125 8a2.37 2.37 0 0 1-1.875-.917A2.375 2.375 0 0 1 0 5.625V5.37a1.5 1.5 0 0 1 .361-.976l2.61-3.045zm1.78 4.275a1.375 1.375 0 0 0 2.75 0 .5.5 0 0 1 1 0 1.375 1.375 0 0 0 2.75 0 .5.5 0 0 1 1 0 1.375 1.375 0 1 0 2.75 0V5.37a.5.5 0 0 0-.12-.325L12.27 2H3.73L1.12 5.045A.5.5 0 0 0 1 5.37v.255a1.375 1.375 0 0 0 2.75 0 .5.5 0 0 1 1 0zM1.5 8.5A.5.5 0 0 1 2 9v6h1v-5a1 1 0 0 1 1-1h3a1 1 0 0 1 1 1v5h6V9a.5.5 0 0 1 1 0v6h.5a.5.5 0 0 1 0 1H.5a.5.5 0 0 1 0-1H1V9a.5.5 0 0 1 .5-.5zM4 15h3v-5H4v5zm5-5a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v3a1 1 0 0 1-1 1h-2a1 1 0 0 1-1-1v-3zm3 0h-2v3h2v-3z"/>
                      </svg>
                      <span v-if="whatsapp_profile.description == ''">Description</span>                      
                      <span v-else>{{whatsapp_profile.description}}</span>
                      <svg v-if="!edit_address && !edit_email && !edit_website" xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-pencil-fill" viewBox="0 0 16 16" @click="edit_description = true"  style="cursor: pointer;">
                        <path d="M12.854.146a.5.5 0 0 0-.707 0L10.5 1.793 14.207 5.5l1.647-1.646a.5.5 0 0 0 0-.708l-3-3zm.646 6.061L9.793 2.5 3.293 9H3.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.207l6.5-6.5zm-7.468 7.468A.5.5 0 0 1 6 13.5V13h-.5a.5.5 0 0 1-.5-.5V12h-.5a.5.5 0 0 1-.5-.5V11h-.5a.5.5 0 0 1-.5-.5V10h-.5a.499.499 0 0 1-.175-.032l-.179.178a.5.5 0 0 0-.11.168l-2 5a.5.5 0 0 0 .65.65l5-2a.5.5 0 0 0 .168-.11l.178-.178z"/>
                      </svg>                         
                    </div>
                    <div class="edit-description" v-if="edit_description">
                      <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-shop" viewBox="0 0 16 16">
                        <path d="M2.97 1.35A1 1 0 0 1 3.73 1h8.54a1 1 0 0 1 .76.35l2.609 3.044A1.5 1.5 0 0 1 16 5.37v.255a2.375 2.375 0 0 1-4.25 1.458A2.371 2.371 0 0 1 9.875 8 2.37 2.37 0 0 1 8 7.083 2.37 2.37 0 0 1 6.125 8a2.37 2.37 0 0 1-1.875-.917A2.375 2.375 0 0 1 0 5.625V5.37a1.5 1.5 0 0 1 .361-.976l2.61-3.045zm1.78 4.275a1.375 1.375 0 0 0 2.75 0 .5.5 0 0 1 1 0 1.375 1.375 0 0 0 2.75 0 .5.5 0 0 1 1 0 1.375 1.375 0 1 0 2.75 0V5.37a.5.5 0 0 0-.12-.325L12.27 2H3.73L1.12 5.045A.5.5 0 0 0 1 5.37v.255a1.375 1.375 0 0 0 2.75 0 .5.5 0 0 1 1 0zM1.5 8.5A.5.5 0 0 1 2 9v6h1v-5a1 1 0 0 1 1-1h3a1 1 0 0 1 1 1v5h6V9a.5.5 0 0 1 1 0v6h.5a.5.5 0 0 1 0 1H.5a.5.5 0 0 1 0-1H1V9a.5.5 0 0 1 .5-.5zM4 15h3v-5H4v5zm5-5a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1v3a1 1 0 0 1-1 1h-2a1 1 0 0 1-1-1v-3zm3 0h-2v3h2v-3z"/>
                      </svg>                     
                      <textarea 
                        class="input ml-1" 
                        v-model="whatsapp_profile.description" 
                        placeholder=" Description"
                        id="user_description"
                        @keydown="expand_textbox('#user_description')"
                        ></textarea>
                      <svg xmlns="http://www.w3.org/2000/svg" width="16" height="22" fill="currentColor" class="bi bi-check2" viewBox="0 0 16 16"  @click="update_profile_details()" style="cursor: pointer;top:1vh !important;right:0 !important;
                        position: absolute;"
                      >
                        <path d="M13.854 3.646a.5.5 0 0 1 0 .708l-7 7a.5.5 0 0 1-.708 0l-3.5-3.5a.5.5 0 1 1 .708-.708L6.5 10.293l6.646-6.647a.5.5 0 0 1 .708 0z"/>
                      </svg>
                    </div>                      
                  </div>
                  <div class="website-details mb-1">
                    <div  v-if="!edit_website">
                      <span v-if="whatsapp_profile.websites">
                        <div v-if="whatsapp_profile.websites.length == 0" class="website">
                          <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-globe" viewBox="0 0 16 16">
                            <path d="M0 8a8 8 0 1 1 16 0A8 8 0 0 1 0 8zm7.5-6.923c-.67.204-1.335.82-1.887 1.855A7.97 7.97 0 0 0 5.145 4H7.5V1.077zM4.09 4a9.267 9.267 0 0 1 .64-1.539 6.7 6.7 0 0 1 .597-.933A7.025 7.025 0 0 0 2.255 4H4.09zm-.582 3.5c.03-.877.138-1.718.312-2.5H1.674a6.958 6.958 0 0 0-.656 2.5h2.49zM4.847 5a12.5 12.5 0 0 0-.338 2.5H7.5V5H4.847zM8.5 5v2.5h2.99a12.495 12.495 0 0 0-.337-2.5H8.5zM4.51 8.5a12.5 12.5 0 0 0 .337 2.5H7.5V8.5H4.51zm3.99 0V11h2.653c.187-.765.306-1.608.338-2.5H8.5zM5.145 12c.138.386.295.744.468 1.068.552 1.035 1.218 1.65 1.887 1.855V12H5.145zm.182 2.472a6.696 6.696 0 0 1-.597-.933A9.268 9.268 0 0 1 4.09 12H2.255a7.024 7.024 0 0 0 3.072 2.472zM3.82 11a13.652 13.652 0 0 1-.312-2.5h-2.49c.062.89.291 1.733.656 2.5H3.82zm6.853 3.472A7.024 7.024 0 0 0 13.745 12H11.91a9.27 9.27 0 0 1-.64 1.539 6.688 6.688 0 0 1-.597.933zM8.5 12v2.923c.67-.204 1.335-.82 1.887-1.855.173-.324.33-.682.468-1.068H8.5zm3.68-1h2.146c.365-.767.594-1.61.656-2.5h-2.49a13.65 13.65 0 0 1-.312 2.5zm2.802-3.5a6.959 6.959 0 0 0-.656-2.5H12.18c.174.782.282 1.623.312 2.5h2.49zM11.27 2.461c.247.464.462.98.64 1.539h1.835a7.024 7.024 0 0 0-3.072-2.472c.218.284.418.598.597.933zM10.855 4a7.966 7.966 0 0 0-.468-1.068C9.835 1.897 9.17 1.282 8.5 1.077V4h2.355z"/>
                          </svg>
                          <span>Website Url</span>
                          <svg v-if="!edit_address && !edit_email && !edit_description" xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-pencil-fill" viewBox="0 0 16 16" @click="edit_website_value(0)"  style="cursor: pointer;">
                            <path d="M12.854.146a.5.5 0 0 0-.707 0L10.5 1.793 14.207 5.5l1.647-1.646a.5.5 0 0 0 0-.708l-3-3zm.646 6.061L9.793 2.5 3.293 9H3.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.207l6.5-6.5zm-7.468 7.468A.5.5 0 0 1 6 13.5V13h-.5a.5.5 0 0 1-.5-.5V12h-.5a.5.5 0 0 1-.5-.5V11h-.5a.5.5 0 0 1-.5-.5V10h-.5a.499.499 0 0 1-.175-.032l-.179.178a.5.5 0 0 0-.11.168l-2 5a.5.5 0 0 0 .65.65l5-2a.5.5 0 0 0 .168-.11l.178-.178z"/>
                          </svg>
                        </div>
                        <div v-else v-for="(website,index) in whatsapp_profile.websites"
                        :key="index" class="website mb-2 mt-1">
                          <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-globe" viewBox="0 0 16 16">
                            <path d="M0 8a8 8 0 1 1 16 0A8 8 0 0 1 0 8zm7.5-6.923c-.67.204-1.335.82-1.887 1.855A7.97 7.97 0 0 0 5.145 4H7.5V1.077zM4.09 4a9.267 9.267 0 0 1 .64-1.539 6.7 6.7 0 0 1 .597-.933A7.025 7.025 0 0 0 2.255 4H4.09zm-.582 3.5c.03-.877.138-1.718.312-2.5H1.674a6.958 6.958 0 0 0-.656 2.5h2.49zM4.847 5a12.5 12.5 0 0 0-.338 2.5H7.5V5H4.847zM8.5 5v2.5h2.99a12.495 12.495 0 0 0-.337-2.5H8.5zM4.51 8.5a12.5 12.5 0 0 0 .337 2.5H7.5V8.5H4.51zm3.99 0V11h2.653c.187-.765.306-1.608.338-2.5H8.5zM5.145 12c.138.386.295.744.468 1.068.552 1.035 1.218 1.65 1.887 1.855V12H5.145zm.182 2.472a6.696 6.696 0 0 1-.597-.933A9.268 9.268 0 0 1 4.09 12H2.255a7.024 7.024 0 0 0 3.072 2.472zM3.82 11a13.652 13.652 0 0 1-.312-2.5h-2.49c.062.89.291 1.733.656 2.5H3.82zm6.853 3.472A7.024 7.024 0 0 0 13.745 12H11.91a9.27 9.27 0 0 1-.64 1.539 6.688 6.688 0 0 1-.597.933zM8.5 12v2.923c.67-.204 1.335-.82 1.887-1.855.173-.324.33-.682.468-1.068H8.5zm3.68-1h2.146c.365-.767.594-1.61.656-2.5h-2.49a13.65 13.65 0 0 1-.312 2.5zm2.802-3.5a6.959 6.959 0 0 0-.656-2.5H12.18c.174.782.282 1.623.312 2.5h2.49zM11.27 2.461c.247.464.462.98.64 1.539h1.835a7.024 7.024 0 0 0-3.072-2.472c.218.284.418.598.597.933zM10.855 4a7.966 7.966 0 0 0-.468-1.068C9.835 1.897 9.17 1.282 8.5 1.077V4h2.355z"/>
                          </svg>
                          <span >{{website}}</span>
                          <svg v-if="!edit_address && !edit_email && !edit_description" xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-pencil-fill" viewBox="0 0 16 16" @click="edit_website_value(index)"  style="cursor: pointer;">
                            <path d="M12.854.146a.5.5 0 0 0-.707 0L10.5 1.793 14.207 5.5l1.647-1.646a.5.5 0 0 0 0-.708l-3-3zm.646 6.061L9.793 2.5 3.293 9H3.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.207l6.5-6.5zm-7.468 7.468A.5.5 0 0 1 6 13.5V13h-.5a.5.5 0 0 1-.5-.5V12h-.5a.5.5 0 0 1-.5-.5V11h-.5a.5.5 0 0 1-.5-.5V10h-.5a.499.499 0 0 1-.175-.032l-.179.178a.5.5 0 0 0-.11.168l-2 5a.5.5 0 0 0 .65.65l5-2a.5.5 0 0 0 .168-.11l.178-.178z"/>
                          </svg>
                        </div>
                        <div v-if="whatsapp_profile.websites.length == 1 && !second_website">
                          <span class="add-another-website" @click="edit_website_value(1)">ADD ANOTHER WEBSITE</span>
                        </div>
                      </span>
                    </div>
                    <div class="edit-website" v-if="edit_website">
                      <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-globe" viewBox="0 0 16 16">
                        <path d="M0 8a8 8 0 1 1 16 0A8 8 0 0 1 0 8zm7.5-6.923c-.67.204-1.335.82-1.887 1.855A7.97 7.97 0 0 0 5.145 4H7.5V1.077zM4.09 4a9.267 9.267 0 0 1 .64-1.539 6.7 6.7 0 0 1 .597-.933A7.025 7.025 0 0 0 2.255 4H4.09zm-.582 3.5c.03-.877.138-1.718.312-2.5H1.674a6.958 6.958 0 0 0-.656 2.5h2.49zM4.847 5a12.5 12.5 0 0 0-.338 2.5H7.5V5H4.847zM8.5 5v2.5h2.99a12.495 12.495 0 0 0-.337-2.5H8.5zM4.51 8.5a12.5 12.5 0 0 0 .337 2.5H7.5V8.5H4.51zm3.99 0V11h2.653c.187-.765.306-1.608.338-2.5H8.5zM5.145 12c.138.386.295.744.468 1.068.552 1.035 1.218 1.65 1.887 1.855V12H5.145zm.182 2.472a6.696 6.696 0 0 1-.597-.933A9.268 9.268 0 0 1 4.09 12H2.255a7.024 7.024 0 0 0 3.072 2.472zM3.82 11a13.652 13.652 0 0 1-.312-2.5h-2.49c.062.89.291 1.733.656 2.5H3.82zm6.853 3.472A7.024 7.024 0 0 0 13.745 12H11.91a9.27 9.27 0 0 1-.64 1.539 6.688 6.688 0 0 1-.597.933zM8.5 12v2.923c.67-.204 1.335-.82 1.887-1.855.173-.324.33-.682.468-1.068H8.5zm3.68-1h2.146c.365-.767.594-1.61.656-2.5h-2.49a13.65 13.65 0 0 1-.312 2.5zm2.802-3.5a6.959 6.959 0 0 0-.656-2.5H12.18c.174.782.282 1.623.312 2.5h2.49zM11.27 2.461c.247.464.462.98.64 1.539h1.835a7.024 7.024 0 0 0-3.072-2.472c.218.284.418.598.597.933zM10.855 4a7.966 7.966 0 0 0-.468-1.068C9.835 1.897 9.17 1.282 8.5 1.077V4h2.355z"/>
                      </svg>                  
                      <textarea 
                        class="input ml-1"
                        v-model="whatsapp_profile.websites[index_update]" 
                        placeholder="Website URL"
                        id="business_website_url"
                        @keydown="expand_textbox('#business_website_url')"                      
                        ></textarea>
                      <svg xmlns="http://www.w3.org/2000/svg" width="16" height="22" fill="currentColor" class="bi bi-check2" viewBox="0 0 16 16"  @click="update_profile_details()" style="cursor: pointer;top:1vh !important;right:0 !important;
                        position: absolute;"
                      >
                        <path d="M13.854 3.646a.5.5 0 0 1 0 .708l-7 7a.5.5 0 0 1-.708 0l-3.5-3.5a.5.5 0 1 1 .708-.708L6.5 10.293l6.646-6.647a.5.5 0 0 1 .708 0z"/>
                      </svg>
                    </div>
                  </div>
                  <div class="webiste-vertical-details mb-3">
                    <div class="webiste-vertical d-flex" style="">
                      <svg xmlns="http://www.w3.org/2000/svg"  style="margin-right: 1rem;" width="16" height="16" fill="currentColor" class="bi bi-tag-fill" viewBox="0 0 16 16">
                        <path d="M2 1a1 1 0 0 0-1 1v4.586a1 1 0 0 0 .293.707l7 7a1 1 0 0 0 1.414 0l4.586-4.586a1 1 0 0 0 0-1.414l-7-7A1 1 0 0 0 6.586 1H2zm4 3.5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0z"/>
                      </svg>
                      <multiselect
                        :options="vertical_types"
                        v-model="whatsapp_profile.vertical"
                        :searchable="false"
                        :allow-empty="false"
                        :show-labels="false"
                        :close-on-select="true"
                        placeholder="Pick a categories"
                        style="width: 80%;z-index:4000;"
                      >
                      </multiselect>
                      <svg xmlns="http://www.w3.org/2000/svg" width="16" height="22" fill="currentColor" class="bi bi-check2" viewBox="0 0 16 16"  @click="update_profile_details()" style="cursor: pointer;top:1vh !important;right:0 !important;
                        position: absolute;"
                      >
                        <path d="M13.854 3.646a.5.5 0 0 1 0 .708l-7 7a.5.5 0 0 1-.708 0l-3.5-3.5a.5.5 0 1 1 .708-.708L6.5 10.293l6.646-6.647a.5.5 0 0 1 .708 0z"/>
                      </svg>
                    </div>
                  </div>
                </div>
                <div class="about-phone" >
                  <div class="mb-4"><span class="abt-phone-title">About and Phone Number</span></div>
                  <div class="whts-app-status">
                    <div class="d-flex whts-status" v-if="!edit_status">
                      <span v-if="whatsapp_profile.about == ''">{{default_whatsapp_status}}</span>
                      <span v-else>{{whatsapp_profile.about}}</span>
                      <svg v-if="!edit_address && !edit_email && !edit_website && !edit_description" xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-pencil-fill" viewBox="0 0 16 16" @click="edit_status = true"  style="cursor: pointer;">
                        <path d="M12.854.146a.5.5 0 0 0-.707 0L10.5 1.793 14.207 5.5l1.647-1.646a.5.5 0 0 0 0-.708l-3-3zm.646 6.061L9.793 2.5 3.293 9H3.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.207l6.5-6.5zm-7.468 7.468A.5.5 0 0 1 6 13.5V13h-.5a.5.5 0 0 1-.5-.5V12h-.5a.5.5 0 0 1-.5-.5V11h-.5a.5.5 0 0 1-.5-.5V10h-.5a.499.499 0 0 1-.175-.032l-.179.178a.5.5 0 0 0-.11.168l-2 5a.5.5 0 0 0 .65.65l5-2a.5.5 0 0 0 .168-.11l.178-.178z"/>
                      </svg>
                    </div>
                    <div class="edit-status" v-if="edit_status">
                      <textarea 
                        class="input"
                        v-model="whatsapp_profile.about"
                        id="whtsapp_status"
                        @keydown="expand_textbox('#whtsapp_status')"  
                      ></textarea>
                      <svg xmlns="http://www.w3.org/2000/svg" width="16" height="22" fill="currentColor" class="bi bi-check2" viewBox="0 0 16 16"  @click="update_profile_details()" style="cursor: pointer;  top: 1.6vh;right: 15px;
                        position: absolute;"
                      >
                        <path d="M13.854 3.646a.5.5 0 0 1 0 .708l-7 7a.5.5 0 0 1-.708 0l-3.5-3.5a.5.5 0 1 1 .708-.708L6.5 10.293l6.646-6.647a.5.5 0 0 1 .708 0z"/>
                      </svg>
                    </div>
                  </div>
                  <div class="whtsapp-no mt-3">
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-telephone-fill" viewBox="0 0 16 16" style="color:#8696a0;">
                      <path fill-rule="evenodd" d="M1.885.511a1.745 1.745 0 0 1 2.61.163L6.29 2.98c.329.423.445.974.315 1.494l-.547 2.19a.678.678 0 0 0 .178.643l2.457 2.457a.678.678 0 0 0 .644.178l2.189-.547a1.745 1.745 0 0 1 1.494.315l2.306 1.794c.829.645.905 1.87.163 2.611l-1.034 1.034c-.74.74-1.846 1.065-2.877.702a18.634 18.634 0 0 1-7.01-4.42 18.634 18.634 0 0 1-4.42-7.009c-.362-1.03-.037-2.137.703-2.877L1.885.511z"/>
                    </svg>
                    <span class="ml-3">{{whatsapp_profile.whatsapp_phone_number}}</span>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
        <div class="col-sm-4 p-0" v-show="is_contact_list">
          <!-- whatsapp all contacts -->
          <div
            style="border-right: 1px solid rgba(0,0,0,0.2);align-items: center; justify-content: space-between; height: 550px;">
            <div class="profile-top d-flex">
              <span style=" margin:0 0 10px 17px;cursor: pointer;" @click="show_all_contacts"><svg
                  xmlns="http://www.w3.org/2000/svg" width="38" height="22" fill="currentColor"
                  class="bi bi-arrow-left left-arrow" viewBox="0 0 16 16">
                  <path fill-rule="evenodd"
                    d="M15 8a.5.5 0 0 0-.5-.5H2.707l3.147-3.146a.5.5 0 1 0-.708-.708l-4 4a.5.5 0 0 0 0 .708l4 4a.5.5 0 0 0 .708-.708L2.707 8.5H14.5A.5.5 0 0 0 15 8z" />
                </svg>
              </span>
              <span style="opacity:2;font-size:1.1rem;margin:0 0 8px 17px;">New chat</span>
              <span style="margin: 0 5px 8px auto;">
                <button style="border: none; cursor: pointer;" type="button" data-container="body" data-toggle="popover" data-placement="right" data-trigger="focus">
                  <i class="fa fa-question-circle" ></i></button>
              </span>

            </div>
            <div class="contacts-list pr-0">
              <div class="search-contact">
                <div>
                  <svg xmlns="http://www.w3.org/2000/svg" width="12" height="12" fill="currentColor" class="bi bi-search"
                    viewBox="0 0 16 16">
                    <path
                      d="M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001c.03.04.062.078.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1.007 1.007 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0z" />
                  </svg>
                  <input type="text" placeholder="Search or start new chat" v-model="search_in_contact_list">
                </div>
              </div>
              <div class="all-contact-list"  @scroll="new_contact_list" >
                <ul v-if="all_contact_list.length>0"
                    id="all_contacts_scroll" 
                >
                  <li class="d-flex"
                    style="cursor:pointer;"
                    @click="add_new_contact_modal()"
                    >
                      <!-- <div style="width: 15%;"><img src="/img/whatsapp-dp.png" alt=""
                      class="user-profile-picture rounded-circle">
                      </div> -->
                      <div class="user-name">
                        Add New Contact
                        <!-- <span v-if="contact.profile_name">{{ contact.profile_name }}</span>
                        <span v-else>{{ contact.whatsapp_phone_number }}</span> -->
                      </div>
                  </li>
                  <li v-for="(contact, index) in all_contact_list" 
                  :key="index"
                  class="d-flex"
                  style="cursor:pointer;"
                  @click="get_history_data(contact.whatsapp_phone_number, contact.profile_name, 0,contact)"
                  >
                    <div style="width: 15%;"><img src="/img/whatsapp-dp.png" alt=""
                    class="user-profile-picture rounded-circle">
                    </div>
                    <div class="user-name">
                      <span>{{get_contact_display_name(contact)}}</span>
                      <!-- <span v-if="contact.contact_name">{{ contact.contact_name }}</span>
                      <span v-else-if="contact.profile_name">{{ contact.profile_name }}</span>
                      <span v-else>{{ contact.whatsapp_phone_number }}</span> -->
                    </div>
                    <div class="contact-verified-status ml-auto" :class="contact.verify_status" :title="contact.verify_status">
                      &#x25CF;
                    </div>
                  </li>
                </ul>
              </div>
            </div>
          </div>
        </div>
        <div class="col-sm-8 p-0" style="height: 600px; background-color: #f0f2f5 !important;">
          <div class="user-info-page" v-show="history.length == 0 && !start_new_conv_data.start_new_conv">
            <div class="cense-whatsapp-image" v-show="!show_spinner">
                <img src="/img/cense_image.png" alt="" class="cense-image">
                <img src="@/portal/assets/img/WhatsApp-Logo-PNG6.png" alt="" class="whats-app-image">
                <h4>Whatsapp-Web powered by Cense AI</h4>
                <div class="contacts-legend-preview">
                  <h6>Legends for Contacts:</h6>
                  <span style='color:#25af02;font-size: larger;'>&#x25CF;</span> <span>  This contact is on whatsapp</span> <br>
                  <span style='color:#ff4747;font-size: larger;'>&#x25CF;</span> <span> This contact is not on whatsapp</span> <br>
                  <span style='color:#ffc347;font-size: larger;'>&#x25CF;</span> <span> We don't know yet whether this contact is on whatsapp</span>
              </div>
            </div>
          </div>
          <div class="col-sm-12 d-flex" v-if="history.length > 0">
            <img src="/img/whatsapp-dp.png" alt="" class="no-profile-image-conv rounded-circle my-2" height="40px" width="40px">
            <div>
              <p v-if="customer_name != ''" class="mt-3 ml-2 customer-name">{{ customer_name }}</p>
              <p v-else class="mt-3 ml-2">{{ phoneno }}</p>
            </div>
            <div class="ml-auto mt-3 d-flex">
              <div>
                <label style="cursor:pointer;">
                  <input type="file" hidden  name="send_attachment" id="send_attachment" :accept="file_extensions.all_allowed_file_extensions.toString()" @change="process_attachment_file" />
                    <i class="fa fa-paperclip mr-2" aria-hidden="true"></i>
                  <!-- Upload -->
                </label>

                  <!-- <input type="file" name="send_attachment" id="send_attachment" @change="process_attachment_file"> -->
                  <!-- </i> -->
              </div>
            <div class="dropdown">
              <button class="btn p-0" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                <!-- <i class="fa fa-paperclip mr-2" aria-hidden="true"></i> -->
                <svg xmlns="http://www.w3.org/2000/svg" width="15" height="15" fill="currentColor"
                  class="bi bi-three-dots-vertical" viewBox="0 0 16 16">
                  <path
                    d="M9.5 13a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0z" />
                </svg>
              </button>
              <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                <a class="dropdown-item" href="javascript:void(0);" @click="open_send_template_to_user">Send Template</a>
              </div>
            </div>
              <!-- <span class="d-flex">
                <svg xmlns="http://www.w3.org/2000/svg" width="15" height="15" fill="currentColor"
                  class="bi bi-three-dots-vertical" viewBox="0 0 16 16">
                  <path
                    d="M9.5 13a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0z" />
                </svg>
              </span> -->
            </div>
          </div>
          <div class="message-area" v-if="history.length > 0 && send_attachment_detail.show_preview == false"> 
            <div class="message-table-scroll" id="scrolling-div-whatsapp" @scroll="chatScrollMessages">
              <div v-if="scroll_spinner_chat">
                <div class="lds-ring">
                  <div></div>
                  <div></div>
                  <div></div>
                  <div></div>
                </div>
              </div>
              <div class="d-flex flex-column" style="overflow: hidden; width: 100%">
                  <div v-for="(data, index) in history" :key="index">
                    <div class="m-2"
                      style="text-align: center;" 
                      v-if="![null,''].includes(data.bot_response_date) && check_previous_message_date_same(index)">
                      <span class="conversation-date">{{ data.bot_response_date}}</span>
                    </div>
                    <div class="col-sm-12" v-if="data.UserQuery!==''">
                      <td class="pt-2 pl-2 pb-0">
                        <p class="bg-white mb-0 shadow-sm text-black rounded user-msg" style="word-break: break-all;">{{ data.UserQuery }}</p>
                        <span class="user-msg-flag"><small></small></span>
                        <p class="text-black user-msg-time pr-2"><small>{{ formatUserQueryTime(data.UserQuery_DateTime) }}</small></p>
                      </td>
                    </div>
                    <div v-if="data.BOTResponse.length > 0">
                      <div class="row justify-content-end" v-if="data.BOTResponse[0].text">
                        <div class="col-auto">
                          <div class="col-sm" style="padding-right: 25px;">
                            <div v-for="(texts, index) in data.BOTResponse" :key="index" class="mb-1">
                              <p class=" mb-0 shadow-sm text-black pt-2 pr-2 pl-3 bot-resp-msg" style="word-break: break-all;">
                                {{ texts.text }}
                              </p>
                              <p class="text-black bot-resp-time pr-2"><small>{{ formatUserQueryTime(data.Chat_Datetime) }}</small></p>
                              <p class="bot-resp-msg-flag"><small></small></p>
                            </div>
                          </div>
                        </div>
                      </div>
                      <div v-if="data.BOTResponse[0].products">
                        <div class="row justify-content-end">
                        <div class="col-4 bot-resp">
                        <div class="col-sm" v-for="(product, index) in  product_variation(data.BOTResponse[0].products.products_list)"
                              :key="index">
                              
                          <div class="cards">
                          <img class="cards-img" v-if="product.img_url != null" :src="check_image_type(product.img_url)"/>
                          <img class="cards-img" v-else src="/img/blank_product_image.png"
                            alt="No Product Image" />
                          <div>
                            <label class="mb-0" style="line-height: 1.5;">
                              {{ product.title }}
                            </label>
                            <br>
                            <label class="mb-0" style="line-height: 1.5;">
                              {{ product.variation }}
                            </label>
                            <br>
                            <label class="mb-0" style="line-height: 1.5;">
                              {{ product.price }}
                            </label>
                          </div>
                          <p class="text-black" style="text-align: end !important; margin: 0;">
                            <small>{{ data.bot_response_time }}</small>
                          </p>
                        <!-- </div> -->
                          </div>
                          <div class="d-flex" 
                            style="margin-top: 1px; max-width: 205px">
                            <div
                              style="width: 100%"
                            >
                              <div
                                class="preview-button-div"
                                style="text-align: center;"
                              >
                                <a
                                  class="preview-button"
                                  :href="product.url"
                                  target="_blank"
                                >
                                  <span color="#0b67aa" class=""
                                  ><svg
                                    xmlns="http://www.w3.org/2000/svg"
                                    width="17"
                                    height="17"
                                    viewBox="0 0 24 24"
                                    fill="none"
                                    stroke="#0b67aa"
                                    stroke-width="2"
                                    stroke-linecap="round"
                                    stroke-linejoin="round"
                                    class="mr-2"
                                  >
                                    <path
                                      d="M18 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h6"
                                    ></path>
                                    <polyline points="15 3 21 3 21 9"></polyline>
                                    <line
                                      x1="10"
                                      y1="14"
                                      x2="21"
                                      y2="3"
                                    ></line></svg
                                    >Buy Now
                                  </span>
                                </a>
                              </div>
                            </div>
                          </div>
                          <p class="bot-resp-msg-flag-card"><small></small></p>
                        </div>
                        </div>
                        </div>
                      </div>
                      <div v-if="data.BOTResponse[0].card != undefined">
                        <div div class="row justify-content-end">
                        <div class="col-4 bot-resp">
                            <div class="col-sm carousel_cards" style="" v-for="(carousel, index) in data.BOTResponse[0].card"
                              :key="index">
                            <div class="cards">
                              <div class="carousel_card_single">
                                <div v-if="carousel.image">
                                  <img class="cards-img" :src=carousel.image alt="carousel Image">
                                </div>
                                <div v-if="carousel.video">
                                  <iframe :src="carousel.video" allowfullscreen allowtransparency
                                    allow="autoplay"></iframe>
                                </div>
                                <div class="pl-1">
                                  <p v-if="carousel.title">{{ carousel.title }}</p>
                                  <div>
                                    <div v-if="carousel.text">
                                      <p>{{ carousel.text }}</p>
                                    </div>
                                  </div>
                                </div>
                                <p class="text-black" style="text-align: end !important; margin: 0;">
                                  <small>{{ data.bot_response_time }}</small>
                                </p>
                              </div>
                            </div>
                              <div v-for="(btn, indx) in carousel.buttons" :key="indx"
                                      class="d-flex" 
                                      style="margin-top: 1px; max-width: 205px">
                                <div class="preview-button-div" v-if="Boolean(btn.title) && Boolean(btn.value)">
                                  <a class="preview-button" type="button" @click="custom_button_click(btn, item)" :key="index">
                                    {{ btn.title }}
                                  </a>
                                </div>
                              </div>
                              <p class="bot-resp-msg-flag-card"><small></small></p>
                            </div>
                          </div>
                        </div>
                      </div>
                      <div v-if="Boolean(data.BOTResponse[0].template)">
                        <div div class="row justify-content-end">
                        <div class="col-4 bot-resp">
                        <div class="col-sm">
                        <div class="cards">
                      <!-- <div
                        v-for="(comp, name, index) in preview_template_data"
                        :key="index"
                      > -->
                        <div v-if="Boolean(data.BOTResponse[0].template['HEADER'])">
                          <div v-if="data.BOTResponse[0].template['HEADER'].type == 'IMAGE'">
                            <img class="cards-img" :src="data.BOTResponse[0].template['HEADER'].body">
                          </div>
                          <div v-else>
                              <p>{{data.BOTResponse[0].template['HEADER'].body}}</p>
                          </div>
                        </div>
                        <div class="" v-if="Boolean(data.BOTResponse[0].template['BODY'])">
                          <label v-if="data.BOTResponse[0].template['BODY'].type == 'text'"
                          style="line-height: 1.5;">
                            {{ data.BOTResponse[0].template['BODY'].body }}
                          </label>
                        </div>
                        <div v-if="Boolean(data.BOTResponse[0].template['FOOTER'])">
                          <span 
                            v-if="data.BOTResponse[0].template['FOOTER'].type == 'text'"
                            style="font-size: 10px; line-height: 1.5; font-weight: 300;">
                            {{data.BOTResponse[0].template['FOOTER'].body}}
                          </span>
                        </div>
                        <p class="text-black" style="text-align: end !important; margin: 0;">
                          <small>{{ data.bot_response_time }}</small>
                        </p>
                      <!-- </div> -->
                        </div>
                        <div class="d-flex" 
                          style="margin-top: 1px; max-width: 205px" 
                          v-if="Boolean(data.BOTResponse[0].template['BUTTON'])">
                          <div
                            v-for="(btn, index1) in data.BOTResponse[0].template['BUTTON'].body"
                            :key="index1" style="width: 100%"
                          >
                            <div
                              v-if="btn['type'] === 'QUICK_REPLY'"
                              class="preview-button-div"
                              style="text-align: center;"
                              :style="btn['text'] == 'Yes' ? 'margin-right: 1px;' : ''"
                            >
                              <a
                                class="preview-button"
                              >
                                <span color="rgba(11,103,170,1)" class=""
                                  >{{ btn['text'] }}
                                </span>
                              </a>
                            </div>
                            <div
                              v-else-if="btn['type'] === 'URL'"
                              class="preview-button-div"
                              style="text-align: center;"
                            >
                              <a
                                :href="btn.url"
                                target="_blank"
                                class="preview-button"
                              >
                                <span color="#0b67aa" class=""
                                  ><svg
                                    xmlns="http://www.w3.org/2000/svg"
                                    width="17"
                                    height="17"
                                    viewBox="0 0 24 24"
                                    fill="none"
                                    stroke="#0b67aa"
                                    stroke-width="2"
                                    stroke-linecap="round"
                                    stroke-linejoin="round"
                                    class="mr-2"
                                  >
                                    <path
                                      d="M18 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h6"
                                    ></path>
                                    <polyline points="15 3 21 3 21 9"></polyline>
                                    <line
                                      x1="10"
                                      y1="14"
                                      x2="21"
                                      y2="3"
                                    ></line></svg
                                  >{{ btn['text'] }}</span
                                >
                              </a>
                            </div>
                          </div>
                        </div>
                        <p class="bot-resp-msg-flag-card"><small></small></p>
                        </div>
                        </div>
                        </div>
                      </div>
                      <div v-if="is_response_image(data.BOTResponse[0])" class="pt-2 pl-2 pb-0">
                        <div v-if="typeof(data.BOTResponse[0].image) == 'string'" >
                          <div div class="row justify-content-end">
                            <div class="col-6 bot-resp">
                              <div class="col-sm carousel_cards" style="" >
                              <div class="cards image-custom">
                                <div class="carousel_card_single" @click="show_image_fullscreen(data.BOTResponse[0].image)" style="cursor:pointer;">
                                    <img class="cards-img" :src=data.BOTResponse[0].image alt="carousel Image">
                                  <p class="text-black" style="text-align: end !important; margin: 0;">
                                    <small>{{ formatUserQueryTime(data.Chat_Datetime) }}</small>
                                  </p> 
                                </div>
                              </div>
                              </div>
                            </div>
                          </div>
                        </div>

                        <div v-if="typeof(data.BOTResponse[0].image) == 'object'">
                          <div div class="row justify-content-end">
                            <div class="col-6 bot-resp">
                              <div class="col-sm carousel_cards" style="" >
                              <div class="cards image-custom">
                                <div class="carousel_card_single" @click="show_image_fullscreen(data.BOTResponse[0].image.link)" style="cursor:pointer;">
                                  <img class="cards-img" :src=data.BOTResponse[0].image.link alt="carousel Image">
                                  <p class="text-black" style="margin: 0;word-break: break-all;" v-if="data.BOTResponse[0].image.caption">
                                   {{data.BOTResponse[0].image.caption}}
                                  </p>
                                  <p class="text-black" style="text-align: end !important; margin: 0;">
                                    <small>{{ formatUserQueryTime(data.Chat_Datetime) }}</small>
                                  </p> 
                                </div>
                              </div>
                              </div>
                            </div>
                          </div>
                        </div>
                      </div>
                      <div v-if="is_response_document(data.BOTResponse[0])">
                        <div v-if="typeof(data.BOTResponse[0].attachment) == 'object'" class="" style="margin-bottom: 1rem;">
                          <div div class="row justify-content-end">
                            <div class="col-6 bot-resp">
                              <div class="col-sm carousel_cards" style="" >
                                <div class="cards image-custom">
                                  <!-- {{data.BOTResponse[0].attachment.filename}} -->
                                  <!-- <div class="carousel_card_single" @click="show_image_fullscreen(data.BOTResponse[0].image)" style="cursor:pointer;">
                                      <img class="cards-img" :src=data.BOTResponse[0].image alt="carousel Image">
                                    <p class="text-black" style="text-align: end !important; margin: 0;">
                                      <small>{{ data.bot_response_time }}</small>
                                    </p> 
                                  </div> -->
                                  <div class="carousel_cards" style="">
                                    <div class="">
                                      <div class="carousel_card_single">
                                        <div>
                                          <img style="filter: blur(2.2px);" class="cards-img" src=/img/pdf-placeholder-2.png alt="carousel Image">
                                        </div>
                                        <!-- <div v-if="carousel.video">
                                          <iframe :src="carousel.video" allowfullscreen allowtransparency
                                            allow="autoplay"></iframe>
                                        </div> -->
                                        <div class="pl-1">
                                          <p v-if="data.BOTResponse[0].attachment.filename" class="d-flex">
                                            <i style="cursor: pointer;" @click="show_image_fullscreen(data.BOTResponse[0].attachment.link)" class="fa fa-2x pt-1 fa-arrow-circle-down" aria-hidden="true"></i>
                                            <span class="ml-auto pt-1"> {{data.BOTResponse[0].attachment.filename}}</span>
                                          </p>
                                          <!-- <div>
                                            <div v-if="carousel.text">
                                              <p>{{ carousel.text }}</p>
                                            </div>
                                          </div> -->
                                        </div>
                                        <p class="text-black" style="text-align: end !important; margin: 0;">
                                          <small>{{ formatUserQueryTime(data.Chat_Datetime) }}</small>
                                        </p>
                                      </div>
                                    </div>
                                      <!-- <div v-for="(btn, indx) in carousel.buttons" :key="indx"
                                              class="d-flex" 
                                              style="margin-top: 1px; max-width: 205px">
                                        <div class="preview-button-div" v-if="Boolean(btn.title) && Boolean(btn.value)">
                                          <a class="preview-button" type="button" @click="custom_button_click(btn, item)" :key="index">
                                            {{ btn.title }}
                                          </a>
                                        </div>
                                      </div> -->
                                      <p class="bot-resp-msg-flag-card"><small></small></p>
                                    </div>
                                </div>
                              </div>
                            </div>
                          </div>
                        </div>
                      </div>
                      <div>
                      </div>
                    </div>
                  </div>
              </div>
              <!-- <div class="d-flex">
                <input disabled type="text" placeholder="Type here to chat..." class="form-control" id="send_message_whatsapp">
                <button
                  class="btn"
                  type="button"
                  id="send_btn"
                  @click="send_message_to_user"
                >
                  <svg
                    xmlns="http://www.w3.org/2000/svg"
                    id="send_button"
                    style="fill: #8a8a8a63"
                    width="40"
                    height="25"
                    viewBox="0 0 24 24"
                  >
                    <path d="M2.01 21L23 12 2.01 3 2 10l15 2-15 2z" />
                    <path d="M0 0h24v24H0z" fill="none" />
                  </svg>
                </button>
              </div> -->
            </div>
            <!-- <div v-else>
                <div class="text-center">
                  <h3 class="mt-3">Welcome to Whatsapp Interface of Cense</h3>
                  <h6>Please select a contact or start a new chat</h6>
                </div>
              </div> -->
          </div>
          <div class="start-new-conv" v-if="start_new_conv_data.start_new_conv">
            <div class="col-sm-12 d-flex">
              <img src="/img/whatsapp-dp.png" alt="" class="no-profile-image-conv rounded-circle my-2" height="40px" width="40px">
              <div>
                <p v-if="customer_name != ''" class="mt-3 ml-2 customer-name">{{ customer_name }}</p>
                <p v-else class="mt-3 ml-2">{{ phoneno }}</p>
              </div>
            </div>
             <div class="message-area" > 
            <div class="message-table-scroll" id="scrolling-div-whatsapp" @scroll="chatScrollMessages">
            </div>
            </div>

            
            <!-- <div class="user-info pb-2">
              <span class="w-25 d-flex">
                <img src="/img/whatsapp-dp.png" alt="" class="profile-image rounded-circle">
                <span>
                  <p v-if="customer_name != ''" class="mt-3 mb-0 pl-3 customer-name">{{ customer_name }}</p>
                  <p v-else class="mt-0 mb-1">{{ phoneno }}</p>
                </span>
              </span>
              <span class="w-75">
                <span class="float-right d-flex w-25"
                  style="align-items: center;padding-left:3rem;justify-content: space-around;margin-top: 5px;">
                  <svg xmlns="http://www.w3.org/2000/svg" width="15" height="15" fill="currentColor"
                    class="bi bi-three-dots-vertical mr-4" viewBox="0 0 16 16">
                    <path
                      d="M9.5 13a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0zm0-5a1.5 1.5 0 1 1-3 0 1.5 1.5 0 0 1 3 0z" />
                  </svg>
                </span>
              </span>
            </div> -->
          </div>
          <div class="document-preview" v-show="send_attachment_detail.show_preview == true && file_extensions.image_file_extensions.includes(send_attachment_detail.media_content_type)">
            <div class="image-preview-container">
             <div id="img-preview"></div>
            </div>  
          </div>
           <div class="document-preview" v-show="send_attachment_detail.show_preview == true && file_extensions.document_file_extensions.includes(send_attachment_detail.media_content_type)">
            <div class="document-preview-container">
             <!-- <div id="img-preview"></div> -->
             <!-- <div style="height:500px;display: flex;" v-if="send_attachment_detail.media_content_type == 'application/pdf'"> -->
             <div style="height:500px;">
                 <span aria-hidden="true" style="font-size: 2rem;color: aliceblue;">&times;</span>
                <div class="d-flex">                
                  <img style="max-height: 300px;text-align: center;margin-left: auto;margin-right: auto;" src="/img/document-placeholder-1.png" alt="">
                </div>
                <p class="text-center pt-4">{{send_attachment_detail.media_file_name}}</p>
             </div>

            </div>  
          </div>
          <div style="width:100%" class="send-message-to-user d-flex" v-if="show_send_message && !start_new_conv_data.start_new_conv">
            <input type="text" ref="message_sending_textbox" style="padding: 21px !important;" class="form-control" :disabled="!contact_list[current_contact_index].is_message_sending_enabled"
              :placeholder="message_text_box_placeholder" v-model="message_to_send" @keypress.enter="send_message_to_user">
            <button class="btn" type="button" id="send_btn" @click="send_message_to_user" v-if="contact_list[current_contact_index].is_message_sending_enabled">
              <svg xmlns="http://www.w3.org/2000/svg" id="send_button" style="fill: #8a8a8a63" width="40" height="25"
                viewBox="0 0 24 24">
                <path d="M2.01 21L23 12 2.01 3 2 10l15 2-15 2z" />
                <path d="M0 0h24v24H0z" fill="none" />
              </svg>
            </button>
            <a href="javascript:void(0);" id="enable-message-sending" @click="enable_sending_messages_for_user" v-if="!contact_list[current_contact_index].is_message_sending_enabled">Enable Message Sending</a>
          </div>
          <div style="width:100%" class="send-message-to-user d-flex" v-if="show_send_message && start_new_conv_data.start_new_conv" >
            <input type="text" ref="message_sending_textbox" style="padding: 21px !important;" class="form-control" :disabled="!start_new_conv_data.is_message_sending_enabled"
              :placeholder="message_text_box_placeholder" v-model="message_to_send" @keypress.enter="send_message_to_user">
            <button class="btn" type="button" id="send_btn" @click="send_message_to_user" v-if="start_new_conv_data.is_message_sending_enabled">
              <svg xmlns="http://www.w3.org/2000/svg" id="send_button" style="fill: #8a8a8a63" width="40" height="25"
                viewBox="0 0 24 24">
                <path d="M2.01 21L23 12 2.01 3 2 10l15 2-15 2z" />
                <path d="M0 0h24v24H0z" fill="none" />
              </svg>
            </button>
            <a href="javascript:void(0);" id="enable-message-sending" @click="enable_sending_messages_for_user" v-if="!start_new_conv_data.is_message_sending_enabled">Enable Message Sending</a>
          </div>
        </div>
      </div>
    </div>
  </div>
  <div
    id="showImageModal"
    class="modal fade dash-modal"
    role="dialog"
  >
    <div class="modal-dialog modal-lg">
      <div class="modal-content">
      <button type="button" class="close" data-dismiss="modal">
        <span aria-hidden="true" style="font-size: 2rem;color: aliceblue;">&times;</span>
      </button>
      <img :src="current_fullscreen_image_src" >
      <!-- <iframe :src="current_fullscreen_image_src" frameborder="0"></iframe> -->
      </div>
    </div>
  </div>
  <div
    id="addContactModal"
    class="modal fade dash-modal"
    role="dialog"
  >
    <div class="modal-dialog modal-lg">
      <div class="modal-content">
      <div class="modal-head d-flex align-items-center m-2">
        <div class="head-icn">
          <img src="/img/msg-blue.png" alt />
        </div>
        <h3>Add Contact</h3>
        <button type="button" class="close" data-dismiss="modal" style="top: initial;">
          <img src="/img/close-icn.png" alt />
        </button>
      </div>
      <div class="modal-body">
        <div class="form-group">
          <label>Number</label>
          <!-- <input
            type="text"
            v-model.trim="add_new_contact.phone_number"
            class="form-control"
            placeholder="Enter Phone Number"
            id="phone_number"
          /> -->
          <vue-phone-number-input
            v-model="add_new_contact.formattedNumber"
            :no-use-browser-locale="true"
            color="#53b9d0"
            valid-color="#ccc"
            @update="add_new_contact.phone_number = $event.formattedNumber"
          >
          </vue-phone-number-input>
          <label>Name</label>
          <input
            type="text"
            v-model.trim="add_new_contact.contact_name"
            class="form-control"
            placeholder="Enter Contact Name"
            id="contact_name"
          />
        </div>
      </div>
      <div class="modal-footer">
        <div class="mr-auto" @click="open_import_from_csv_modal" style="cursor:pointer;">
          <i class="fa fa-paperclip mr-2" aria-hidden="true"></i> Import from CSV File
        </div>
          <div class="btn-wrap card-act text-right mt-0 py-0 border-top-0">
            <button
              type="button"
              class="btn btn-link"
              data-dismiss="modal"
            >
              Cancel
            </button>
            <button
              type="submit"
              class="darkblue-btn"
              id="res_n_int_save"
            >
              Save
            </button>
          </div>
        </div>
      </div>
    </div>
  </div>
  <div
    id="sendTemplateModal"
    class="modal fade dash-modal"
    role="dialog"
  >
    <div class="modal-dialog modal-lg">
      <div class="modal-content">
      <div class="modal-head d-flex align-items-center m-2">
        <div class="head-icn">
          <img src="/img/msg-blue.png" alt />
        </div>
        <h3>Send Template</h3>
        <button type="button" class="close" data-dismiss="modal" style="top: initial;">
          <img src="/img/close-icn.png" alt />
        </button>
      </div>
      <div class="modal-body">
        <div>
          <h6> Select Template:</h6>
          <!-- <div class="d-flex"> -->
            <table class="table" style="overflow-y: auto">
              <tr
                v-for="(template, index) in whatsapp_templates.templates_list"
                :key="index"
              >
                <td scope="row" style="border:none; padding:0.25rem;">
                  <div class="form-check">
                    <input  type="radio" name="dsdf" id="indexab" :value="template.template_id" v-model="whatsapp_templates.selected_template">
                   <label for="" class="ml-3"> {{ template.template_name }}</label>
                  </div>
                </td>
              </tr>
            </table>
            <!-- <div>
              <div
                    v-if="Boolean(whatsapp_templates.preview_template_data)"
                    class="cards"
                    style="width: 50%; margin: 0 auto"
                  >
                    <div v-if="Boolean(whatsapp_templates.preview_template_data['HEADER'])">
                      <div
                        v-if="whatsapp_templates.preview_template_data['HEADER'].type == 'IMAGE'"
                      >
                        <img
                          :src="preview_template_data['HEADER'].body"
                          width="100%"
                        />
                      </div>
                      <div v-else>
                        <p>{{ whatsapp_templates.preview_template_data["HEADER"].body }}</p>
                      </div>
                    </div>
                    <div
                      class="mt-4"
                      v-if="Boolean(whatsapp_templates.preview_template_data['BODY'])"
                    >
                      <label
                        v-if="whatsapp_templates.preview_template_data['BODY'].type == 'text'"
                        style="line-height: 1.5"
                      >
                        {{ whatsapp_templates.preview_template_data["BODY"].body }}
                      </label>
                    </div>
                    <div v-if="Boolean(whatsapp_templates.preview_template_data['FOOTER'])">
                      <span
                        v-if="whatsapp_templates.preview_template_data['FOOTER'].type == 'text'"
                        style="
                          font-size: 10px;
                          line-height: 1.5;
                          font-weight: 300;
                        "
                      >
                        {{ whatsapp_templates.preview_template_data["FOOTER"].body }}
                      </span>
                    </div>
                  </div>
                  <div
                    v-if="
                      Boolean(whatsapp_templates.preview_template_data) &&
                      Boolean(whatsapp_templates.preview_template_data['BUTTON'])
                    "
                  >
                    <div
                      v-for="(btn, index1) in whatsapp_templates.preview_template_data['BUTTON']
                        .body"
                      :key="index1"
                    >
                      <div
                        v-if="btn['type'] === 'QUICK_REPLY'"
                        class="preview-button-div"
                        style="width: 50%; margin: 0 auto"
                      >
                        <button
                          color="rgba(11,103,170,1)"
                          class="btn preview-button"
                        >
                          <span color="rgba(11,103,170,1)" class=""
                            >{{ btn["text"] }}
                          </span>
                        </button>
                      </div>
                      <div
                        v-else-if="btn['type'] === 'URL'"
                        class="preview-button-div"
                        style="width: 50%; margin: 0 auto"
                      >
                        <a
                          :href="btn.url"
                          target="_blank"
                          class="btn preview-button"
                        >
                          <span color="#0b67aa" class=""
                            ><svg
                              xmlns="http://www.w3.org/2000/svg"
                              width="17"
                              height="17"
                              viewBox="0 0 24 24"
                              fill="none"
                              stroke="#0b67aa"
                              stroke-width="2"
                              stroke-linecap="round"
                              stroke-linejoin="round"
                              class="mr-2"
                            >
                              <path
                                d="M18 13v6a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h6"
                              ></path>
                              <polyline points="15 3 21 3 21 9"></polyline>
                              <line
                                x1="10"
                                y1="14"
                                x2="21"
                                y2="3"
                              ></line></svg
                            >{{ btn["text"] }}</span
                          >
                        </a>
                      </div>
                    </div>
                  </div>
            </div> -->
            <!-- </div> -->
          <div class="modal-footer">
            <div class="btn-wrap card-act text-right mt-0 py-0 border-top-0">
              <button
                type="button"
                class="btn btn-link"
                data-dismiss="modal"
              >
                Cancel
              </button>
              <button
                type="submit"
                class="darkblue-btn"
                id="res_n_int_save"
                @click="send_template_to_customer()"
              >
                Send
              </button>
            </div>
         </div>
        </div>
      </div>
      </div>
    </div>
  </div>
  <div
    id="importContactCSVModal"
    class="modal fade dash-modal"
    role="dialog"
  >
    <div class="modal-dialog modal-lg">
      <div class="modal-content">
      <div class="modal-head d-flex align-items-center m-2">
        <div class="head-icn">
          <img src="/img/msg-blue.png" alt />
        </div>
        <h3>Import Contacts from CSV</h3>
        <button type="button" class="close" data-dismiss="modal" style="top: initial;">
          <img src="/img/close-icn.png" alt />
        </button>
      </div>
      <div class="modal-body">
        <div>
          <form @submit.prevent="file_submit_upload_contacts">
            <div class="form-group">
              <div class="custom-file">
                <input
                  type="file"
                  accept=".csv"
                  class="custom-file-input"
                  @change="file_input_contacts_csv"
                  id="inputGroupUploadFilecsv"
                  aria-describedby="inputGroupFileAddoncsv"
                />
                <label
                  style="font-weight: 400; line-height: 15px"
                  class="custom-file-label form-control"
                  for="file"
                  >{{contact_csv.file_label}}</label
                >
              </div>
              <!-- <p class="mt-2" style="color: #fa0000; font-size: 0.85rem">
                * Please Note that only Responses with only Text Response can
                be added via CSV, API Endpoints and Responses with Image need
                to be added from the portal.
              </p> -->
            </div>
            <div class="btn-wrap text-right">
              <a href="javascript:void(0)" @click="download_sample_contact_file">
                Download Sample CSV File
                <!-- <i
                  class="fa fa-spinner fa-spin"
                ></i> -->
              </a>
              <button
                type="button"
                class="btn btn-link"
                @click="empty_upload_csv_contacts"
                data-dismiss="modal"
              >
                Cancel
              </button>
              <button type="submit" class="darkblue-btn">Submit</button>
            </div>
          </form>
            
          <!-- <div class="modal-footer">
            <div class="btn-wrap card-act text-right mt-0 py-0 border-top-0">
              <button
                type="button"
                class="btn btn-link"
                data-dismiss="modal"
              >
                Cancel
              </button>
              <button
                type="submit"
                class="darkblue-btn"
                id="res_n_int_save"
                @click="send_template_to_customer()"
              >
                Send
              </button>
            </div>
         </div> -->
        </div>
      </div>
      </div>
    </div>
  </div>
</div>
"},null]}