{"remainingRequest":"/home/vimalesh/CENSE/chatbot-portal/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/vimalesh/CENSE/chatbot-portal/src/portal/Chatbot/Dashboard/BotOutput/BotConfiguration.vue?vue&type=template&id=63c93feb&scoped=true&","dependencies":[{"path":"/home/vimalesh/CENSE/chatbot-portal/src/portal/Chatbot/Dashboard/BotOutput/BotConfiguration.vue","mtime":1661252053819},{"path":"/home/vimalesh/CENSE/chatbot-portal/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vimalesh/CENSE/chatbot-portal/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/vimalesh/CENSE/chatbot-portal/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vimalesh/CENSE/chatbot-portal/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:
<div class="dash-cont" :style="setup_css">
  <div class="spinner" id="spinner" v-show="big_spinner"></div>
  <div class="container-fluid">
    <div class="card dash-card">
      <div
        class="card-header d-block d-sm-flex flex-wrap justify-content-between"
      >
        <div class="col-sm-12" style="padding-left: 10px;">
          <h4 class="mb-sm-0">{{ tlt("bot_config_page_title") }}</h4>
          <div class="" style="float: right; margin-top: -33px;">
            <div class="dash-modal">
              <div
                class="btn-wrap card-act text-right mt-0 py-0 border-top-0"
              >
                <button
                  type="submit"
                  class="darkblue-btn"
                  id="res_n_int_save"
                  data-toggle="modal"
                  title="Click Here for Preview"
                  data-target="#preview_bot_visible"
                >
                  {{ tlt("bot_config_preview_bot_btn") }}
                </button>
              </div>
            </div>
          </div>
        </div>
      </div>
      <div class="card-body">
        <div class="table-box">
          <div class="table-responsive">
            <div
              class="tab-pane fade active show"
              id="widget_styling"
              role="tabpanel"
              aria-labelledby="widget_styling-tab"
            >
              <div class="col-sm-12 d-flex p-0 mt-2">
                <div
                  class="col-sm-6"
                  style="border-right: 1px solid rgb(234, 234, 234)"
                >
                  <h5 class="mb-sm-6">
                    {{ tlt("bot_config_widget_header") }}
                  </h5>
                  <form @submit.prevent="submit_greetings">
                    <div
                      class="form-group"
                      style="margin-bottom: 0.3rem !important;"
                    >
                      <h6 class="label1">
                        {{ tlt("bot_config_widget_subhead") }}
                        <!-- <button
                          type="button"
                          class="save_node_button"
                          style="height: 29px; padding: 0px 10px"
                          @click="add_bot_greetings"
                        >
                          <svg
                            xmlns="http://www.w3.org/2000/svg"
                            width="14"
                            height="13.997"
                            viewBox="0 0 14 13.997"
                          >
                            <path
                              id="Union_13"
                              data-name="Union 13"
                              d="M-12684,2058v-5h-5a1,1,0,0,1-1-1,1,1,0,0,1,1-1h5v-5a1,1,0,0,1,1-1,1,1,0,0,1,1,1v5h5a1,1,0,0,1,1,1,1,1,0,0,1-1,1h-5v5a1,1,0,0,1-1,1A1,1,0,0,1-12684,2058Z"
                              transform="translate(12690.001 -2045.002)"
                              fill="#fff"
                            />
                          </svg>
                        </button> -->
                      </h6>
                    </div>
                    <div class="custom-box box-animation pt-2 px-2">
                      <div class="d-flex" style="text-align: center">
                        <div class="col-sm-9" style="text-align: center;">
                          {{ tlt("bot_config_widget_msg_label") }}
                        </div>
                        <div
                          class="col-sm-3"
                          style="text-align: end; padding-right: 40px;"
                        >
                          {{ tlt("bot_config_widget_action_label") }}
                        </div>
                      </div>
                      <hr class="greetings-line" />
                      <div v-if="bot_greetings.length > 0" class="">
                        <draggable
                          v-model="bot_greetings"
                          group="people"
                          @start="drag_greetings = true"
                          @end="drag_greetings = false"
                          v-bind="dragOptionsGreetings"
                          handle=".handle"
                        >
                          <transition-group
                            type="transition"
                            :name="!drag_greetings ? 'flip-list' : null"
                            :key="greetings_key"
                          >
                            <div
                              class="form-group"
                              style="display: flex; cursor: pointer; margin: 8px 0 12px;"
                              v-for="greeting in bot_greetings"
                              :key="greeting.id"
                            >
                              <input
                                type="text"
                                class="form-control col-sm-9 ml-1 custom-input"
                                :id="greeting.id"
                                style="
                                  padding-left: 12px;
                                  font-size: 15px;
                                "
                                @click="reset_cursor_position"
                                v-model="greeting.text"
                                required
                                :placeholder="tlt('greeting_text')"
                                @focusout="greeting_emoji_off(greeting.id)"
                                @focusin="greeting_emoji_on(greeting.id)"
                                @focus="reset_cursor_position"
                              />
                              <div>
                                <emoji-picker
                                  @emoji="append($event, greeting.id)"
                                  :search="search"
                                  style="position: relative; top: 4px; right: 30px;"
                                >
                                  <div
                                    :id="'emoji_' + greeting.id"
                                    style="opacity:0"
                                    class="emoji-invoker"
                                    slot="emoji-invoker"
                                    slot-scope="{
                                      events: { click: clickEvent }
                                    }"
                                    @click.stop="clickEvent"
                                  >
                                    <svg
                                      height="24"
                                      viewBox="0 0 24 24"
                                      width="24"
                                      xmlns="http://www.w3.org/2000/svg"
                                    >
                                      <path d="M0 0h24v24H0z" fill="none" />
                                      <path
                                        d="M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8zm3.5-9c.83 0 1.5-.67 1.5-1.5S16.33 8 15.5 8 14 8.67 14 9.5s.67 1.5 1.5 1.5zm-7 0c.83 0 1.5-.67 1.5-1.5S9.33 8 8.5 8 7 8.67 7 9.5 7.67 11 8.5 11zm3.5 6.5c2.33 0 4.31-1.46 5.11-3.5H6.89c.8 2.04 2.78 3.5 5.11 3.5z"
                                      />
                                    </svg>
                                  </div>
                                  <div
                                    slot="emoji-picker"
                                    slot-scope="{ emojis, insert, display }"
                                  >
                                    <div
                                      class="emoji-picker"
                                      :style="{
                                        top: display.y + 'px',
                                        left: display.x + 'px'
                                      }"
                                    >
                                      <div class="emoji-picker__search">
                                        <input
                                          type="text"
                                          v-model="search"
                                          :placeholder="tlt('search')"
                                          v-focus
                                        />
                                      </div>
                                      <div>
                                        <div
                                          v-for="(emojiGroup,
                                          category) in emojis"
                                          :key="category"
                                        >
                                          <h5>{{ category }}</h5>
                                          <div class="emojis">
                                            <span
                                              v-for="(emoji,
                                              emojiName) in emojiGroup"
                                              :key="emojiName"
                                              @click="insert(emoji)"
                                              :title="emojiName"
                                              >{{ emoji }}</span
                                            >
                                          </div>
                                        </div>
                                      </div>
                                    </div>
                                  </div>
                                </emoji-picker>
                              </div>
                              <div
                                class="col-sm-2 p-0 mx-auto my-auto"
                                style="text-align: end; margin-right: 15px !important;"
                              >
                                <i
                                  class="fas fa-arrows-alt my-auto pl-0 handle"
                                  style="cursor: pointer"
                                  title="Drag to Change Order"
                                  v-if="bot_greetings.length != 1"
                                ></i>
                                <!-- float: right;
                                    margin-right: 1%; -->
                                <i
                                  style="
                                    font-size: 16px;
                                    cursor: pointer;
                                  "
                                  @click="delete_greeting(greeting.id)"
                                  class="fa ml-auto pl-2"
                                  title="Delete Greeting"
                                  >&#xf1f8;</i
                                >

                                <label
                                  title="Visible on Bot"
                                  class="switch col-sm-1 my-auto"
                                  style="margin-left: 8px !important; cursor: pointer; bottom: 2px;"
                                >
                                  <input
                                    type="checkbox"
                                    :id="greeting.id"
                                    v-model="greeting.visible"
                                    :value="greeting.id"
                                    @change="
                                      check_active_btn_for_greeting(
                                        greeting.id
                                      )
                                    "
                                  />
                                  <span
                                    class="slider round greeting-slider"
                                    style="border-radius: 50px;width: 40px;"
                                  ></span>
                                </label>
                              </div>
                            </div>
                          </transition-group>
                        </draggable>
                      </div>
                      <hr style="margin: 0px !important;" />
                      <div
                        class="form-group"
                        style="margin-top: 10px; margin-bottom: 10px;"
                      >
                        <p class="label1 mb-0" style="padding-left: 5px;">
                          {{ tlt("bot_config_add_greeting") }}
                          <button
                            type="button"
                            style="
                            cursor: pointer;
                            border: none;
                            background: transparent url('@portal/assets/img/plus.png')
                              0% 0% no-repeat padding-box;
                          "
                            @click="add_bot_greetings"
                          >
                            <img src="/img/black_plus.png" alt="" />
                          </button>
                          <!-- <button
                          type="button"
                          class="save_node_button"
                          style="height: 29px; padding: 0px 10px; float: unset; margin-left: 15px;"
                          @click="add_bot_greetings"
                        >
                          <svg
                            xmlns="http://www.w3.org/2000/svg"
                            width="14"
                            height="13.997"
                            viewBox="0 0 14 13.997"
                          >
                            <path
                              id="Union_13"
                              data-name="Union 13"
                              d="M-12684,2058v-5h-5a1,1,0,0,1-1-1,1,1,0,0,1,1-1h5v-5a1,1,0,0,1,1-1,1,1,0,0,1,1,1v5h5a1,1,0,0,1,1,1,1,1,0,0,1-1,1h-5v5a1,1,0,0,1-1,1A1,1,0,0,1-12684,2058Z"
                              transform="translate(12690.001 -2045.002)"
                              fill="#fff"
                            />
                          </svg>
                        </button> -->
                        </p>
                        <div
                          class="dash-modal"
                          style="float: right; margin-top: -38px;"
                        >
                          <div
                            class="card-act text-right mt-0 py-0 border-top-0"
                          >
                            <button
                              v-if="file_label !== 'Choose file'"
                              type="submit"
                              class="darkblue-btn"
                              id="widget_title_save"
                            >
                            {{tlt('save_btn')}}
                            </button>
                          </div>
                        </div>
                        <div
                          class="dash-modal"
                          style="float: right; margin-top: -38px;"
                        >
                          <!-- margin-top: -28px; margin-right: 4px; -->
                          <div
                            class="card-act text-right mt-0 py-0 border-top-0"
                          >
                          <button
                              v-if="file_label == 'Choose file'"
                              type="submit"
                              class="darkblue-btn"
                              id="widget_title_save"
                            >
                          {{tlt('save_btn')}}
                          </button>
                        </div>
                      </div>
                    </div>
                  </div> 
                    <div
                      class="form-group"
                      style="margin-top: 1.3rem !important; margin-bottom: 0.3rem !important;"
                    >
                      <h6 class="label1">
                        {{ tlt("bot_config_add_btns") }}
                        <!-- <button
                          type="button"
                          class="save_node_button"
                          style="height: 29px; padding: 0px 10px"
                          @click="add_buttons_for_widget"
                        >
                          <svg
                            xmlns="http://www.w3.org/2000/svg"
                            width="14"
                            height="13.997"
                            viewBox="0 0 14 13.997"
                          >
                            <path
                              id="Union_13"
                              data-name="Union 13"
                              d="M-12684,2058v-5h-5a1,1,0,0,1-1-1,1,1,0,0,1,1-1h5v-5a1,1,0,0,1,1-1,1,1,0,0,1,1,1v5h5a1,1,0,0,1,1,1,1,1,0,0,1-1,1h-5v5a1,1,0,0,1-1,1A1,1,0,0,1-12684,2058Z"
                              transform="translate(12690.001 -2045.002)"
                              fill="#fff"
                            />
                          </svg>
                        </button> -->
                      </h6>
                    </div>
                    <div
                      class="custom-box box-animation pt-2 px-2"
                      style="padding-right: 0.2rem !important;"
                    >
                      <!-- ScrollStyle buttons-scrollbar -->
                      <draggable
                        class="col-sm-12 pl-3"
                        style="padding-right:0.8rem !important"
                        v-model="widget_buttons_details"
                        group="people-2"
                        @start="drag_buttons = true"
                        @end="drag_buttons = false"
                        v-bind="dragOptionsButtons"
                        handle=".handle"
                      >
                        <transition-group
                          class="row"
                          type="transition"
                          :name="!drag_buttons ? 'flip-list' : null"
                          :key="buttons_key"
                        >
                          <div
                            class="col-sm-6 p-0"
                            v-for="button in widget_buttons_details"
                            :key="button.id"
                          >
                            <div class="mr-2 mb-2 custom-box px-2 pt-2">
                              <div
                                class="form-group"
                                style="margin-bottom: 15px;"
                              >
                                <label>{{
                                  tlt("bot_config_add_btns_title")
                                }}</label>
                                <label
                                  title="Visible on Bot"
                                  class="switch col-sm-1"
                                  style="margin-top:0px;float: right; cursor: pointer"
                                >
                                  <input
                                    type="checkbox"
                                    v-model="button.visible"
                                    id="email_required_id"
                                    @change="
                                      check_one_greeting_enabled(button.id)
                                    "
                                  />
                                  <span
                                    class="slider round"
                                    style="border-radius: 50px; left: -9px;"
                                  ></span>
                                </label>
                                <i
                                  style="
                                        font-size: 16px;
                                        float: right;
                                        margin-right: 5%;
                                        cursor: pointer;
                                      "
                                  @click="delete_widget_button(button)"
                                  class="fa ml-auto"
                                  >&#xf1f8;</i
                                >
                                <i
                                  class="fas fa-arrows-alt ml-auto pr-1 handle"
                                  style="float: right; cursor: pointer"
                                  v-show="widget_buttons_details.length != 1"
                                  title="Drag to Change Order"
                                ></i>
                                <input
                                  type="text"
                                  class="form-control form-text custom-input"
                                  :id="button.id"
                                  name="form-input"
                                  style="
                                        padding-left: 12px;
                                      "
                                  v-model="button.title"
                                  :placeholder="tlt('btn_title')"
                                  required
                                  @click="reset_cursor_position"
                                  @focusout="button_emoji_off(button.id)"
                                  @focusin="button_emoji_on(button.id)"
                                  @focus="reset_cursor_position"
                                />
                                <div>
                                  <emoji-picker
                                    @emoji="
                                      append_on_title($event, button.id)
                                    "
                                    :search="search"
                                    style="position: absolute; top: 33px; right: 5px;"
                                  >
                                    <div
                                      :id="'emoji_title_' + button.id"
                                      style="opacity:0"
                                      class="emoji-invoker"
                                      slot="emoji-invoker"
                                      slot-scope="{
                                        events: { click: clickEvent }
                                      }"
                                      @click.stop="clickEvent"
                                    >
                                      <svg
                                        height="24"
                                        viewBox="0 0 24 24"
                                        width="24"
                                        xmlns="http://www.w3.org/2000/svg"
                                      >
                                        <path d="M0 0h24v24H0z" fill="none" />
                                        <path
                                          d="M11.99 2C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8zm3.5-9c.83 0 1.5-.67 1.5-1.5S16.33 8 15.5 8 14 8.67 14 9.5s.67 1.5 1.5 1.5zm-7 0c.83 0 1.5-.67 1.5-1.5S9.33 8 8.5 8 7 8.67 7 9.5 7.67 11 8.5 11zm3.5 6.5c2.33 0 4.31-1.46 5.11-3.5H6.89c.8 2.04 2.78 3.5 5.11 3.5z"
                                        />
                                      </svg>
                                    </div>
                                    <div
                                      slot="emoji-picker"
                                      slot-scope="{ emojis, insert, display }"
                                    >
                                      <div
                                        class="emoji-picker"
                                        :style="{
                                          top: display.y + 'px',
                                          left: display.x + 'px'
                                        }"
                                      >
                                        <div class="emoji-picker__search">
                                          <input
                                            type="text"
                                            v-model="search"
                                            :placeholder="tlt('search')"
                                            v-focus
                                          />
                                        </div>
                                        <div>
                                          <div
                                            v-for="(emojiGroup,
                                            category) in emojis"
                                            :key="category"
                                          >
                                            <h5>{{ category }}</h5>
                                            <div class="emojis">
                                              <span
                                                v-for="(emoji,
                                                emojiName) in emojiGroup"
                                                :key="emojiName"
                                                @click="insert(emoji)"
                                                :title="emojiName"
                                                >{{ emoji }}</span
                                              >
                                            </div>
                                          </div>
                                        </div>
                                      </div>
                                    </div>
                                  </emoji-picker>
                                </div>
                              </div>
                              <div class="mb-2 form-group">
                                <label>{{
                                  tlt("bot_config_add_btns_label")
                                }}</label>
                                <multiselect
                                  v-model="button.value"
                                  :options="intentlist"
                                  :searchable="true"
                                  :close-on-select="true"
                                  :show-labels="false"
                                  :disabled="button.disabled === true"
                                  open-direction="top"
                                  :max-height="150"
                                >
                                  <!-- <span>{{ button.intent }}</span> -->
                                </multiselect>
                              </div>

                              <div class="form-group ml-auto mt-auto mb-auto">
                                <!-- <button type="button" class="save_node_button" style="margin-left: 3%;height: 39px;padding-top: 0px;padding-left: 10px;padding-right: 10px;padding-bottom: 0px;background: #F23D3D;border: solid 1px #F23D3D;" @click="delete_widget_button(index)">
                              <svg xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 14 14">
                                  <path
                                  id="trash-can-outline"
                                  d="M8.375,3v.778H4V5.333h.875V15.444A1.661,1.661,0,0,0,6.625,17h8.75a1.661,1.661,0,0,0,1.75-1.556V5.333H18V3.778H13.625V3H8.375M6.625,5.333h8.75V15.444H6.625V5.333m1.75,1.556v7h1.75v-7H8.375m3.5,0v7h1.75v-7Z"
                                  transform="translate(-4 -3)"
                                  fill="#fff"
                                  />
                              </svg>
                            </button> -->
                              </div>
                            </div>
                          </div>
                        </transition-group>
                      </draggable>
                      <hr style="margin: 0px 0px" />
                      <div
                        class="form-group"
                        style="margin-top: 10px; margin-bottom: 10px;"
                      >
                        <p class="label1 mb-0">
                          {{ tlt("bot_config_add_btns_addbtn") }}
                          <button
                            type="button"
                            style="
                              cursor: pointer;
                              border: none;
                              background: transparent url('@portal/assets/img/plus.png')
                                0% 0% no-repeat padding-box;
                            "
                            @click="add_buttons_for_widget"
                          >
                            <img src="/img/black_plus.png" alt="" />
                          </button>
                          <!-- <button
                            type="button"
                            class="save_node_button"
                            style="height: 29px; padding: 0px 10px; float: unset; margin-left: 15px;"
                            @click="add_buttons_for_widget"
                          >
                            <svg
                              xmlns="http://www.w3.org/2000/svg"
                              width="14"
                              height="13.997"
                              viewBox="0 0 14 13.997"
                            >
                              <path
                                id="Union_13"
                                data-name="Union 13"
                                d="M-12684,2058v-5h-5a1,1,0,0,1-1-1,1,1,0,0,1,1-1h5v-5a1,1,0,0,1,1-1,1,1,0,0,1,1,1v5h5a1,1,0,0,1,1,1,1,1,0,0,1-1,1h-5v5a1,1,0,0,1-1,1A1,1,0,0,1-12684,2058Z"
                                transform="translate(12690.001 -2045.002)"
                                fill="#fff"
                              />
                            </svg>
                          </button> -->
                        </p>
                        <div class="dash-modal dash-modal-save-btn">
                          <div
                            class="card-act text-right mt-0 py-0 border-top-0"
                          >
                            <button
                                v-if="file_label == 'Choose file'"
                                type="submit"
                                class="darkblue-btn"
                                id="widget_title_save"
                                style=" "
                              >
                              {{tlt('save_btn')}}
                            </button>
                          </div>
                        </div>
                        <div class="dash-modal dash-modal-save-btn">
                          <div
                            class="card-act text-right mt-0 py-0 border-top-0"
                          >
                            <button
                              v-if="file_label != 'Choose file'"
                              type="submit"
                              class="darkblue-btn"
                              id="widget_title_save_id"
                              style=""
                            >
                            {{tlt('save_btn')}}
                            </button> 
                          </div>
                        </div>
                      </div>
                    </div>
                    <div
                      class="form-group"
                      style="margin-top: 1.3rem !important; margin-bottom: 0.3rem !important;"
                    >
                      <h6 class="label1">
                        {{tlt('confusion_message_heading')}}
                      </h6>
                    </div>
                    <div
                      class="custom-box box-animation pt-2 px-2"
                      style="padding-right: 0.2rem !important;"
                    >
                      <vue-editor
                        v-model="bot_styling.is_confusion_msg.text"
                        :editorToolbar="customToolbar"
                      ></vue-editor>
                      <div class="col-sm-12 pr-2" style="text-align:right">
                        <div
                          class="card-act"
                          style="text-align: end; padding-top: 9px;"
                        >
                          <button
                            type="submit"
                            class="darkblue-btn mt-0"
                            id="widget_title_save_id"
                          >
                           {{tlt('save_btn')}}
                          </button>
                        </div>
                      </div>
                    </div>
                  </form>
                  <form @submit.prevent="save_language_chatbot">
                    <div class="form-group" style="margin-top: 1.3rem !important; margin-bottom: 0.3rem !important;">
                      <h6 class="label1">
                        {{tlt('chatbot_default_heading')}}
                      </h6>
                    </div> 
                    <div class="custom-box box-animation pt-2 px-2" style="padding-right: 0.2rem !important;">
                        <div class="col-sm-12 pr-2" style="">
                          <div class="form-group" style="">
                            <p class="label1">
                              {{tlt('chatbot_default_lang')}}
                            </p>
                            <div class="form-group mb-0">
                              <multiselect
                                v-model="language_code"
                                :options="country_list"
                                :searchable="true"
                                :close-on-select="true"
                                :taggable="false"
                                :multiple="false"
                                :placeholder="tlt('Country')"
                                :max-height="200"
                                track-by="display_name"
                                label="display_name"
                                :allow-empty="false"
                              >
                              </multiselect>
                            </div>
                          </div>
                          <div class="col-sm-12 pr-2" style="text-align:right">
                            <div class="card-act" style="text-align: end; padding-top: 9px;">
                              <button
                                type="submit"
                                class="darkblue-btn mt-0"
                                id="widget_title_save_id"
                              >
                                {{tlt('save_btn')}}
                              </button>
                            </div>
                          </div>  
                        </div>
                    </div>                                         
                  </form> 
                  <form @submit.prevent="upload_image">
                    <div
                      class="form-group"
                      style="margin-top: 1.3rem !important; margin-bottom: 0.3rem !important;"
                    >
                      <h6 class="label1">
                        {{tlt('widget_icon_heading')}}
                      </h6>
                    </div>
                    <div
                      class="custom-box box-animation pt-2 px-2"
                      style="padding-right: 0.2rem !important;"
                    >
                      <div class="col-sm-12 pr-2" style="">
                          <div class="form-group" style="">
                            <p class="label1">
                              {{tlt('widget_icon_label1')}}
                            </p>
                            <div style="display: flex; margin: 1%">
                              <div class="radio">
                                <label style="vertical-align: text-top">
                                  <input
                                    type="radio"
                                    value="image"
                                    name="widget_icon_type"
                                    v-model="widget_icon_type"
                                  />
                                  <span class="icn" id="radio"></span>
                                  {{tlt('widget_icon_img_label')}}
                                </label>
                              </div>
                              <div class="radio" style="margin-left: 2%">
                                <label style="vertical-align: text-top">
                                  <input
                                    type="radio"
                                    value="none"
                                    name="widget_icon_type"
                                    v-model="widget_icon_type"
                                  />
                                  <span class="icn" id="radio"></span>
                                  {{tlt('widget_icon_default_label')}}
                                </label>
                              </div>
                            </div>
                            <!-- <div class="radio" style="margin-left: 2%">
                              <label style="vertical-align: text-top">
                                <input
                                  type="radio"
                                  value="none"
                                  name="widget_icon_type"
                                  v-model="widget_icon_type"
                                />
                                <span class="icn" id="radio"></span>
                                Cense default
                              </label>
                            </div> -->
                          </div>
                          <div class="custom-file">
                            <input
                              type="file"
                              class="custom-file-input custom-input"
                              @change="fileinput4"
                              id="inputWidgetFile01"
                              aria-describedby="inputGroupFileAddon01"
                              :disabled="defaul_widget_icon == true"
                            />
                            <label
                              style="
                                  font-weight: 400;
                                  line-height: 9px;
                                  padding-left: 15px;
                                  overflow: hidden;
                                  white-space: nowrap;
                                "
                              class="custom-file-label form-control"
                              for="file"
                              id="inputWidgetFileLabel01"
                              >{{ file_label_4 }}</label
                            >
                          </div>
                          <div class="form-group" style="">
                            <p class="label1">
                              {{tlt('widget_icon_label2')}}
                            </p>
                            <div class="custom-file">
                              <input
                                type="file"
                                class="custom-file-input custom-input"
                                @change="fileinput5"
                                id="inputWidgetFile02"
                                :disabled="(defaul_widget_icon == true)"
                                aria-describedby="inputGroupFileAddon01"
                              />
                              <label
                                style="
                                  font-weight: 400;
                                  line-height: 9px;
                                  padding-left: 15px;
                                  overflow: hidden;
                                  white-space: nowrap;
                                "
                              class="custom-file-label form-control"
                              for="file"
                              id="inputWidgetFileLabel02"
                              >{{ file_label_5 }}</label
                            >
                          </div>
                        </div>
                        <div
                          class="card-act"
                          style="text-align: end; padding-top: 9px;"
                        >
                          <button
                            type="submit"
                            class="darkblue-btn mt-0"
                            id="widget_title_save_id"
                          >
                            {{tlt('save_btn')}}
                          </button>
                        </div>
                      </div>
                    </div>
                  </form>
                </div>
                <!-- <hr /> -->
                <div class="vr"></div>
                <div class="col-sm-6">
                  <div class="card-act d-flex flex-wrap">
                    <h5 class="col-sm-6 pl-0">
                      {{ tlt("bot_config_bot_style_header") }}
                    </h5>
                    <!-- <a href="#preview_bot_visible" data-toggle="modal"
                      >Preview Bot
                    </a> -->
                  </div>
                  <div class="container">
                    <div
                      class="modal modal_outer right_modal fade"
                      id="preview_bot_visible"
                      role="dialog"
                      aria-labelledby="preview_bot_visible"
                      aria-hidden="true"
                    >
                      <div
                        class="modal-dialog modal-dialog-centered"
                        role="document"
                      >
                        <div class="modal-content">
                          <div
                            class="modal-body"
                            style="padding-left:0px !important;padding-right:0px !important;"
                          >
                            <button
                              type="button"
                              class="close"
                              data-dismiss="modal"
                              aria-label="Close"
                              style="padding-right:20px !important;"
                            >
                              <img src="/img/close-icn.png" alt />
                            </button>
                            <br />
                            <template v-if="load_bot_preview">
                              <div style="overflow: hidden">
                                <response-bot
                                  v-bind:isPreviewBot="true"
                                ></response-bot>
                              </div>
                            </template>
                          </div>
                        </div>
                      </div>
                    </div>
                  </div>
                  <form @submit.prevent="upload_image">
                    <!-- Header styling -->
                    <h6 class="label1">
                      {{ tlt("bot_style_header_subhead") }}
                    </h6>
                    <div class="custom-box box-animation pt-2 px-2">
                      <div class="row col-sm-12 p-0 m-0">
                        <div class="col-sm-12 pl-0">
                          <div class="form-group" style="">
                            <p class="label1">
                              {{ tlt("bot_config_bot_style_logo_label") }}
                            </p>
                            <div class="custom-file">
                              <input
                                type="file"
                                class="custom-file-input custom-input"
                                @change="fileinput"
                                id="inputGroupFile01"
                                aria-describedby="inputGroupFileAddon01"
                              />
                              <label
                                style="
                                  font-weight: 400;
                                  line-height: 9px;
                                  padding-left: 15px;
                                  overflow: hidden;
                                  white-space: nowrap;
                                "
                                class="custom-file-label form-control"
                                for="file"
                                id="miscellaneous-custom-file-input"
                                >{{ file_label }}</label
                              >
                            </div>
                          </div>
                        </div>
                        <div class="col-sm-6 pl-0">
                          <div class="form-group" style="">
                            <p class="label1">
                              {{ tlt("bot_config_bot_style_bg_color_label") }}
                              <img
                                title="Reset Value to Default"
                                :src="reset_icon_path"
                                alt=""
                                style="float: right; cursor: pointer"
                                @click="
                                  reset_to_default('bot_header_background')
                                "
                              />
                            </p>
                            <input
                              class="form-control custom-input"
                              type="color"
                              id="bot_header_background"
                              v-model.trim="bot_header_background"
                            />
                          </div>
                        </div>
                        <div class="col-sm-6 pl-0">
                          <div class="form-group" style="">
                            <p class="label1">
                              {{
                                tlt("bot_config_bot_style_head_align_label")
                              }}
                              <img
                                title="Reset Value to Default"
                                :src="reset_icon_path"
                                alt=""
                                style="float: right; cursor: pointer"
                                @click="
                                  reset_to_default('bot_header_alignment')
                                "
                              />
                            </p>
                            <multiselect
                              :close-on-select="true"
                              :taggable="false"
                              :multiple="false"
                              :options="bot_header_alignment_options"
                              :placeholder="tlt('alignment')"
                              v-model="bot_header_alignment"
                              label="name"
                              track_by="value"
                              style="height: 40px"
                            ></multiselect>
                          </div>
                        </div>
                      </div>
                      <hr class="my-0" />
                      <div class="dash-modal">
                        <div class="card-act text-right mt-0 py-0 border-top-0">
                          <button
                            type="submit"
                            class="darkblue-btn"
                          >
                            {{tlt('save_btn')}}
                          </button>
                        </div>
                      </div>
                    </div>
                    <!-- Bot styling -->
                    <h6 class="label1 mt-3">
                      {{ tlt("bot_config_body_style_subhead") }}
                    </h6>
                    <div class="custom-box box-animation pt-2 px-2">
                      <div class="row col-sm-12 p-0 m-0">
                        <div class="col-sm-12 pl-0">
                          <div class="form-group" style="">
                            <p class="label1">
                              {{ tlt("bot_body_style_bg_img_label") }}
                            </p>
                            <div style="display: flex; margin: 1%">
                              <div class="radio">
                                <label style="vertical-align: text-top">
                                  <input
                                    type="radio"
                                    value="image"
                                    name="bot_background_type"
                                    v-model="bot_background_type"
                                  />
                                  <span class="icn" id="radio"></span>
                                  {{ tlt("bot_body_style_choose_img_label") }}
                                </label>
                              </div>
                              <div class="radio" style="margin-left: 2%">
                                <label style="vertical-align: text-top">
                                  <input
                                    type="radio"
                                    value="none"
                                    name="bot_background_type"
                                    v-model="bot_background_type"
                                  />
                                  <span class="icn" id="radio"></span>
                                  {{ tlt("bot_body_style_no_bg_label") }}
                                </label>
                              </div>
                            </div>

                            <div
                              class="custom-file"
                              v-if="bot_background_type == 'image'"
                            >
                              <input
                                type="file"
                                class="custom-file-input custom-input"
                                @change="fileinput3"
                                id="inputGroupFile03"
                                aria-describedby="inputGroupFileAddon03"
                              />
                              <label
                                style="
                                  font-weight: 400;
                                  line-height: 9px;
                                  padding-left: 15px;
                                "
                                class="custom-file-label form-control"
                                for="file"
                                id="miscellaneous-custom-file-input"
                                >{{ file_label_3 }}</label
                              >
                            </div>
                          </div>
                        </div>
                        <div class="col-sm-12 pl-0 my-0">
                          <div class="form-group text-box-margin" style="">
                            <p class="label1">
                              {{ tlt("bot_body_style_icon_label") }}
                            </p>

                            <div class="custom-file">
                              <input
                                type="file"
                                class="custom-file-input custom-input"
                                @change="fileinput2"
                                id="inputGroupFile02"
                                aria-describedby="inputGroupFileAddon02"
                              />
                              <label
                                style="
                                  font-weight: 400;
                                  line-height: 9px;
                                  padding-left: 15px;
                                  overflow: hidden;
                                  white-space: nowrap;
                                "
                                class="custom-file-label form-control"
                                for="file"
                                id="miscellaneous-custom-file-input"
                                >{{ file_label_2 }}</label
                              >
                            </div>
                          </div>
                        </div>
                        <div class="col-sm-6 pl-0 my-0">
                          <div class="form-group text-box-margin" style="">
                            <p class="label1">
                              {{
                                tlt("widget_icon_color_bg")
                              }}
                              <img
                                title="Reset Value to Default"
                                :src="reset_icon_path"
                                alt=""
                                style="float: right; cursor: pointer"
                                @click="
                                  reset_to_default('bot_styling.bot_theme')
                                "
                              />
                            </p>
                            <input
                              class="form-control custom-input"
                              type="color"
                              id="bot_theme"
                              name="bot_theme"
                              v-model.trim="bot_styling.bot_theme"
                            />
                          </div>
                        </div>
                        <div class="col-sm-6 pl-0 my-0">
                          <div class="form-group text-box-margin" style="">
                            <p class="label1">
                              {{ tlt("bot_body_style_user_msg_bg_label") }}
                              <img
                                title="Reset Value to Default"
                                :src="reset_icon_path"
                                alt=""
                                style="float: right; cursor: pointer"
                                @click="
                                  reset_to_default(
                                    'bot_styling.user_response_bg_color'
                                  )
                                "
                              />
                            </p>
                            <input
                              class="form-control custom-input"
                              type="color"
                              id="user_response_bg_color"
                              name="user_response_bg_color"
                              v-model.trim="
                                bot_styling.user_response_bg_color
                              "
                            />
                          </div>
                        </div>
                        <div class="col-sm-6 pl-0 my-0">
                          <div class="form-group text-box-margin" style="">
                            <p class="label1">
                              {{
                                tlt("bot_body_style_bot_response_bg_label")
                              }}
                              <img
                                title="Reset Value to Default"
                                :src="reset_icon_path"
                                alt=""
                                style="float: right; cursor: pointer"
                                @click="
                                  reset_to_default(
                                    'bot_styling.bot_response_bg_color'
                                  )
                                "
                              />
                            </p>
                            <input
                              class="form-control custom-input"
                              type="color"
                              id="bot_response_bg_color"
                              name="bot_response_bg_color"
                              v-model.trim="bot_styling.bot_response_bg_color"
                            />
                          </div>
                        </div>
                        <div class="col-sm-6 pl-0 my-0">
                          <div class="form-group text-box-margin" style="">
                            <p class="label1">
                              {{ tlt("bot_body_style_deliver_note_label") }}
                              <img
                                title="Reset Value to Default"
                                :src="reset_icon_path"
                                alt=""
                                style="float: right; cursor: pointer"
                                @click="
                                  reset_to_default(
                                    'bot_styling.delivery_note_color'
                                  )
                                "
                              />
                            </p>
                            <input
                              class="form-control custom-input"
                              type="color"
                              id="delivery_note_color"
                              name="delivery_note_color"
                              v-model.trim="bot_styling.delivery_note_color"
                            />
                          </div>
                        </div>
                        <div
                          class="col-sm-6 form-group pl-0"
                          style="margin-top: 8px; margin-bottom: 12px !important;"
                        >
                          <div class="d-flex" style="margin-top: 5px;">
                            <label class="label1">{{
                              tlt("bot_body_style_p_by_cense_label")
                            }}</label>
                            <label
                              class="switch ml-auto my-0"
                              style="margin-top: 0px; margin-right: 10px;"
                            >
                              <input
                                type="checkbox"
                                v-model="bot_styling.is_powered_by_cense"
                                class=""
                                id="is_powered_by_cense"
                                :disabled="is_Premium != 'Premium'"
                              />
                              <span
                                :style="
                                  is_Premium === 'Premium'
                                    ? 'cursor: pointer;'
                                    : 'cursor: not-allowed;'
                                "
                                title="options available only for premium user"
                                class="slider round"
                                style="border-radius: 50px; min-width: 38px; width: max-content;"
                              ></span>
                            </label>
                          </div>
                          {{ tlt("bot_body_style_tagline_label") }}
                        </div>
                        <div
                          class="col-sm-6 form-group pl-0"
                          style="margin-top: 1rem !important;"
                        >
                          <div class="d-flex">
                            <label class="mb-0">
                              {{
                                tlt("bot_body_style_open_by_default_label")
                              }}
                            </label>
                            <label
                              class="switch ml-auto my-0"
                              style="margin-top: 0px; margin-right: 30px;"
                            >
                              <input
                                type="checkbox"
                                v-model="bot_styling.bot_open_by_default"
                                id="bot_open_by_default"
                              />
                              <span
                                class="slider round"
                                style="border-radius: 50px; min-width: 38px; width: max-content;"
                              ></span>
                            </label>
                          </div>
                          <!-- <br> -->
                          ({{ tlt("bot_body_style_bot_load_on_page_label") }})
                        </div>
                        <div
                          class="col-sm-6 form-group pl-0"
                          style="margin-top: 1rem !important;"
                        >
                          <div class="d-flex">
                            <label class="mb-0">
                              {{
                                tlt("bot_body_style_show_on_website_label")
                              }}
                            </label>
                            <label
                              class="switch ml-auto my-0"
                              style="margin-top: 0px; margin-right: 10px;"
                            >
                              <input
                                type="checkbox"
                                v-model="bot_styling.bot_shown_on_website"
                                id="bot_shown_on_website"
                              />
                              <span
                                class="slider round"
                                style="border-radius: 50px; min-width: 38px; width: max-content;"
                              ></span>
                            </label>
                          </div>
                          ({{
                            tlt("bot_body_style_bot_shown_on_website_label")
                          }})
                        </div>
                        <div
                          class="col-sm-6 form-group pl-0"
                          style="margin-top: 1rem !important;"
                        >
                          <div class="d-flex">
                            <label class="mb-0">
                              {{
                                tlt("bot_body_style_show_bot_history_label")
                              }}
                            </label>
                            <label
                              class="switch ml-auto my-0"
                              style="margin-top: 0px; margin-right: 26px;"
                            >
                              <input
                                type="checkbox"
                                v-model="bot_styling.show_bot_history"
                                id="show_bot_history"
                              />
                              <span
                                class="slider round"
                                style="border-radius: 50px; min-width: 38px; width: max-content;"
                              ></span>
                            </label>
                          </div>
                          {{ tlt("bot_body_style_chat_history_label") }}
                        </div>
                      </div>
                      <hr class="my-0" />
                      <div class="dash-modal">
                        <div class="card-act text-right mt-0 py-0 border-top-0">
                          <button
                            type="submit"
                            class="darkblue-btn"
                          >
                            {{tlt('save_btn')}}
                          </button>
                        </div>
                      </div>
                    </div>
                    <!-- Widget Font styling -->
                    <h6 class="label1 mb-2 mt-3">
                      {{ tlt("bot_config_font_style_subhead") }}
                    </h6>
                    <div class="custom-box box-animation pt-2 px-2">
                      <div class="form-group mb-0"></div>
                      <div class="d-flex">
                        <div class="row col-sm-12 p-0 m-0">
                          <div class="col-sm-6 pl-0">
                            <div class="form-group" style="">
                              <p class="label1">
                                {{ tlt("bot_config_font_style_label") }}
                                <img
                                  title="Reset Value to Default"
                                  :src="reset_icon_path"
                                  alt=""
                                  style="float: right; cursor: pointer"
                                  @click="reset_to_default('bot_font_style')"
                                />
                              </p>
                              <multiselect
                                :close-on-select="true"
                                :taggable="false"
                                :multiple="false"
                                :options="bot_font_options"
                                :placeholder="tlt('font')"
                                v-model="bot_font_style"
                                label="name"
                                track_by="value"
                                open-direction="top"
                                :max-height="150"
                              ></multiselect>
                            </div>
                          </div>
                          <div class="col-sm-6 pl-0">
                            <div class="form-group" style="">
                              <p class="label1">
                                {{ tlt("text_color_btn") }}
                                <img
                                  title="Reset Value to Default"
                                  :src="reset_icon_path"
                                  alt=""
                                  style="float: right; cursor: pointer"
                                  @click="
                                    reset_to_default('bot_font_color_buttons')
                                  "
                                />
                              </p>
                              <input
                                class="form-control custom-input"
                                type="color"
                                id="bot_font_color_buttons"
                                name="bot_font_color_buttons"
                                v-model.trim="bot_font_color_buttons"
                              />
                            </div>
                          </div>
                        </div>
                      </div>
                      <div class="row col-sm-12 p-0 m-0">
                        <div class="col-sm-6 pl-0">
                          <div class="form-group" style="">
                            <p class="label1">
                              {{ tlt("text_color_user_input") }}
                              <img
                                title="Reset Value to Default"
                                :src="reset_icon_path"
                                alt=""
                                style="float: right; cursor: pointer"
                                @click="
                                  reset_to_default('bot_font_color_sender')
                                "
                              />
                            </p>
                            <input
                              class="form-control custom-input"
                              type="color"
                              id="bot_font_color_sender"
                              name="bot_font_color_sender"
                              v-model.trim="bot_font_color_sender"
                            />
                          </div>
                        </div>
                        <div class="col-sm-6 pl-0">
                          <div class="form-group" style="">
                            <p class="label1">
                              {{ tlt("text_color_bot_output") }}
                              <img
                                title="Reset Value to Default"
                                :src="reset_icon_path"
                                alt=""
                                style="float: right; cursor: pointer"
                                @click="
                                  reset_to_default('bot_font_color_receiver')
                                "
                              />
                            </p>
                            <input
                              class="form-control custom-input"
                              type="color"
                              id="bot_font_color_receiver"
                              name="bot_font_color_receiver"
                              v-model.trim="bot_font_color_receiver"
                            />
                          </div>
                        </div>
                      </div>
                      <hr class="my-0" />
                      <div class="dash-modal">
                        <div class="card-act text-right mt-0 py-0 border-top-0">
                          <button
                            type="submit"
                            class="darkblue-btn"
                          >
                            {{tlt('save_btn')}}
                          </button>
                        </div>
                      </div>
                    </div>
                    <!-- Buttons Styling -->
                    <h6 class="label1 mt-3">
                      {{ tlt("bot_config_button_style_subhead") }}
                    </h6>
                    <div class="custom-box box-animation pt-2 px-2">
                      <div class="row col-sm-12 m-0 p-0">
                        <div class="col-sm-12 pl-0">
                          <div class="form-group" style="">
                            <p class="label1">
                              {{ tlt("font_style_alignment_label") }}
                              <img
                                title="Reset Value to Default"
                                :src="reset_icon_path"
                                alt=""
                                style="float: right; cursor: pointer"
                                @click="
                                  reset_to_default('bot_buttons_alignment')
                                "
                              />
                            </p>
                            <multiselect
                              :close-on-select="true"
                              :taggable="false"
                              :multiple="false"
                              :options="bot_buttons_alignment_options"
                              :placeholder="tlt('alignment')"
                              v-model="bot_buttons_alignment"
                              label="name"
                              track_by="value"
                            ></multiselect>
                          </div>
                        </div>
                        <div class="col-sm-6 pl-0">
                          <div class="form-group" style="">
                            <p class="label1">
                              {{ tlt("font_style_color_label") }}
                              <img
                                title="Reset Value to Default"
                                :src="reset_icon_path"
                                alt=""
                                style="float: right; cursor: pointer"
                                @click="
                                  reset_to_default('bot_styling.button_theme')
                                "
                              />
                            </p>
                            <input
                              class="form-control custom-input"
                              type="color"
                              id="button_theme"
                              name="button_theme"
                              v-model.trim="bot_styling.button_theme"
                            />
                          </div>
                        </div>
                        <div class="col-sm-6 pl-0 my-0">
                          <div class="form-group text-box-margin" style="">
                            <p class="label1">
                              {{ tlt("font_style_border_color_label") }}
                              <img
                                title="Reset Value to Default"
                                :src="reset_icon_path"
                                alt=""
                                style="float: right; cursor: pointer"
                                @click="
                                  reset_to_default(
                                    'bot_styling.button_border_theme'
                                  )
                                "
                              />
                            </p>
                            <input
                              class="form-control custom-input"
                              type="color"
                              id="button_border_theme"
                              name="button_border_theme"
                              v-model.trim="bot_styling.button_border_theme"
                            />
                          </div>
                        </div>
                        <div class="col-sm-6 pl-0">
                          <div class="form-group">
                            <p class="label1">
                              {{ tlt("font_style_h_spacing_label") }}
                              <img
                                title="Reset Value to Default"
                                :src="reset_icon_path"
                                alt=""
                                style="float: right; cursor: pointer"
                                @click="
                                  reset_to_default(
                                    'bot_styling.horizontal_spacing'
                                  )
                                "
                              />
                            </p>
                            <input
                              type="number"
                              style="height: 40px; padding-left: 3%"
                              class="form-control custom-input"
                              :placeholder="tlt('spacing_in_percent')"
                              required
                              min="0"
                              max="100"
                              v-model="bot_styling.horizontal_spacing"
                            />
                          </div>
                        </div>
                        <div class="col-sm-6 pl-0">
                          <div class="form-group">
                            <p class="label1">
                              {{ tlt("font_style_v_spacing_label") }}
                              <img
                                title="Reset Value to Default"
                                :src="reset_icon_path"
                                alt=""
                                style="float: right; cursor: pointer"
                                @click="
                                  reset_to_default(
                                    'bot_styling.vertical_spacing'
                                  )
                                "
                              />
                            </p>
                            <input
                              type="number"
                              style="height: 40px; padding-left: 3%"
                              class="form-control custom-input"
                              :placeholder="tlt('spacing_in_percent')"
                              min="0"
                              max="100"
                              required
                              v-model="bot_styling.vertical_spacing"
                            />
                          </div>
                        </div>
                        <hr />
                      </div>
                      <hr class="my-0" />
                      <div class="dash-modal">
                        <div class="card-act text-right mt-0 py-0 border-top-0">
                          <button
                            type="submit"
                            class="darkblue-btn"
                          >
                            {{tlt('save_btn')}}
                          </button>
                        </div>
                      </div>
                    </div>
                    <!-- Bot Position -->
                    <h6 class="label1 mt-3">
                      {{ tlt("bot_config_bot_position_subhead") }}
                    </h6>
                    <div
                      class="custom-box box-animation pt-2 px-2"
                      style="margin-bottom: 20px;"
                    >
                      <!-- <div class="form-group" style=""> -->
                      <!-- <img
                              title="Reset Value to Default"
                              :src="reset_icon_path"
                              alt=""
                              style="float: right; cursor: pointer"
                              @click="reset_to_default('bot_alignment')"
                            /> -->
                      <!-- <multiselect
                            :close-on-select="true"
                            :taggable="false"
                            :multiple="false"
                            :options="bot_alignment_options"
                            placeholder="Select Alignment"
                            v-model="bot_alignment"
                            label="name"
                            track_by="value"
                          ></multiselect> -->
                      <!-- </div> -->
                      <div class="d-flex">
                        <div class="col-sm-6 pl-0">
                          <div class="form-group">
                            <p class="label1">
                              {{ tlt("bot_position_h_pos_from_right_label") }}
                              <img
                                title="Reset Value to Default"
                                :src="reset_icon_path"
                                alt=""
                                style="float: right; cursor: pointer"
                                @click="
                                  reset_to_default('bot_horizontal_position')
                                "
                              />
                            </p>
                            <input
                              type="number"
                              style="height: 40px; padding-left: 3%"
                              class="form-control custom-input"
                              :placeholder="tlt('spacing_in_pixel')"
                              required
                              min="0"
                              max="32"
                              v-model="bot_horizontal_position"
                            />
                          </div>
                        </div>
                        <div class="col-sm-6 pl-0">
                          <div class="form-group">
                            <p class="label1">
                              {{
                                tlt("bot_position_v_pos_from_bottom_label")
                              }}
                              <img
                                title="Reset Value to Default"
                                :src="reset_icon_path"
                                alt=""
                                style="float: right; cursor: pointer"
                                @click="
                                  reset_to_default('bot_vertical_position')
                                "
                              />
                            </p>
                            <input
                              type="number"
                              style="height: 40px; padding-left: 3%"
                              class="form-control custom-input"
                              :placeholder="tlt('spacing_in_pixel')"
                              min="0"
                              max="150"
                              required
                              v-model="bot_vertical_position"
                            />
                          </div>
                        </div>
                      </div>
                      <hr class="my-0" />
                      <div class="dash-modal">
                        <div class="card-act text-right mt-0 py-0 border-top-0">
                          <button
                            type="submit"
                            class="darkblue-btn"
                          >
                            {{tlt('save_btn')}}
                          </button>
                        </div>
                      </div>
                    </div>
                  </form>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>
"},null]}