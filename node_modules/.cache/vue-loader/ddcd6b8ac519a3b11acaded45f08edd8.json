{"remainingRequest":"/home/vimalesh/CENSE/chatbot-portal/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/vimalesh/CENSE/chatbot-portal/src/portal/Chatbot/Dashboard/Integrations/Components/FacebookMessengerDetails.vue?vue&type=style&index=0&id=0899f693&scoped=true&lang=css&","dependencies":[{"path":"/home/vimalesh/CENSE/chatbot-portal/src/portal/Chatbot/Dashboard/Integrations/Components/FacebookMessengerDetails.vue","mtime":1655807120957},{"path":"/home/vimalesh/CENSE/chatbot-portal/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vimalesh/CENSE/chatbot-portal/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/vimalesh/CENSE/chatbot-portal/node_modules/@vue/cli-service/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/vimalesh/CENSE/chatbot-portal/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vimalesh/CENSE/chatbot-portal/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5kZWxldGUtY2FydC1pdGVtIHsKICBjdXJzb3I6IHBvaW50ZXI7Cn0KLmRlbGV0ZS1jYXJ0LWl0ZW0gc3ZnIDpob3ZlciB7CiAgY29sb3I6ICNmMjNkM2QgIWltcG9ydGFudDsKICBmaWxsOiAjZjIzZDNkICFpbXBvcnRhbnQ7Cn0KLmZiLWNvbm5lY3QtYnRuIHsKICBiYWNrZ3JvdW5kOiAjMDA2Y2ZmOwogIGJvcmRlcjogMXB4IHNvbGlkICMwMDZjZmY7CiAgY29sb3I6ICNmZmY7CiAgY3Vyc29yOiBwb2ludGVyOwogIHRyYW5zaXRpb246IGFsbCAuM3M7Cn0KLmZiLWNvbm5lY3QtYnRuOmFjdGl2ZSB7CiAgb3BhY2l0eTogLjUhaW1wb3J0YW50Owp9Ci5mYi1jb25uZWN0LWJ0bjpob3ZlciB7CiAgb3BhY2l0eTogLjghaW1wb3J0YW50Owp9Ci5mYi1idXR0b24gewogIHdpZHRoOiA0NSU7CiAgZGlzcGxheTogZmxleDsKICBiYWNrZ3JvdW5kOiAjM2I1OTk4OwogIGNvbG9yOiAjZmZmOwogIHBhZGRpbmc6IDEwcHggMjBweDsKICBib3JkZXItcmFkaXVzOiAxMHB4OwogIC13ZWJraXQtdHJhbnNpdGlvbjogb3BhY2l0eSAuM3M7CiAgdHJhbnNpdGlvbjogb3BhY2l0eSAuM3M7CiAgLXdlYmtpdC1ib3gtYWxpZ246IGNlbnRlcjsKICAtbXMtZmxleC1hbGlnbjogY2VudGVyOwogIGFsaWduLWl0ZW1zOiBjZW50ZXI7CiAgLXdlYmtpdC1iYWNrZmFjZS12aXNpYmlsaXR5OiBoaWRkZW47CiAgY3Vyc29yOiBwb2ludGVyOwogIC13ZWJraXQtdHJhbnNpdGlvbjogYWxsIC4zczsKICB0cmFuc2l0aW9uOiBhbGwgLjNzOwp9Ci5mYi1idXR0b246YWN0aXZlIHsKICBvcGFjaXR5OiAuNSFpbXBvcnRhbnQ7Cn0KLmZiLWJ1dHRvbjpob3ZlciB7CiAgb3BhY2l0eTogLjghaW1wb3J0YW50Owp9Ci5mYi1idXR0b24gLmljb24gewogIG1hcmdpbi1yaWdodDogMTBweDsKICB3aWR0aDogMTVweDsKICBoZWlnaHQ6IDI1cHg7Cn0KLmZiLWJ1dHRvbiAuaWNvbiBzdmcgewogIG1heC13aWR0aDogMTAwJTsKICBtYXgtaGVpZ2h0OiAxMDAlOwogIC1vLW9iamVjdC1maXQ6IGNvbnRhaW47CiAgb2JqZWN0LWZpdDogY29udGFpbjsKfQoubG9nb3V0LWJ1dHRvbiB7CiAgbWFyZ2luLWxlZnQ6IGF1dG87CiAgZGlzcGxheTogLXdlYmtpdC1ib3g7CiAgZGlzcGxheTogLW1zLWZsZXhib3g7CiAgZGlzcGxheTogZmxleDsKICBwYWRkaW5nOiAxMHB4IDIwcHg7CiAgYm9yZGVyLXJhZGl1czogMjBweDsKICBiYWNrZ3JvdW5kOiAjZjBmNGY3OwogIGNvbG9yOiAjOWJhNmIzOwogIHdpZHRoOiA5NnB4OwogIC13ZWJraXQtYm94LWFsaWduOiBjZW50ZXI7CiAgLW1zLWZsZXgtYWxpZ246IGNlbnRlcjsKICBhbGlnbi1pdGVtczogY2VudGVyOwogIC13ZWJraXQtYmFja2ZhY2UtdmlzaWJpbGl0eTogaGlkZGVuOwogIGN1cnNvcjogcG9pbnRlcjsKICAtd2Via2l0LXRyYW5zaXRpb246IGFsbCAuM3M7CiAgdHJhbnNpdGlvbjogYWxsIC4zczsKfQoubG9nb3V0LWJ1dHRvbjphY3RpdmUgewogIG9wYWNpdHk6IC41IWltcG9ydGFudDsKfQoubG9nb3V0LWJ1dHRvbjpob3ZlciB7CiAgb3BhY2l0eTogLjghaW1wb3J0YW50Owp9Ci5tZXNzZW5nZXItcGFnZXMgewogIHdpZHRoOiAxMDAlOwogIGJhY2tncm91bmQ6ICNmN2Y3Zjg7CiAgZGlzcGxheTogLXdlYmtpdC1ib3g7CiAgZGlzcGxheTogLW1zLWZsZXhib3g7CiAgZGlzcGxheTogZmxleDsKICAvKiAtd2Via2l0LWJveC1hbGlnbjogY2VudGVyOyAqLwogIC1tcy1mbGV4LWFsaWduOiBjZW50ZXI7CiAgYWxpZ24taXRlbXM6IGNlbnRlcjsKICBwYWRkaW5nOiAxMHB4IDE1cHg7CiAgYm9yZGVyLXJhZGl1czogNHB4OwogIG1hcmdpbi1ib3R0b206IDEwcHg7Cn0KLnRoaXJkLXBhcnR5LWxvZ28gewogIHdpZHRoOiAxNTBweDsKICBoZWlnaHQ6IDc1cHg7CiAgb2JqZWN0LWZpdDogY29udGFpbjsKfQoubXNnX19zcGFuIHsKICBwYWRkaW5nLWxlZnQ6IDFyZW07Cn0KLmNhcmQtYWN0IC5yZWQtYnRuIHsKICBmb250LXNpemU6IDE0cHg7CiAgY29sb3I6ICNmZmY7CiAgYmFja2dyb3VuZDogI2YyM2QzZDsKICBib3JkZXI6IHNvbGlkIDFweCAjZjIzZDNkOwogIHBhZGRpbmc6IDVweCAyMHB4OwogIGZvbnQtd2VpZ2h0OiA0MDA7CiAgbGluZS1oZWlnaHQ6IDIwcHg7CiAgZGlzcGxheTogaW5saW5lLWJsb2NrOwogIGJvcmRlci1yYWRpdXM6IDRweDsKICBjdXJzb3I6IHBvaW50ZXI7CiAgdGV4dC1hbGlnbjogY2VudGVyOwp9Ci5zd2l0Y2ggewogIG1hcmdpbi1sZWZ0OiAxcmVtOwp9Ci5jb2wtc20tM3sKICBtYXgtd2lkdGg6IDI0JTsKfQoucm93IHsKICAgIGRpc3BsYXk6IGZsZXg7CiAgICBmbGV4LXdyYXA6IHdyYXA7CiAgICBtYXJnaW4tcmlnaHQ6IC0ycHg7CiAgICBtYXJnaW4tbGVmdDogMTVweDsKfQo="},{"version":3,"sources":["FacebookMessengerDetails.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+cfile":"FacebookMessengerDetails.vue","sourceRoot":"src/portal/Chatbot/Dashboard/Integrations/Components","sourcesContent":["<template>\n  <div>\n    <div class=\"modal-body\">\n        <div class=\"modal-head d-flex align-items-center\">\n        <h3>{{tlt('messenger_setting_header')}}</h3>\n        </div>\n        <button\n        type=\"button\"\n        class=\"close\"\n        data-dismiss=\"modal\"\n        aria-label=\"Close\"\n        >\n        <img src=\"/img/close-icn.png\" alt />\n        </button>\n        <div>\n        <div>\n            <h4>{{tlt('connect_fb_account')}}</h4>\n            <div class=\"d-flex\">\n            <div id=\"login\" class=\"fb-button\" @click=\"checkLoginState()\">\n            <div class=\"icon\">\n                <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 118 222\">\n                <path id=\"f\" d=\"M75.41,220.31V120.5h33.5l5-38.9H75.41V56.78c0-11.26,3.13-18.93,19.27-18.93h20.6V3a275.33,275.33,0,0,0-30-1.53c-29.7,0-50,18.13-50,51.41V81.61H1.66v38.9H35.24v99.8Z\" style=\"fill: #fff\"></path>\n                </svg>\n            </div> \n            <span>{{tlt('connect_facebook')}}</span>\n            </div>\n            <div style=\"display:none;\" @click=\"facebookLogout()\" id=\"logout\" class=\"logout-button\"><span>{{tlt('logout_btn')}}</span></div>\n            </div>\n        <div v-show=\"Boolean(fb_page_data.length)\">\n            <div class=\"col-sm-12 p-0\">\n            <h4 class=\"mt-2\">{{tlt('connect_pages')}}</h4>\n            <div v-for=\"(page, index) in fb_page_data\"\n                :key=\"index\">\n                <div class=\"messenger-pages d-flex\">\n                    <div>\n                    {{page.name}}\n                    </div>\n                    <div style=\"margin-left: auto;\">\n                    <button class=\"fb-connect-btn\" @click=\"page_connect_fb(page)\">{{tlt('connect_btn')}}</button>\n                    </div>\n                </div>\n                </div>\n            </div>\n        </div>\n        <div v-show=\"Boolean(fb_saved_page_data.length)\">\n            <div class=\"col-sm-12 p-0\">\n            <h4 class=\"mt-2\">{{tlt('connect_pages')}}</h4>\n            <div v-for=\"(page, index) in fb_saved_page_data\"\n                :key=\"index\">\n                <div class=\"messenger-pages d-flex\">\n                    <div>\n                    {{page.fb_page_name}}\n                    </div>\n                    <label class=\"switch mb-0 mt-0 mr-2\" style=\"margin-left: auto;\">\n                    <input\n                        type=\"checkbox\"\n                        v-model=\"page.fb_page_enabled\"\n                        @click=\"edit_fb_page(index)\"\n                        id=\"email_required_id\"\n                    />\n                    <span\n                        class=\"slider round\"\n                        style=\"border-radius: 50px\"\n                    ></span>\n                    </label>\n                    <!-- <div style=\"margin-left: auto;\"> -->\n                    <span class=\"delete-cart-item\" @click=\"delete_fb_page(page)\">\n                    <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"13.682\" height=\"15.392\" viewBox=\"0 0 13.682 15.392\"><path data-v-0f909d54=\"\" d=\"M8.276,3v.855H4v1.71h.855V16.682a1.71,1.71,0,0,0,1.71,1.71h8.551a1.71,1.71,0,0,0,1.71-1.71V5.565h.855V3.855H13.406V3H8.276M6.565,5.565h8.551V16.682H6.565V5.565m1.71,1.71v7.7h1.71v-7.7H8.276m3.42,0v7.7h1.71v-7.7Z\" transform=\"translate(-4 -3)\" fill=\"#f23d3d\"></path></svg>\n                    </span>\n                    <!-- </div> -->\n                </div>\n                </div>\n            </div>\n        </div>\n        </div>\n        </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\nimport Swal from \"sweetalert2\";\nimport api_calls from \"@/portal/api_calls\";\n\nexport default {\n  name: \"MessagingFrameworks\",\n  components: {\n  },\n  data() {\n    return {\n      big_spinner: false,\n      website_name: \"\",\n      widget_code: \"\",\n      company_name: this.$session.get(\"UserInformation\").company_name,\n      company_id: this.$session.get(\"UserInformation\").company_id,\n      fb_access_token: \"\",\n      fb_user_id: \"\",\n      user_access_token: null,\n      fb_page_data: [],\n      fb_saved_page_data: []\n      // fb_messaging_url_regex: /[(m.me)\\/?a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_\\+.~#?&//=]*)/i,\n    };\n  },\n  watch: {\n    fb_page_enabled(newVal) {\n      // console.log(newVal);\n      // console.log(this[webs + \"_data\"].is_visible_on_bot);\n    },\n  },\n  mounted() {   \n    this.get_integration_details();\n    // this.checkLoginState();\n  },\n  methods: {\n    update_data() {\n      for(var i in this.fb_saved_page_data){\n        for(var j in this.fb_page_data){\n          if(this.fb_saved_page_data[i].fb_page_id == this.fb_page_data[j].id){\n            this.fb_page_data.splice(j, 1);\n          }\n        }\n      }\n    },\n    get_integration_details() {\n      this.big_spinner = true;\n      axios\n        .post(\n          api_calls.chatbot_integration_details(),\n          {\n            is_get: true,\n            company_name: this.company_name,\n            company_id: this.company_id,\n            email: this.$session.get(\"UserInformation\").email,\n            license_key: this.$session.get(\"UserInformation\").license_key,\n            token: this.$session.get(\"UserInformation\").tokens,\n          },\n          {\n            headers: {\n              Authorization: `Bearer ${this.$session.get(\"at\")}`,\n            },\n          }\n        )\n        .then(({ data }) => {\n          this.big_spinner = false;\n          if (data.status === \"success\") {\n            this.fb_saved_page_data = [];\n            if (\n              Boolean(data.data.facebook_details.length)\n            ) {\n              for (var i in data.data.facebook_details) {\n                var temp = {};\n                temp = {\n                  fb_access_token: data.data.facebook_details[i].fb_access_token,\n                  fb_page_id:  data.data.facebook_details[i].fb_page_id,\n                  fb_page_name:  data.data.facebook_details[i].fb_page_name,\n                  fb_verify_token:  data.data.facebook_details[i].fb_verify_token,\n                  fb_page_enabled:  data.data.facebook_details[i].enabled,\n                }\n                this.fb_saved_page_data.push(temp);\n              }\n              // this.fb_saved_page_data.is_visible_on_bot === true ? this.fb_saved_page_data.is_integrated = true :\n              //                                                 this.fb_saved_page_data.is_integrated = false;\n            }\n            this.update_data();\n          }else if(data.msg == \"NO DATA AVAILABLE\") {   }\n        })\n        .catch((e) => {\n          this.big_spinner = false;\n          if (\n            e.response.status === 410 ||\n            e.response.status === 440 ||\n            e.response.status === 409\n          ) {\n            this.$root.$emit(\"Session_Expired\", e.response.data);\n          }\n        });\n    },\n    page_connect_fb(page){\n      if(page != null) {\n        axios.post(api_calls.chatbot_integration_details(),{\n          // fb_verify_token : ,\n          company_name: this.company_name,\n          company_id: this.company_id,\n          email: this.$session.get(\"UserInformation\").email,\n          license_key: this.$session.get(\"UserInformation\").license_key,\n          token: this.$session.get(\"UserInformation\").tokens,\n          fb_page_name: page.name,\n          fb_access_token : page.access_token,\n          fb_page_id : page.id,\n          fb_page_enabled: true,\n          is_save: true,\n          is_facebook: true, \n          is_messaging_platform: false\n        },\n        {\n          headers: {\n            Authorization: `Bearer ${this.$session.get(\"at\")}`,\n          },\n        }\n        )\n        .then((response) => {\n           if (response.data.msg == \"Query Executed Successfully\") {\n            Swal.fire({\n              title: this.tlt('facebook_connect_msg'),\n              type: \"success\",\n              timer: 2500,\n            });\n            var path = \"/\" + page.id + \"/subscribed_apps?access_token=\" + page.access_token;\n            // console.log(\"POST\", path);\n            FB.api(\n              path,\n              'POST',\n              {\"subscribed_fields\":\"messages\"},\n              function(response) {\n                  console.log(\"Subscription\", response);\n              }\n            );\n            this.get_integration_details();\n          } else if (response.data.msg == \"Internal Server Error\") {\n            Swal.fire({\n              title: this.tlt('facebook_internal_server_msg'),\n              type: \"error\",\n              timer: 2500,\n            });\n          }\n        })\n        .catch((e) => {\n          if (\n            e.response.status === 410 ||\n            e.response.status === 440 ||\n            e.response.status === 409\n          ) {\n            this.$root.$emit(\"Session_Expired\", e.response.data);\n          }\n        });\n      }\n    },\n    edit_fb_page(index){\n      var vm = this;\n      this.fb_saved_page_data[index].fb_page_enabled == false ? this.fb_saved_page_data[index].fb_page_enabled = true : this.fb_saved_page_data[index].fb_page_enabled = false; \n      if(index != null) {\n        axios.post(api_calls.chatbot_integration_details(),{\n          company_name: this.company_name,\n          company_id: this.company_id,\n          email: this.$session.get(\"UserInformation\").email,\n          license_key: this.$session.get(\"UserInformation\").license_key,\n          token: this.$session.get(\"UserInformation\").tokens,\n          fb_page_id : this.fb_saved_page_data[index].fb_page_id,\n          is_edit: true,\n          is_facebook: true,\n          fb_page_enabled: this.fb_saved_page_data[index].fb_page_enabled\n        },\n        {\n          headers: {\n            Authorization: `Bearer ${this.$session.get(\"at\")}`,\n          },\n        }\n        )\n        .then((response) => {\n          if (response.data.msg == \"Query Executed Successfully\") {\n            Swal.fire({\n              title: this.tlt('facebook_edited_msg'),\n              type: \"success\",\n              timer: 2500,\n            });\n            if(!Boolean(this.fb_saved_page_data[index].fb_page_enabled)) {\n              var path = \"/\" + vm.fb_saved_page_data[index].fb_page_id + \"/subscribed_apps?access_token=\" + vm.fb_saved_page_data[index].fb_access_token;\n              // console.log(\"Path\", path);\n              FB.api(\n                path,\n                'DELETE',\n                {},\n                function(response) {\n                    console.log(\"DELETE\", response);\n                }\n              );\n            } else {\n              var path = \"/\" + vm.fb_saved_page_data[index].fb_page_id + \"/subscribed_apps?access_token=\" + vm.fb_saved_page_data[index].fb_access_token;\n              // console.log(\"POST\", path);\n              FB.api(\n                path,\n                'POST',\n                {\"subscribed_fields\":\"messages\"},\n                function(response) {\n                    console.log(\"Subscription\", response);\n                }\n              );\n            }\n            this.get_integration_details();\n          } else if (response.data.msg == \"Facebook page id does not exists in db\") {\n            Swal.fire({\n              title: this.tlt('page_id_not_exist'),\n              type: \"warning\",\n              timer: 2500,\n            });\n          } else if (response.data.msg == \"Internal Server Error\") {\n            Swal.fire({\n              title: this.tlt('facebook_internal_server_msg'),\n              type: \"error\",\n              timer: 2500,\n            });\n          }\n        })\n        .catch((e) => {\n          if (\n            e.response.status === 410 ||\n            e.response.status === 440 ||\n            e.response.status === 409\n          ) {\n            this.$root.$emit(\"Session_Expired\", e.response.data);\n          }\n        });\n      }\n    },\n    delete_fb_page(page){\n      if(page != null) {\n        axios.post(api_calls.chatbot_integration_details(),{\n          company_name: this.company_name,\n          company_id: this.company_id,\n          email: this.$session.get(\"UserInformation\").email,\n          license_key: this.$session.get(\"UserInformation\").license_key,\n          token: this.$session.get(\"UserInformation\").tokens,\n          fb_page_id : page.fb_page_id,\n          is_delete: true,\n          is_facebook: true, \n        },\n        {\n          headers: {\n            Authorization: `Bearer ${this.$session.get(\"at\")}`,\n          },\n        }\n        )\n        .then((response) => {\n          if (response.data.msg == \"Query Executed Successfully\") {\n            Swal.fire({\n              title: this.tlt('facebook_edited_msg'),\n              type: \"success\",\n              timer: 2500,\n            });\n            var path = \"/\" + page.fb_page_id + \"/subscribed_apps?access_token=\" + page.fb_access_token;\n            // console.log(\"Path\", path);\n            FB.api(\n              path,\n              'DELETE',\n              {},\n              function(response) {\n                  console.log(\"DELETE\", response);\n              }\n            );\n            this.get_integration_details();\n          } else if (response.data.msg == \"Facebook page id does not exists in db\") {\n            Swal.fire({\n              title: this.tlt('page_id_not_exist'),\n              type: \"warning\",\n              timer: 2500,\n            });\n          } else if (response.msg == \"Internal Server Error\") {\n            Swal.fire({\n              title: this.tlt('facebook_internal_server_msg'),\n              type: \"error\",\n              timer: 2500,\n            });\n          }\n        })\n        .catch((e) => {\n          if (\n            e.response.status === 410 ||\n            e.response.status === 440 ||\n            e.response.status === 409\n          ) {\n            this.$root.$emit(\"Session_Expired\", e.response.data);\n          }\n        });\n      }\n    },\n    checkLoginState() {\n      var vm = this;\n      FB.getLoginStatus(function(response) {\n        vm.statusChangeCallback(response);\n      });\n    },\n    statusChangeCallback(response) {\n      console.log(\"Messenger login1\", response);\n      if(response.status === \"connected\")\n      {\n        this.fb_access_token = response.authResponse.accessToken;\n        this.fb_user_id = response.authResponse.userID;\n        $(\"#login\").hide();\n        $(\"#logout\").show(); \n        this.fetchUserProfile();\n      }\n      else{\n          this.facebookLoginByDialog();\n      }\n    },\n    facebookLogout() {\n      var vm = this;\n      $(\"#logout\").hide();\n      $(\"#login\").show();\n      $(\"#status\").empty();\n      FB.logout(function(response) {\n        // vm.statusChangeCallback(response);\n      });\n      this.fb_page_data = [];\n      this.fb_access_token = \"\";\n      this.fb_user_id = \"\";\n      this.get_integration_details();\n    },\n    facebookLoginByDialog() {\n      var vm = this;\n      FB.login(function(response) {        \n          vm.statusChangeCallback(response);\n      }, {scope: 'public_profile,pages_manage_metadata,pages_show_list,pages_messaging,pages_read_engagement'});\n    },\n    fetchUserProfile() {\n      var vm = this;\n      var user_id = this.fb_user_id;\n      var access_token = this.fb_access_token;\n      var app_id = process.env.VUE_APP_FB_APP_ID;\n      var app_secret = process.env.VUE_APP_FB_APP_SECRET;\n      // var client_token = process.env.VUE_APP_FB_CLIENT_TOKEN;\n\n      // FB.api('/me', function(response) {\n      //   console.log(JSON.stringify(response));\n      // });\n      \n      // FB.api('/me?fields=id,name,email,gender,birthday', function(response) {\n      //   console.log('Successful login for: ' + response.name);\n      // });\n\n      var path1 = '/oauth/access_token?grant_type=fb_exchange_token&client_id=' + app_id + '&client_secret=' + app_secret + '&fb_exchange_token=' + access_token;\n      FB.api(path1, function(response) {\n        // console.log(\"Path 1\", JSON.stringify(response));\n        vm.user_access_token = response.access_token;\n      })\n\n      setTimeout(() => {\n        var path2 = '/'+user_id+'?fields=id,name,email,picture&access_token='+this.user_access_token;\n        FB.api(path2, function(data) {\n          // console.log(\"Path 2\", JSON.stringify(data))\n        });\n\n        var path3 = '/'+user_id+'/accounts?fields=name,access_token&access_token='+this.user_access_token;\n        FB.api(path3, function(data) {\n          // console.log(\"Path 3\", JSON.stringify(data.data))\n          vm.fb_page_data = data.data;\n          vm.update_data();\n        }); \n      }, 2000);\n      \n    },\n    // testAPI() {\n    //   console.log('Welcome!  Fetching your information.... ');\n    //   FB.api('/me', function(response) {\n    //     console.log('Successful login for: ' + response.name);\n    //     console.log(response);\n    //   });\n    // }\n  },\n};\n</script>\n<style scoped>\n.delete-cart-item {\n  cursor: pointer;\n}\n.delete-cart-item svg :hover {\n  color: #f23d3d !important;\n  fill: #f23d3d !important;\n}\n.fb-connect-btn {\n  background: #006cff;\n  border: 1px solid #006cff;\n  color: #fff;\n  cursor: pointer;\n  transition: all .3s;\n}\n.fb-connect-btn:active {\n  opacity: .5!important;\n}\n.fb-connect-btn:hover {\n  opacity: .8!important;\n}\n.fb-button {\n  width: 45%;\n  display: flex;\n  background: #3b5998;\n  color: #fff;\n  padding: 10px 20px;\n  border-radius: 10px;\n  -webkit-transition: opacity .3s;\n  transition: opacity .3s;\n  -webkit-box-align: center;\n  -ms-flex-align: center;\n  align-items: center;\n  -webkit-backface-visibility: hidden;\n  cursor: pointer;\n  -webkit-transition: all .3s;\n  transition: all .3s;\n}\n.fb-button:active {\n  opacity: .5!important;\n}\n.fb-button:hover {\n  opacity: .8!important;\n}\n.fb-button .icon {\n  margin-right: 10px;\n  width: 15px;\n  height: 25px;\n}\n.fb-button .icon svg {\n  max-width: 100%;\n  max-height: 100%;\n  -o-object-fit: contain;\n  object-fit: contain;\n}\n.logout-button {\n  margin-left: auto;\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  padding: 10px 20px;\n  border-radius: 20px;\n  background: #f0f4f7;\n  color: #9ba6b3;\n  width: 96px;\n  -webkit-box-align: center;\n  -ms-flex-align: center;\n  align-items: center;\n  -webkit-backface-visibility: hidden;\n  cursor: pointer;\n  -webkit-transition: all .3s;\n  transition: all .3s;\n}\n.logout-button:active {\n  opacity: .5!important;\n}\n.logout-button:hover {\n  opacity: .8!important;\n}\n.messenger-pages {\n  width: 100%;\n  background: #f7f7f8;\n  display: -webkit-box;\n  display: -ms-flexbox;\n  display: flex;\n  /* -webkit-box-align: center; */\n  -ms-flex-align: center;\n  align-items: center;\n  padding: 10px 15px;\n  border-radius: 4px;\n  margin-bottom: 10px;\n}\n.third-party-logo {\n  width: 150px;\n  height: 75px;\n  object-fit: contain;\n}\n.msg__span {\n  padding-left: 1rem;\n}\n.card-act .red-btn {\n  font-size: 14px;\n  color: #fff;\n  background: #f23d3d;\n  border: solid 1px #f23d3d;\n  padding: 5px 20px;\n  font-weight: 400;\n  line-height: 20px;\n  display: inline-block;\n  border-radius: 4px;\n  cursor: pointer;\n  text-align: center;\n}\n.switch {\n  margin-left: 1rem;\n}\n.col-sm-3{\n  max-width: 24%;\n}\n.row {\n    display: flex;\n    flex-wrap: wrap;\n    margin-right: -2px;\n    margin-left: 15px;\n}\n</style>"]}]}