{"remainingRequest":"/home/vimalesh/Elixir/chatbot-portal/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/vimalesh/Elixir/chatbot-portal/src/portal/Chatbot/Dashboard/Pages/ForgotPassword.vue?vue&type=style&index=0&id=06fcc0be&scoped=true&lang=css&","dependencies":[{"path":"/home/vimalesh/Elixir/chatbot-portal/src/portal/Chatbot/Dashboard/Pages/ForgotPassword.vue","mtime":1643027096176},{"path":"/home/vimalesh/Elixir/chatbot-portal/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vimalesh/Elixir/chatbot-portal/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/vimalesh/Elixir/chatbot-portal/node_modules/@vue/cli-service/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/vimalesh/Elixir/chatbot-portal/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vimalesh/Elixir/chatbot-portal/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouY29udGFpbmVyIHsKICB3aWR0aDogYXV0bzsKfQojbWVzc2FnZSB7CiAgZGlzcGxheTogbm9uZTsKICBiYWNrZ3JvdW5kOiAjZmZmOwogIGNvbG9yOiAjMDAwOwogIHBvc2l0aW9uOiByZWxhdGl2ZTsKICBwYWRkaW5nOiAyMHB4OwogIG1hcmdpbi10b3A6IDEwcHg7Cn0KCi52YWxpZCB7CiAgY29sb3I6IGdyZWVuOwp9CgoudmFsaWQ6YmVmb3JlIHsKICBwb3NpdGlvbjogcmVsYXRpdmU7CiAgbGVmdDogLTM1cHg7CiAgY29udGVudDogIuKclCI7Cn0KCi8qIEFkZCBhIHJlZCB0ZXh0IGNvbG9yIGFuZCBhbiAieCIgd2hlbiB0aGUgcmVxdWlyZW1lbnRzIGFyZSB3cm9uZyAqLwouaW52YWxpZCB7CiAgY29sb3I6IHJlZDsKfQoKLmludmFsaWQ6YmVmb3JlIHsKICBwb3NpdGlvbjogcmVsYXRpdmU7CiAgbGVmdDogLTM1cHg7CiAgY29udGVudDogIuKcliI7Cn0KLmlzLWludmFsaWQgewogIGNvbG9yOiByZWQ7Cn0K"},{"version":3,"sources":["ForgotPassword.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2SA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ForgotPassword.vue","sourceRoot":"src/portal/Chatbot/Dashboard/Pages","sourcesContent":["<template>\n  <div class=\"log-wrap d-flex align-items-center\">\n    <div class=\"container\" style=\"min-width: 35%;\">\n      <div class=\"log-blk\">\n        <div class=\"row no-gutters\">\n          <div class=\"col-lg-12\">\n            <div class=\"log-sec d-flex align-items-center\">\n              <div class=\"log-frm\">\n                <h4 style=\"text-align: center;\">Reset Passworsd</h4>\n                <form @submit.prevent=\"submit_new_password\">\n                  <div class=\"form-group\">\n                    <!-- <input\n                      type=\"password\"\n                      id=\"new_password\"\n                      v-model=\"new_password\"\n                      class=\"form-control pass\"\n                      placeholder=\"New Password\"\n                      required\n                      autocomplete=\"new-password\"\n                    /> -->\n                    <input\n                        type=\"password\"\n                        v-model=\"new_password\"\n                        id=\"new_password\"\n                        class=\"form-control pass\"\n                       placeholder=\"New Password\"\n                        style=\"border-radius: 29px; padding:3px 0px 3px 43px; font-size: 15px;\"\n                        required\n                      autocomplete=\"new-password\"\n                      />\n                    <!-- <div\n                      class=\"is-invalid\"\n                      style=\"color:red\"\n                      v-show=\"validPassword!=true && new_password!=''\"\n                    >{{ validPassword }}</div> -->\n\n                    <a\n                      href=\"#\"\n                      @click=\"password_toggle\"\n                      class=\"view-pass\"\n                        style=\"top: 7px;\"\n                    >\n                      <img\n                        src=\"/img/eye-icn.png\"\n                        alt\n                      />\n                    </a>\n                  </div>\n                  <password-validator\n                                    :testpassword=\"new_password\"\n                                    @correctPassword=\"check_password\"\n                                    style=\"padding: 0px;\"\n                                  ></password-validator>\n                  \n                  <div class=\"form-group\">\n                    <!-- <input\n                      type=\"password\"\n                      id=\"confirm_password\"\n                      v-model=\"confirm_password\"\n                      class=\"form-control pass\"\n                      placeholder=\"Re-enter New Password\"\n                      required\n                      autocomplete=\"new-password\"\n                    /> -->\n                     <input\n                        type=\"password\"\n                        v-model=\"confirm_password\"\n                        id=\"confirm_password\"\n                        class=\"form-control pass\"\n                        placeholder=\"Re-enter Password\"\n                        required\n                        style=\"border-radius: 29px; padding:3px 0px 3px 43px; font-size: 15px;\"\n                        autocomplete=\"new-password\"\n                      />\n                    <div\n                      class=\"is-invalid\"\n                      style=\"color:red\"\n                      v-show=\"validConfirmPassword!=true && confirm_password!=''\"\n                    >{{ validConfirmPassword }}</div>\n                    <a\n                      href=\"#\"\n                      @click=\"password_toggle\"\n                      class=\"view-pass\"\n                        style=\"top: 7px;\"\n                    >\n                      <img\n                        src=\"/img/eye-icn.png\"\n                        alt\n                      />\n                    </a>\n                  </div>\n                  <div class=\"btn-wrap\">\n                    <button\n                      type=\"submit\"\n                      class=\"darkblue-btn\"\n                    >Submit</button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport swal from \"sweetalert2\";\nimport axios from \"axios\";\nimport api_calls from \"@/portal/api_calls\";\nimport PasswordValidator from '../Pages/PasswordValidator.vue';\nimport moment from \"moment\";\n\nexport default {\n  components: {\n    PasswordValidator,\n  },\n  data () {\n    return {\n      new_password: \"\",\n      confirm_password: \"\",\n      correct_password: false,\n      reg_pwd: /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[#@$!%*?&])[A-Za-z\\d#@$!%*?&]{8,}/,\n      password_valid: null,\n      password_match: null,\n      // letter: document.getElementById(\"letter\"),\n      // capital: document.getElementById(\"capital\"),\n      // number: document.getElementById(\"number\"),\n      // special: document.getElementById(\"special\"),\n      // array: []\n    };\n  },\n  computed: {\n    validPassword () {\n      if (this.reg_pwd.test(this.new_password)) {\n        this.password_valid = true;\n        return true;\n      } else {\n        this.password_valid = false;\n        return \"Password must contain minimum 8 characters, atleast 1 UpperCase Alphabet, 1 LowerCase Alphabet, 1 Number and 1 Special Character\";\n      }\n    },\n    validConfirmPassword () {\n      if (this.confirm_password == this.new_password) {\n        this.password_match = true;\n        return true;\n      } else {\n        this.password_match = false;\n        return \"Passwords do not match\";\n      }\n    }\n  },\n  methods: {\n    check_password(correctPassword) {\n      this.correct_password = correctPassword;\n    },\n    // check_value () {\n    //   if (this.new_password != \"\") {\n    //     document.getElementById(\"message\").style.display = \"block\";\n    //   } else {\n    //     document.getElementById(\"message\").style.display = \"none\";\n    //   }\n    //   var lowerCaseLetters = /[a-z]/g;\n    //   if (this.new_password.match(lowerCaseLetters)) {\n    //     letter.classList.remove(\"invalid\");\n    //     letter.classList.add(\"valid\");\n    //     this.array[0] = 1;\n    //   } else {\n    //     letter.classList.remove(\"valid\");\n    //     letter.classList.add(\"invalid\");\n    //     this.array[0] = 0;\n    //   }\n\n    //   // Validate capital letters\n    //   var upperCaseLetters = /[A-Z]/g;\n    //   if (this.new_password.match(upperCaseLetters)) {\n    //     capital.classList.remove(\"invalid\");\n    //     capital.classList.add(\"valid\");\n    //     this.array[1] = 1;\n    //   } else {\n    //     capital.classList.remove(\"valid\");\n    //     capital.classList.add(\"invalid\");\n    //     this.array[1] = 0;\n    //   }\n\n    //   // Validate numbers\n    //   var numbers = /[0-9]/g;\n    //   if (this.new_password.match(numbers)) {\n    //     number.classList.remove(\"invalid\");\n    //     number.classList.add(\"valid\");\n    //     this.array[2] = 1;\n    //   } else {\n    //     number.classList.remove(\"valid\");\n    //     number.classList.add(\"invalid\");\n    //     this.array[2] = 0;\n    //   }\n\n    //   // Special Character\n    //   var specials = /[#@!%*?&$]/g;\n    //   if (this.new_password.match(specials)) {\n    //     special.classList.remove(\"invalid\");\n    //     special.classList.add(\"valid\");\n    //     this.array[3] = 1;\n    //   } else {\n    //     special.classList.remove(\"valid\");\n    //     special.classList.add(\"invalid\");\n    //     this.array[3] = 0;\n    //   }\n    //   // Validate length\n    //   if (this.new_password.length >= 8) {\n    //     var length = document.getElementById(\"length\");\n    //     length.classList.remove(\"invalid\");\n    //     length.classList.add(\"valid\");\n    //     this.array[4] = 1;\n    //   } else {\n    //     var length = document.getElementById(\"length\");\n    //     length.classList.remove(\"valid\");\n    //     length.classList.add(\"invalid\");\n    //     this.array[4] = 0;\n    //   }\n    //   var sum = this.array[0] + this.array[1] + this.array[2] + this.array[3] + this.array[4];\n    //   if (sum == 5 || sum == 0) {\n    //     document.getElementById(\"message\").style.display = \"none\";\n    //   } else {\n    //     document.getElementById(\"message\").style.display = \"block\";\n    //   }\n    // },\n    password_toggle () {\n      event.preventDefault();\n      var password = event.target.parentElement.parentElement.children[0].id;\n      var doc = document.getElementById(password);\n      if (doc.type == \"text\") {\n        doc.type = \"password\";\n      } else if (doc.type == \"password\") {\n        doc.type = \"text\";\n      }\n    },\n    submit_new_password () {\n      // if (this.validPassword == true && this.password_match == true) {\n        if(this.correct_password == true){\n        var token_id = this.$route.query.token\n        var email = this.$route.query.email\n        this.call_api(token_id, email);\n      }\n    },\n    call_api (token_id, email) {\n      swal({\n        toast: true,\n        text: \"Please wait while we submit your details\",\n        showConfirmButton: false,\n        type: 'info'\n      })\n      axios\n        .post(api_calls.forgot_password_update(), {\n          token: token_id,\n          email: email,\n          password: this.new_password,\n          date: moment().toISOString(),\n        })\n        .then(response => {\n          if (response.data === \"The link you used has expired\") {\n            swal({\n              text: \"Sorry, your link has expired\",\n              timer:2000,\n            });\n          } else if (response.data == \"Password Reset\") {\n            swal({\n              text:\n                \"Your password has been updated successfully. Now you can login with the new password\",\n              allowOutsideClick: false\n            }).then(value =>{\n               this.$router.push(\"/bot/login\");\n            })\n          } else if (response.data == \"User Doesn't Exist\") {\n            swal({\n              text: \"This user does not exist\",\n              timer:2000,\n            });\n          } else if(response.data.MSG === \"Password Is Similar\"){\n            swal({\n              text: \"You cannot set a password which was one of your old passwords. Please Try Again\",\n              timer:3000,\n            });\n          } else {\n            swal({\n              text: \"Some Error Occurred. Please Try Again\",\n              timer:2500,\n            });\n          }\n        });\n      this.new_password = \"\";\n      this.confirm_password = \"\";\n    }\n  }\n};\n</script>\n\n<style scoped>\n.container {\n  width: auto;\n}\n#message {\n  display: none;\n  background: #fff;\n  color: #000;\n  position: relative;\n  padding: 20px;\n  margin-top: 10px;\n}\n\n.valid {\n  color: green;\n}\n\n.valid:before {\n  position: relative;\n  left: -35px;\n  content: \"✔\";\n}\n\n/* Add a red text color and an \"x\" when the requirements are wrong */\n.invalid {\n  color: red;\n}\n\n.invalid:before {\n  position: relative;\n  left: -35px;\n  content: \"✖\";\n}\n.is-invalid {\n  color: red;\n}\n</style>\n"]}]}