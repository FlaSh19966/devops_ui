{"remainingRequest":"/home/vimalesh/CENSE/chatbot-portal/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/vimalesh/CENSE/chatbot-portal/src/portal/Chatbot/Dashboard/ProductManagement/CustomerFeedbackQuestions.vue?vue&type=style&index=0&id=227eaf28&scoped=true&lang=css&","dependencies":[{"path":"/home/vimalesh/CENSE/chatbot-portal/src/portal/Chatbot/Dashboard/ProductManagement/CustomerFeedbackQuestions.vue","mtime":1648724697494},{"path":"/home/vimalesh/CENSE/chatbot-portal/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vimalesh/CENSE/chatbot-portal/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/vimalesh/CENSE/chatbot-portal/node_modules/@vue/cli-service/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/vimalesh/CENSE/chatbot-portal/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vimalesh/CENSE/chatbot-portal/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLm5vdC1jdXJyZW50LWVkaXQtc3lub255bSB7CiAgb3BhY2l0eTogMC4yOwogIHBvaW50ZXItZXZlbnRzOiBub25lOwp9Ci5ub3QtZWRpdGluZy1zeW5vbnltcyB7CiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNlM2UyZTU7Cn0KLmN1cnJlbnQtZWRpdC1zeW5vbnltIHsKICB0cmFuc2Zvcm06IHNjYWxlKDEuMDIpOwogIGJvcmRlcjogM3B4IHNvbGlkICMyNzM5N2I7CiAgei1pbmRleDogMjsKICBiYWNrZ3JvdW5kOiAjZGRkZGRkOwogIHBhZGRpbmc6IDAuNXJlbTsKfSAKaHIgewogIG1hcmdpbjogMC41ZW0gMGVtIDsKfQouZ3JhcGhzLXdpZHRoLWZsZXggewogIGZsZXg6IDI0JTsKfQo="},{"version":3,"sources":["CustomerFeedbackQuestions.vue"],"names":[],"mappingsyhBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"CustomerFeedbackQuestions.vue","sourceRoot":"src/portal/Chatbot/Dashboard/ProductManagement","sourcesContent":["<template>\n<div>\n  <div class=\"row justify-content-center\">\n    <div class=\"card col-sm-12\" style=\"min-height: 80vh;\">\n        <!-- <div class=\"table-responsive\" v-if=\"spinnerOn\"></div>\n          <div class=\"table-responsive\" v-if=\"product_names_list.length === 0\"></div> -->\n        <div\n          class=\"table-responsive\"\n          style=\"overflow-x: unset;\"\n        >\n        <div class=\"d-flex card-act px-0 pt-3\">\n          <h5 style=\"padding-top: 3px;\">Manage Customer Website Feedback</h5>\n        <button\n          id=\"customer_feedback_add_questions_btn\"\n          class=\"darkblue-btn d-block ml-auto\"\n          style=\"padding: 6px 12px;\"\n          data-toggle=\"modal\"\n          data-target=\"#sendsms\"\n          title=\"Manage Questions\"\n        >\n          Manage Questions\n        </button>\n        <!-- <button\n          id=\"customer_feedback_save_all_btn\"\n          class=\"darkblue-btn d-block ml-auto\"\n          style=\"padding: 6px 12px;\"\n          @click=\"save_customer_feedback_questions\"\n        >\n          SAVE ALL\n        </button> -->\n          </div>\n          <hr>\n          <div>\n            <h6>Customer Responses</h6>\n          </div>\n          <div v-if=\"show_graphs && graph_data.length > 0\" style=\"display:flex; flex-wrap:wrap;\">\n            <div v-for=\"(result, index ) in graph_data\" :key=\"index\" class=\"graphs-width-flex\">\n              <div>\n            <span>Q - {{result.question}}</span>\n            <new-pie\n              :data=\"result.answers\"\n              :xKey=\"bar_chart_xKey\"\n              :yKey=\"bar_chart_yKey\"\n              :currency_key=\"``\"\n              :idempotency_key=\"index.toString()\"\n            />\n            </div>\n            </div>\n          </div>\n          <div v-else>\n            <h6 class=\"text-center\">\n               You dont have any responses from customers yet!! \n            </h6>\n          </div>\n          <!-- <div>\n            <span>(You can define questions here to which the user can answer with a yes/no to give feedback)</span>\n          </div>\n          <hr />\n          <div class=\"card-act d-flex pt-3 p-0\">\n            <input\n              type=\"text\"\n              v-model=\"question\"\n              class=\"form-control\"\n              placeholder=\"Add another question\"\n              @keyup.enter=\"check_is_edit\"\n            />\n            <button\n              id=\"customer_feedback_add_btn\"\n              class=\"darkblue-btn ml-2\"\n              @click=\"add_question\"\n              v-if=\"!is_edit_question\"\n            >\n              ADD\n            </button>\n            <button\n              id=\"customer_feedback_edit_btn\"\n              class=\"darkblue-btn ml-2\"\n              @click=\"save_edit_question\"\n              v-if=\"is_edit_question\"\n            >\n              EDIT\n            </button>\n          </div>\n          <div class=\"mt-3 px-0 pt-3\">\n            <h5>Questions List</h5>\n            <div style=\"border-bottom: 1px solid #e3e2e5\"></div>\n            <div\n              v-for=\"(questions, index) in question_list\"\n              :key=\"index\"\n              class=\"py-2 d-flex\"\n              :class=\"check_current_edit_question(index, null)\"\n            >\n              <span> {{ questions }} </span>\n              <span\n                class=\"ml-auto c-p edit-delete-span\"\n                @click=\"edit_question(index)\"\n              >\n                <img\n                  :src=\"require('@/portal/assets/img/edit-pencil-from-xd.svg')\"\n                  alt=\"Edit\"\n                />\n              </span>\n              <span\n                class=\"ml-2 c-p edit-delete-span\"\n                @click=\"delete_question(index)\"\n              >\n                <img\n                  :src=\"require('@/portal/assets/img/delete-from-xd.svg')\"\n                  alt=\"Delete\"\n                />\n              </span>\n            </div>\n          </div> -->\n        </div>\n      </div>\n    </div>\n     <div\n      id=\"sendsms\"\n      class=\"modal fade dash-modal\"\n      role=\"dialog\"\n    >\n      <!-- data-keyboard=\"false\"\n      data-backdrop=\"static\" -->\n      <div class=\"modal-dialog\">\n        <div class=\"modal-content\">\n          <div class=\"modal-body\">\n            <div class=\"modal-head d-flex align-items-center\">\n              <div class=\"head-icn\">\n                <img src=\"/img/msg-blue.png\" alt />\n              </div>\n              <h3>Questions</h3>\n              <button\n                type=\"button\"\n                class=\"close\"\n                data-dismiss=\"modal\"\n              >\n                <img src=\"/img/close-icn.png\" alt />\n              </button>\n            </div>\n            <div class=\"card-act p-0\">\n            <h5>Add Question</h5>\n            <h6 class=\"mb-0\">Question</h6>\n            <input\n              type=\"text\"\n              v-model=\"question\"\n              class=\"form-control\"\n              placeholder=\"Add another question\"\n              @keyup.enter=\"check_is_edit\"\n            />\n            <h6 class=\"mb-0 mt-2\">Options <span style=\"font-weight:200\">(Max 5 options)</span></h6>\n            <tags-input\n              v-model=\"question_options\"\n              wrapper-class=\"form-control\"\n              :limit=\"5\"\n              style=\"height:38px\"\n              :placeholder=\"`Type and Enter`\"\n            ></tags-input>\n            <button\n              id=\"customer_feedback_add_btn\"\n              class=\"darkblue-btn mt-3\"\n              @click=\"add_question\"\n              v-if=\"!is_edit_question\"\n            >\n              ADD\n            </button>\n            <button\n              id=\"customer_feedback_edit_btn\"\n              class=\"darkblue-btn mt-3\"\n              @click=\"save_edit_question\"\n              v-if=\"is_edit_question\"\n            >\n              EDIT\n            </button>\n\n          </div>\n          <hr>\n          <h5>Active Questions:</h5>\n            <div\n              v-for=\"(questions, index) in question_list\"\n              :key=\"index\"\n              class=\"py-2 d-flex\"\n              :class=\"check_current_edit_question(index, null)\"\n            >\n              <div>\n              <span>Question: {{ questions.question }} </span>\n              <br>\n              <span>Options: {{questions.options.map((item) => item.value).toString()  }}</span>\n            </div>\n              <span\n                class=\"ml-auto c-p edit-delete-span\"\n                @click=\"edit_question(index)\"\n              >\n                <img\n                  :src=\"require('@/portal/assets/img/edit-pencil-from-xd.svg')\"\n                  alt=\"Edit\"\n                />\n              </span>\n              <span\n                class=\"ml-2 c-p edit-delete-span\"\n                @click=\"delete_question(index)\"\n              >\n                <img\n                  :src=\"require('@/portal/assets/img/delete-from-xd.svg')\"\n                  alt=\"Delete\"\n                />\n              </span>\n            </div>\n          </div>\n          <div class=\"modal-footer\">\n            <div class=\"btn-wrap text-right mt-0 py-0 border-top-0\">\n              <button\n                type=\"button\"\n                class=\"btn btn-link\"\n                data-dismiss=\"modal\"\n              >\n                Cancel\n              </button>\n              <button\n                type=\"buttton\"\n                class=\"darkblue-btn\"\n                id=\"customer_feedback_questions_save\"\n                @click=\"save_customer_feedback_questions\"\n              >\n                Save All\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    </div>\n</template>\n\n<script>\nimport axios from \"axios\";\nimport api_calls from \"@/portal/api_calls.js\";\nimport Swal from \"sweetalert2\";\nimport { freeze_portal } from \"@/portal/mixins\";\nimport NewPie from \"@/portal/analytics/components/NewPieChart.vue\"\nimport VoerroTagsInput from '@voerro/vue-tagsinput';\n\n\nexport default {\n  name: \"CustomerFeedbackQuestionsPage\",\n  mixins: [freeze_portal],\n  components: {\n    \"new-pie\": NewPie,\n    'tags-input': VoerroTagsInput\n  },\n  data() {\n    return {\n      spinnerOn: false,\n      company_id: this.$session.get(\"UserInformation\").company_id,\n      company_name: this.$session.get(\"UserInformation\").company_name,\n      question: \"\",\n      question_list: [],\n      is_edit_question: false,\n      current_edit_index: null,\n      disable_btn_expired: false,\n      show_graphs: false,\n      barChartData: [],\n      bar_chart_xKey: \"key\",\n      bar_chart_yKey: \"value\",\n      question_options: [],\n      graph_data : [],\n      show_max_limit_reached_msg: false\n    };\n  },\n  watch: {\n    question_list(){\n      // console.log(\"UPDATE\",this.question_list);\n    }\n  },\n  mounted() {\n    this.get_customer_feedback_questions();\n    this.get_customer_feedback_responses()\n    setTimeout(() => {\n      this.freeze_portal();\n    }, 3000);\n    this.$root.$on(\"CustomerFeedbackQuestionsPageDisabled\", (data) =>{\n      if(data===true){\n        this.disable_btn_expired = true;\n      }\n    });\n\n  },\n  methods: {\n    check_is_edit() {\n      return this.is_edit_question\n        ? this.save_edit_question\n        : this.add_question;\n    },\n    add_question() {\n      if(!this.disable_btn_expired){\n      if (this.question_list.length > 9) {\n        Swal({\n          text: \"You cannot add more than 10 questions\",\n          toast: true,\n          position: \"top-end\",\n          type: \"warning\",\n          showConfirmButton: false,\n          timer: 2500,\n        });\n        return;\n      }\n      if (Boolean(this.question) === true) {\n        this.question_list.push(this.question);\n        this.question = null;\n      }}else {\n        this.show_subscription_expired_swal()\n      }\n    },\n    delete_question(index) {\n      this.question_list.splice(index, 1);\n    },\n    edit_question(index) {\n      if (!this.is_edit_question) {\n        this.question = this.question_list[\n          index\n        ].question;\n        this.question_options = this.question_list[\n          index\n        ].options;\n        this.current_edit_index = index;\n        this.is_edit_question = true;\n      } else {\n        this.reset_edit();\n      }\n    },\n    save_edit_question() {\n      if(!this.disable_btn_expired){\n        this.question_options = this.question_options.map((item) => {\n          item.key = Boolean(item.key) == false ? this.generateUUID() : item.key;\n          return item;\n\n        })\n      this.question_list[\n        this.current_edit_index\n      ].question = this.question;\n      this.question_list[\n        this.current_edit_index\n      ].options = this.question_options;\n      this.reset_edit();\n      }else{\n        this.show_subscription_expired_swal()\n      }\n    },\n    reset_edit() {\n      this.is_edit_question = false;\n      this.current_edit_index = null;\n      this.question = null;\n      this.question_options = []\n    },\n    check_current_edit_question(index, tag) {\n      if (Boolean(this.is_edit_question) === true) {\n        if (tag === \"span\") {\n          return \"not-current-edit-synonym-span\";\n        } else {\n          return this.current_edit_index === index\n            ? \"current-edit-synonym\"\n            : \"not-current-edit-synonym\";\n        }\n      } else {\n        return \"not-editing-synonyms\";\n      }\n    },\n    save_customer_feedback_questions() {\n      if (!this.disable_btn_expired){\n      axios\n        .post(\n          api_calls.customer_feedback_questions(),\n          {\n            company_id: this.company_id,\n            company_name: this.company_name,\n            license_key: this.$session.get(\"UserInformation\").license_key,\n            questions: this.question_list,\n            is_save: true,\n            token: this.$session.get(\"UserInformation\").tokens\n          },\n          {\n            headers: {\n              Authorization: `Bearer ${this.$session.get(\"at\")}`,\n            },\n          }\n        )\n        .then(({ data }) => {\n          // console.log(data);\n          if (data.message == \"Query Executed Successfully\") {\n            Swal({\n              type: \"success\",\n              text: \"Questions saved successfully\",\n              timer: 2500,\n            }).then((result) => {\n                this.get_customer_feedback_questions();\n            });\n          }else {\n              Swal({\n              type: \"error\",\n              text: \"Internal server failure\",\n              timer: 2500,\n            })\n          }\n        })\n        .catch((e) => {\n          this.spinnerOn = false;\n          if (\n            e.response.status === 410 ||\n            e.response.status === 440 ||\n            e.response.status === 409\n          ) {\n            this.$root.$emit(\"Session_Expired\", e.response.data);\n          }\n        });\n      }else {\n        this.show_subscription_expired_swal()\n      }\n    },\n    get_customer_feedback_questions() {\n        this.question_list = [];\n      axios\n        .post(\n          api_calls.customer_feedback_questions(),\n          {\n            company_id: this.company_id,\n            company_name: this.company_name,\n            license_key: this.$session.get(\"UserInformation\").license_key,\n            is_get: true,\n          },\n          {\n            headers: {\n              Authorization: `Bearer ${this.$session.get(\"at\")}`,\n            },\n          }\n        )\n        .then(({ data }) => {\n            // console.log(data);\n          if (data.data.length > 0) {\n              this.question_list = data.data;\n\n            //  this.question_list =  this.question_list.map((item) => {\n            //     let question = item;\n            //     item = {};\n            //     item.question = question;\n            //     item.options = [\n            //       {key: this.generateUUID(),\n            //       value: 'Yes'\n            //       },\n            //       {key: this.generateUUID(),\n            //       value: 'No'\n            //       },\n            //       ];\n            //     return item;\n            //   })\n              // console.log(this.question_list);\n          }\n        })\n        .catch((e) => {\n          this.spinnerOn = false;\n          if (\n            e.response.status === 410 ||\n            e.response.status === 440 ||\n            e.response.status === 409\n          ) {\n            this.$root.$emit(\"Session_Expired\", e.response.data);\n          }\n        });\n    },\n    get_customer_feedback_responses() {\n      axios\n        .post(\n          api_calls.customer_feedback_questions(),\n          {\n            company_id: this.company_id,\n            company_name: this.company_name,\n            license_key: this.$session.get(\"UserInformation\").license_key,\n            is_get_responses: true,\n          },\n          {\n            headers: {\n              Authorization: `Bearer ${this.$session.get(\"at\")}`,\n            },\n          }\n        ).then(({ data }) => {\n          data = data.data;\n          console.log(data);\n          console.log(typeof(data))\n          let result = [];\n          for (const property in data) {\n            const counts = {};\n            for (var i = 0; i < data[property].length; i++) {\n              counts[data[property][i]] = 1 + (counts[data[property][i]] || 0);\n            };\n            let question_data = {\n              question: property,\n              answers: []\n            }\n            for (const k in counts) {\n              let obj = {};\n              obj.key = k;\n              obj.value = counts[k];\n              question_data.answers.push(obj);\n            }\n            result.push(question_data);\n          }\n          this.graph_data = result;\n          this.show_graphs = true;\n\n        }).catch((e) => {\n          console.log(e)\n        })\n    },\n    generateUUID() {\n      // Public Domain/MIT\n      var d = new Date().getTime(); //Timestamp\n      var d2 =\n          (performance && performance.now && performance.now() * 1000) || 0; //Time in microseconds since page-load or 0 if unsupported\n      return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(/[xy]/g, function(\n          c\n      ) {\n          var r = Math.random() * 16; //random number between 0 and 16\n          if (d > 0) {\n          //Use timestamp until depleted\n          r = (d + r) % 16 | 0;\n          d = Math.floor(d / 16);\n          } else {\n          //Use microseconds since page-load if supported\n          r = (d2 + r) % 16 | 0;\n          d2 = Math.floor(d2 / 16);\n          }\n          return (c === \"x\" ? r : (r & 0x3) | 0x8).toString(16);\n      });\n    },\n  },\n};\n</script>\n\n<style scoped>\n.not-current-edit-synonym {\n  opacity: 0.2;\n  pointer-events: none;\n}\n.not-editing-synonyms {\n  border-bottom: 1px solid #e3e2e5;\n}\n.current-edit-synonym {\n  transform: scale(1.02);\n  border: 3px solid #27397b;\n  z-index: 2;\n  background: #dddddd;\n  padding: 0.5rem;\n} \nhr {\n  margin: 0.5em 0em ;\n}\n.graphs-width-flex {\n  flex: 24%;\n}\n</style>\n<style>\n.form-control.tags-input {\nheight: 38px;\npadding: 10px 15px !important;\n}\n\n</style>\n<style src=\"@voerro/vue-tagsinput/dist/style.css\"></style>"]}]}