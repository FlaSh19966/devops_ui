{"remainingRequest":"/home/vimalesh/CENSE/chatbot-portal/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/vimalesh/CENSE/chatbot-portal/src/portal/Chatbot/Dashboard/Settings/ModelsTab.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/vimalesh/CENSE/chatbot-portal/src/portal/Chatbot/Dashboard/Settings/ModelsTab.vue","mtime":1663910265478},{"path":"/home/vimalesh/CENSE/chatbot-portal/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vimalesh/CENSE/chatbot-portal/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/vimalesh/CENSE/chatbot-portal/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vimalesh/CENSE/chatbot-portal/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBheGlvcyBmcm9tICJheGlvcyI7CmltcG9ydCBTd2FsIGZyb20gInN3ZWV0YWxlcnQyIjsKaW1wb3J0IGFwaV9jYWxscyBmcm9tICJAL3BvcnRhbC9hcGlfY2FsbHMiOwppbXBvcnQgbW9tZW50IGZyb20gIm1vbWVudCI7CmltcG9ydCB7IGZyZWV6ZV9wb3J0YWwsc2hvd19zdWJzY3JpcHRpb25fZXhwaXJlZF9zd2FsIH0gZnJvbSAiQC9wb3J0YWwvbWl4aW5zIjsKCmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiTWlzY2VsbGFuZW91c1BhZ2UiLAogIG1peGluczogW2ZyZWV6ZV9wb3J0YWwsIHNob3dfc3Vic2NyaXB0aW9uX2V4cGlyZWRfc3dhbF0sCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGJpZ19zcGlubmVyOiBmYWxzZSwKICAgICAgY29tcGFueWlkOiB0aGlzLiRzZXNzaW9uLmdldCgiVXNlckluZm9ybWF0aW9uIikuY29tcGFueV9pZCwKICAgICAgY29tcGFueW5hbWU6IHRoaXMuJHNlc3Npb24uZ2V0KCJVc2VySW5mb3JtYXRpb24iKS5jb21wYW55X25hbWUsCiAgICAgIHRyYWluZWRfZGlhbG9ndWVfbW9kZWxzOiBbXSwKICAgICAgdHJhaW5lZF9pbnRlbnRfbW9kZWxzOiBbXSwKICAgICAgY3VycmVudF9saWNlbnNlX2tleTogdGhpcy4kc2Vzc2lvbi5nZXQoIlVzZXJJbmZvcm1hdGlvbiIpLmxpY2Vuc2Vfa2V5LAogICAgICB0cmFpbmVkX25lcl9tb2RlbHM6IFtdLAogICAgICBkaXNhYmxlX2J0bl9leHBpcmVkOiBmYWxzZSwKICAgICAgcmV0YWlsX3dlYl9mcmFtZXdvcms6IHRoaXMuJHNlc3Npb24uZ2V0KCJyZXRhaWxfd2ViX2ZyYW1ld29yayIpLAogICAgfTsKICB9LAogIGNyZWF0ZWQoKSB7CiAgICB0aGlzLmdldF90cmFpbmVkX2RpYWxvZ3VlX21vZGVscygpOwogICAgdGhpcy5nZXRfdHJhaW5lZF9pbnRlbnRfbW9kZWxzKCk7CiAgICB0aGlzLmdldF90cmFpbmVkX25lcl9tb2RlbHMoKTsKICAgIHNldFRpbWVvdXQoKCkgPT4gewogICAgICB0aGlzLmZyZWV6ZV9wb3J0YWwoKTsKICAgIH0sIDEwMDApOwogICAgdGhpcy4kcm9vdC4kb24oIk1pc2NlbGxhbmVvdXNQYWdlRGlzYWJsZWQiLCAoZGF0YSkgPT4gewogICAgICBpZihkYXRhPT09dHJ1ZSl7CiAgICAgICAgdGhpcy5kaXNhYmxlX2J0bl9leHBpcmVkID0gdHJ1ZTsKICAgICAgfQogICAgfSk7CiAgfSwKICBtZXRob2RzOiB7CiAgICB0cmltX21vZGVsX25hbWUodmFsMSkgewogICAgICBpZiAodmFsMS5sZW5ndGggPiA2KSB7CiAgICAgICAgbGV0IHN0cjEgPSB2YWwxLnN1YnN0cmluZygwLCAzKSArICIuLi4iOwogICAgICAgIHJldHVybiBzdHIxOwogICAgICB9CiAgICAgIHJldHVybiB2YWwxOwogICAgfSwKICAgIGdldF90cmFpbmVkX2ludGVudF9tb2RlbHMoKSB7CiAgICAgIHRoaXMuYmlnX3NwaW5uZXIgPSB0cnVlOwogICAgICBheGlvcwogICAgICAgIC5wb3N0KAogICAgICAgICAgYXBpX2NhbGxzLnRyYWluX2ludGVudF9tb2RlbCgpLAogICAgICAgICAgewogICAgICAgICAgICBjb21wYW55X25hbWU6IHRoaXMuY29tcGFueW5hbWUsCiAgICAgICAgICAgIGNvbXBhbnlfaWQ6IHRoaXMuY29tcGFueWlkLAogICAgICAgICAgICBlbWFpbDogdGhpcy4kc2Vzc2lvbi5nZXQoIlVzZXJJbmZvcm1hdGlvbiIpLmVtYWlsLAogICAgICAgICAgICBsaWNlbnNlX2tleTogdGhpcy4kc2Vzc2lvbi5nZXQoIlVzZXJJbmZvcm1hdGlvbiIpLmxpY2Vuc2Vfa2V5LAogICAgICAgICAgICB0b2tlbjogdGhpcy4kc2Vzc2lvbi5nZXQoIlVzZXJJbmZvcm1hdGlvbiIpLnRva2VucywKICAgICAgICAgICAgaXNHZXRNb2RlbHM6IHRydWUsCiAgICAgICAgICB9LAogICAgICAgICAgewogICAgICAgICAgICBoZWFkZXJzOiB7CiAgICAgICAgICAgICAgQXV0aG9yaXphdGlvbjogYEJlYXJlciAke3RoaXMuJHNlc3Npb24uZ2V0KCJhdCIpfWAsCiAgICAgICAgICAgIH0sCiAgICAgICAgICB9CiAgICAgICAgKQogICAgICAgIC50aGVuKCh7IGRhdGEgfSkgPT4gewogICAgICAgICAgdGhpcy5iaWdfc3Bpbm5lciA9IGZhbHNlOwogICAgICAgICAgaWYgKGRhdGEubWVzc2FnZS5NU0dfQ09ERSA9PT0gdGhpcy5hcGlfc3RhdHVzX2NvZGUuREFUQV9BVkFJTEFCTEVfTU9ERUxTLk1TR19DT0RFKSB7CiAgICAgICAgICAgIHRoaXMudHJhaW5lZF9pbnRlbnRfbW9kZWxzID0gZGF0YS5kYXRhLm1vZGVscy5tYXAoKG1vZGVsKSA9PiB7CiAgICAgICAgICAgICAgbW9kZWwuY3JlYXRlZF9hdCA9IG1vbWVudCgKICAgICAgICAgICAgICAgIG1vZGVsLmNyZWF0ZWRfYXQsCiAgICAgICAgICAgICAgICAiWVlZWU1NRERISG1tc3MiCiAgICAgICAgICAgICAgKS5mb3JtYXQoIkRvIE1NTSBZWSIpOwogICAgICAgICAgICAgIHJldHVybiBtb2RlbDsKICAgICAgICAgICAgfSk7IAogICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgU3dhbCh7CiAgICAgICAgICAgICAgdGl0bGU6cmVzcG9uc2UuZGF0YS5tZXNzYWdlLk1TR19DT0RFLAogICAgICAgICAgICAgIHRleHQ6cmVzcG9uc2UuZGF0YS5tZXNzYWdlLk1TRywKICAgICAgICAgICAgICBzaG93Q2FuY2VsQnV0dG9uOiBmYWxzZSwKICAgICAgICAgICAgICBzaG93Q29uZmlybUJ1dHRvbjogZmFsc2UsCiAgICAgICAgICAgICAgdGltZXI6IDI1MDAsCiAgICAgICAgICAgICAgdHlwZTogImVycm9yIgogICAgICAgICAgICB9KQogICAgICAgIH0KICAgICAgICAgIC8vIGNvbnNvbGUubG9nKHJlc3BvbnNlLmRhdGEpOwogICAgICAgIH0pCiAgICAgICAgLmNhdGNoKChlKSA9PiB7CiAgICAgICAgICBjb25zb2xlLmxvZyhlKTsKICAgICAgICAgIHRoaXMuYmlnX3NwaW5uZXIgPSBmYWxzZTsKICAgICAgICAgIGlmICgKICAgICAgICAgICAgZS5yZXNwb25zZS5zdGF0dXMgPT09IDQxMCB8fAogICAgICAgICAgICBlLnJlc3BvbnNlLnN0YXR1cyA9PT0gNDQwIHx8CiAgICAgICAgICAgIGUucmVzcG9uc2Uuc3RhdHVzID09PSA0MDkKICAgICAgICAgICkgewogICAgICAgICAgICB0aGlzLiRyb290LiRlbWl0KCJTZXNzaW9uX0V4cGlyZWQiLCBlLnJlc3BvbnNlLmRhdGEpOwogICAgICAgICAgfQogICAgICAgIH0pOwogICAgfSwKICAgIGdldF90cmFpbmVkX2RpYWxvZ3VlX21vZGVscygpIHsKICAgICAgdGhpcy5iaWdfc3Bpbm5lciA9IHRydWU7CiAgICAgIGF4aW9zCiAgICAgICAgLnBvc3QoCiAgICAgICAgICBhcGlfY2FsbHMudXNlX21vZGVsKCksCiAgICAgICAgICB7CiAgICAgICAgICAgIGVtYWlsOiB0aGlzLiRzZXNzaW9uLmdldCgiVXNlckluZm9ybWF0aW9uIikuZW1haWwsCiAgICAgICAgICAgIHRva2VuOiB0aGlzLiRzZXNzaW9uLmdldCgiVXNlckluZm9ybWF0aW9uIikudG9rZW5zLAogICAgICAgICAgICBjb21wYW55X25hbWU6IHRoaXMuJHNlc3Npb24uZ2V0KCJVc2VySW5mb3JtYXRpb24iKS5jb21wYW55X25hbWUsCiAgICAgICAgICAgIGNvbXBhbnlfaWQ6IHRoaXMuJHNlc3Npb24uZ2V0KCJVc2VySW5mb3JtYXRpb24iKS5jb21wYW55X2lkLAogICAgICAgICAgICBsaWNlbnNlX2tleTogdGhpcy4kc2Vzc2lvbi5nZXQoIlVzZXJJbmZvcm1hdGlvbiIpLmxpY2Vuc2Vfa2V5LAogICAgICAgICAgICBpc1Nob3c6IHRydWUsCiAgICAgICAgICB9LAogICAgICAgICAgewogICAgICAgICAgICBoZWFkZXJzOiB7CiAgICAgICAgICAgICAgQXV0aG9yaXphdGlvbjogYEJlYXJlciAke3RoaXMuJHNlc3Npb24uZ2V0KCJhdCIpfWAsCiAgICAgICAgICAgIH0sCiAgICAgICAgICB9CiAgICAgICAgKQogICAgICAgIC50aGVuKCh7IGRhdGEgfSkgPT4gewogICAgICAgICAgdGhpcy5iaWdfc3Bpbm5lciA9IGZhbHNlOwogICAgICAgICAgaWYgKGRhdGEubWVzc2FnZS5NU0dfQ09ERSA9PT0gdGhpcy5hcGlfc3RhdHVzX2NvZGUuU1VDQ0VTU0ZVTF9EQl9RVUVSWV9DT1JFLk1TR19DT0RFKSB7CiAgICAgICAgICAgIHRoaXMudHJhaW5lZF9kaWFsb2d1ZV9tb2RlbHMgPSBkYXRhLmRhdGEubW9kZWxzLm1hcCgobW9kZWwpID0+IHsKICAgICAgICAgICAgICBtb2RlbC5jcmVhdGVkX2F0ID0gbW9tZW50CiAgICAgICAgICAgICAgICAudW5peChtb2RlbC5jcmVhdGVkX2F0KQogICAgICAgICAgICAgICAgLmZvcm1hdCgiRG8gTU1NIFlZIik7CiAgICAgICAgICAgICAgcmV0dXJuIG1vZGVsOwogICAgICAgICAgICB9KTsgICAgICAKICAgICAgICAgIH1lbHNlIGlmIChkYXRhLm1lc3NhZ2UuTVNHX0NPREUgPT09IHRoaXMuYXBpX3N0YXR1c19jb2RlLkVNUFRZX0RBVEFfTU9ERUxTLk1TR19DT0RFKXsKCiAgICAgICAgICB9ZWxzZSB7CiAgICAgICAgICAgIFN3YWwoewogICAgICAgICAgICAgIHRpdGxlOmRhdGEubWVzc2FnZS5NU0dfQ09ERSwKICAgICAgICAgICAgICB0ZXh0OmRhdGEubWVzc2FnZS5NU0csCiAgICAgICAgICAgICAgc2hvd0NhbmNlbEJ1dHRvbjogZmFsc2UsCiAgICAgICAgICAgICAgc2hvd0NvbmZpcm1CdXR0b246IGZhbHNlLAogICAgICAgICAgICAgIHRvYXN0OiB0cnVlLAogICAgICAgICAgICAgIHBvc2l0aW9uOiAndG9wLWVuZCcsCiAgICAgICAgICAgICAgdGltZXI6IDI1MDAsCiAgICAgICAgICAgICAgdHlwZTogImVycm9yIgogICAgICAgICAgICB9KQogICAgICAgICAgfQoKICAgICAgICB9KQogICAgICAgIC5jYXRjaCgoZSkgPT4gewogICAgICAgICAgY29uc29sZS5sb2coZSk7CiAgICAgICAgICB0aGlzLmJpZ19zcGlubmVyID0gZmFsc2U7CiAgICAgICAgICBpZiAoCiAgICAgICAgICAgIGUucmVzcG9uc2Uuc3RhdHVzID09PSA0MTAgfHwKICAgICAgICAgICAgZS5yZXNwb25zZS5zdGF0dXMgPT09IDQ0MCB8fAogICAgICAgICAgICBlLnJlc3BvbnNlLnN0YXR1cyA9PT0gNDA5CiAgICAgICAgICApIHsKICAgICAgICAgICAgdGhpcy4kcm9vdC4kZW1pdCgiU2Vzc2lvbl9FeHBpcmVkIiwgZS5yZXNwb25zZS5kYXRhKTsKICAgICAgICAgIH0KICAgICAgICB9KTsKICAgIH0sCiAgICBnZXRfdHJhaW5lZF9uZXJfbW9kZWxzKCkgewogICAgICB0aGlzLmJpZ19zcGlubmVyID0gdHJ1ZTsKICAgICAgYXhpb3MKICAgICAgICAuZ2V0KAogICAgICAgICAgYXBpX2NhbGxzLnJldmVydF9uZXJfbW9kZWxzKCksCiAgICAgICAgICB7CiAgICAgICAgICAgIHBhcmFtczogewogICAgICAgICAgICAgIGVtYWlsOiB0aGlzLiRzZXNzaW9uLmdldCgiVXNlckluZm9ybWF0aW9uIikuZW1haWwsCiAgICAgICAgICAgICAgdG9rZW46IHRoaXMuJHNlc3Npb24uZ2V0KCJVc2VySW5mb3JtYXRpb24iKS50b2tlbnMsCiAgICAgICAgICAgICAgY29tcGFueV9uYW1lOiB0aGlzLiRzZXNzaW9uLmdldCgiVXNlckluZm9ybWF0aW9uIikuY29tcGFueV9uYW1lLAogICAgICAgICAgICAgIGNvbXBhbnlfaWQ6IHRoaXMuJHNlc3Npb24uZ2V0KCJVc2VySW5mb3JtYXRpb24iKS5jb21wYW55X2lkLAogICAgICAgICAgICAgIGxpY2Vuc2Vfa2V5OiB0aGlzLiRzZXNzaW9uLmdldCgiVXNlckluZm9ybWF0aW9uIikubGljZW5zZV9rZXksCiAgICAgICAgICAgICAgcmV2ZXJ0X2NvbXBhbnlfaWQ6CiAgICAgICAgICAgICAgICB0aGlzLiRzZXNzaW9uLmdldCgiVXNlckluZm9ybWF0aW9uIikuY29tcGFueV9pZCwKICAgICAgICAgICAgICByZXZlcnRfY29tcGFueV9uYW1lOgogICAgICAgICAgICAgICAgdGhpcy4kc2Vzc2lvbi5nZXQoIlVzZXJJbmZvcm1hdGlvbiIpLmNvbXBhbnlfbmFtZSwKICAgICAgICAgICAgICBpc1Nob3c6IHRydWUsCiAgICAgICAgICAgIH0sCiAgICAgICAgICB9LAogICAgICAgICAgewogICAgICAgICAgICBoZWFkZXJzOiB7CiAgICAgICAgICAgICAgQXV0aG9yaXphdGlvbjogYEJlYXJlciAke3RoaXMuJHNlc3Npb24uZ2V0KCJhdCIpfWAsCiAgICAgICAgICAgIH0sCiAgICAgICAgICB9CiAgICAgICAgKQogICAgICAgIC50aGVuKCh7IGRhdGEgfSkgPT4gewogICAgICAgICAgdGhpcy5iaWdfc3Bpbm5lciA9IGZhbHNlOwogICAgICAgICAgaWYgKGRhdGEubWVzc2FnZS5NU0dfQ09ERSA9PT0gdGhpcy5hcGlfc3RhdHVzX2NvZGUuREFUQV9BVkFJTEFCTEVfTU9ERUxTLk1TR19DT0RFKSB7CiAgICAgICAgICAgIHRoaXMudHJhaW5lZF9uZXJfbW9kZWxzID0gZGF0YS5kYXRhLm1vZGVsX2RhdGEubWFwKChtb2RlbCkgPT4gewogICAgICAgICAgICAgIG1vZGVsLmNyZWF0ZWRfYXQgPSBtb21lbnQoCiAgICAgICAgICAgICAgICBtb2RlbC5jcmVhdGVkX2F0LAogICAgICAgICAgICAgICAgIllZWVlNTURESEhtbXNzIgogICAgICAgICAgICAgICkuZm9ybWF0KCJEbyBNTU0gWVkiKTsKICAgICAgICAgICAgICByZXR1cm4gbW9kZWw7CiAgICAgICAgICAgIH0pOyAgICAgICAKICAgICAgICAgIH1lbHNlIGlmIChkYXRhLm1lc3NhZ2UuTVNHX0NPREUgPT09IHRoaXMuYXBpX3N0YXR1c19jb2RlLkVNUFRZX0RBVEFfTU9ERUxTLk1TR19DT0RFKXsKCiAgICAgICAgICB9CiAgICAgICAgICBlbHNlewogICAgICAgICAgICBTd2FsKHsKICAgICAgICAgICAgICB0aXRsZTpkYXRhLm1lc3NhZ2UuTVNHX0NPREUsCiAgICAgICAgICAgICAgdGV4dDpkYXRhLm1lc3NhZ2UuTVNHLAogICAgICAgICAgICAgIHNob3dDYW5jZWxCdXR0b246IGZhbHNlLAogICAgICAgICAgICAgIHNob3dDb25maXJtQnV0dG9uOiBmYWxzZSwKICAgICAgICAgICAgICB0b2FzdDogdHJ1ZSwKICAgICAgICAgICAgICBwb3NpdGlvbjogJ3RvcC1lbmQnLAogICAgICAgICAgICAgIHRpbWVyOiAyNTAwLAogICAgICAgICAgICAgIHR5cGU6ICJlcnJvciIKICAgICAgICAgICAgfSkgICAgICAgICAgIAogICAgICAgICAgfQogICAgICAgIH0pCiAgICAgICAgLmNhdGNoKChlKSA9PiB7CiAgICAgICAgICBjb25zb2xlLmxvZyhlKTsKICAgICAgICAgIHRoaXMuYmlnX3NwaW5uZXIgPSBmYWxzZTsKICAgICAgICAgIGlmICgKICAgICAgICAgICAgZS5yZXNwb25zZS5zdGF0dXMgPT09IDQxMCB8fAogICAgICAgICAgICBlLnJlc3BvbnNlLnN0YXR1cyA9PT0gNDQwIHx8CiAgICAgICAgICAgIGUucmVzcG9uc2Uuc3RhdHVzID09PSA0MDkKICAgICAgICAgICkgewogICAgICAgICAgICB0aGlzLiRyb290LiRlbWl0KCJTZXNzaW9uX0V4cGlyZWQiLCBlLnJlc3BvbnNlLmRhdGEpOwogICAgICAgICAgfQogICAgICAgIH0pOwogICAgfSwKICAgIHNlbGVjdF90cmFpbmVkX2ludGVudF9tb2RlbChpbmRleCkgewogICAgICBpZighdGhpcy5kaXNhYmxlX2J0bl9leHBpcmVkKXsKICAgICAgICBsZXQgY2FsbF9hcGkgPSB0cnVlOwogICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy50cmFpbmVkX2ludGVudF9tb2RlbHMubGVuZ3RoOyBpKyspIHsKICAgICAgICAgIGlmICh0aGlzLnRyYWluZWRfaW50ZW50X21vZGVsc1tpbmRleF0uYWN0aXZlKSB7CiAgICAgICAgICAgIGNhbGxfYXBpID0gZmFsc2U7CiAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgICBpZiAoY2FsbF9hcGkpIHsKICAgICAgICAgIFN3YWwuZmlyZSh7CiAgICAgICAgICAgIHRpdGxlOiB0aGlzLnRsdCgndHJhaW5lZF9pbnRlbnRfc3dhbF9hbGVydF9tc2cnKSwKICAgICAgICAgICAgdGV4dDoKICAgICAgICAgICAgICB0aGlzLnRsdCgndHJhaW5lZF9pbnRlbnRfc3dhbF9zZXRfbXNnJykgKwogICAgICAgICAgICAgIHRoaXMudGx0KCd0cmFpbmVkX2ludGVudF9zd2FsX2NvbXBhbnluYW1lX21zZycpICsKICAgICAgICAgICAgICAiIFYiICsKICAgICAgICAgICAgICAodGhpcy50bHQoJ3RyYWluZWRfaW50ZW50X21vZGVsX3N3YWxfbXNnJykubGVuZ3RoIC0gaW5kZXgpICsKICAgICAgICAgICAgICB0aGlzLnRsdCgndHJhaW5lZF9pbnRlbnRfY3VycmVudF9tb2RlbF9tc2cnKSwKICAgICAgICAgICAgdHlwZTogInF1ZXN0aW9uIiwKICAgICAgICAgICAgc2hvd0NhbmNlbEJ1dHRvbjogdHJ1ZSwKICAgICAgICAgICAgY29uZmlybUJ1dHRvbkNvbG9yOiAiIzMwODVkNiIsCiAgICAgICAgICAgIGNhbmNlbEJ1dHRvbkNvbG9yOiAiI2QzMyIsCiAgICAgICAgICAgIGNvbmZpcm1CdXR0b25UZXh0OiB0aGlzLnRsdCgndHJhaW5lZF9pbnRlbnRfc3dhbF9jb25maXJtX21zZycpLAogICAgICAgICAgICBhbGxvd091dHNpZGVDbGljazogZmFsc2UsCiAgICAgICAgICAgIGFsbG93RXNjYXBlS2V5OiBmYWxzZSwKICAgICAgICAgIH0pLnRoZW4oKHJlc3VsdCkgPT4gewogICAgICAgICAgICBpZiAocmVzdWx0LnZhbHVlKSB7CiAgICAgICAgICAgICAgdGhpcy5kaXNhYmxlX3NpZGViYXIgPSB0cnVlOwogICAgICAgICAgICAgIHRoaXMuJHJvb3QuJGVtaXQoIkRhc2hib2FyZFNpZGViYXJEaXNhYmxlIix0cnVlKTsKICAgICAgICAgICAgICB0aGlzLiRzZXNzaW9uLnNldCgiU2V0dGluZ1RvcG5hdmJhckRpc2FibGUiLHRydWUpOwogICAgICAgICAgICAgIHRoaXMuYmlnX3NwaW5uZXIgPSB0cnVlOwogICAgICAgICAgICAgIC8vIFN3YWwuZmlyZSh7CiAgICAgICAgICAgICAgLy8gICB0ZXh0OiAiUGxlYXNlIHdhaXQgd2hpbGUgd2Ugc3VibWl0IHlvdXIgcmVxdWVzdCIsCiAgICAgICAgICAgICAgLy8gICB0b2FzdDogdHJ1ZSwKICAgICAgICAgICAgICAvLyAgIHR5cGU6ICJpbmZvIiwKICAgICAgICAgICAgICAvLyAgIHNob3dDYW5jZWxCdXR0b246IGZhbHNlLAogICAgICAgICAgICAgIC8vICAgc2hvd0NvbmZpcm1CdXR0b246IGZhbHNlLAogICAgICAgICAgICAgIC8vIH0pOwogICAgICAgICAgICAgIGF4aW9zCiAgICAgICAgICAgICAgICAucG9zdCgKICAgICAgICAgICAgICAgICAgYXBpX2NhbGxzLnRyYWluX2ludGVudF9tb2RlbCgpLAogICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgY29tcGFueV9uYW1lOiB0aGlzLmNvbXBhbnluYW1lLAogICAgICAgICAgICAgICAgICAgIGNvbXBhbnlfaWQ6IHRoaXMuY29tcGFueWlkLAogICAgICAgICAgICAgICAgICAgIGVtYWlsOiB0aGlzLiRzZXNzaW9uLmdldCgiVXNlckluZm9ybWF0aW9uIikuZW1haWwsCiAgICAgICAgICAgICAgICAgICAgbGljZW5zZV9rZXk6IHRoaXMuJHNlc3Npb24uZ2V0KCJVc2VySW5mb3JtYXRpb24iKS5saWNlbnNlX2tleSwKICAgICAgICAgICAgICAgICAgICB0b2tlbjogdGhpcy4kc2Vzc2lvbi5nZXQoIlVzZXJJbmZvcm1hdGlvbiIpLnRva2VucywKICAgICAgICAgICAgICAgICAgICBGaWxlTmFtZTogdGhpcy50cmFpbmVkX2ludGVudF9tb2RlbHNbaW5kZXhdLkZpbGVOYW1lLAogICAgICAgICAgICAgICAgICAgIGlzQ2hhbmdlTW9kZWxWZXJzaW9uOiB0cnVlLAogICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgaGVhZGVyczogewogICAgICAgICAgICAgICAgICAgICAgQXV0aG9yaXphdGlvbjogYEJlYXJlciAke3RoaXMuJHNlc3Npb24uZ2V0KCJhdCIpfWAsCiAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgKQogICAgICAgICAgICAgICAgLnRoZW4oKHJlc3BvbnNlKSA9PiB7CiAgICAgICAgICAgICAgICAgIHRoaXMuYmlnX3NwaW5uZXIgPSBmYWxzZTsKICAgICAgICAgICAgICAgICAgdGhpcy5kaXNhYmxlX3NpZGViYXIgPSBmYWxzZTsKICAgICAgICAgICAgICAgICAgdGhpcy4kcm9vdC4kZW1pdCgiRGFzaGJvYXJkU2lkZWJhckRpc2FibGUiLGZhbHNlKTsKICAgICAgICAgICAgICAgICAgdGhpcy4kc2Vzc2lvbi5zZXQoIlNldHRpbmdUb3BuYXZiYXJEaXNhYmxlIixmYWxzZSk7CiAgICAgICAgICAgICAgICAgIGlmIChyZXNwb25zZS5kYXRhLm1lc3NhZ2UuTVNHX0NPREUgPT09IHRoaXMuYXBpX3N0YXR1c19jb2RlLk1PREVMX1VQREFURURfTU9ERUxTLk1TR19DT0RFKSB7CiAgICAgICAgICAgICAgICAgICAgdGhpcy5nZXRfdHJhaW5lZF9pbnRlbnRfbW9kZWxzKCk7CiAgICAgICAgICAgICAgICAgICAgU3dhbC5maXJlKHsKICAgICAgICAgICAgICAgICAgICAgIHRpdGxlOiB0aGlzLnRsdCgndHJhaW5lZF9pbnRlbnRfbW9kZWxfdXBkYXRlZF9tc2cnKSwKICAgICAgICAgICAgICAgICAgICAgIHR5cGU6ICJzdWNjZXNzIiwKICAgICAgICAgICAgICAgICAgICAgIGFsbG93T3V0c2lkZUNsaWNrOiBmYWxzZSwKICAgICAgICAgICAgICAgICAgICAgIGFsbG93RXNjYXBlS2V5OiBmYWxzZSwKICAgICAgICAgICAgICAgICAgICAgIHRpbWVyOiAyMDAwLAogICAgICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgIFN3YWwuZmlyZSh7CiAgICAgICAgICAgICAgICAgICAgICB0aXRsZTogcmVzcG9uc2UuZGF0YS5tZXNzYWdlLk1TR19DT0RFLAogICAgICAgICAgICAgICAgICAgICAgdGV4dDogcmVzcG9uc2UuZGF0YS5tZXNzYWdlLk1TRywKICAgICAgICAgICAgICAgICAgICAgIHNob3dDYW5jZWxCdXR0b246IGZhbHNlLAogICAgICAgICAgICAgICAgICAgICAgc2hvd0NvbmZpcm1CdXR0b246IGZhbHNlLAogICAgICAgICAgICAgICAgICAgICAgdHlwZTogImVycm9yIgogICAgICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKHJlc3BvbnNlKTsKICAgICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgICAuY2F0Y2goKGUpID0+IHsKICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coZSkKICAgICAgICAgICAgICAgICAgdGhpcy5iaWdfc3Bpbm5lciA9IGZhbHNlOwogICAgICAgICAgICAgICAgICB0aGlzLmRpc2FibGVfc2lkZWJhciA9IGZhbHNlOwogICAgICAgICAgICAgICAgICB0aGlzLiRyb290LiRlbWl0KCJEYXNoYm9hcmRTaWRlYmFyRGlzYWJsZSIsZmFsc2UpOwogICAgICAgICAgICAgICAgICB0aGlzLiRzZXNzaW9uLnNldCgiU2V0dGluZ1RvcG5hdmJhckRpc2FibGUiLGZhbHNlKTsKICAgICAgICAgICAgICAgICAgaWYgKAogICAgICAgICAgICAgICAgICAgIGUucmVzcG9uc2Uuc3RhdHVzID09PSA0MTAgfHwKICAgICAgICAgICAgICAgICAgICBlLnJlc3BvbnNlLnN0YXR1cyA9PT0gNDQwIHx8CiAgICAgICAgICAgICAgICAgICAgZS5yZXNwb25zZS5zdGF0dXMgPT09IDQwOQogICAgICAgICAgICAgICAgICApIHsKICAgICAgICAgICAgICAgICAgICB0aGlzLiRyb290LiRlbWl0KCJTZXNzaW9uX0V4cGlyZWQiLCBlLnJlc3BvbnNlLmRhdGEpOwogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgfQogICAgICAgICAgfSk7CiAgICAgICAgfQogICAgICB9ZWxzZXsKICAgICAgICB0aGlzLnNob3dfc3Vic2NyaXB0aW9uX2V4cGlyZWRfc3dhbCh0cnVlKTsKICAgICAgfQogICAgfSwKICAgIHNlbGVjdF90cmFpbmVkX2RpYWxvZ3VlX21vZGVsKGluZGV4KSB7CiAgICAgIGlmKCF0aGlzLmRpc2FibGVfYnRuX2V4cGlyZWQpewogICAgICAgIGxldCBjYWxsX2FwaSA9IHRydWU7CiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLnRyYWluZWRfZGlhbG9ndWVfbW9kZWxzLmxlbmd0aDsgaSsrKSB7CiAgICAgICAgICBpZiAodGhpcy50cmFpbmVkX2RpYWxvZ3VlX21vZGVsc1tpbmRleF0uYWN0aXZlKSB7CiAgICAgICAgICAgIGNhbGxfYXBpID0gZmFsc2U7CiAgICAgICAgICAgIGJyZWFrOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgICBpZiAoY2FsbF9hcGkpIHsKICAgICAgICAgIFN3YWwuZmlyZSh7CiAgICAgICAgICAgIHRpdGxlOiB0aGlzLnRsdCgndHJhaW5lZF9kaWFsb2dfc3dhbF9hbGVydF9tc2cnKSwKICAgICAgICAgICAgdGV4dDoKICAgICAgICAgICAgICB0aGlzLnRsdCgndHJhaW5lZF9kaWFsb2dfc3dhbF9zZXRfbXNnJykgKwogICAgICAgICAgICAgIHRoaXMudGx0KCd0cmFpbmVkX2RpYWxvZ19zd2FsX2NvbXBhbnluYW1lX21zZycpICsKICAgICAgICAgICAgICAiIFYiICsKICAgICAgICAgICAgICAodGhpcy50bHQoJ3RyYWluZWRfZGlhbG9nX21vZGVsX3N3YWxfbXNnJykubGVuZ3RoIC0gaW5kZXgpICsKICAgICAgICAgICAgICB0aGlzLnRsdCgndHJhaW5lZF9kaWFsb2dfY3VycmVudF9tb2RlbF9tc2cnKSwKICAgICAgICAgICAgdHlwZTogInF1ZXN0aW9uIiwKICAgICAgICAgICAgc2hvd0NhbmNlbEJ1dHRvbjogdHJ1ZSwKICAgICAgICAgICAgY29uZmlybUJ1dHRvbkNvbG9yOiAiIzMwODVkNiIsCiAgICAgICAgICAgIGNhbmNlbEJ1dHRvbkNvbG9yOiAiI2QzMyIsCiAgICAgICAgICAgIGNvbmZpcm1CdXR0b25UZXh0OiB0aGlzLnRsdCgndHJhaW5lZF9kaWFsb2dfc3dhbF9jb25maXJtX21zZycpLAogICAgICAgICAgICBhbGxvd091dHNpZGVDbGljazogZmFsc2UsCiAgICAgICAgICAgIGFsbG93RXNjYXBlS2V5OiBmYWxzZSwKICAgICAgICAgIH0pLnRoZW4oKHJlc3VsdCkgPT4gewogICAgICAgICAgICBpZiAocmVzdWx0LnZhbHVlKSB7CiAgICAgICAgICAgICAgdGhpcy4kcm9vdC4kZW1pdCgiRGFzaGJvYXJkU2lkZWJhckRpc2FibGUiLHRydWUpOwogICAgICAgICAgICAgIHRoaXMuJHNlc3Npb24uc2V0KCJTZXR0aW5nVG9wbmF2YmFyRGlzYWJsZSIsdHJ1ZSk7CiAgICAgICAgICAgICAgdGhpcy5kaXNhYmxlX3NpZGViYXIgPSB0cnVlOwogICAgICAgICAgICAgIHRoaXMuYmlnX3NwaW5uZXIgPSB0cnVlOwogICAgICAgICAgICAgIC8vIFN3YWwuZmlyZSh7CiAgICAgICAgICAgICAgLy8gICB0ZXh0OiAiUGxlYXNlIHdhaXQgd2hpbGUgd2Ugc3VibWl0IHlvdXIgcmVxdWVzdCIsCiAgICAgICAgICAgICAgLy8gICB0b2FzdDogdHJ1ZSwKICAgICAgICAgICAgICAvLyAgIHR5cGU6ICJpbmZvIiwKICAgICAgICAgICAgICAvLyAgIHNob3dDYW5jZWxCdXR0b246IGZhbHNlLAogICAgICAgICAgICAgIC8vICAgc2hvd0NvbmZpcm1CdXR0b246IGZhbHNlLAogICAgICAgICAgICAgIC8vIH0pOwogICAgICAgICAgICAgIGF4aW9zCiAgICAgICAgICAgICAgICAucG9zdCgKICAgICAgICAgICAgICAgICAgYXBpX2NhbGxzLnJldmVydF9tb2RlbHMoKSwKICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgIGVtYWlsOiB0aGlzLiRzZXNzaW9uLmdldCgiVXNlckluZm9ybWF0aW9uIikuZW1haWwsCiAgICAgICAgICAgICAgICAgICAgbGljZW5zZV9rZXk6IHRoaXMuJHNlc3Npb24uZ2V0KCJVc2VySW5mb3JtYXRpb24iKS5saWNlbnNlX2tleSwKICAgICAgICAgICAgICAgICAgICB0b2tlbjogdGhpcy4kc2Vzc2lvbi5nZXQoIlVzZXJJbmZvcm1hdGlvbiIpLnRva2VucywKICAgICAgICAgICAgICAgICAgICBzdWJzY3JpcHRpb246CiAgICAgICAgICAgICAgICAgICAgICB0aGlzLiRzZXNzaW9uLmdldCgiVXNlckluZm9ybWF0aW9uIikuc3Vic2NyaXB0aW9uLAogICAgICAgICAgICAgICAgICAgIGNvbXBhbnlfZGV0YWlsczogewogICAgICAgICAgICAgICAgICAgICAgY29tcGFueV9pZDogdGhpcy4kc2Vzc2lvbi5nZXQoIlVzZXJJbmZvcm1hdGlvbiIpLmNvbXBhbnlfaWQsCiAgICAgICAgICAgICAgICAgICAgICBjb21wYW55X25hbWU6CiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuJHNlc3Npb24uZ2V0KCJVc2VySW5mb3JtYXRpb24iKS5jb21wYW55X25hbWUsCiAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICBtb2RlbF9maWxlOiB0aGlzLnRyYWluZWRfZGlhbG9ndWVfbW9kZWxzW2luZGV4XS5GaWxlTmFtZSwKICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgIGhlYWRlcnM6IHsKICAgICAgICAgICAgICAgICAgICAgIEF1dGhvcml6YXRpb246IGBCZWFyZXIgJHt0aGlzLiRzZXNzaW9uLmdldCgiYXQiKX1gLAogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgIC50aGVuKChyZXNwb25zZSkgPT4gewogICAgICAgICAgICAgICAgICB0aGlzLmJpZ19zcGlubmVyID0gZmFsc2U7CiAgICAgICAgICAgICAgICAgIHRoaXMuZGlzYWJsZV9zaWRlYmFyID0gZmFsc2U7CiAgICAgICAgICAgICAgICAgIHRoaXMuJHJvb3QuJGVtaXQoIkRhc2hib2FyZFNpZGViYXJEaXNhYmxlIixmYWxzZSk7CiAgICAgICAgICAgICAgICAgIHRoaXMuJHNlc3Npb24uc2V0KCJTZXR0aW5nVG9wbmF2YmFyRGlzYWJsZSIsZmFsc2UpOwogICAgICAgICAgICAgICAgICBpZiAocmVzcG9uc2UuZGF0YS5tZXNzYWdlLk1TR19DT0RFID09PSB0aGlzLmFwaV9zdGF0dXNfY29kZS5VUERBVEVEX0NPUkUuTVNHX0NPREUpIHsKICAgICAgICAgICAgICAgICAgICBTd2FsLmZpcmUoewogICAgICAgICAgICAgICAgICAgICAgdGl0bGU6IHRoaXMudGx0KCd0cmFpbmVkX2RpYWxvZ19tb2RlbF91cGRhdGVkX21zZycpLAogICAgICAgICAgICAgICAgICAgICAgdHlwZTogInN1Y2Nlc3MiLAogICAgICAgICAgICAgICAgICAgICAgYWxsb3dPdXRzaWRlQ2xpY2s6IGZhbHNlLAogICAgICAgICAgICAgICAgICAgICAgYWxsb3dFc2NhcGVLZXk6IGZhbHNlLAogICAgICAgICAgICAgICAgICAgICAgdGltZXI6IDIwMDAsCiAgICAgICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICAgICAgICB0aGlzLmdldF90cmFpbmVkX2RpYWxvZ3VlX21vZGVscygpOwogICAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICAgIFN3YWwuZmlyZSh7CiAgICAgICAgICAgICAgICAgICAgICB0aXRsZTogcmVzcG9uc2UuZGF0YS5tZXNzYWdlLk1TR19DT0RFLAogICAgICAgICAgICAgICAgICAgICAgdGV4dDogcmVzcG9uc2UuZGF0YS5tZXNzYWdlLk1TRywKICAgICAgICAgICAgICAgICAgICAgIHNob3dDYW5jZWxCdXR0b246IGZhbHNlLAogICAgICAgICAgICAgICAgICAgICAgc2hvd0NvbmZpcm1CdXR0b246IGZhbHNlLAogICAgICAgICAgICAgICAgICAgICAgdGltZXI6IDI1MDAsCiAgICAgICAgICAgICAgICAgICAgICB0eXBlOiAiZXJyb3IiCiAgICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgLy8gY29uc29sZS5sb2cocmVzcG9uc2UpOwogICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICAgIC5jYXRjaCgoZSkgPT4gewogICAgICAgICAgICAgICAgICB0aGlzLmJpZ19zcGlubmVyID0gZmFsc2U7CiAgICAgICAgICAgICAgICAgIHRoaXMuZGlzYWJsZV9zaWRlYmFyID0gZmFsc2U7CiAgICAgICAgICAgICAgICAgIHRoaXMuJHJvb3QuJGVtaXQoIkRhc2hib2FyZFNpZGViYXJEaXNhYmxlIixmYWxzZSk7CiAgICAgICAgICAgICAgICAgIHRoaXMuJHNlc3Npb24uc2V0KCJTZXR0aW5nVG9wbmF2YmFyRGlzYWJsZSIsZmFsc2UpOwogICAgICAgICAgICAgICAgICBpZiAoCiAgICAgICAgICAgICAgICAgICAgZS5yZXNwb25zZS5zdGF0dXMgPT09IDQxMCB8fAogICAgICAgICAgICAgICAgICAgIGUucmVzcG9uc2Uuc3RhdHVzID09PSA0NDAgfHwKICAgICAgICAgICAgICAgICAgICBlLnJlc3BvbnNlLnN0YXR1cyA9PT0gNDA5CiAgICAgICAgICAgICAgICAgICkgewogICAgICAgICAgICAgICAgICAgIHRoaXMuJHJvb3QuJGVtaXQoIlNlc3Npb25fRXhwaXJlZCIsIGUucmVzcG9uc2UuZGF0YSk7CiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICB9CiAgICAgICAgICB9KTsKICAgICAgICB9CiAgICAgIH1lbHNlewogICAgICAgIHRoaXMuc2hvd19zdWJzY3JpcHRpb25fZXhwaXJlZF9zd2FsKHRydWUpOwogICAgICB9CiAgICB9LAogICAgc2VsZWN0X3RyYWluZWRfbmVyX21vZGVsKGluZGV4KSB7CiAgICAgIGlmKCF0aGlzLmRpc2FibGVfYnRuX2V4cGlyZWQpewogICAgICAgIGxldCBjYWxsX2FwaSA9IHRydWU7CiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLnRyYWluZWRfbmVyX21vZGVscy5sZW5ndGg7IGkrKykgewogICAgICAgICAgaWYgKHRoaXMudHJhaW5lZF9uZXJfbW9kZWxzW2luZGV4XS5hY3RpdmUpIHsKICAgICAgICAgICAgY2FsbF9hcGkgPSBmYWxzZTsKICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICAgIGlmIChjYWxsX2FwaSkgewogICAgICAgICAgU3dhbC5maXJlKHsKICAgICAgICAgICAgdGl0bGU6IHRoaXMudGx0KCd0cmFpbmVkX25lcl9zd2FsX2FsZXJ0X21zZycpLAogICAgICAgICAgICB0ZXh0OgogICAgICAgICAgICAgIHRoaXMudGx0KCd0cmFpbmVkX25lcl9zd2FsX3NldF9tc2cnKSArCiAgICAgICAgICAgICAgdGhpcy50bHQoJ3RyYWluZWRfbmVyX3N3YWxfY29tcGFueW5hbWVfbXNnJykgKwogICAgICAgICAgICAgICIgViIgKwogICAgICAgICAgICAgICh0aGlzLnRsdCgndHJhaW5lZF9uZXJfbW9kZWxfc3dhbF9tc2cnKS5sZW5ndGggLSBpbmRleCkgKwogICAgICAgICAgICAgIHRoaXMudGx0KCd0cmFpbmVkX25lcl9jdXJyZW50X21vZGVsX21zZycpLAogICAgICAgICAgICB0eXBlOiAicXVlc3Rpb24iLAogICAgICAgICAgICBzaG93Q2FuY2VsQnV0dG9uOiB0cnVlLAogICAgICAgICAgICBjb25maXJtQnV0dG9uQ29sb3I6ICIjMzA4NWQ2IiwKICAgICAgICAgICAgY2FuY2VsQnV0dG9uQ29sb3I6ICIjZDMzIiwKICAgICAgICAgICAgY29uZmlybUJ1dHRvblRleHQ6IHRoaXMudGx0KCd0cmFpbmVkX25lcl9zd2FsX2NvbmZpcm1fbXNnJyksCiAgICAgICAgICAgIGFsbG93T3V0c2lkZUNsaWNrOiBmYWxzZSwKICAgICAgICAgICAgYWxsb3dFc2NhcGVLZXk6IGZhbHNlLAogICAgICAgICAgfSkudGhlbigocmVzdWx0KSA9PiB7CiAgICAgICAgICAgIGlmIChyZXN1bHQudmFsdWUpIHsKICAgICAgICAgICAgICB0aGlzLiRyb290LiRlbWl0KCJEYXNoYm9hcmRTaWRlYmFyRGlzYWJsZSIsdHJ1ZSk7CiAgICAgICAgICAgICAgdGhpcy4kc2Vzc2lvbi5zZXQoIlNldHRpbmdUb3BuYXZiYXJEaXNhYmxlIix0cnVlKTsKICAgICAgICAgICAgICB0aGlzLmRpc2FibGVfc2lkZWJhciA9IHRydWU7CiAgICAgICAgICAgICAgdGhpcy5iaWdfc3Bpbm5lciA9IHRydWU7CiAgICAgICAgICAgICAgLy8gU3dhbC5maXJlKHsKICAgICAgICAgICAgICAvLyAgIHRleHQ6ICJQbGVhc2Ugd2FpdCB3aGlsZSB3ZSBzdWJtaXQgeW91ciByZXF1ZXN0IiwKICAgICAgICAgICAgICAvLyAgIHRvYXN0OiB0cnVlLAogICAgICAgICAgICAgIC8vICAgdHlwZTogImluZm8iLAogICAgICAgICAgICAgIC8vICAgc2hvd0NhbmNlbEJ1dHRvbjogZmFsc2UsCiAgICAgICAgICAgICAgLy8gICBzaG93Q29uZmlybUJ1dHRvbjogZmFsc2UsCiAgICAgICAgICAgICAgLy8gfSk7CiAgICAgICAgICAgICAgYXhpb3MKICAgICAgICAgICAgICAgIC5wb3N0KAogICAgICAgICAgICAgICAgICBhcGlfY2FsbHMucmV2ZXJ0X25lcl9tb2RlbHMoKSwKICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgIGNvbXBhbnlfbmFtZTogdGhpcy5jb21wYW55bmFtZSwKICAgICAgICAgICAgICAgICAgICBjb21wYW55X2lkOiB0aGlzLmNvbXBhbnlpZCwKICAgICAgICAgICAgICAgICAgICBlbWFpbDogdGhpcy4kc2Vzc2lvbi5nZXQoIlVzZXJJbmZvcm1hdGlvbiIpLmVtYWlsLAogICAgICAgICAgICAgICAgICAgIGxpY2Vuc2Vfa2V5OiB0aGlzLiRzZXNzaW9uLmdldCgiVXNlckluZm9ybWF0aW9uIikubGljZW5zZV9rZXksCiAgICAgICAgICAgICAgICAgICAgdG9rZW46IHRoaXMuJHNlc3Npb24uZ2V0KCJVc2VySW5mb3JtYXRpb24iKS50b2tlbnMsCiAgICAgICAgICAgICAgICAgICAgY29tcGFueV9kZXRhaWxzOiB7CiAgICAgICAgICAgICAgICAgICAgICBjb21wYW55X2lkOiB0aGlzLmNvbXBhbnlpZCwKICAgICAgICAgICAgICAgICAgICAgIGNvbXBhbnlfbmFtZTogdGhpcy5jb21wYW55bmFtZSwKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgIG1vZGVsX2ZpbGU6IHRoaXMudHJhaW5lZF9uZXJfbW9kZWxzW2luZGV4XS5GaWxlTmFtZSwKICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgIGhlYWRlcnM6IHsKICAgICAgICAgICAgICAgICAgICAgIEF1dGhvcml6YXRpb246IGBCZWFyZXIgJHt0aGlzLiRzZXNzaW9uLmdldCgiYXQiKX1gLAogICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICkKICAgICAgICAgICAgICAgIC50aGVuKChyZXNwb25zZSkgPT4gewogICAgICAgICAgICAgICAgICB0aGlzLmRpc2FibGVfc2lkZWJhciA9IGZhbHNlOwogICAgICAgICAgICAgICAgICB0aGlzLiRyb290LiRlbWl0KCJEYXNoYm9hcmRTaWRlYmFyRGlzYWJsZSIsdHJ1ZSk7CiAgICAgICAgICAgICAgICAgIHRoaXMuJHNlc3Npb24uc2V0KCJTZXR0aW5nVG9wbmF2YmFyRGlzYWJsZSIsdHJ1ZSk7CiAgICAgICAgICAgICAgICAgIHRoaXMuYmlnX3NwaW5uZXIgPSBmYWxzZTsKICAgICAgICAgICAgICAgICAgaWYgKHJlc3BvbnNlLmRhdGEubWVzc2FnZS5NU0dfQ09ERSA9PT0gdGhpcy5hcGlfc3RhdHVzX2NvZGUuUkVWRVJUX1NVQ0NFU1NGVUxfTU9ERUxTLk1TR19DT0RFKSB7CiAgICAgICAgICAgICAgICAgICAgU3dhbC5maXJlKHsKICAgICAgICAgICAgICAgICAgICAgIHRpdGxlOiB0aGlzLnRsdCgndHJhaW5lZF9uZXJfbW9kZWxfdXBkYXRlZF9tc2cnKSwKICAgICAgICAgICAgICAgICAgICAgIHR5cGU6ICJzdWNjZXNzIiwKICAgICAgICAgICAgICAgICAgICAgIGFsbG93T3V0c2lkZUNsaWNrOiBmYWxzZSwKICAgICAgICAgICAgICAgICAgICAgIGFsbG93RXNjYXBlS2V5OiBmYWxzZSwKICAgICAgICAgICAgICAgICAgICAgIHRpbWVyOiAyMDAwLAogICAgICAgICAgICAgICAgICAgIH0pLnRoZW4oKHJlc3VsdF9zdWNjZXNzKSA9PiB7CiAgICAgICAgICAgICAgICAgICAgICAvLyBpZiAocmVzdWx0X3N1Y2Nlc3MudmFsdWUpIHsKICAgICAgICAgICAgICAgICAgICAgIHRoaXMuYmlnX3NwaW5uZXIgPSB0cnVlOwogICAgICAgICAgICAgICAgICAgICAgdGhpcy5nZXRfdHJhaW5lZF9uZXJfbW9kZWxzKCk7CiAgICAgICAgICAgICAgICAgICAgICAvLyB9CiAgICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgU3dhbC5maXJlKHsKICAgICAgICAgICAgICAgICAgICAgIHRpdGxlOiByZXNwb25zZS5kYXRhLm1lc3NhZ2UuTVNHX0NPREUsCiAgICAgICAgICAgICAgICAgICAgICB0ZXh0OiByZXNwb25zZS5kYXRhLm1lc3NhZ2UuTVNHLAogICAgICAgICAgICAgICAgICAgICAgc2hvd0NhbmNlbEJ1dHRvbjogZmFsc2UsCiAgICAgICAgICAgICAgICAgICAgICBzaG93Q29uZmlybUJ1dHRvbjogZmFsc2UsCiAgICAgICAgICAgICAgICAgICAgICB0eXBlOiAiZXJyb3IiLAogICAgICAgICAgICAgICAgICAgICAgdGltZXI6IDI1MDAKICAgICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAvLyBjb25zb2xlLmxvZyhyZXNwb25zZSk7CiAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICAgICAgLmNhdGNoKChlKSA9PiB7CiAgICAgICAgICAgICAgICAgIHRoaXMuYmlnX3NwaW5uZXIgPSBmYWxzZTsKICAgICAgICAgICAgICAgICAgdGhpcy5kaXNhYmxlX3NpZGViYXIgPSBmYWxzZTsKICAgICAgICAgICAgICAgICAgdGhpcy4kcm9vdC4kZW1pdCgiRGFzaGJvYXJkU2lkZWJhckRpc2FibGUiLHRydWUpOwogICAgICAgICAgICAgICAgICB0aGlzLiRzZXNzaW9uLnNldCgiU2V0dGluZ1RvcG5hdmJhckRpc2FibGUiLHRydWUpOwogICAgICAgICAgICAgICAgICBpZiAoCiAgICAgICAgICAgICAgICAgICAgZS5yZXNwb25zZS5zdGF0dXMgPT09IDQxMCB8fAogICAgICAgICAgICAgICAgICAgIGUucmVzcG9uc2Uuc3RhdHVzID09PSA0NDAgfHwKICAgICAgICAgICAgICAgICAgICBlLnJlc3BvbnNlLnN0YXR1cyA9PT0gNDA5CiAgICAgICAgICAgICAgICAgICkgewogICAgICAgICAgICAgICAgICAgIHRoaXMuJHJvb3QuJGVtaXQoIlNlc3Npb25fRXhwaXJlZCIsIGUucmVzcG9uc2UuZGF0YSk7CiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICB9CiAgICAgICAgICB9KTsKICAgICAgICB9CiAgICAgIH1lbHNlewogICAgICAgIHRoaXMuc2hvd19zdWJzY3JpcHRpb25fZXhwaXJlZF9zd2FsKHRydWUpOwogICAgICB9CiAgICB9LAogIH0sCn07Cg=="},{"version":3,"sources":["ModelsTab.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6SA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"ModelsTab.vue","sourceRoot":"src/portal/Chatbot/Dashboard/Settings","sourcesContent":["<template>\n  <div>\n    <div class=\"spinner\" id=\"spinner\" v-show=\"big_spinner\"></div>\n    <div class=\"card dash-card\">\n      <div\n        id=\"trained_intent_models_radio\"\n        class=\"col-sm-12 d-flex mt-4\"\n        style=\"padding-left: 0px\"\n      >\n        <div\n          class=\"col-sm-4\"\n          style=\"border-right: 1px solid rgb(234, 234, 234);\"\n        >\n          <div style=\"width: auto\">\n            <h5 class=\"mb-sm-0 text-center\" style=\"\">\n              {{ tlt(\"intent_model_header\") }}\n            </h5>\n            <div class=\"table-box text-center\">\n              <div\n                class=\"table-responsive\"\n                v-if=\"\n                  Boolean(trained_intent_models) &&\n                  trained_intent_models.length > 0\n                \"\n              >\n                <table\n                  class=\"table\"\n                  style=\"border: 1px solid #dbe2e8; margin-top: 1%\"\n                >\n                  <tr>\n                    <th scope=\"col\">#</th>\n                    <th scope=\"col\" style=\"text-align: left\">\n                      {{ tlt(\"intent_model_name_label\") }}\n                    </th>\n                    <th scope=\"col\" style=\"text-align: left\">\n                      {{ tlt(\"intent_trained_on_label\") }}\n                    </th>\n                    <th scope=\"col\" style=\"text-align: center\">\n                      {{ tlt(\"intent_in_use_label\") }}\n                    </th>\n                    <!-- <th\n                            scope=\"col\"\n                            style=\"text-align: center; width: 14%\"\n                          >\n                            Use\n                          </th> -->\n                  </tr>\n                  <tr\n                    v-for=\"(model, index) in trained_intent_models\"\n                    :key=\"index\"\n                  >\n                    <td>{{ index + 1 }}</td>\n                    <td\n                      :title=\"\n                        companyname +\n                        ' V' +\n                        (trained_intent_models.length - index)\n                      \"\n                      style=\"text-align: left; cursor: pointer\"\n                    >\n                      <!-- {{ companyname }} V{{\n                                trained_intent_models.length - index\n                              }} -->\n                      {{ trim_model_name(companyname) }}V{{\n                        trained_intent_models.length - index\n                      }}\n                    </td>\n                    <td style=\"text-align: left\">\n                      {{ model.created_at }}\n                    </td>\n                    <td class=\"text-center\">\n                      <div\n                        class=\"radio\"\n                        @click=\"select_trained_intent_model(index)\"\n                      >\n                        <label style=\"vertical-align: text-top\">\n                          <input\n                            type=\"radio\"\n                            :checked=\"model.active\"\n                            :name=\"index + 'intent'\"\n                            disabled\n                          />\n                          <span class=\"icn\" id=\"radio_intent\"></span>\n                        </label>\n                      </div>\n                    </td>\n                    <!-- <td>\n                            <button\n                              :disabled=\"model.active\"\n                              class=\"darkblue-btn\"\n                              @click=\"select_trained_intent_model(index)\"\n                            >\n                              Use\n                            </button>\n                          </td> -->\n                  </tr>\n                </table>\n              </div>\n              <h6\n                class=\"mt-3\"\n                v-else-if=\"\n                  Boolean(trained_intent_models) &&\n                  trained_intent_models.length === 0\n                  && big_spinner == false\n                \"\n              >\n                {{ tlt(\"no_trained_intent_text\") }}\n              </h6>\n            </div>\n          </div>\n        </div>\n        <div\n          class=\"col-sm-4\"\n          style=\"border-right: 1px solid rgb(234, 234, 234)\"\n        >\n          <div style=\"width: auto\">\n            <h5 class=\"mb-sm-0 text-center\" style=\"\">\n              {{ tlt(\"dialog_model_header\") }}\n            </h5>\n            <div class=\"table-box\" style=\"text-align: center\">\n              <div\n                class=\"table-responsive\"\n                v-if=\"\n                  Boolean(trained_dialogue_models) &&\n                  trained_dialogue_models.length > 0\n                \"\n              >\n                <table\n                  class=\"table\"\n                  style=\"border: 1px solid #dbe2e8; margin-top: 1%\"\n                >\n                  <tr>\n                    <th scope=\"col\" style=\"text-align: left\">#</th>\n                    <th scope=\"col\" style=\"text-align: left\">\n                      {{ tlt(\"dialog_model_name_label\") }}\n                    </th>\n                    <th scope=\"col\" style=\"text-align: left\">\n                      {{ tlt(\"dialog_trained_on_label\") }}\n                    </th>\n                    <th scope=\"col\" style=\"text-align: center\">\n                      {{ tlt(\"dialog_in_use_label\") }}\n                    </th>\n                    <!-- <th\n                            scope=\"col\"\n                            style=\"text-align: center; width: 14%\"\n                          >\n                            Use\n                          </th> -->\n                  </tr>\n                  <tr\n                    v-for=\"(model, index) in trained_dialogue_models\"\n                    :key=\"index\"\n                  >\n                    <td>{{ index + 1 }}</td>\n                    <td\n                      :title=\"\n                        companyname +\n                        ' V' +\n                        (trained_dialogue_models.length - index)\n                      \"\n                      style=\"cursor: pointer\"\n                    >\n                      {{ trim_model_name(companyname) }}V{{\n                        trained_dialogue_models.length - index\n                      }}\n                    </td>\n                    <td>{{ model.created_at }}</td>\n                    <td class=\"text-center\">\n                      <div\n                        class=\"radio\"\n                        @click=\"select_trained_dialogue_model(index)\"\n                      >\n                        <label style=\"vertical-align: text-top\">\n                          <input\n                            type=\"radio\"\n                            :checked=\"model.active\"\n                            :name=\"index + 'dialogue'\"\n                            disabled\n                          />\n                          <span class=\"icn\" :id=\"index + 'radio'\"></span>\n                        </label>\n                      </div>\n                    </td>\n                    <!-- <td>\n                            <button\n                              :disabled=\"model.active\"\n                              class=\"darkblue-btn\"\n                              @click=\"select_trained_dialogue_model(index)\"\n                            >\n                              Use\n                            </button>\n                          </td> -->\n                  </tr>\n                </table>\n              </div>\n              <h6\n                class=\"mt-3\"\n                v-else-if=\"\n                  Boolean(trained_dialogue_models) &&\n                  trained_dialogue_models.length === 0\n                  && big_spinner == false\n                \"\n              >\n                {{ tlt(\"no_trained_dialog_text\") }}\n              </h6>\n            </div>\n          </div>\n        </div>\n        <div class=\"col-sm-4\">\n          <div style=\"width: auto\">\n            <h5 class=\"mb-sm-0 text-center\" style=\"\">\n              {{ tlt(\"ner_model_header\") }}\n            </h5>\n            <div class=\"table-box\" style=\"text-align: center\">\n              <div\n                class=\"table-responsive\"\n                v-if=\"\n                  Boolean(trained_ner_models) && trained_ner_models.length > 0\n                \"\n              >\n                <table\n                  class=\"table\"\n                  style=\"border: 1px solid #dbe2e8; margin-top: 1%\"\n                >\n                  <tr>\n                    <th scope=\"col\" style=\"text-align: left\">#</th>\n                    <th scope=\"col\" style=\"text-align: left\">\n                      {{ tlt(\"ner_model_name_label\") }}\n                    </th>\n                    <th scope=\"col\" style=\"text-align: left\">\n                      {{ tlt(\"ner_trained_on_label\") }}\n                    </th>\n                    <th scope=\"col\" style=\"text-align: center\">\n                      {{ tlt(\"ner_in_use_label\") }}\n                    </th>\n                    <!-- <th\n                            scope=\"col\"\n                            style=\"text-align: center; width: 14%\"\n                          >\n                            Use\n                          </th> -->\n                  </tr>\n                  <tr v-for=\"(model, index) in trained_ner_models\" :key=\"index\">\n                    <td>{{ index + 1 }}</td>\n                    <td\n                      :title=\"\n                        companyname + ' V' + (trained_ner_models.length - index)\n                      \"\n                      style=\"cursor: pointer\"\n                    >\n                      {{ trim_model_name(companyname) }}V{{\n                        trained_ner_models.length - index\n                      }}\n                    </td>\n                    <td>{{ model.created_at }}</td>\n                    <td class=\"text-center\">\n                      <div\n                        class=\"radio\"\n                        @click=\"select_trained_ner_model(index)\"\n                      >\n                        <label style=\"vertical-align: text-top\">\n                          <input\n                            type=\"radio\"\n                            :checked=\"model.active\"\n                            :name=\"index + 'ner'\"\n                            disabled\n                          />\n                          <span class=\"icn\" :id=\"index + 'radio'\"></span>\n                        </label>\n                      </div>\n                    </td>\n                    <!-- <td>\n                            <button\n                              :disabled=\"model.active\"\n                              class=\"darkblue-btn\"\n                              @click=\"select_trained_dialogue_model(index)\"\n                            >\n                              Use\n                            </button>\n                          </td> -->\n                  </tr>\n                </table>\n              </div>\n              <h6\n                class=\"mt-3\"\n                v-else-if=\"\n                  Boolean(trained_ner_models) && trained_ner_models.length === 0\n                  && big_spinner == false\n                \"\n              >\n                {{ tlt(\"no_trained_ner_text\") }}\n              </h6>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\nimport Swal from \"sweetalert2\";\nimport api_calls from \"@/portal/api_calls\";\nimport moment from \"moment\";\nimport { freeze_portal,show_subscription_expired_swal } from \"@/portal/mixins\";\n\nexport default {\n  name: \"MiscellaneousPage\",\n  mixins: [freeze_portal, show_subscription_expired_swal],\n  data() {\n    return {\n      big_spinner: false,\n      companyid: this.$session.get(\"UserInformation\").company_id,\n      companyname: this.$session.get(\"UserInformation\").company_name,\n      trained_dialogue_models: [],\n      trained_intent_models: [],\n      current_license_key: this.$session.get(\"UserInformation\").license_key,\n      trained_ner_models: [],\n      disable_btn_expired: false,\n      retail_web_framework: this.$session.get(\"retail_web_framework\"),\n    };\n  },\n  created() {\n    this.get_trained_dialogue_models();\n    this.get_trained_intent_models();\n    this.get_trained_ner_models();\n    setTimeout(() => {\n      this.freeze_portal();\n    }, 1000);\n    this.$root.$on(\"MiscellaneousPageDisabled\", (data) => {\n      if(data===true){\n        this.disable_btn_expired = true;\n      }\n    });\n  },\n  methods: {\n    trim_model_name(val1) {\n      if (val1.length > 6) {\n        let str1 = val1.substring(0, 3) + \"...\";\n        return str1;\n      }\n      return val1;\n    },\n    get_trained_intent_models() {\n      this.big_spinner = true;\n      axios\n        .post(\n          api_calls.train_intent_model(),\n          {\n            company_name: this.companyname,\n            company_id: this.companyid,\n            email: this.$session.get(\"UserInformation\").email,\n            license_key: this.$session.get(\"UserInformation\").license_key,\n            token: this.$session.get(\"UserInformation\").tokens,\n            isGetModels: true,\n          },\n          {\n            headers: {\n              Authorization: `Bearer ${this.$session.get(\"at\")}`,\n            },\n          }\n        )\n        .then(({ data }) => {\n          this.big_spinner = false;\n          if (data.message.MSG_CODE === this.api_status_code.DATA_AVAILABLE_MODELS.MSG_CODE) {\n            this.trained_intent_models = data.data.models.map((model) => {\n              model.created_at = moment(\n                model.created_at,\n                \"YYYYMMDDHHmmss\"\n              ).format(\"Do MMM YY\");\n              return model;\n            }); \n          } else {\n            Swal({\n              title:response.data.message.MSG_CODE,\n              text:response.data.message.MSG,\n              showCancelButton: false,\n              showConfirmButton: false,\n              timer: 2500,\n              type: \"error\"\n            })\n        }\n          // console.log(response.data);\n        })\n        .catch((e) => {\n          console.log(e);\n          this.big_spinner = false;\n          if (\n            e.response.status === 410 ||\n            e.response.status === 440 ||\n            e.response.status === 409\n          ) {\n            this.$root.$emit(\"Session_Expired\", e.response.data);\n          }\n        });\n    },\n    get_trained_dialogue_models() {\n      this.big_spinner = true;\n      axios\n        .post(\n          api_calls.use_model(),\n          {\n            email: this.$session.get(\"UserInformation\").email,\n            token: this.$session.get(\"UserInformation\").tokens,\n            company_name: this.$session.get(\"UserInformation\").company_name,\n            company_id: this.$session.get(\"UserInformation\").company_id,\n            license_key: this.$session.get(\"UserInformation\").license_key,\n            isShow: true,\n          },\n          {\n            headers: {\n              Authorization: `Bearer ${this.$session.get(\"at\")}`,\n            },\n          }\n        )\n        .then(({ data }) => {\n          this.big_spinner = false;\n          if (data.message.MSG_CODE === this.api_status_code.SUCCESSFUL_DB_QUERY_CORE.MSG_CODE) {\n            this.trained_dialogue_models = data.data.models.map((model) => {\n              model.created_at = moment\n                .unix(model.created_at)\n                .format(\"Do MMM YY\");\n              return model;\n            });      \n          }else if (data.message.MSG_CODE === this.api_status_code.EMPTY_DATA_MODELS.MSG_CODE){\n\n          }else {\n            Swal({\n              title:data.message.MSG_CODE,\n              text:data.message.MSG,\n              showCancelButton: false,\n              showConfirmButton: false,\n              toast: true,\n              position: 'top-end',\n              timer: 2500,\n              type: \"error\"\n            })\n          }\n\n        })\n        .catch((e) => {\n          console.log(e);\n          this.big_spinner = false;\n          if (\n            e.response.status === 410 ||\n            e.response.status === 440 ||\n            e.response.status === 409\n          ) {\n            this.$root.$emit(\"Session_Expired\", e.response.data);\n          }\n        });\n    },\n    get_trained_ner_models() {\n      this.big_spinner = true;\n      axios\n        .get(\n          api_calls.revert_ner_models(),\n          {\n            params: {\n              email: this.$session.get(\"UserInformation\").email,\n              token: this.$session.get(\"UserInformation\").tokens,\n              company_name: this.$session.get(\"UserInformation\").company_name,\n              company_id: this.$session.get(\"UserInformation\").company_id,\n              license_key: this.$session.get(\"UserInformation\").license_key,\n              revert_company_id:\n                this.$session.get(\"UserInformation\").company_id,\n              revert_company_name:\n                this.$session.get(\"UserInformation\").company_name,\n              isShow: true,\n            },\n          },\n          {\n            headers: {\n              Authorization: `Bearer ${this.$session.get(\"at\")}`,\n            },\n          }\n        )\n        .then(({ data }) => {\n          this.big_spinner = false;\n          if (data.message.MSG_CODE === this.api_status_code.DATA_AVAILABLE_MODELS.MSG_CODE) {\n            this.trained_ner_models = data.data.model_data.map((model) => {\n              model.created_at = moment(\n                model.created_at,\n                \"YYYYMMDDHHmmss\"\n              ).format(\"Do MMM YY\");\n              return model;\n            });       \n          }else if (data.message.MSG_CODE === this.api_status_code.EMPTY_DATA_MODELS.MSG_CODE){\n\n          }\n          else{\n            Swal({\n              title:data.message.MSG_CODE,\n              text:data.message.MSG,\n              showCancelButton: false,\n              showConfirmButton: false,\n              toast: true,\n              position: 'top-end',\n              timer: 2500,\n              type: \"error\"\n            })           \n          }\n        })\n        .catch((e) => {\n          console.log(e);\n          this.big_spinner = false;\n          if (\n            e.response.status === 410 ||\n            e.response.status === 440 ||\n            e.response.status === 409\n          ) {\n            this.$root.$emit(\"Session_Expired\", e.response.data);\n          }\n        });\n    },\n    select_trained_intent_model(index) {\n      if(!this.disable_btn_expired){\n        let call_api = true;\n        for (let i = 0; i < this.trained_intent_models.length; i++) {\n          if (this.trained_intent_models[index].active) {\n            call_api = false;\n            break;\n          }\n        }\n        if (call_api) {\n          Swal.fire({\n            title: this.tlt('trained_intent_swal_alert_msg'),\n            text:\n              this.tlt('trained_intent_swal_set_msg') +\n              this.tlt('trained_intent_swal_companyname_msg') +\n              \" V\" +\n              (this.tlt('trained_intent_model_swal_msg').length - index) +\n              this.tlt('trained_intent_current_model_msg'),\n            type: \"question\",\n            showCancelButton: true,\n            confirmButtonColor: \"#3085d6\",\n            cancelButtonColor: \"#d33\",\n            confirmButtonText: this.tlt('trained_intent_swal_confirm_msg'),\n            allowOutsideClick: false,\n            allowEscapeKey: false,\n          }).then((result) => {\n            if (result.value) {\n              this.disable_sidebar = true;\n              this.$root.$emit(\"DashboardSidebarDisable\",true);\n              this.$session.set(\"SettingTopnavbarDisable\",true);\n              this.big_spinner = true;\n              // Swal.fire({\n              //   text: \"Please wait while we submit your request\",\n              //   toast: true,\n              //   type: \"info\",\n              //   showCancelButton: false,\n              //   showConfirmButton: false,\n              // });\n              axios\n                .post(\n                  api_calls.train_intent_model(),\n                  {\n                    company_name: this.companyname,\n                    company_id: this.companyid,\n                    email: this.$session.get(\"UserInformation\").email,\n                    license_key: this.$session.get(\"UserInformation\").license_key,\n                    token: this.$session.get(\"UserInformation\").tokens,\n                    FileName: this.trained_intent_models[index].FileName,\n                    isChangeModelVersion: true,\n                  },\n                  {\n                    headers: {\n                      Authorization: `Bearer ${this.$session.get(\"at\")}`,\n                    },\n                  }\n                )\n                .then((response) => {\n                  this.big_spinner = false;\n                  this.disable_sidebar = false;\n                  this.$root.$emit(\"DashboardSidebarDisable\",false);\n                  this.$session.set(\"SettingTopnavbarDisable\",false);\n                  if (response.data.message.MSG_CODE === this.api_status_code.MODEL_UPDATED_MODELS.MSG_CODE) {\n                    this.get_trained_intent_models();\n                    Swal.fire({\n                      title: this.tlt('trained_intent_model_updated_msg'),\n                      type: \"success\",\n                      allowOutsideClick: false,\n                      allowEscapeKey: false,\n                      timer: 2000,\n                    });\n                  } else {\n                    Swal.fire({\n                      title: response.data.message.MSG_CODE,\n                      text: response.data.message.MSG,\n                      showCancelButton: false,\n                      showConfirmButton: false,\n                      type: \"error\"\n                    });\n                  }\n                  // console.log(response);\n                })\n                .catch((e) => {\n                  console.log(e)\n                  this.big_spinner = false;\n                  this.disable_sidebar = false;\n                  this.$root.$emit(\"DashboardSidebarDisable\",false);\n                  this.$session.set(\"SettingTopnavbarDisable\",false);\n                  if (\n                    e.response.status === 410 ||\n                    e.response.status === 440 ||\n                    e.response.status === 409\n                  ) {\n                    this.$root.$emit(\"Session_Expired\", e.response.data);\n                  }\n                });\n            }\n          });\n        }\n      }else{\n        this.show_subscription_expired_swal(true);\n      }\n    },\n    select_trained_dialogue_model(index) {\n      if(!this.disable_btn_expired){\n        let call_api = true;\n        for (let i = 0; i < this.trained_dialogue_models.length; i++) {\n          if (this.trained_dialogue_models[index].active) {\n            call_api = false;\n            break;\n          }\n        }\n        if (call_api) {\n          Swal.fire({\n            title: this.tlt('trained_dialog_swal_alert_msg'),\n            text:\n              this.tlt('trained_dialog_swal_set_msg') +\n              this.tlt('trained_dialog_swal_companyname_msg') +\n              \" V\" +\n              (this.tlt('trained_dialog_model_swal_msg').length - index) +\n              this.tlt('trained_dialog_current_model_msg'),\n            type: \"question\",\n            showCancelButton: true,\n            confirmButtonColor: \"#3085d6\",\n            cancelButtonColor: \"#d33\",\n            confirmButtonText: this.tlt('trained_dialog_swal_confirm_msg'),\n            allowOutsideClick: false,\n            allowEscapeKey: false,\n          }).then((result) => {\n            if (result.value) {\n              this.$root.$emit(\"DashboardSidebarDisable\",true);\n              this.$session.set(\"SettingTopnavbarDisable\",true);\n              this.disable_sidebar = true;\n              this.big_spinner = true;\n              // Swal.fire({\n              //   text: \"Please wait while we submit your request\",\n              //   toast: true,\n              //   type: \"info\",\n              //   showCancelButton: false,\n              //   showConfirmButton: false,\n              // });\n              axios\n                .post(\n                  api_calls.revert_models(),\n                  {\n                    email: this.$session.get(\"UserInformation\").email,\n                    license_key: this.$session.get(\"UserInformation\").license_key,\n                    token: this.$session.get(\"UserInformation\").tokens,\n                    subscription:\n                      this.$session.get(\"UserInformation\").subscription,\n                    company_details: {\n                      company_id: this.$session.get(\"UserInformation\").company_id,\n                      company_name:\n                        this.$session.get(\"UserInformation\").company_name,\n                    },\n                    model_file: this.trained_dialogue_models[index].FileName,\n                  },\n                  {\n                    headers: {\n                      Authorization: `Bearer ${this.$session.get(\"at\")}`,\n                    },\n                  }\n                )\n                .then((response) => {\n                  this.big_spinner = false;\n                  this.disable_sidebar = false;\n                  this.$root.$emit(\"DashboardSidebarDisable\",false);\n                  this.$session.set(\"SettingTopnavbarDisable\",false);\n                  if (response.data.message.MSG_CODE === this.api_status_code.UPDATED_CORE.MSG_CODE) {\n                    Swal.fire({\n                      title: this.tlt('trained_dialog_model_updated_msg'),\n                      type: \"success\",\n                      allowOutsideClick: false,\n                      allowEscapeKey: false,\n                      timer: 2000,\n                    })\n                    this.get_trained_dialogue_models();\n                  } else {\n                    Swal.fire({\n                      title: response.data.message.MSG_CODE,\n                      text: response.data.message.MSG,\n                      showCancelButton: false,\n                      showConfirmButton: false,\n                      timer: 2500,\n                      type: \"error\"\n                    });\n                  }\n                  // console.log(response);\n                })\n                .catch((e) => {\n                  this.big_spinner = false;\n                  this.disable_sidebar = false;\n                  this.$root.$emit(\"DashboardSidebarDisable\",false);\n                  this.$session.set(\"SettingTopnavbarDisable\",false);\n                  if (\n                    e.response.status === 410 ||\n                    e.response.status === 440 ||\n                    e.response.status === 409\n                  ) {\n                    this.$root.$emit(\"Session_Expired\", e.response.data);\n                  }\n                });\n            }\n          });\n        }\n      }else{\n        this.show_subscription_expired_swal(true);\n      }\n    },\n    select_trained_ner_model(index) {\n      if(!this.disable_btn_expired){\n        let call_api = true;\n        for (let i = 0; i < this.trained_ner_models.length; i++) {\n          if (this.trained_ner_models[index].active) {\n            call_api = false;\n            break;\n          }\n        }\n        if (call_api) {\n          Swal.fire({\n            title: this.tlt('trained_ner_swal_alert_msg'),\n            text:\n              this.tlt('trained_ner_swal_set_msg') +\n              this.tlt('trained_ner_swal_companyname_msg') +\n              \" V\" +\n              (this.tlt('trained_ner_model_swal_msg').length - index) +\n              this.tlt('trained_ner_current_model_msg'),\n            type: \"question\",\n            showCancelButton: true,\n            confirmButtonColor: \"#3085d6\",\n            cancelButtonColor: \"#d33\",\n            confirmButtonText: this.tlt('trained_ner_swal_confirm_msg'),\n            allowOutsideClick: false,\n            allowEscapeKey: false,\n          }).then((result) => {\n            if (result.value) {\n              this.$root.$emit(\"DashboardSidebarDisable\",true);\n              this.$session.set(\"SettingTopnavbarDisable\",true);\n              this.disable_sidebar = true;\n              this.big_spinner = true;\n              // Swal.fire({\n              //   text: \"Please wait while we submit your request\",\n              //   toast: true,\n              //   type: \"info\",\n              //   showCancelButton: false,\n              //   showConfirmButton: false,\n              // });\n              axios\n                .post(\n                  api_calls.revert_ner_models(),\n                  {\n                    company_name: this.companyname,\n                    company_id: this.companyid,\n                    email: this.$session.get(\"UserInformation\").email,\n                    license_key: this.$session.get(\"UserInformation\").license_key,\n                    token: this.$session.get(\"UserInformation\").tokens,\n                    company_details: {\n                      company_id: this.companyid,\n                      company_name: this.companyname,\n                    },\n                    model_file: this.trained_ner_models[index].FileName,\n                  },\n                  {\n                    headers: {\n                      Authorization: `Bearer ${this.$session.get(\"at\")}`,\n                    },\n                  }\n                )\n                .then((response) => {\n                  this.disable_sidebar = false;\n                  this.$root.$emit(\"DashboardSidebarDisable\",true);\n                  this.$session.set(\"SettingTopnavbarDisable\",true);\n                  this.big_spinner = false;\n                  if (response.data.message.MSG_CODE === this.api_status_code.REVERT_SUCCESSFUL_MODELS.MSG_CODE) {\n                    Swal.fire({\n                      title: this.tlt('trained_ner_model_updated_msg'),\n                      type: \"success\",\n                      allowOutsideClick: false,\n                      allowEscapeKey: false,\n                      timer: 2000,\n                    }).then((result_success) => {\n                      // if (result_success.value) {\n                      this.big_spinner = true;\n                      this.get_trained_ner_models();\n                      // }\n                    });\n                  } else {\n                    Swal.fire({\n                      title: response.data.message.MSG_CODE,\n                      text: response.data.message.MSG,\n                      showCancelButton: false,\n                      showConfirmButton: false,\n                      type: \"error\",\n                      timer: 2500\n                    });\n                  }\n                  // console.log(response);\n                })\n                .catch((e) => {\n                  this.big_spinner = false;\n                  this.disable_sidebar = false;\n                  this.$root.$emit(\"DashboardSidebarDisable\",true);\n                  this.$session.set(\"SettingTopnavbarDisable\",true);\n                  if (\n                    e.response.status === 410 ||\n                    e.response.status === 440 ||\n                    e.response.status === 409\n                  ) {\n                    this.$root.$emit(\"Session_Expired\", e.response.data);\n                  }\n                });\n            }\n          });\n        }\n      }else{\n        this.show_subscription_expired_swal(true);\n      }\n    },\n  },\n};\n</script>\n\n<style>\n</style>"]}]}