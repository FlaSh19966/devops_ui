{"remainingRequest":"/home/vimalesh/CENSE/chatbot-portal/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/home/vimalesh/CENSE/chatbot-portal/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/vimalesh/CENSE/chatbot-portal/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/vimalesh/CENSE/chatbot-portal/src/portal/Chatbot/Dashboard/ConversationalFlow/Dialog.vue?vue&type=template&id=552df179&scoped=true&","dependencies":[{"path":"/home/vimalesh/CENSE/chatbot-portal/src/portal/Chatbot/Dashboard/ConversationalFlow/Dialog.vue","mtime":1663910265454},{"path":"/home/vimalesh/CENSE/chatbot-portal/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vimalesh/CENSE/chatbot-portal/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/vimalesh/CENSE/chatbot-portal/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vimalesh/CENSE/chatbot-portal/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{"id":"dialog_page"}},[_c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.spinnerOn),expression:"spinnerOn"}],staticClass:"spinner",attrs:{"id":"spinner"}}),_c('div',{staticClass:"\n      card-header\n      px-0\n      d-block d-sm-flex\n      flex-wrap\n      justify-content-between\n    "},[_c('div',{staticClass:"card-act d-flex flex-wrap",staticStyle:{"width":"100%"}},[_c('button',{staticClass:"darkblue-btn",attrs:{"id":"add_node_btn","data-toggle":"modal","data-target":"#addnodemodal"},on:{"click":_vm.change_root}},[_vm._v(" "+_vm._s(_vm.tlt('add_node_btn_label'))+" ")]),_c('button',{staticClass:"ml-auto darkblue-btn",attrs:{"id":"try_bot_btn","data-toggle":"modal"},on:{"click":function($event){return _vm.visible_try_bot()}}},[_vm._v(" "+_vm._s(_vm.tlt('try_bot_btn_label'))+" ")])])]),_c('div',{staticClass:"d-flex px-0"},[_c('div',{staticClass:"card-body px-0"},[_c('vue-tree-list',{attrs:{"model":_vm.data,"default-tree-node-name":"","default-leaf-node-name":"","default-expanded":false},on:{"click":_vm.onClick,"delete-node":_vm.onDel,"add-node":_vm.onAddNode,"drop-before":_vm.dropBefore,"drop-after":_vm.dropAfter,"drop":_vm.drop},scopedSlots:_vm._u([{key:"leafNameDisplay",fn:function(slotProps){return [_c('span',[_vm._v(" "+_vm._s(slotProps.model.name)+" ")]),_c('br'),(!_vm.new_child_node)?_c('span',{staticClass:"muted"},[_vm._v(_vm._s(slotProps.model.responses.length)+" Responses")]):_vm._e()]}}])},[_c('span',{staticClass:"icon",attrs:{"slot":"leafNodeIcon"},slot:"leafNodeIcon"}),_c('span',{staticClass:"icon",attrs:{"slot":"treeNodeIcon"},slot:"treeNodeIcon"})]),_c('br')],1),_c('div',{staticClass:"px-0",staticStyle:{"margin-right":"-19px !important","margin-top":"-28px !important"},attrs:{"id":"try_bot_response"}},[(_vm.load_bot_preview)?[_c('response-bot',{staticStyle:{"padding":"0px"},attrs:{"isDialogBot":true}})]:_vm._e()],2)]),_c('div',{staticClass:"modal fade",attrs:{"id":"addnodemodal","tabindex":"-1","role":"dialog","aria-labelledby":"exampleModalLabel","aria-hidden":"true","data-backdrop":"static","data-keyboard":"false"}},[_c('div',{staticClass:"modal-dialog modal-xl",attrs:{"role":"document"}},[_c('div',{staticClass:"modal-content"},[_c('div',{staticClass:"modal-header"},[_c('div',{staticClass:"form-group",staticStyle:{"width":"150px"}},[_c('h5',[_vm._v(_vm._s(_vm.tlt('dialog_flow_node_name_header')))]),_c('input',{directives:[{name:"model",rawName:"v-model.trim",value:(_vm.node_name),expression:"node_name",modifiers:{"trim":true}}],staticClass:"form-control input-tag",staticStyle:{"padding":"0.375rem 0.5rem !important","margin-left":"1rem !important"},attrs:{"type":"text","placeholder":_vm.tlt('node_name')},domProps:{"value":(_vm.node_name)},on:{"input":function($event){if($event.target.composing){ return; }_vm.node_name=$event.target.value.trim()},"blur":function($event){return _vm.$forceUpdate()}}})]),(_vm.new_child_node)?_c('button',{staticClass:"close",attrs:{"type":"button","aria-label":"Close"},on:{"click":function($event){return _vm.onDel(_vm.child_node)}}},[_c('span',{attrs:{"aria-hidden":"true"}},[_vm._v("×")])]):_c('button',{staticClass:"close",attrs:{"type":"button","aria-label":"Close"},on:{"click":_vm.close_addnodemodal}},[_c('span',{attrs:{"aria-hidden":"true"}},[_vm._v("×")])])]),_c('div',{staticClass:"modal-body"},[_c('div',{staticClass:"form-group",staticStyle:{"margin-top":"1rem !important"}},[_c('h5',[_vm._v(_vm._s(_vm.tlt('dialog_flow_assistant_recognizes_header')))]),_c('div',{staticClass:"row d-flex",staticStyle:{"margin-left":"1rem !important"}},[_vm._l((_vm.triggers),function(trigger,index){return _c('div',{key:index,staticClass:"d-flex pb-2"},[(!_vm.is_root)?_c('div',{staticClass:"mr-2 my-auto"},[_c('div',[_c('select',{directives:[{name:"model",rawName:"v-model",value:(trigger.trigger_type),expression:"trigger.trigger_type"}],staticClass:"custom-select",staticStyle:{"width":"120px","height":"40px","padding-left":"14px","padding-bottom":"4px"},attrs:{"aria-label":"Filter by","id":"trigger_filter_by_id","placeholder":_vm.tlt('filter_by')},on:{"input":function($event){return _vm.change_trigger_value(trigger.trigger_type, index)},"change":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = "_value" in o ? o._value : o.value;return val}); _vm.$set(trigger, "trigger_type", $event.target.multiple ? $$selectedVal : $$selectedVal[0])}}},[_c('option',{attrs:{"value":"","disabled":"","selected":""}},[_vm._v(_vm._s(_vm.tlt('filter_by_label')))]),_c('option',{attrs:{"value":"intent"}},[_vm._v(_vm._s(_vm.tlt('objective_label')))]),_c('option',{attrs:{"value":"entity"}},[_vm._v(_vm._s(_vm.tlt('entity_label')))])])])]):_vm._e(),(
                    (!_vm.is_root && Boolean(trigger.trigger_type)) || _vm.is_root
                  )?_c('div',{staticClass:"mr-2 my-auto"},[_c('multiselect',{staticStyle:{"height":"30px","padding":"0px"},attrs:{"options":_vm.is_root === true
                        ? _vm.trigger_options_intent
                        : trigger.trigger_type === 'intent'
                        ? _vm.trigger_options_intent
                        : _vm.trigger_options_entity,"placeholder":_vm.is_root === true
                        ? _vm.tlt('search_objective')
                        : trigger.trigger_type === 'intent'
                        ? _vm.tlt('search_objective')
                        : _vm.tlt('search_entity'),"close-on-select":true,"clear-on-select":false,"preserve-search":true,"show-labels":false,"allow-empty":false,"open-direction":"bottom","searchable":true,"loading":_vm.is_loading,"id":"res_n_int_source"},on:{"input":function($event){return _vm.change_trigger_type(
                        trigger.trigger_type,
                        trigger.trigger_value,
                        index
                      )},"search-change":function($event){return _vm.search_intent_entity(trigger.trigger_type, $event)}},model:{value:(trigger.trigger_value),callback:function ($$v) {_vm.$set(trigger, "trigger_value", $$v)},expression:"trigger.trigger_value"}},[_c('span',{attrs:{"slot":"noOptions"},slot:"noOptions"}),_c('span',{attrs:{"slot":"noResult"},slot:"noResult"},[_vm._v(_vm._s(_vm.tlt('no_condition_text')))])])],1):_vm._e(),(
                    !_vm.is_root &&
                    Boolean(trigger.trigger_type === 'entity') &&
                    Boolean(trigger.trigger_value)
                  )?_c('div',{staticClass:"mr-2 my-auto",style:(_vm.is_entity_type_sys_pattern(trigger.trigger_value) === true
                      ? 'cursor: not-allowed'
                      : null),attrs:{"title":_vm.is_entity_type_sys_pattern(trigger.trigger_value) === true
                      ? 'Entity selected is of type pattern or system entity, hence further option(s) cannot be selected.'
                      : null}},[_c('multiselect',{attrs:{"id":"trigger_operand_id","close-on-select":true,"options":_vm.entity_operand_options,"placeholder":_vm.tlt('operator'),"allow-empty":false,"show-labels":false,"disabled":_vm.is_entity_type_sys_pattern(trigger.trigger_value) ===
                      true},on:{"input":function($event){return _vm.change_trigger_entity_value(trigger.operand, index)}},model:{value:(trigger.operand),callback:function ($$v) {_vm.$set(trigger, "operand", $$v)},expression:"trigger.operand"}})],1):_vm._e(),(
                    !_vm.is_root &&
                    Boolean(trigger.trigger_type === 'entity') &&
                    Boolean(trigger.trigger_value) &&
                    Boolean(trigger.operand === 'is')
                  )?_c('div',{staticClass:"mr-2 my-auto"},[_c('multiselect',{attrs:{"id":"trigger_entity_value_id","close-on-select":true,"options":_vm.entity_value_options(trigger.trigger_value),"placeholder":_vm.tlt('entity_value'),"allow-empty":false,"show-labels":false},on:{"input":function($event){return _vm.set_trigger_entity_value(trigger.entity_value, index)}},model:{value:(trigger.entity_value),callback:function ($$v) {_vm.$set(trigger, "entity_value", $$v)},expression:"trigger.entity_value"}})],1):_vm._e(),(_vm.triggers.length > 1)?_c('span',{staticClass:"my-auto mr-2 ml-0 close",staticStyle:{"cursor":"pointer"},on:{"click":function($event){return _vm.add_to_triggers_list('remove', index)}}},[_vm._v(" × ")]):_vm._e(),(_vm.triggers.length > 1)?_c('span',{staticClass:"my-auto mr-2 ml-0",staticStyle:{"font-size":"17px"}},[_vm._v("&& ")]):_vm._e()])}),(!_vm.is_root)?_c('button',{staticClass:"mr-2 my-auto",staticStyle:{"cursor":"pointer","border":"none","height":"30px","background":"transparent url('@portal/assets/img/plus.png')","margin-top":"5px !important"},attrs:{"id":"add_trigger_btn"},on:{"click":function($event){return _vm.add_to_triggers_list('add')}}},[_c('img',{attrs:{"src":"/img/black_plus.png","alt":""}})]):_vm._e()],2)]),_c('hr'),_c('div',{staticClass:"form-group d-flex"},[_c('h5',{staticClass:"mr-2 p-0"},[_vm._v(_vm._s(_vm.tlt('dialog_flow_slots_header')))]),_c('p',{staticClass:"text-muted p-0 mb-0",staticStyle:{"margin-top":"3px !important"}},[_vm._v(" "+_vm._s(_vm.tlt('dialog_flow_slots_help_text'))+" ")]),_c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.slots.length > 0 && _vm.is_slot),expression:"slots.length > 0 && is_slot"}],staticClass:"ml-auto card-act"},[_c('button',{staticClass:"darkblue-btn",attrs:{"type":"button","data-toggle":"modal","data-target":"#manage_handler_id"}},[_vm._v(" "+_vm._s(_vm.tlt('manage_handler_btn'))+" ")])]),_c('label',{staticClass:"switch my-auto ml-2",class:Boolean(_vm.slots.length > 0) ? '' : 'ml-auto'},[_c('input',{directives:[{name:"model",rawName:"v-model",value:(_vm.is_slot),expression:"is_slot"}],attrs:{"type":"checkbox","id":"slots_required"},domProps:{"checked":Array.isArray(_vm.is_slot)?_vm._i(_vm.is_slot,null)>-1:(_vm.is_slot)},on:{"change":function($event){var $$a=_vm.is_slot,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.is_slot=$$a.concat([$$v]))}else{$$i>-1&&(_vm.is_slot=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.is_slot=$$c}}}}),_c('span',{staticClass:"slider round",staticStyle:{"border-radius":"50px"}})])]),(_vm.is_slot)?_c('div',{staticClass:"form-group custom-box"},[_c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.slots.length > 0),expression:"slots.length > 0"}]},[_c('div',{staticClass:"d-flex mb-1",staticStyle:{"text-align":"center"}},[_c('div',{staticClass:"col-sm-4"},[_vm._v(_vm._s(_vm.tlt('slots_check_for_entity_label')))]),_c('div',{staticClass:"col-sm-4"},[_vm._v(_vm._s(_vm.tlt('slots_save_it_as_label')))]),_c('div',{staticClass:"col-sm-3"},[_vm._v(_vm._s(_vm.tlt('slots_if_not_present_label')))]),_c('div',{staticClass:"col-sm-1"},[_vm._v(_vm._s(_vm.tlt('slots_action_label')))])]),_c('hr',{staticStyle:{"margin":"10px 0px !important"}}),_c('draggable',_vm._b({attrs:{"group":"people","handle":".handle"},on:{"start":function($event){_vm.drag_slots = true},"end":function($event){_vm.drag_slots = false}},model:{value:(_vm.slots),callback:function ($$v) {_vm.slots=$$v},expression:"slots"}},'draggable',_vm.dragOptionsSlots,false),[_c('transition-group',{attrs:{"type":"transition","name":!_vm.drag_slots ? 'flip-list' : null}},_vm._l((_vm.slots),function(slot,index){return _c('div',{key:slot.id,staticClass:"col-sm-12 p-0 d-flex form-group"},[_c('div',{staticClass:"col-sm-4 p-0"},[_c('div',[_c('multiselect',{staticStyle:{"height":"30px","padding":"0px"},attrs:{"options":_vm.updated_entity_list_after_removing_used_entity_in_slot(
                              _vm.entity_list,
                              _vm.slots
                            ),"close-on-select":true,"clear-on-select":false,"preserve-search":true,"show-labels":false,"allow-empty":false,"placeholder":_vm.tlt('search_entity'),"open-direction":"bottom","searchable":true,"loading":_vm.is_loading,"id":"res_n_int_source"},on:{"search-change":_vm.search_entity,"input":function($event){return _vm.set_slot_entity_variable(index, slot.check_for)}},model:{value:(slot.check_for),callback:function ($$v) {_vm.$set(slot, "check_for", $$v)},expression:"slot.check_for"}},[_c('span',{attrs:{"slot":"noOptions"},slot:"noOptions"}),_c('span',{attrs:{"slot":"noResult"},slot:"noResult"},[_vm._v("No Entites found.")])])],1)]),_c('div',{staticClass:"col-sm-4"},[_c('input',{directives:[{name:"model",rawName:"v-model",value:(slot.slot),expression:"slot.slot"}],staticClass:"form-control input-tag",staticStyle:{"width":"100%","padding":"0.375rem 0.5rem"},attrs:{"placeholder":_vm.tlt('enter_variable'),"type":"text","disabled":""},domProps:{"value":(slot.slot)},on:{"input":function($event){if($event.target.composing){ return; }_vm.$set(slot, "slot", $event.target.value)}}})]),_c('div',{staticClass:"col-sm-3 p-0",staticStyle:{"text-align":"center"}},[_c('input',{directives:[{name:"model",rawName:"v-model",value:(slot.responses),expression:"slot.responses"}],staticClass:"form-control input-tag",staticStyle:{"width":"100%","padding":"0.375rem 0.5rem"},attrs:{"id":"checkfocus","placeholder":_vm.tlt('response_id'),"type":"text","disabled":true},domProps:{"value":(slot.responses)},on:{"focusout":function($event){return _vm.add_slot_to_assistant_response(
                            'text',
                            index,
                            slot.check_for,
                            slot.slot,
                            slot.responses
                          )},"focusin":function($event){return _vm.remove_slot_to_assistant_response(index, slot.slot)},"input":function($event){if($event.target.composing){ return; }_vm.$set(slot, "responses", $event.target.value)}}})]),_c('div',{staticClass:"col-sm-1 pr-0"},[_c('div',{staticClass:"col-sm-12 d-flex p-0"},[_c('div',{staticClass:"col-sm-4 px-auto",staticStyle:{"padding-top":"8px"}},[_c('span',{staticClass:"muted",staticStyle:{"float":"right","cursor":"pointer","font-size":"14px"}},[_c('a',{attrs:{"data-toggle":"modal","href":"#slotmodal"},on:{"click":function($event){return _vm.on_open_slots_modal(
                                  slot.slot,
                                  index,
                                  slot.check_for
                                )}}},[_c('i',{staticClass:"fas fa-cog",attrs:{"title":"Customize Slot"}})])])]),_c('div',{staticClass:"col-sm-4 px-auto",staticStyle:{"padding-top":"10px"}},[(_vm.slots.length != 1)?_c('i',{staticClass:"fas fa-arrows-alt handle",staticStyle:{"cursor":"pointer","float":"right !important"},attrs:{"title":"Drag to Change Order"}}):_vm._e()]),_c('div',{staticClass:"col-sm-4 px-auto",staticStyle:{"padding-top":"6px"}},[_c('span',{staticClass:"close",staticStyle:{"float":"right","cursor":"pointer"},attrs:{"title":"Delete Slot"},on:{"click":function($event){return _vm.add_to_slots_list(
                                'remove',
                                index,
                                slot.responses
                              )}}},[_vm._v(" × ")])])])])])}),0)],1)],1),_c('div',{staticClass:"d-flex"},[_c('div',{staticClass:"d-flex"},[_c('p',{staticClass:"sub_heading",staticStyle:{"margin-top":"6px","margin-bottom":"5px"}},[_vm._v(" "+_vm._s(_vm.tlt('sms_model_msg_label'))+" ")]),_c('button',{staticStyle:{"cursor":"pointer","border":"none","background":"transparent url('@portal/assets/img/plus.png')"},on:{"click":function($event){return _vm.add_to_slots_list('add')}}},[_c('img',{attrs:{"src":"/img/black_plus.png","alt":""}})])])])]):_vm._e(),_c('hr'),_c('div',{staticClass:"form-group d-flex"},[_c('h5',{staticClass:"mr-2 p-0"},[_vm._v(_vm._s(_vm.tlt('webhook_header')))]),_c('p',{staticClass:"text-muted p-0 mb-0",staticStyle:{"margin-top":"3px !important"}},[_vm._v(" "+_vm._s(_vm.tlt('webhook_help_text'))+" ")]),_c('label',{staticClass:"switch ml-auto my-auto"},[_c('input',{directives:[{name:"model",rawName:"v-model",value:(_vm.is_webhook),expression:"is_webhook"}],attrs:{"type":"checkbox","id":"webhook_required"},domProps:{"checked":Array.isArray(_vm.is_webhook)?_vm._i(_vm.is_webhook,null)>-1:(_vm.is_webhook)},on:{"change":function($event){var $$a=_vm.is_webhook,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.is_webhook=$$a.concat([$$v]))}else{$$i>-1&&(_vm.is_webhook=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.is_webhook=$$c}}}}),_c('span',{staticClass:"slider round",staticStyle:{"border-radius":"50px"}})])]),(_vm.is_webhook && !_vm.is_webhook_details)?_c('div',{staticStyle:{"color":"red"}},[_vm._v(" "+_vm._s(_vm.tlt('set_webhook_help_text'))+" ")]):_vm._e(),(_vm.is_webhook && _vm.is_webhook_details)?_c('div',{staticClass:"form-group custom-box"},[_c('div',{staticClass:"d-flex"},[_c('p',{staticClass:"ml-0 sub_heading",staticStyle:{"margin-top":"6px","margin-bottom":"0px","margin-left":"10px"}},[_vm._v(" "+_vm._s(_vm.tlt('select_webhook_label'))+" : ")]),_c('div',{staticClass:"col-sm-3 ml-2 p-0"},[_c('multiselect',{staticStyle:{"height":"30px","padding":"0px"},attrs:{"options":_vm.webhook_list.map(function (webhook) { return webhook.id; }),"custom-label":function (webhook) { return _vm.webhook_list.find(function (x) { return x.id == webhook; }).name; },"close-on-select":true,"clear-on-select":false,"preserve-search":true,"show-labels":false,"allow-empty":false,"placeholder":_vm.tlt('search_webhook'),"open-direction":"bottom","searchable":true,"loading":_vm.is_loading,"id":"res_n_int_source"},on:{"search-change":_vm.search_webhook,"input":function($event){return _vm.set_webhook_return_variable(_vm.webhook_id)}},model:{value:(_vm.webhook_id),callback:function ($$v) {_vm.webhook_id=$$v},expression:"webhook_id"}},[_c('span',{attrs:{"slot":"noOptions"},slot:"noOptions"}),_c('span',{attrs:{"slot":"noResult"},slot:"noResult"},[_vm._v(_vm._s(_vm.tlt('no_webhook_found_text')))])])],1),_c('p',{staticClass:"ml-2 sub_heading",staticStyle:{"margin-top":"8px","margin-bottom":"0px","margin-left":"10px"}},[_vm._v(" "+_vm._s(_vm.tlt('webhook_return_variable_label'))+" : ")]),_c('div',{staticClass:"col-sm-3 p-0 ml-2",staticStyle:{"text-align":"center"}},[_c('input',{directives:[{name:"model",rawName:"v-model",value:(_vm.webhook_variable),expression:"webhook_variable"}],staticClass:"form-control input-tag",staticStyle:{"width":"100%","padding":"0.375rem 0.5rem"},style:(_vm.webhook_variable.length > 0
                      ? 'padding-left:19px !important;'
                      : 'padding: 0.375rem 0.5rem !important'),attrs:{"id":"webhook_variable_id","placeholder":_vm.tlt('enter_variable_eg'),"type":"text"},domProps:{"value":(_vm.webhook_variable)},on:{"input":function($event){if($event.target.composing){ return; }_vm.webhook_variable=$event.target.value}}}),(_vm.webhook_variable.length > 0)?_c('span',{staticClass:"unit"},[_vm._v("$")]):_vm._e()]),_vm._m(0)]),_c('div',{class:Boolean(_vm.webhook_mapping.length > 0)
                  ? 'custom-button-box px-3 py-2 pt-0 mt-3 mb-3'
                  : ''},[_c('div',{directives:[{name:"show",rawName:"v-show",value:(_vm.webhook_mapping.length > 0),expression:"webhook_mapping.length > 0"}]},[(_vm.is_webhook)?_c('div',{staticClass:"d-flex mb-1",staticStyle:{"text-align":"center"}},[_c('div',{staticClass:"col-sm-6"},[_vm._v(_vm._s(_vm.tlt('add_parameter_key_label')))]),_c('div',{staticClass:"col-sm-6"},[_vm._v(_vm._s(_vm.tlt('add_parameter_value_label')))])]):_vm._e(),_c('hr',{staticStyle:{"margin":"10px 0px !important"}}),(_vm.is_webhook)?_c('div',_vm._l((_vm.webhook_mapping),function(params,index){return _c('div',{key:index,staticClass:"col-sm-12 p-0 d-flex form-group"},[_c('div',{staticClass:"col-sm-6 pr-2 p-0"},[_c('input',{directives:[{name:"model",rawName:"v-model",value:(params.key),expression:"params.key"}],staticClass:"form-control input-tag",staticStyle:{"width":"100%","padding":"0.375rem 0.5rem"},attrs:{"placeholder":_vm.tlt('enter_name'),"type":"text"},domProps:{"value":(params.key)},on:{"input":function($event){if($event.target.composing){ return; }_vm.$set(params, "key", $event.target.value)}}})]),_c('div',{staticClass:"col-sm-6 pl-2 p-0 d-flex"},[_c('input',{directives:[{name:"model",rawName:"v-model",value:(params.value),expression:"params.value"}],staticClass:"form-control input-tag",staticStyle:{"width":"100%","padding":"0.375rem 0.5rem"},attrs:{"placeholder":_vm.tlt('enter_value_eg'),"type":"text"},domProps:{"value":(params.value)},on:{"input":function($event){if($event.target.composing){ return; }_vm.$set(params, "value", $event.target.value)}}}),_c('span',{staticClass:"close ml-2 my-auto",staticStyle:{"cursor":"pointer"},attrs:{"title":"Delete Parameter"},on:{"click":function($event){return _vm.add_to_webhook_mapping('remove', index)}}},[_vm._v(" × ")])])])}),0):_vm._e()]),_c('div',{staticClass:"mt-2 d-flex"},[_c('p',{staticClass:"sub_heading",staticStyle:{"margin-top":"3px","margin-bottom":"5px"}},[_vm._v(" "+_vm._s(_vm.tlt('add_parameter_btn_label'))+" ")]),_c('button',{staticStyle:{"cursor":"pointer","border":"none","background":"transparent url('@portal/assets/img/plus.png')","height":"29px","margin-left":"10px"},on:{"click":function($event){return _vm.add_to_webhook_mapping('add')}}},[_c('img',{attrs:{"src":"/img/black_plus.png","alt":""}})])])])]):_vm._e(),_c('hr'),_c('div',{staticClass:"form-group d-flex"},[_c('h5',{staticClass:"mr-2 p-0"},[_vm._v(_vm._s(_vm.tlt('notification_header')))]),_c('p',{staticClass:"text-muted p-0 mb-0",staticStyle:{"margin-top":"3px !important"}},[_vm._v(" "+_vm._s(_vm.tlt('notification_help_text'))+" ")]),_c('label',{staticClass:"switch ml-auto",staticStyle:{"margin-top":"4px","margin-bottom":"0px"}},[_c('input',{directives:[{name:"model",rawName:"v-model",value:(_vm.is_notification),expression:"is_notification"}],attrs:{"type":"checkbox","id":"notifications_required"},domProps:{"checked":Array.isArray(_vm.is_notification)?_vm._i(_vm.is_notification,null)>-1:(_vm.is_notification)},on:{"change":function($event){var $$a=_vm.is_notification,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.is_notification=$$a.concat([$$v]))}else{$$i>-1&&(_vm.is_notification=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.is_notification=$$c}}}}),_c('span',{staticClass:"slider round",staticStyle:{"border-radius":"50px"}})])]),(_vm.is_notification)?_c('div',[_c('div',{staticClass:"custom-box"},[_c('div',{staticClass:"d-flex mb-1",staticStyle:{"text-align":"center"}},[_c('div',{staticClass:"col-sm-3"},[_vm._v(_vm._s(_vm.tlt('notification_type_label')))]),_c('div',{staticClass:"col-sm-3"},[_vm._v(" "+_vm._s(_vm.tlt('variable_name_label'))+" "),_vm._m(1)]),_c('div',{staticClass:"col-sm-3"},[_vm._v(_vm._s(_vm.tlt('check_for_template_label')))]),_c('div',{staticClass:"col-sm-2"},[_vm._v(_vm._s(_vm.tlt('response_id_label')))])]),_c('hr',{staticStyle:{"margin":"10px 0px !important"}}),_c('div',{staticClass:"col-sm-12 p-0 d-flex form-group"},[_c('div',{staticClass:"col-sm-3 p-0"},[_c('div',[_c('multiselect',{staticStyle:{"height":"30px","padding":"0px"},attrs:{"options":_vm.notifications_notify_type_list,"close-on-select":true,"clear-on-select":false,"preserve-search":true,"show-labels":false,"allow-empty":false,"placeholder":_vm.tlt('notification_type'),"open-direction":"bottom","searchable":true,"id":"notifications_notify_type_id"},model:{value:(_vm.notifications.notify[0].type),callback:function ($$v) {_vm.$set(_vm.notifications.notify[0], "type", $$v)},expression:"notifications.notify[0].type"}})],1)]),_c('div',{staticClass:"col-sm-3"},[_c('div',[_c('multiselect',{attrs:{"close-on-select":true,"options":_vm.insert_slot_variable_options,"placeholder":_vm.tlt('select_option'),"show-labels":false,"clear-on-select":false,"open-direction":"top","max-height":120,"searchable":true,"allow-empty":false,"preserve-search":true,"taggable":true,"tag-position":"top","tag-placeholder":"Add this as new value"},on:{"open":_vm.add_to_insert_slot_variable_options,"tag":_vm.addTag},model:{value:(_vm.notifications.notify[0].slot),callback:function ($$v) {_vm.$set(_vm.notifications.notify[0], "slot", $$v)},expression:"notifications.notify[0].slot"}},[_c('span',{attrs:{"slot":"noResult"},slot:"noResult"},[_vm._v(_vm._s(_vm.tlt('no_variable_found_text')))])])],1)]),_c('div',{staticClass:"col-sm-3 p-0"},[_c('div',[_c('multiselect',{staticStyle:{"height":"30px","padding":"0px"},attrs:{"options":_vm.notifications_notify_template_list.map(function (name) {
                          return name.template_name;
                        }),"close-on-select":true,"clear-on-select":false,"preserve-search":true,"show-labels":false,"allow-empty":false,"placeholder":_vm.tlt('search_template_name'),"open-direction":"bottom","searchable":true,"loading":_vm.is_loading,"id":"notifications_notify_template_id"},on:{"search-change":_vm.search_template_name,"input":function($event){return _vm.set_notifications_notify_template_id(
                          _vm.notifications.notify[0].template_name
                        )}},model:{value:(_vm.notifications.notify[0].template_name),callback:function ($$v) {_vm.$set(_vm.notifications.notify[0], "template_name", $$v)},expression:"notifications.notify[0].template_name"}},[_c('span',{attrs:{"slot":"noResult"},slot:"noResult"},[_vm._v("No Template found.")])])],1)]),_c('div',{staticClass:"col-sm-2",staticStyle:{"text-align":"center"}},[_c('input',{directives:[{name:"model",rawName:"v-model",value:(_vm.notifications.responses),expression:"notifications.responses"}],staticClass:"form-control input-tag",staticStyle:{"width":"100%","padding":"0.375rem 0.5rem"},attrs:{"id":"notifications_responses_id","placeholder":_vm.tlt('response_id'),"type":"text","disabled":true},domProps:{"value":(_vm.notifications.responses)},on:{"input":function($event){if($event.target.composing){ return; }_vm.$set(_vm.notifications, "responses", $event.target.value)}}})]),_c('div',{staticClass:"col-sm-1 pr-0"},[_c('div',{staticClass:"col-sm-12 d-flex p-0"},[_c('div',{staticClass:"col-sm-12 p-0 px-auto",staticStyle:{"padding-top":"8px !important"}},[_c('span',{staticClass:"muted",staticStyle:{"float":"right","cursor":"pointer","font-size":"14px"}},[_c('a',{attrs:{"data-toggle":"modal","href":"#notificationmodal"},on:{"click":function($event){return _vm.on_open_notification_modal()}}},[_c('i',{staticClass:"fas fa-cog",attrs:{"title":"Customize Notification"}})])])])])])])])]):_vm._e(),_c('hr'),_c('div',{staticClass:"form-group"},[_c('div',{staticClass:"mt-1 mb-1 d-flex"},[_c('h5',{staticStyle:{"margin-top":"6px","margin-bottom":"5px"}},[_vm._v(" "+_vm._s(_vm.tlt('assistant_response_header'))+" ")]),_c('span',{staticClass:"ml-3 mt-2",staticStyle:{"color":"#df7474"}},[_vm._v("* html content/tags are not supported on whatsapp and messenger bot.")])]),_vm._l((_vm.filtered_assistant_response),function(new_response,index){return _c('div',{key:index,staticClass:"form-group"},[(new_response.type == 'text')?_c('div',{staticClass:"custom-box"},[_c('span',{staticClass:"btn btn-light",staticStyle:{"float":"right","cursor":"pointer","font-size":"14px"},attrs:{"title":"Remove Response"},on:{"click":function($event){return _vm.add_to_assistant_response_list('remove', new_response.id)}}},[_c('svg',{staticClass:"bi bi-trash",attrs:{"xmlns":"http://www.w3.org/2000/svg","width":"16","height":"16","fill":"currentColor","viewBox":"0 0 16 16"}},[_c('path',{attrs:{"d":"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z"}}),_c('path',{attrs:{"fill-rule":"evenodd","d":"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z"}})])]),_c('button',{staticClass:"btn btn-light",staticStyle:{"float":"right","cursor":"pointer","font-size":"14px"},style:(index === _vm.filtered_assistant_response.length-1 ?'cursor: not-allowed':''),attrs:{"disabled":index === _vm.filtered_assistant_response.length-1,"title":"Move down"},on:{"click":function($event){return _vm.interchange_position_assistant_response(
                      new_response.id,
                      _vm.filtered_assistant_response[index+1].id,
                      'filter_assistance'
                    )}}},[_c('svg',{staticClass:"bi bi-chevron-down",attrs:{"xmlns":"http://www.w3.org/2000/svg","width":"16","height":"16","fill":"currentColor","viewBox":"0 0 16 16"}},[_c('path',{attrs:{"fill-rule":"evenodd","d":"M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z"}})])]),_c('button',{staticClass:"btn btn-light",staticStyle:{"float":"right","cursor":"pointer","font-size":"14px"},style:(index === 0 ?'cursor: not-allowed':''),attrs:{"disabled":index === 0,"title":"Move Up"},on:{"click":function($event){return _vm.interchange_position_assistant_response(
                      new_response.id,
                      _vm.filtered_assistant_response[index-1].id,
                      'filter_assistance'
                    )}}},[_c('svg',{staticClass:"bi bi-chevron-up",attrs:{"xmlns":"http://www.w3.org/2000/svg","width":"16","height":"16","fill":"#273679","viewBox":"0 0 16 16"}},[_c('path',{attrs:{"fill-rule":"evenodd","d":"M7.646 4.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1-.708.708L8 5.707l-5.646 5.647a.5.5 0 0 1-.708-.708l6-6z"}})])]),_c('p',{staticClass:"sub_heading"},[_vm._v(" "+_vm._s(_vm.tlt('assist_resp_text_response_header'))+" : "+_vm._s(new_response.id)+" ")]),_c('div',[_vm._l((new_response.values),function(response,num){return _c('div',{key:num,staticClass:"form-group"},[_c('div',{staticClass:"d-flex"},[_c('input',{directives:[{name:"model",rawName:"v-model",value:(new_response.values[num]),expression:"new_response.values[num]"}],staticClass:"form-control input-tag",staticStyle:{"width":"100%","padding":"0.375rem 0.5rem"},attrs:{"placeholder":_vm.tlt('response_text'),"type":"text","id":'assistance_response_' +
                          new_response.id +
                          '_' +
                          num},domProps:{"value":(new_response.values[num])},on:{"focusout":function($event){return _vm.insert_variable_block_off(new_response.id, num)},"focusin":function($event){return _vm.insert_variable_block_on(new_response.id, num)},"input":function($event){if($event.target.composing){ return; }_vm.$set(new_response.values, num, $event.target.value)}}}),_c('div',{staticStyle:{"opacity":"0"},attrs:{"id":'insert_variable_block' +
                          new_response.id +
                          '_' +
                          num}},[_c('a',{staticClass:"example fa-stack fa-1x",staticStyle:{"margin-top":"20px !important"},attrs:{"id":"insert_variable_button","type":"button","data-toggle":"modal","data-target":"#insert_variable_modal"},on:{"click":function($event){return _vm.set_assistance_response_index(
                              new_response.id,
                              num
                            )}}},[_c('i',{staticClass:"fas fa-circle fa-stack-2x",staticStyle:{"color":"#dbe2e8"},attrs:{"id":'insert_variable_circle_' +
                              new_response.id +
                              '_' +
                              num}}),_c('span',{staticClass:"fa fa-stack-1x",staticStyle:{"color":"white"},on:{"mouseover":function($event){return _vm.circle_mouseover(new_response.id, num)},"mouseout":function($event){return _vm.circle_mouseout(new_response.id, num)}}},[_c('span',{staticStyle:{"font-size":"14px","display":"block"}},[_vm._v(" {...} ")])])])]),(
                          _vm.check_slot_value_use_in_response(
                            new_response.values[num]
                          )
                        )?_c('span',{staticClass:"my-auto",staticStyle:{"margin-left":"12px","color":"#0645ad"}},[_c('i',{staticClass:"fa fa-info-circle",staticStyle:{"font-size":"16px"},attrs:{"aria-hidden":"true","title":"You have used {} in the response, which is used to access slot value, i.e it would add the value gathered by slot if enabled in previous or current node. (example: Email: {$email_id} would print Email: test@mail.com)."}})]):_vm._e(),(new_response.values.length > 1)?_c('span',{staticClass:"close my-auto",staticStyle:{"cursor":"pointer","margin-left":"12px"},attrs:{"title":"Remove Text Response"},on:{"click":function($event){return _vm.add_to_assistant_response_text_list(
                            'remove',
                            new_response.id,
                            num
                          )}}},[_vm._v(" × ")]):_vm._e()])])}),_c('div',{staticClass:"d-flex"},[_c('p',{staticStyle:{"margin-top":"6px","margin-bottom":"5px"}},[_vm._v(" "+_vm._s(_vm.tlt('assist_resp_add_value_btn'))+" ")]),_c('button',{staticStyle:{"cursor":"pointer","border":"none","background":"transparent"},on:{"click":function($event){return _vm.add_to_assistant_response_text_list('add', new_response.id)}}},[_c('img',{attrs:{"src":"/img/black_plus.png","alt":""}})])]),_c('div',{staticClass:"response-variations"},[_c('span',[_vm._v("Response variations are set to "),_c('strong',[_vm._v(_vm._s(new_response.variation))]),_vm._v(".")]),_vm._v(" Set to "),_c('a',{directives:[{name:"show",rawName:"v-show",value:(new_response.variation != 'sequential'),expression:"new_response.variation != 'sequential'"}],staticClass:"response-variation",attrs:{"href":"javascript:void(0);"},on:{"click":function($event){return _vm.select_response_variation(index, 'sequential')}}},[_vm._v(" sequential ")]),_c('span',{directives:[{name:"show",rawName:"v-show",value:(new_response.variation != 'sequential'),expression:"new_response.variation != 'sequential'"}]},[_vm._v("|")]),_c('a',{directives:[{name:"show",rawName:"v-show",value:(new_response.variation != 'multiline'),expression:"new_response.variation != 'multiline'"}],staticClass:"variation-multiline",attrs:{"href":"javascript:void(0);"},on:{"click":function($event){return _vm.select_response_variation(index, 'multiline')}}},[_vm._v(" multiline ")]),_c('span',{directives:[{name:"show",rawName:"v-show",value:(
                        new_response.variation != 'random' &&
                        new_response.variation != 'multiline'
                      ),expression:"\n                        new_response.variation != 'random' &&\n                        new_response.variation != 'multiline'\n                      "}]},[_vm._v("|")]),_c('a',{directives:[{name:"show",rawName:"v-show",value:(new_response.variation != 'random'),expression:"new_response.variation != 'random'"}],staticClass:"variation-random",attrs:{"href":"javascript:void(0);"},on:{"click":function($event){return _vm.select_response_variation(index, 'random')}}},[_vm._v(" random ")])])],2)]):_vm._e(),(new_response.type == 'image')?_c('div',{staticClass:"custom-box"},[_c('span',{staticClass:"btn btn-light",staticStyle:{"float":"right","cursor":"pointer","font-size":"14px"},attrs:{"title":"Remove Response"},on:{"click":function($event){return _vm.add_to_assistant_response_list('remove', new_response.id)}}},[_c('svg',{staticClass:"bi bi-trash",attrs:{"xmlns":"http://www.w3.org/2000/svg","width":"16","height":"16","fill":"currentColor","viewBox":"0 0 16 16"}},[_c('path',{attrs:{"d":"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z"}}),_c('path',{attrs:{"fill-rule":"evenodd","d":"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z"}})])]),_c('button',{staticClass:"btn btn-light",staticStyle:{"float":"right","cursor":"pointer","font-size":"14px"},style:(index === _vm.filtered_assistant_response.length-1 ?'cursor: not-allowed':''),attrs:{"disabled":index === _vm.filtered_assistant_response.length-1,"title":"Move down"},on:{"click":function($event){return _vm.interchange_position_assistant_response(
                      new_response.id,
                      _vm.filtered_assistant_response[index+1].id,
                      'filter_assistance'
                    )}}},[_c('svg',{staticClass:"bi bi-chevron-down",attrs:{"xmlns":"http://www.w3.org/2000/svg","width":"16","height":"16","fill":"currentColor","viewBox":"0 0 16 16"}},[_c('path',{attrs:{"fill-rule":"evenodd","d":"M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z"}})])]),_c('button',{staticClass:"btn btn-light",staticStyle:{"float":"right","cursor":"pointer","font-size":"14px"},style:(index === 0 ?'cursor: not-allowed':''),attrs:{"disabled":index === 0,"title":"Move Up"},on:{"click":function($event){return _vm.interchange_position_assistant_response(
                      new_response.id,
                      _vm.filtered_assistant_response[index-1].id,
                      'filter_assistance'
                    )}}},[_c('svg',{staticClass:"bi bi-chevron-up",attrs:{"xmlns":"http://www.w3.org/2000/svg","width":"16","height":"16","fill":"#273679","viewBox":"0 0 16 16"}},[_c('path',{attrs:{"fill-rule":"evenodd","d":"M7.646 4.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1-.708.708L8 5.707l-5.646 5.647a.5.5 0 0 1-.708-.708l6-6z"}})])]),_c('p',{staticClass:"sub_heading"},[_vm._v(" "+_vm._s(_vm.tlt('assist_resp_img_response_header'))+" : "+_vm._s(new_response.id)+" ")]),_c('div',[_c('input',{directives:[{name:"model",rawName:"v-model",value:(new_response.source),expression:"new_response.source"}],staticClass:"form-control input-tag",staticStyle:{"width":"100%","padding":"0.375rem 0.5rem"},attrs:{"placeholder":_vm.tlt('add_img_url'),"type":"text"},domProps:{"value":(new_response.source)},on:{"input":function($event){if($event.target.composing){ return; }_vm.$set(new_response, "source", $event.target.value)}}}),_c('p',{directives:[{name:"show",rawName:"v-show",value:(
                      _vm.check_image_url(new_response.source) == false &&
                      Boolean(new_response.source)
                    ),expression:"\n                      check_image_url(new_response.source) == false &&\n                      Boolean(new_response.source)\n                    "}],staticStyle:{"color":"red !important","margin-bottom":"0px !important","padding-top":"8px !important"}},[_vm._v(" "+_vm._s(_vm.tlt('assist_resp_card_response_image_condition_text'))+" ")])])]):_vm._e(),(new_response.type == 'video')?_c('div',{staticClass:"custom-box"},[_c('span',{staticClass:"btn btn-light",staticStyle:{"float":"right","cursor":"pointer","font-size":"14px"},attrs:{"title":"Remove Response"},on:{"click":function($event){return _vm.add_to_assistant_response_list('remove', new_response.id)}}},[_c('svg',{staticClass:"bi bi-trash",attrs:{"xmlns":"http://www.w3.org/2000/svg","width":"16","height":"16","fill":"currentColor","viewBox":"0 0 16 16"}},[_c('path',{attrs:{"d":"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z"}}),_c('path',{attrs:{"fill-rule":"evenodd","d":"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z"}})])]),_c('button',{staticClass:"btn btn-light",staticStyle:{"float":"right","cursor":"pointer","font-size":"14px"},style:(index === _vm.filtered_assistant_response.length-1 ?'cursor: not-allowed':''),attrs:{"disabled":index === _vm.filtered_assistant_response.length-1,"title":"Move down"},on:{"click":function($event){return _vm.interchange_position_assistant_response(
                      new_response.id,
                      _vm.filtered_assistant_response[index+1].id,
                      'filter_assistance'
                    )}}},[_c('svg',{staticClass:"bi bi-chevron-down",attrs:{"xmlns":"http://www.w3.org/2000/svg","width":"16","height":"16","fill":"currentColor","viewBox":"0 0 16 16"}},[_c('path',{attrs:{"fill-rule":"evenodd","d":"M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z"}})])]),_c('button',{staticClass:"btn btn-light",staticStyle:{"float":"right","cursor":"pointer","font-size":"14px"},style:(index === 0 ?'cursor: not-allowed':''),attrs:{"disabled":index === 0,"title":"Move Up"},on:{"click":function($event){return _vm.interchange_position_assistant_response(
                      new_response.id,
                      _vm.filtered_assistant_response[index-1].id,
                      'filter_assistance'
                    )}}},[_c('svg',{staticClass:"bi bi-chevron-up",attrs:{"xmlns":"http://www.w3.org/2000/svg","width":"16","height":"16","fill":"#273679","viewBox":"0 0 16 16"}},[_c('path',{attrs:{"fill-rule":"evenodd","d":"M7.646 4.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1-.708.708L8 5.707l-5.646 5.647a.5.5 0 0 1-.708-.708l6-6z"}})])]),_c('p',{staticClass:"sub_heading"},[_vm._v(" "+_vm._s(_vm.tlt('assist_resp_video_response_header'))+" : "+_vm._s(new_response.id)+" ")]),_c('div',[_c('input',{directives:[{name:"model",rawName:"v-model.trim",value:(new_response.source),expression:"new_response.source",modifiers:{"trim":true}}],staticClass:"form-control input-tag",staticStyle:{"width":"100%","padding":"0.375rem 0.5rem"},attrs:{"placeholder":_vm.tlt('add_video_url'),"type":"text"},domProps:{"value":(new_response.source)},on:{"input":function($event){if($event.target.composing){ return; }_vm.$set(new_response, "source", $event.target.value.trim())},"blur":function($event){return _vm.$forceUpdate()}}}),_c('p',{directives:[{name:"show",rawName:"v-show",value:(
                      _vm.check_video_url(new_response.source) === false &&
                      Boolean(new_response.source)
                    ),expression:"\n                      check_video_url(new_response.source) === false &&\n                      Boolean(new_response.source)\n                    "}],staticStyle:{"color":"red !important","margin-bottom":"0px !important","padding-top":"8px !important"}},[_vm._v(" "+_vm._s(_vm.tlt('card_response_video_condition_text'))+" ")])])]):_vm._e(),(new_response.type == 'choices')?_c('div',{staticClass:"custom-box"},[_c('span',{staticClass:"btn btn-light",staticStyle:{"float":"right","cursor":"pointer","font-size":"14px"},attrs:{"title":"Remove Response"},on:{"click":function($event){return _vm.add_to_assistant_response_list('remove', new_response.id)}}},[_c('svg',{staticClass:"bi bi-trash",attrs:{"xmlns":"http://www.w3.org/2000/svg","width":"16","height":"16","fill":"currentColor","viewBox":"0 0 16 16"}},[_c('path',{attrs:{"d":"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z"}}),_c('path',{attrs:{"fill-rule":"evenodd","d":"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z"}})])]),_c('button',{staticClass:"btn btn-light",staticStyle:{"float":"right","cursor":"pointer","font-size":"14px"},style:(index === _vm.filtered_assistant_response.length-1 ?'cursor: not-allowed':''),attrs:{"disabled":index === _vm.filtered_assistant_response.length-1,"title":"Move down"},on:{"click":function($event){return _vm.interchange_position_assistant_response(
                      new_response.id,
                      _vm.filtered_assistant_response[index+1].id,
                      'filter_assistance'
                    )}}},[_c('svg',{staticClass:"bi bi-chevron-down",attrs:{"xmlns":"http://www.w3.org/2000/svg","width":"16","height":"16","fill":"currentColor","viewBox":"0 0 16 16"}},[_c('path',{attrs:{"fill-rule":"evenodd","d":"M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z"}})])]),_c('button',{staticClass:"btn btn-light",staticStyle:{"float":"right","cursor":"pointer","font-size":"14px"},style:(index === 0 ?'cursor: not-allowed':''),attrs:{"disabled":index === 0,"title":"Move Up"},on:{"click":function($event){return _vm.interchange_position_assistant_response(
                      new_response.id,
                      _vm.filtered_assistant_response[index-1].id,
                      'filter_assistance'
                    )}}},[_c('svg',{staticClass:"bi bi-chevron-up",attrs:{"xmlns":"http://www.w3.org/2000/svg","width":"16","height":"16","fill":"#273679","viewBox":"0 0 16 16"}},[_c('path',{attrs:{"fill-rule":"evenodd","d":"M7.646 4.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1-.708.708L8 5.707l-5.646 5.647a.5.5 0 0 1-.708-.708l6-6z"}})])]),_c('p',{staticClass:"sub_heading"},[_vm._v(" "+_vm._s(_vm.tlt('assist_resp_choice_response_header'))+" : "+_vm._s(new_response.id)+" ")]),_c('div',[[_c('div',{staticStyle:{"display":"block","margin-bottom":"1rem"}},_vm._l((new_response.choices),function(response,num){return _c('div',{key:num,staticClass:"d-flex mb-2"},[_c('div',{staticClass:"input-group",staticStyle:{"display":"block"}},[_c('div',{staticClass:"d-flex"},[_c('input',{directives:[{name:"model",rawName:"v-model.trim",value:(response.title),expression:"response.title",modifiers:{"trim":true}}],staticClass:"form-control input-tag",staticStyle:{"width":"100% !important","padding":"0.375rem 0.5rem","border-radius":"5px 0px 0px 5px !important"},attrs:{"type":"text","placeholder":_vm.tlt('enter_title'),"maxlength":"50"},domProps:{"value":(response.title)},on:{"input":function($event){if($event.target.composing){ return; }_vm.$set(response, "title", $event.target.value.trim())},"blur":function($event){return _vm.$forceUpdate()}}}),_c('input',{directives:[{name:"model",rawName:"v-model.trim",value:(response.payload),expression:"response.payload",modifiers:{"trim":true}}],staticClass:"form-control input-tag intent-list-field",staticStyle:{"width":"100% !important","padding":"0.375rem 0.5rem","border-radius":"0px !important"},attrs:{"type":"text","placeholder":_vm.change_btn_value_placeholder(response.type),"list":"select-intent-choice","name":"intent-choice"},domProps:{"value":(response.payload)},on:{"input":[function($event){if($event.target.composing){ return; }_vm.$set(response, "payload", $event.target.value.trim())},_vm.check_first_char],"blur":function($event){return _vm.$forceUpdate()}}}),(response.type == 'postback' && _vm.show_intent_list)?_c('datalist',{attrs:{"id":"select-intent-choice"}},_vm._l((_vm.intent_list_choice_card),function(option,index){return _c('option',{key:index,domProps:{"value":option}},[_vm._v(" "+_vm._s(option)+" ")])}),0):_vm._e(),_c('div',{staticClass:"input-group-append"},[_c('select',{directives:[{name:"model",rawName:"v-model",value:(response.type),expression:"response.type"}],staticClass:"form-control",staticStyle:{"width":"100px !important","height":"38px","padding":"0px !important"},attrs:{"id":"button_type_list_id"},on:{"change":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = "_value" in o ? o._value : o.value;return val}); _vm.$set(response, "type", $event.target.multiple ? $$selectedVal : $$selectedVal[0])}}},_vm._l((_vm.button_type_list),function(option,index){return _c('option',{key:index,domProps:{"value":option.value}},[_vm._v(" "+_vm._s(option.name)+" ")])}),0)])])]),(new_response.choices.length > 1)?_c('span',{staticClass:"close my-auto mr-0 ml-2",staticStyle:{"cursor":"pointer","float":"right"},attrs:{"title":"Remove Choice Response"},on:{"click":function($event){return _vm.add_to_assistant_response_choice_list(
                              'remove',
                              new_response.id,
                              num
                            )}}},[_vm._v(" ×")]):_vm._e()])}),0)],_c('div',{staticClass:"d-flex"},[_c('p',{staticStyle:{"margin-top":"6px","margin-bottom":"5px"}},[_vm._v(" "+_vm._s(_vm.tlt('assist_resp_add_choice_btn'))+" ")]),_c('button',{staticStyle:{"cursor":"pointer","border":"none","background":"transparent"},on:{"click":function($event){return _vm.add_to_assistant_response_choice_list(
                          'add',
                          new_response.id
                        )}}},[_c('img',{attrs:{"src":"/img/black_plus.png","alt":""}})])])],2)]):_vm._e(),(new_response.type == 'card')?_c('div',{staticClass:"custom-box"},[_c('span',{staticClass:"btn btn-light",staticStyle:{"float":"right","cursor":"pointer","font-size":"14px"},attrs:{"title":"Remove Response"},on:{"click":function($event){return _vm.add_to_assistant_response_list('remove', new_response.id)}}},[_c('svg',{staticClass:"bi bi-trash",attrs:{"xmlns":"http://www.w3.org/2000/svg","width":"16","height":"16","fill":"currentColor","viewBox":"0 0 16 16"}},[_c('path',{attrs:{"d":"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z"}}),_c('path',{attrs:{"fill-rule":"evenodd","d":"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z"}})])]),_c('button',{staticClass:"btn btn-light",staticStyle:{"float":"right","cursor":"pointer","font-size":"14px"},style:(index === _vm.filtered_assistant_response.length-1 ?'cursor: not-allowed':''),attrs:{"disabled":index === _vm.filtered_assistant_response.length-1,"title":"Move down"},on:{"click":function($event){return _vm.interchange_position_assistant_response(
                      new_response.id,
                      _vm.filtered_assistant_response[index+1].id,
                      'filter_assistance'
                    )}}},[_c('svg',{staticClass:"bi bi-chevron-down",attrs:{"xmlns":"http://www.w3.org/2000/svg","width":"16","height":"16","fill":"currentColor","viewBox":"0 0 16 16"}},[_c('path',{attrs:{"fill-rule":"evenodd","d":"M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z"}})])]),_c('button',{staticClass:"btn btn-light",staticStyle:{"float":"right","cursor":"pointer","font-size":"14px"},style:(index === 0 ?'cursor: not-allowed':''),attrs:{"disabled":index === 0,"title":"Move Up"},on:{"click":function($event){return _vm.interchange_position_assistant_response(
                      new_response.id,
                      _vm.filtered_assistant_response[index-1].id,
                      'filter_assistance'
                    )}}},[_c('svg',{staticClass:"bi bi-chevron-up",attrs:{"xmlns":"http://www.w3.org/2000/svg","width":"16","height":"16","fill":"#273679","viewBox":"0 0 16 16"}},[_c('path',{attrs:{"fill-rule":"evenodd","d":"M7.646 4.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1-.708.708L8 5.707l-5.646 5.647a.5.5 0 0 1-.708-.708l6-6z"}})])]),_c('p',{staticClass:"sub_heading"},[_vm._v(" "+_vm._s(_vm.tlt('assist_resp_card_response_header'))+" : "+_vm._s(new_response.id)+" ")]),_c('div',[[_c('div',{staticClass:"row"},_vm._l((new_response.card_list),function(response,num){return _c('div',{key:num,staticClass:"col-sm-4 pb-3"},[_c('div',{staticClass:"card"},[_c('div',{staticClass:"card-body"},[_c('p',{staticClass:"sub_heading_carousel",staticStyle:{"color":"dimgray","margin-bottom":"5px"}},[_vm._v(" "+_vm._s(_vm.tlt('assist_resp_card_response_card_label'))+" : "+_vm._s(num + 1)+" ")]),(new_response.card_list.length > 1)?_c('span',{staticClass:"close ml-auto mr-0",staticStyle:{"cursor":"pointer","float":"right","margin-top":"-29px"},attrs:{"title":"Remove Card Response"},on:{"click":function($event){return _vm.add_to_assistant_response_carousel_card_list(
                                  'remove',
                                  new_response.id,
                                  num
                                )}}},[_vm._v(" ×")]):_vm._e(),_c('div',[_c('div',{staticClass:"d-sm-flex justify-content-start"},[_c('h6',{staticClass:"label_header",staticStyle:{"margin-top":"0"}},[_vm._v(" "+_vm._s(_vm.tlt('assist_resp_card_response_file_type_label'))+": ")]),_c('div',{staticClass:"radio my-auto radio-label"},[_c('label',{staticStyle:{"font-size":"13px"}},[_c('input',{directives:[{name:"model",rawName:"v-model",value:(response.is_image),expression:"response.is_image"}],attrs:{"type":"radio","id":"carousel_img"},domProps:{"value":true,"checked":_vm._q(response.is_image,true)},on:{"change":function($event){return _vm.$set(response, "is_image", true)}}}),_c('span',{staticClass:"icn",attrs:{"id":"filter_portal_user_radio"}}),_vm._v(" "+_vm._s(_vm.tlt('assist_resp_card_response_image_label'))+" ")]),_c('label',{staticStyle:{"font-size":"13px"}},[_c('input',{directives:[{name:"model",rawName:"v-model",value:(response.is_image),expression:"response.is_image"}],attrs:{"type":"radio","id":"carousel_video"},domProps:{"value":false,"checked":_vm._q(response.is_image,false)},on:{"change":function($event){return _vm.$set(response, "is_image", false)}}}),_c('span',{staticClass:"icn"}),_vm._v(" "+_vm._s(_vm.tlt('assist_resp_card_response_video_label'))+" ")])])])]),(response.is_image)?_c('div',[_c('input',{directives:[{name:"model",rawName:"v-model",value:(response.image),expression:"response.image"}],staticClass:"form-control input-tag",staticStyle:{"width":"100%","padding":"0.375rem 0.5rem"},attrs:{"placeholder":_vm.tlt('img_url'),"type":"text"},domProps:{"value":(response.image)},on:{"input":function($event){if($event.target.composing){ return; }_vm.$set(response, "image", $event.target.value)}}}),_c('p',{directives:[{name:"show",rawName:"v-show",value:(
                                  _vm.check_image_url(response.image) ===
                                    false && Boolean(response.image)
                                ),expression:"\n                                  check_image_url(response.image) ===\n                                    false && Boolean(response.image)\n                                "}],staticStyle:{"color":"red !important","margin-bottom":"0px !important","padding-top":"8px !important"}},[_vm._v(" "+_vm._s(_vm.tlt('assist_resp_card_response_image_condition_text'))+" ")])]):_c('div',[_c('input',{directives:[{name:"model",rawName:"v-model.trim",value:(response.video),expression:"response.video",modifiers:{"trim":true}}],staticClass:"form-control input-tag",staticStyle:{"width":"100% !important","padding":"0.375rem 0.5rem"},attrs:{"type":"text","placeholder":_vm.tlt('video_url')},domProps:{"value":(response.video)},on:{"input":function($event){if($event.target.composing){ return; }_vm.$set(response, "video", $event.target.value.trim())},"blur":function($event){return _vm.$forceUpdate()}}}),_c('p',{directives:[{name:"show",rawName:"v-show",value:(
                                  _vm.check_video_url(response.video) ===
                                    false && Boolean(response.video)
                                ),expression:"\n                                  check_video_url(response.video) ===\n                                    false && Boolean(response.video)\n                                "}],staticStyle:{"color":"red !important","margin-bottom":"0px !important","padding-top":"8px !important"}},[_vm._v(" "+_vm._s(_vm.tlt('card_response_video_condition_text'))+" ")])]),_c('label',{staticClass:"label_header"},[_vm._v(_vm._s(_vm.tlt('assist_resp_card_response_title_label')))]),_c('input',{directives:[{name:"model",rawName:"v-model.trim",value:(response.title),expression:"response.title",modifiers:{"trim":true}}],staticClass:"form-control input-tag",staticStyle:{"width":"100% !important","padding":"0.375rem 0.5rem"},attrs:{"type":"text","placeholder":_vm.tlt('enter_title')},domProps:{"value":(response.title)},on:{"input":function($event){if($event.target.composing){ return; }_vm.$set(response, "title", $event.target.value.trim())},"blur":function($event){return _vm.$forceUpdate()}}}),_c('label',{staticClass:"label_header"},[_vm._v(_vm._s(_vm.tlt('assist_resp_card_response_desc_label')))]),_c('textarea',{directives:[{name:"model",rawName:"v-model.trim",value:(response.text),expression:"response.text",modifiers:{"trim":true}}],staticClass:"form-control input-tag textarea-style",staticStyle:{"resize":"none"},attrs:{"type":"text","rows":"3","cols":"20","placeholder":_vm.tlt('enter_description')},domProps:{"value":(response.text)},on:{"input":function($event){if($event.target.composing){ return; }_vm.$set(response, "text", $event.target.value.trim())},"blur":function($event){return _vm.$forceUpdate()}}}),_c('div',[_c('p',{staticClass:"label_header"},[_vm._v(_vm._s(_vm.tlt('assist_resp_card_response_button_label')))]),_c('div',{staticClass:"ScrollStyle"},_vm._l((response.buttons),function(button,btn_num){return _c('div',{key:btn_num,staticClass:"mb-2"},[_c('div',{staticClass:"d-flex"},[_c('div',{staticClass:"input-group",staticStyle:{"display":"block"}},[_c('div',{staticClass:"d-flex"},[_c('input',{directives:[{name:"model",rawName:"v-model.trim",value:(button.title),expression:"button.title",modifiers:{"trim":true}}],staticClass:"form-control input-tag",staticStyle:{"width":"100% !important","padding":"0.375rem 0.5rem","border-radius":"5px 0px 0px 5px !important"},attrs:{"type":"text","placeholder":_vm.tlt('enter_title'),"maxlength":"50"},domProps:{"value":(button.title)},on:{"input":function($event){if($event.target.composing){ return; }_vm.$set(button, "title", $event.target.value.trim())},"blur":function($event){return _vm.$forceUpdate()}}}),_c('input',{directives:[{name:"model",rawName:"v-model.trim",value:(button.value),expression:"button.value",modifiers:{"trim":true}}],staticClass:"form-control input-tag intent-list-field",staticStyle:{"width":"100% !important","padding":"0.375rem 0.5rem","border-radius":"0px !important"},attrs:{"type":"text","placeholder":_vm.change_btn_value_placeholder(
                                              button.type
                                            ),"list":"select-intent-choice","name":"intent-choice"},domProps:{"value":(button.value)},on:{"input":[function($event){if($event.target.composing){ return; }_vm.$set(button, "value", $event.target.value.trim())},_vm.check_first_char],"blur":function($event){return _vm.$forceUpdate()}}}),(button.type == 'postback' && _vm.show_intent_list)?_c('datalist',{attrs:{"id":"select-intent-choice"}},_vm._l((_vm.intent_list_choice_card),function(option,index){return _c('option',{key:index,domProps:{"value":option}},[_vm._v(" "+_vm._s(option)+" ")])}),0):_vm._e(),_c('div',{staticClass:"input-group-append"},[_c('select',{directives:[{name:"model",rawName:"v-model",value:(button.type),expression:"button.type"}],staticClass:"form-control",staticStyle:{"width":"20px !important","height":"38px","padding":"0px !important"},attrs:{"id":"button_type_list_id"},on:{"change":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = "_value" in o ? o._value : o.value;return val}); _vm.$set(button, "type", $event.target.multiple ? $$selectedVal : $$selectedVal[0])}}},_vm._l((_vm.button_type_list),function(option,index){return _c('option',{key:index,domProps:{"value":option.value}},[_vm._v(" "+_vm._s(option.name)+" ")])}),0)])])]),(response.buttons.length > 1)?_c('span',{staticClass:"close mx-1",staticStyle:{"cursor":"pointer","float":"right","margin-top":"8px"},attrs:{"title":"Remove Button Response"},on:{"click":function($event){return _vm.add_to_assistant_response_carousel_card_button_list(
                                          'remove',
                                          new_response.id,
                                          num,
                                          btn_num
                                        )}}},[_vm._v(" ×")]):_vm._e()])])}),0),_c('div',{staticClass:"d-flex"},[_c('p',{staticStyle:{"margin-top":"6px","margin-bottom":"5px"}},[_vm._v(" "+_vm._s(_vm.tlt('assist_resp_card_response_add_btn_label'))+" ")]),_c('button',{staticStyle:{"cursor":"pointer","border":"none","background":"transparent"},on:{"click":function($event){return _vm.add_to_assistant_response_carousel_card_button_list(
                                      'add',
                                      new_response.id,
                                      num
                                    )}}},[_c('img',{attrs:{"src":"/img/black_plus.png","alt":""}})])])])])])])}),0)],_c('div',{staticClass:"d-flex"},[_c('p',{staticStyle:{"margin-top":"6px","margin-bottom":"5px"}},[_vm._v(" "+_vm._s(_vm.tlt('assist_resp_card_response_add_card_label'))+" ")]),_c('button',{staticStyle:{"cursor":"pointer","border":"none","background":"transparent"},on:{"click":function($event){return _vm.add_to_assistant_response_carousel_card_list(
                          'add',
                          new_response.id
                        )}}},[_c('img',{attrs:{"src":"/img/black_plus.png","alt":""}})])])],2)]):_vm._e()])}),_c('div',{staticClass:"d-flex",staticStyle:{"margin-left":"1rem !important"}},[_c('p',{staticClass:"sub_heading my-0"},[_vm._v(_vm._s(_vm.tlt('response_type_first_label'))+" :")]),_c('select',{directives:[{name:"model",rawName:"v-model",value:(_vm.selected_response_type),expression:"selected_response_type"}],staticClass:"form-control input-tag",staticStyle:{"width":"100px","height":"25px","margin-left":"10px","padding":"0px"},attrs:{"id":"res_n_int_source"},on:{"change":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = "_value" in o ? o._value : o.value;return val}); _vm.selected_response_type=$event.target.multiple ? $$selectedVal : $$selectedVal[0]}}},_vm._l((_vm.assistant_response_type),function(option,index){return _c('option',{key:index,domProps:{"value":option}},[_vm._v(" "+_vm._s(option)+" ")])}),0),_c('p',{staticClass:"sub_heading my-0",staticStyle:{"margin-left":"20px"}},[_vm._v(" "+_vm._s(_vm.tlt('assist_resp_add_response_btn'))+" ")]),_c('button',{staticStyle:{"cursor":"pointer","border":"none","background":"transparent url('@portal/assets/img/plus.png')"},on:{"click":function($event){return _vm.add_to_assistant_response_list('add')}}},[_c('img',{attrs:{"src":"/img/black_plus.png","alt":""}})])])],2),_c('hr'),_c('div',{staticClass:"form-group"},[_c('div',{staticClass:"d-flex"},[_c('h5',{staticClass:"mr-2 p-0"},[_vm._v(_vm._s(_vm.tlt('dialog_flow_assist_should_label')))]),_c('p',{staticClass:"text-muted p-0 mb-0",staticStyle:{"margin-top":"3px !important"}},[_vm._v(" "+_vm._s(_vm.tlt('dialog_flow_assist_should_help_text'))+" ")])]),_c('div',{staticClass:"d-flex",staticStyle:{"margin-left":"1rem !important"}},[_c('select',{directives:[{name:"model",rawName:"v-model",value:(_vm.save_then_assistant_should),expression:"save_then_assistant_should"}],staticClass:"form-control input-tag",staticStyle:{"width":"120px","height":"30px","padding":"0px"},attrs:{"id":"res_n_int_source"},on:{"click":function($event){return _vm.set_next_step()},"change":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = "_value" in o ? o._value : o.value;return val}); _vm.save_then_assistant_should=$event.target.multiple ? $$selectedVal : $$selectedVal[0]}}},[_c('option',{attrs:{"value":"","disabled":"","selected":""}},[_vm._v(_vm._s(_vm.tlt('select_option_label')))]),_vm._l((_vm.then_assistant_should),function(option,index){return _c('option',{key:index,domProps:{"value":option}},[_vm._v(" "+_vm._s(option)+" ")])})],2),(_vm.save_then_assistant_should == 'jump_to')?_c('select',{directives:[{name:"model",rawName:"v-model",value:(_vm.jump_to_node_id),expression:"jump_to_node_id"}],staticClass:"form-control input-tag",staticStyle:{"width":"120px","height":"30px","margin-left":"10px","padding":"0px"},attrs:{"id":"res_n_int_source"},on:{"click":function($event){return _vm.set_next_step()},"change":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = "_value" in o ? o._value : o.value;return val}); _vm.jump_to_node_id=$event.target.multiple ? $$selectedVal : $$selectedVal[0]}}},[_c('option',{attrs:{"value":"","disabled":"","selected":""}},[_vm._v(_vm._s(_vm.tlt('select_node_label')))]),_vm._l((_vm.updated_node_list),function(option,index){return _c('option',{key:index,domProps:{"value":option.id}},[_vm._v(" "+_vm._s(option.name)+" ")])})],2):_vm._e()])])]),_c('div',{staticClass:"card-act modal-footer"},[(_vm.is_show_edit)?_c('button',{staticClass:"darkblue-btn",attrs:{"type":"button","id":"save_changes_btn"},on:{"click":_vm.editNode}},[_vm._v(" "+_vm._s(_vm.tlt('save_changes_main_btn'))+" ")]):_c('button',{staticClass:"darkblue-btn",attrs:{"type":"button","id":"save_changes_btn"},on:{"click":_vm.addNode}},[_vm._v(" "+_vm._s(_vm.tlt('Save_btn_label'))+" ")])])])])]),_c('div',{staticClass:"modal fade",attrs:{"id":"slotmodal","tabindex":"-1","role":"dialog","aria-labelledby":"slotmodal","aria-hidden":"true","data-backdrop":"static","data-keyboard":"false"}},[_c('div',{staticClass:"modal-dialog modal-dialog-centered modal-lg",attrs:{"role":"document"}},[_c('div',{staticClass:"modal-content"},[_c('div',{staticClass:"modal-header"},[_c('h5',{staticClass:"modal-title",staticStyle:{"font-style":"regular"}},[_vm._v(" "+_vm._s(_vm.tlt('slots_config_slot_header'))+" "+_vm._s(_vm.edit_slot_index)+" ")]),_c('button',{staticClass:"close",attrs:{"type":"button","data-dismiss":"modal","aria-hidden":"true"},on:{"click":function($event){return _vm.on_close_slots_modal()}}},[_vm._v(" × ")])]),_c('div',{staticClass:"modal-body"},[_c('div',{staticClass:"form-group"},[_c('h5',{staticStyle:{"margin-top":"6px","margin-bottom":"5px"}},[_vm._v(" "+_vm._s(_vm.tlt('slots_assistant_response_header'))+" ")]),_vm._l((_vm.unfilled_slot_assistant_response),function(new_response,index){return _c('div',{key:index,staticClass:"form-group"},[(new_response.type == 'text')?_c('div',{staticClass:"custom-box"},[_c('span',{staticClass:"btn btn-light",staticStyle:{"float":"right","cursor":"pointer","font-size":"14px"},attrs:{"title":"Remove Response"},on:{"click":function($event){return _vm.remove_slot_to_assistant_response(
                      new_response.id,
                      new_response.recognizes,
                      'slotmodal'
                    )}}},[_c('svg',{staticClass:"bi bi-trash",attrs:{"xmlns":"http://www.w3.org/2000/svg","width":"16","height":"16","fill":"currentColor","viewBox":"0 0 16 16"}},[_c('path',{attrs:{"d":"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z"}}),_c('path',{attrs:{"fill-rule":"evenodd","d":"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z"}})])]),_c('button',{staticClass:"btn btn-light",staticStyle:{"float":"right","cursor":"pointer","font-size":"14px"},style:(index === _vm.unfilled_slot_assistant_response.length-1 ?'cursor: not-allowed':''),attrs:{"disabled":index === _vm.unfilled_slot_assistant_response.length-1,"title":"Move down"},on:{"click":function($event){return _vm.interchange_position_assistant_response(
                      new_response.id,
                      _vm.unfilled_slot_assistant_response[index+1].id,
                      'slot_modal'
                    )}}},[_c('svg',{staticClass:"bi bi-chevron-down",attrs:{"xmlns":"http://www.w3.org/2000/svg","width":"16","height":"16","fill":"currentColor","viewBox":"0 0 16 16"}},[_c('path',{attrs:{"fill-rule":"evenodd","d":"M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z"}})])]),_c('button',{staticClass:"btn btn-light",staticStyle:{"float":"right","cursor":"pointer","font-size":"14px"},style:(index === 0 ?'cursor: not-allowed':''),attrs:{"disabled":index === 0,"title":"Move Up"},on:{"click":function($event){return _vm.interchange_position_assistant_response(
                      new_response.id,
                      _vm.unfilled_slot_assistant_response[index-1].id,
                      'slot_modal'
                    )}}},[_c('svg',{staticClass:"bi bi-chevron-up",attrs:{"xmlns":"http://www.w3.org/2000/svg","width":"16","height":"16","fill":"#273679","viewBox":"0 0 16 16"}},[_c('path',{attrs:{"fill-rule":"evenodd","d":"M7.646 4.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1-.708.708L8 5.707l-5.646 5.647a.5.5 0 0 1-.708-.708l6-6z"}})])]),_c('p',{staticClass:"sub_heading"},[_vm._v(" "+_vm._s(_vm.tlt('sots_text_response_header'))+" : "+_vm._s(new_response.id)+" ")]),_c('div',[_vm._l((new_response.values),function(response,num){return _c('div',{key:num,staticClass:"form-group"},[_c('div',{staticClass:"d-flex"},[_c('input',{directives:[{name:"model",rawName:"v-model",value:(new_response.values[num]),expression:"new_response.values[num]"}],staticClass:"form-control input-tag",staticStyle:{"width":"100%","padding":"0.375rem 0.5rem"},attrs:{"placeholder":_vm.tlt('response_text'),"type":"text","id":'assistance_response_' + new_response.id + '_' + num},domProps:{"value":(new_response.values[num])},on:{"focusout":function($event){return _vm.insert_variable_block_off(new_response.id, num)},"focusin":function($event){return _vm.insert_variable_block_on(new_response.id, num)},"keyup":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,"enter",13,$event.key,"Enter")){ return null; }return _vm.add_to_assistant_response_text_list(
                            'add',
                            new_response.id
                          )},"input":function($event){if($event.target.composing){ return; }_vm.$set(new_response.values, num, $event.target.value)}}}),_c('div',{staticStyle:{"opacity":"0"},attrs:{"id":'insert_variable_block' +
                          new_response.id +
                          '_' +
                          num}},[_c('a',{staticClass:"example fa-stack fa-1x",staticStyle:{"margin-top":"20px !important"},attrs:{"id":"insert_variable_button","type":"button","data-toggle":"modal","data-target":"#insert_variable_modal"},on:{"click":function($event){return _vm.set_assistance_response_index(
                              new_response.id,
                              num
                            )}}},[_c('i',{staticClass:"fas fa-circle fa-stack-2x",staticStyle:{"color":"#dbe2e8"},attrs:{"id":'insert_variable_circle_' +
                              new_response.id +
                              '_' +
                              num}}),_c('span',{staticClass:"fa fa-stack-1x",staticStyle:{"color":"white"},on:{"mouseover":function($event){return _vm.circle_mouseover(new_response.id, num)},"mouseout":function($event){return _vm.circle_mouseout(new_response.id, num)}}},[_c('span',{staticStyle:{"font-size":"14px","display":"block"}},[_vm._v(" {...} ")])])])]),(
                          _vm.check_slot_value_use_in_response(
                            new_response.values[num]
                          )
                        )?_c('span',{staticClass:"my-auto",staticStyle:{"margin-left":"12px","color":"#0645ad"}},[_c('i',{staticClass:"fa fa-info-circle",staticStyle:{"font-size":"16px"},attrs:{"aria-hidden":"true","title":"You have used {} in the response, which is used to access slot value, i.e it would add the value gathered by slot if enabled in previous or current node. (example: Email: {$email_id} would print Email: test@mail.com)."}})]):_vm._e(),(new_response.values.length > 1)?_c('span',{staticClass:"close my-auto",staticStyle:{"cursor":"pointer","margin-left":"12px"},attrs:{"title":"Remove Text Response"},on:{"click":function($event){return _vm.add_to_assistant_response_text_list(
                            'remove',
                            new_response.id,
                            num
                          )}}},[_vm._v(" × ")]):_vm._e()])])}),_c('div',{staticClass:"d-flex"},[_c('p',{staticStyle:{"margin-top":"6px","margin-bottom":"5px"}},[_vm._v(" "+_vm._s(_vm.tlt('slots_add_value_btn'))+" ")]),_c('button',{staticStyle:{"cursor":"pointer","border":"none","background":"transparent"},on:{"click":function($event){return _vm.add_to_assistant_response_text_list(
                          'add',
                          new_response.id
                        )}}},[_c('img',{attrs:{"src":"/img/black_plus.png","alt":""}})])]),_c('div',{staticClass:"response-variations"},[_c('span',[_vm._v(_vm._s(_vm.tlt('response_variation_text1'))+" "),_c('strong',[_vm._v(_vm._s(new_response.variation))]),_vm._v(".")]),_vm._v(" "+_vm._s(_vm.tlt('response_variation_text2'))+" "),_c('a',{directives:[{name:"show",rawName:"v-show",value:(new_response.variation != 'sequential'),expression:"new_response.variation != 'sequential'"}],staticClass:"response-variation",attrs:{"href":"javascript:void(0);"},on:{"click":function($event){return _vm.select_response_variation(
                          new_response.id,
                          'sequential'
                        )}}},[_vm._v(" "+_vm._s(_vm.tlt('response_variation_text3'))+" ")]),_c('span',{directives:[{name:"show",rawName:"v-show",value:(new_response.variation != 'sequential'),expression:"new_response.variation != 'sequential'"}]},[_vm._v(" | ")]),_c('a',{directives:[{name:"show",rawName:"v-show",value:(new_response.variation != 'multiline'),expression:"new_response.variation != 'multiline'"}],staticClass:"variation-multiline",attrs:{"href":"javascript:void(0);"},on:{"click":function($event){return _vm.select_response_variation(
                          new_response.id,
                          'multiline'
                        )}}},[_vm._v(" "+_vm._s(_vm.tlt('response_variation_text4'))+" ")]),_c('span',{directives:[{name:"show",rawName:"v-show",value:(
                        new_response.variation != 'random' &&
                        new_response.variation != 'multiline'
                      ),expression:"\n                        new_response.variation != 'random' &&\n                        new_response.variation != 'multiline'\n                      "}]},[_vm._v(" | ")]),_c('a',{directives:[{name:"show",rawName:"v-show",value:(new_response.variation != 'random'),expression:"new_response.variation != 'random'"}],staticClass:"variation-random",attrs:{"href":"javascript:void(0);"},on:{"click":function($event){return _vm.select_response_variation(new_response.id, 'random')}}},[_vm._v(" "+_vm._s(_vm.tlt('response_variation_text5'))+" ")])])],2)]):_vm._e(),(new_response.type == 'image')?_c('div',{staticClass:"custom-box"},[_c('span',{staticClass:"btn btn-light",staticStyle:{"float":"right","cursor":"pointer","font-size":"14px"},attrs:{"title":"Remove Response"},on:{"click":function($event){return _vm.remove_slot_to_assistant_response(
                      new_response.id,
                      new_response.recognizes,
                      'slotmodal'
                    )}}},[_c('svg',{staticClass:"bi bi-trash",attrs:{"xmlns":"http://www.w3.org/2000/svg","width":"16","height":"16","fill":"currentColor","viewBox":"0 0 16 16"}},[_c('path',{attrs:{"d":"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z"}}),_c('path',{attrs:{"fill-rule":"evenodd","d":"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z"}})])]),_c('button',{staticClass:"btn btn-light",staticStyle:{"float":"right","cursor":"pointer","font-size":"14px"},style:(index === _vm.unfilled_slot_assistant_response.length-1 ?'cursor: not-allowed':''),attrs:{"disabled":index === _vm.unfilled_slot_assistant_response.length-1,"title":"Move down"},on:{"click":function($event){return _vm.interchange_position_assistant_response(
                      new_response.id,
                      _vm.unfilled_slot_assistant_response[index+1].id,
                      'slot_modal'
                    )}}},[_c('svg',{staticClass:"bi bi-chevron-down",attrs:{"xmlns":"http://www.w3.org/2000/svg","width":"16","height":"16","fill":"currentColor","viewBox":"0 0 16 16"}},[_c('path',{attrs:{"fill-rule":"evenodd","d":"M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z"}})])]),_c('button',{staticClass:"btn btn-light",staticStyle:{"float":"right","cursor":"pointer","font-size":"14px"},style:(index === 0 ?'cursor: not-allowed':''),attrs:{"disabled":index === 0,"title":"Move Up"},on:{"click":function($event){return _vm.interchange_position_assistant_response(
                      new_response.id,
                      _vm.unfilled_slot_assistant_response[index-1].id,
                      'slot_modal'
                    )}}},[_c('svg',{staticClass:"bi bi-chevron-up",attrs:{"xmlns":"http://www.w3.org/2000/svg","width":"16","height":"16","fill":"#273679","viewBox":"0 0 16 16"}},[_c('path',{attrs:{"fill-rule":"evenodd","d":"M7.646 4.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1-.708.708L8 5.707l-5.646 5.647a.5.5 0 0 1-.708-.708l6-6z"}})])]),_c('p',{staticClass:"sub_heading"},[_vm._v("Image Response : "+_vm._s(new_response.id))]),_c('div',[_c('input',{directives:[{name:"model",rawName:"v-model",value:(new_response.source),expression:"new_response.source"}],staticClass:"form-control input-tag",staticStyle:{"width":"100%","padding":"0.375rem 0.5rem"},attrs:{"placeholder":_vm.tlt('add_img_url'),"type":"text"},domProps:{"value":(new_response.source)},on:{"input":function($event){if($event.target.composing){ return; }_vm.$set(new_response, "source", $event.target.value)}}}),_c('p',{directives:[{name:"show",rawName:"v-show",value:(
                      _vm.check_image_url(new_response.source) == false &&
                      Boolean(new_response.source)
                    ),expression:"\n                      check_image_url(new_response.source) == false &&\n                      Boolean(new_response.source)\n                    "}],staticStyle:{"color":"red !important","margin-bottom":"0px !important","padding-top":"8px !important"}},[_vm._v(" "+_vm._s(_vm.tlt('slots_img_condition_text'))+" ")])])]):_vm._e(),(new_response.type == 'video')?_c('div',{staticClass:"custom-box"},[_c('span',{staticClass:"btn btn-light",staticStyle:{"float":"right","cursor":"pointer","font-size":"14px"},attrs:{"title":"Remove Response"},on:{"click":function($event){return _vm.remove_slot_to_assistant_response(
                      new_response.id,
                      new_response.recognizes,
                      'slotmodal'
                    )}}},[_c('svg',{staticClass:"bi bi-trash",attrs:{"xmlns":"http://www.w3.org/2000/svg","width":"16","height":"16","fill":"currentColor","viewBox":"0 0 16 16"}},[_c('path',{attrs:{"d":"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z"}}),_c('path',{attrs:{"fill-rule":"evenodd","d":"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z"}})])]),_c('button',{staticClass:"btn btn-light",staticStyle:{"float":"right","cursor":"pointer","font-size":"14px"},style:(index === _vm.unfilled_slot_assistant_response.length-1 ?'cursor: not-allowed':''),attrs:{"disabled":index === _vm.unfilled_slot_assistant_response.length-1,"title":"Move down"},on:{"click":function($event){return _vm.interchange_position_assistant_response(
                      new_response.id,
                      _vm.unfilled_slot_assistant_response[index+1].id,
                      'slot_modal'
                    )}}},[_c('svg',{staticClass:"bi bi-chevron-down",attrs:{"xmlns":"http://www.w3.org/2000/svg","width":"16","height":"16","fill":"currentColor","viewBox":"0 0 16 16"}},[_c('path',{attrs:{"fill-rule":"evenodd","d":"M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z"}})])]),_c('button',{staticClass:"btn btn-light",staticStyle:{"float":"right","cursor":"pointer","font-size":"14px"},style:(index === 0 ?'cursor: not-allowed':''),attrs:{"disabled":index === 0,"title":"Move Up"},on:{"click":function($event){return _vm.interchange_position_assistant_response(
                      new_response.id,
                      _vm.unfilled_slot_assistant_response[index-1].id,
                      'slot_modal'
                    )}}},[_c('svg',{staticClass:"bi bi-chevron-up",attrs:{"xmlns":"http://www.w3.org/2000/svg","width":"16","height":"16","fill":"#273679","viewBox":"0 0 16 16"}},[_c('path',{attrs:{"fill-rule":"evenodd","d":"M7.646 4.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1-.708.708L8 5.707l-5.646 5.647a.5.5 0 0 1-.708-.708l6-6z"}})])]),_c('p',{staticClass:"sub_heading"},[_vm._v(" "+_vm._s(_vm.tlt('sots_video_response_header'))+" : "+_vm._s(new_response.id)+" ")]),_c('div',[_c('input',{directives:[{name:"model",rawName:"v-model.trim",value:(new_response.source),expression:"new_response.source",modifiers:{"trim":true}}],staticClass:"form-control input-tag",staticStyle:{"width":"100%","padding":"0.375rem 0.5rem"},attrs:{"placeholder":_vm.tlt('add_video_url'),"type":"text"},domProps:{"value":(new_response.source)},on:{"input":function($event){if($event.target.composing){ return; }_vm.$set(new_response, "source", $event.target.value.trim())},"blur":function($event){return _vm.$forceUpdate()}}}),_c('p',{directives:[{name:"show",rawName:"v-show",value:(
                      _vm.check_video_url(new_response.source) === false &&
                      Boolean(new_response.source)
                    ),expression:"\n                      check_video_url(new_response.source) === false &&\n                      Boolean(new_response.source)\n                    "}],staticStyle:{"color":"red !important","margin-bottom":"0px !important","padding-top":"8px !important"}},[_vm._v(" "+_vm._s(_vm.tlt('slots_video_condition_text'))+" ")])])]):_vm._e(),(new_response.type == 'choices')?_c('div',{staticClass:"custom-box"},[_c('span',{staticClass:"btn btn-light",staticStyle:{"float":"right","cursor":"pointer","font-size":"14px"},attrs:{"title":"Remove Response"},on:{"click":function($event){return _vm.remove_slot_to_assistant_response(
                      new_response.id,
                      new_response.recognizes,
                      'slotmodal'
                    )}}},[_c('svg',{staticClass:"bi bi-trash",attrs:{"xmlns":"http://www.w3.org/2000/svg","width":"16","height":"16","fill":"currentColor","viewBox":"0 0 16 16"}},[_c('path',{attrs:{"d":"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z"}}),_c('path',{attrs:{"fill-rule":"evenodd","d":"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z"}})])]),_c('button',{staticClass:"btn btn-light",staticStyle:{"float":"right","cursor":"pointer","font-size":"14px"},style:(index === _vm.unfilled_slot_assistant_response.length-1 ?'cursor: not-allowed':''),attrs:{"disabled":index === _vm.unfilled_slot_assistant_response.length-1,"title":"Move down"},on:{"click":function($event){return _vm.interchange_position_assistant_response(
                      new_response.id,
                      _vm.unfilled_slot_assistant_response[index+1].id,
                      'slot_modal'
                    )}}},[_c('svg',{staticClass:"bi bi-chevron-down",attrs:{"xmlns":"http://www.w3.org/2000/svg","width":"16","height":"16","fill":"currentColor","viewBox":"0 0 16 16"}},[_c('path',{attrs:{"fill-rule":"evenodd","d":"M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z"}})])]),_c('button',{staticClass:"btn btn-light",staticStyle:{"float":"right","cursor":"pointer","font-size":"14px"},style:(index === 0 ?'cursor: not-allowed':''),attrs:{"disabled":index === 0,"title":"Move Up"},on:{"click":function($event){return _vm.interchange_position_assistant_response(
                      new_response.id,
                      _vm.unfilled_slot_assistant_response[index-1].id,
                      'slot_modal'
                    )}}},[_c('svg',{staticClass:"bi bi-chevron-up",attrs:{"xmlns":"http://www.w3.org/2000/svg","width":"16","height":"16","fill":"#273679","viewBox":"0 0 16 16"}},[_c('path',{attrs:{"fill-rule":"evenodd","d":"M7.646 4.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1-.708.708L8 5.707l-5.646 5.647a.5.5 0 0 1-.708-.708l6-6z"}})])]),_c('p',{staticClass:"sub_heading"},[_vm._v(" "+_vm._s(_vm.tlt('sots_choice_response_header'))+" : "+_vm._s(new_response.id)+" ")]),_c('div',[[_c('div',{staticStyle:{"display":"block","margin-bottom":"1rem"}},_vm._l((new_response.choices),function(response,num){return _c('div',{key:num,staticClass:"d-flex mb-2"},[_c('div',{staticClass:"input-group",staticStyle:{"display":"block"}},[_c('div',{staticClass:"d-flex"},[_c('input',{directives:[{name:"model",rawName:"v-model.trim",value:(response.title),expression:"response.title",modifiers:{"trim":true}}],staticClass:"form-control input-tag",staticStyle:{"width":"100% !important","padding":"0.375rem 0.5rem","border-radius":"5px 0px 0px 5px !important"},attrs:{"type":"text","placeholder":_vm.tlt('enter_title'),"maxlength":"50"},domProps:{"value":(response.title)},on:{"input":function($event){if($event.target.composing){ return; }_vm.$set(response, "title", $event.target.value.trim())},"blur":function($event){return _vm.$forceUpdate()}}}),_c('input',{directives:[{name:"model",rawName:"v-model.trim",value:(response.payload),expression:"response.payload",modifiers:{"trim":true}}],staticClass:"form-control input-tag",staticStyle:{"width":"100% !important","padding":"0.375rem 0.5rem","border-radius":"0px !important"},attrs:{"type":"text","placeholder":_vm.change_btn_value_placeholder(response.type)},domProps:{"value":(response.payload)},on:{"input":function($event){if($event.target.composing){ return; }_vm.$set(response, "payload", $event.target.value.trim())},"blur":function($event){return _vm.$forceUpdate()}}}),_c('div',{staticClass:"input-group-append"},[_c('select',{directives:[{name:"model",rawName:"v-model",value:(response.type),expression:"response.type"}],staticClass:"form-control",staticStyle:{"width":"100px !important","height":"38px","padding":"0px !important"},attrs:{"id":"button_type_list_id"},on:{"change":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = "_value" in o ? o._value : o.value;return val}); _vm.$set(response, "type", $event.target.multiple ? $$selectedVal : $$selectedVal[0])}}},_vm._l((_vm.button_type_list),function(option,index){return _c('option',{key:index,domProps:{"value":option.value}},[_vm._v(" "+_vm._s(option.name)+" ")])}),0)])])]),(new_response.choices.length > 1)?_c('span',{staticClass:"close my-auto mr-0 ml-2",staticStyle:{"cursor":"pointer","float":"right"},attrs:{"title":"Remove Choice Response"},on:{"click":function($event){return _vm.add_to_assistant_response_choice_list(
                              'remove',
                              new_response.id,
                              num
                            )}}},[_vm._v(" ×")]):_vm._e()])}),0)],_c('div',{staticClass:"d-flex"},[_c('p',{staticStyle:{"margin-top":"6px","margin-bottom":"5px"}},[_vm._v(" "+_vm._s(_vm.tlt('sots_add_choice_btn'))+" ")]),_c('button',{staticStyle:{"cursor":"pointer","border":"none","background":"transparent"},on:{"click":function($event){return _vm.add_to_assistant_response_choice_list(
                          'add',
                          new_response.id
                        )}}},[_c('img',{attrs:{"src":"/img/black_plus.png","alt":""}})])])],2)]):_vm._e(),(new_response.type == 'card')?_c('div',{staticClass:"custom-box"},[_c('span',{staticClass:"btn btn-light",staticStyle:{"float":"right","cursor":"pointer","font-size":"14px"},attrs:{"title":"Remove Response"},on:{"click":function($event){return _vm.remove_slot_to_assistant_response(
                      new_response.id,
                      new_response.recognizes,
                      'slotmodal'
                    )}}},[_c('svg',{staticClass:"bi bi-trash",attrs:{"xmlns":"http://www.w3.org/2000/svg","width":"16","height":"16","fill":"currentColor","viewBox":"0 0 16 16"}},[_c('path',{attrs:{"d":"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z"}}),_c('path',{attrs:{"fill-rule":"evenodd","d":"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z"}})])]),_c('button',{staticClass:"btn btn-light",staticStyle:{"float":"right","cursor":"pointer","font-size":"14px"},style:(index === _vm.unfilled_slot_assistant_response.length-1 ?'cursor: not-allowed':''),attrs:{"disabled":index === _vm.unfilled_slot_assistant_response.length-1,"title":"Move down"},on:{"click":function($event){return _vm.interchange_position_assistant_response(
                      new_response.id,
                      _vm.unfilled_slot_assistant_response[index+1].id,
                      'slot_modal'
                    )}}},[_c('svg',{staticClass:"bi bi-chevron-down",attrs:{"xmlns":"http://www.w3.org/2000/svg","width":"16","height":"16","fill":"currentColor","viewBox":"0 0 16 16"}},[_c('path',{attrs:{"fill-rule":"evenodd","d":"M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z"}})])]),_c('button',{staticClass:"btn btn-light",staticStyle:{"float":"right","cursor":"pointer","font-size":"14px"},style:(index === 0 ?'cursor: not-allowed':''),attrs:{"disabled":index === 0,"title":"Move Up"},on:{"click":function($event){return _vm.interchange_position_assistant_response(
                      new_response.id,
                      _vm.unfilled_slot_assistant_response[index-1].id,
                      'slot_modal'
                    )}}},[_c('svg',{staticClass:"bi bi-chevron-up",attrs:{"xmlns":"http://www.w3.org/2000/svg","width":"16","height":"16","fill":"#273679","viewBox":"0 0 16 16"}},[_c('path',{attrs:{"fill-rule":"evenodd","d":"M7.646 4.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1-.708.708L8 5.707l-5.646 5.647a.5.5 0 0 1-.708-.708l6-6z"}})])]),_c('p',{staticClass:"sub_heading"},[_vm._v(" "+_vm._s(_vm.tlt('sots_card_response_header'))+" : "+_vm._s(new_response.id)+" ")]),_c('div',[[_c('div',{staticClass:"row"},_vm._l((new_response.card_list),function(response,num){return _c('div',{key:num,staticClass:"col-sm-4 pb-3"},[_c('div',{staticClass:"card"},[_c('div',{staticClass:"card-body"},[_c('p',{staticClass:"sub_heading_carousel",staticStyle:{"color":"dimgray","margin-bottom":"5px"}},[_vm._v(" "+_vm._s(_vm.tlt('card_response_card_label'))+" : "+_vm._s(num + 1)+" ")]),(new_response.card_list.length > 1)?_c('span',{staticClass:"close ml-auto mr-0",staticStyle:{"cursor":"pointer","float":"right","margin-top":"-29px"},attrs:{"title":"Remove Card Response"},on:{"click":function($event){return _vm.add_to_assistant_response_carousel_card_list(
                                  'remove',
                                  new_response.id,
                                  num
                                )}}},[_vm._v(" ×")]):_vm._e(),_c('div',[_c('div',{staticClass:"d-sm-flex justify-content-start"},[_c('h6',{staticClass:"label_header",staticStyle:{"margin-top":"0"}},[_vm._v(" "+_vm._s(_vm.tlt('card_response_file_type_label'))+": ")]),_c('div',{staticClass:"radio my-auto radio-label"},[_c('label',{staticStyle:{"font-size":"13px"}},[_c('input',{directives:[{name:"model",rawName:"v-model",value:(response.is_image),expression:"response.is_image"}],attrs:{"type":"radio","id":"carousel_img"},domProps:{"value":true,"checked":_vm._q(response.is_image,true)},on:{"change":function($event){return _vm.$set(response, "is_image", true)}}}),_c('span',{staticClass:"icn",attrs:{"id":"filter_portal_user_radio"}}),_vm._v(" "+_vm._s(_vm.tlt('card_response_image_label'))+" ")]),_c('label',{staticStyle:{"font-size":"13px"}},[_c('input',{directives:[{name:"model",rawName:"v-model",value:(response.is_image),expression:"response.is_image"}],attrs:{"type":"radio","id":"carousel_video"},domProps:{"value":false,"checked":_vm._q(response.is_image,false)},on:{"change":function($event){return _vm.$set(response, "is_image", false)}}}),_c('span',{staticClass:"icn"}),_vm._v(" "+_vm._s(_vm.tlt('card_response_video_label'))+" ")])])])]),(response.is_image)?_c('div',[_c('input',{directives:[{name:"model",rawName:"v-model",value:(response.image),expression:"response.image"}],staticClass:"form-control input-tag",staticStyle:{"width":"100%","padding":"0.375rem 0.5rem"},attrs:{"placeholder":_vm.tlt('img_url'),"type":"text"},domProps:{"value":(response.image)},on:{"input":function($event){if($event.target.composing){ return; }_vm.$set(response, "image", $event.target.value)}}}),_c('p',{directives:[{name:"show",rawName:"v-show",value:(
                                  _vm.check_image_url(response.image) === false &&
                                  Boolean(response.image)
                                ),expression:"\n                                  check_image_url(response.image) === false &&\n                                  Boolean(response.image)\n                                "}],staticStyle:{"color":"red !important","margin-bottom":"0px !important","padding-top":"8px !important"}},[_vm._v(" "+_vm._s(_vm.tlt('card_response_image_condition_text'))+" ")])]):_c('div',[_c('input',{directives:[{name:"model",rawName:"v-model.trim",value:(response.video),expression:"response.video",modifiers:{"trim":true}}],staticClass:"form-control input-tag",staticStyle:{"width":"100% !important","padding":"0.375rem 0.5rem"},attrs:{"type":"text","placeholder":_vm.tlt('video_url')},domProps:{"value":(response.video)},on:{"input":function($event){if($event.target.composing){ return; }_vm.$set(response, "video", $event.target.value.trim())},"blur":function($event){return _vm.$forceUpdate()}}}),_c('p',{directives:[{name:"show",rawName:"v-show",value:(
                                  _vm.check_video_url(response.video) === false &&
                                  Boolean(response.video)
                                ),expression:"\n                                  check_video_url(response.video) === false &&\n                                  Boolean(response.video)\n                                "}],staticStyle:{"color":"red !important","margin-bottom":"0px !important","padding-top":"8px !important"}},[_vm._v(" "+_vm._s(_vm.tlt('card_response_video_condition_text'))+" ")])]),_c('label',{staticClass:"label_header"},[_vm._v(_vm._s(_vm.tlt('card_response_title_label')))]),_c('input',{directives:[{name:"model",rawName:"v-model.trim",value:(response.title),expression:"response.title",modifiers:{"trim":true}}],staticClass:"form-control input-tag",staticStyle:{"width":"100% !important","padding":"0.375rem 0.5rem"},attrs:{"type":"text","placeholder":_vm.tlt('enter_title')},domProps:{"value":(response.title)},on:{"input":function($event){if($event.target.composing){ return; }_vm.$set(response, "title", $event.target.value.trim())},"blur":function($event){return _vm.$forceUpdate()}}}),_c('label',{staticClass:"label_header"},[_vm._v(_vm._s(_vm.tlt('card_response_desc_label')))]),_c('textarea',{directives:[{name:"model",rawName:"v-model.trim",value:(response.text),expression:"response.text",modifiers:{"trim":true}}],staticClass:"form-control input-tag textarea-style",staticStyle:{"resize":"none"},attrs:{"type":"text","rows":"3","cols":"20","placeholder":_vm.tlt('enter_description')},domProps:{"value":(response.text)},on:{"input":function($event){if($event.target.composing){ return; }_vm.$set(response, "text", $event.target.value.trim())},"blur":function($event){return _vm.$forceUpdate()}}}),_c('div',[_c('p',{staticClass:"label_header"},[_vm._v(_vm._s(_vm.tlt('card_response_button_label')))]),_c('div',{staticClass:"ScrollStyle"},_vm._l((response.buttons),function(button,btn_num){return _c('div',{key:btn_num,staticClass:"mb-2"},[_c('div',{staticClass:"d-flex"},[_c('div',{staticClass:"input-group",staticStyle:{"display":"block"}},[_c('div',{staticClass:"d-flex"},[_c('input',{directives:[{name:"model",rawName:"v-model.trim",value:(button.title),expression:"button.title",modifiers:{"trim":true}}],staticClass:"form-control input-tag",staticStyle:{"width":"100% !important","padding":"0.375rem 0.5rem","border-radius":"5px 0px 0px 5px !important"},attrs:{"type":"text","placeholder":_vm.tlt('enter_title'),"maxlength":"50"},domProps:{"value":(button.title)},on:{"input":function($event){if($event.target.composing){ return; }_vm.$set(button, "title", $event.target.value.trim())},"blur":function($event){return _vm.$forceUpdate()}}}),_c('input',{directives:[{name:"model",rawName:"v-model.trim",value:(button.value),expression:"button.value",modifiers:{"trim":true}}],staticClass:"form-control input-tag",staticStyle:{"width":"100% !important","padding":"0.375rem 0.5rem","border-radius":"0px !important"},attrs:{"type":"text","placeholder":_vm.change_btn_value_placeholder(
                                              button.type
                                            )},domProps:{"value":(button.value)},on:{"input":function($event){if($event.target.composing){ return; }_vm.$set(button, "value", $event.target.value.trim())},"blur":function($event){return _vm.$forceUpdate()}}}),_c('div',{staticClass:"input-group-append"},[_c('select',{directives:[{name:"model",rawName:"v-model",value:(button.type),expression:"button.type"}],staticClass:"form-control",staticStyle:{"width":"20px !important","height":"38px","padding":"0px !important"},attrs:{"id":"button_type_list_id"},on:{"change":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = "_value" in o ? o._value : o.value;return val}); _vm.$set(button, "type", $event.target.multiple ? $$selectedVal : $$selectedVal[0])}}},_vm._l((_vm.button_type_list),function(option,index){return _c('option',{key:index,domProps:{"value":option.value}},[_vm._v(" "+_vm._s(option.name)+" ")])}),0)])])]),(response.buttons.length > 1)?_c('span',{staticClass:"close mx-1",staticStyle:{"cursor":"pointer","float":"right","margin-top":"8px"},attrs:{"title":"Remove Button Response"},on:{"click":function($event){return _vm.add_to_assistant_response_carousel_card_button_list(
                                          'remove',
                                          new_response.id,
                                          num,
                                          btn_num
                                        )}}},[_vm._v(" ×")]):_vm._e()])])}),0),_c('div',{staticClass:"d-flex"},[_c('p',{staticStyle:{"margin-top":"6px","margin-bottom":"5px"}},[_vm._v(" "+_vm._s(_vm.tlt('card_response_add_btn_label'))+" ")]),_c('button',{staticStyle:{"cursor":"pointer","border":"none","background":"transparent"},on:{"click":function($event){return _vm.add_to_assistant_response_carousel_card_button_list(
                                      'add',
                                      new_response.id,
                                      num
                                    )}}},[_c('img',{attrs:{"src":"/img/black_plus.png","alt":""}})])])])])])])}),0)],_c('div',{staticClass:"d-flex"},[_c('p',{staticStyle:{"margin-top":"6px","margin-bottom":"5px"}},[_vm._v(" "+_vm._s(_vm.tlt('card_response_add_card_label'))+" ")]),_c('button',{staticStyle:{"cursor":"pointer","border":"none","background":"transparent"},on:{"click":function($event){return _vm.add_to_assistant_response_carousel_card_list(
                          'add',
                          new_response.id
                        )}}},[_c('img',{attrs:{"src":"/img/black_plus.png","alt":""}})])])],2)]):_vm._e()])}),_c('div',{staticClass:"d-flex",staticStyle:{"margin-left":"1rem !important"}},[_c('p',{staticClass:"sub_heading"},[_vm._v(_vm._s(_vm.tlt('slots_response_type_first_label'))+" :")]),_c('select',{directives:[{name:"model",rawName:"v-model",value:(_vm.selected_response_type),expression:"selected_response_type"}],staticClass:"form-control input-tag",staticStyle:{"width":"100px","height":"25px","margin-left":"10px","padding":"0px"},attrs:{"id":"res_n_int_source"},on:{"change":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = "_value" in o ? o._value : o.value;return val}); _vm.selected_response_type=$event.target.multiple ? $$selectedVal : $$selectedVal[0]}}},_vm._l((_vm.assistant_response_type),function(option,index){return _c('option',{key:index,domProps:{"value":option}},[_vm._v(" "+_vm._s(option)+" ")])}),0),_c('p',{staticClass:"sub_heading",staticStyle:{"margin-left":"20px"}},[_vm._v(" "+_vm._s(_vm.tlt('slots_add_response_btn'))+" ")]),_c('button',{staticStyle:{"margin-top":"-14px","cursor":"pointer","border":"none","background":"transparent url('@portal/assets/img/plus.png')"},on:{"click":function($event){return _vm.add_slot_to_assistant_response(
                    'Addbtn',
                    'unused',
                    _vm.edit_slot_check_for,
                    _vm.edit_slot_slot_variable,
                    null,
                    'unfilled_slot'
                  )}}},[_c('img',{attrs:{"src":"/img/black_plus.png","alt":""}})])])],2),(_vm.is_validation_entity)?_c('div',{staticClass:"form-group"},[_c('hr'),_c('h5',{staticStyle:{"margin-top":"6px","margin-bottom":"5px"}},[_vm._v(" "+_vm._s(_vm.tlt('assist_validate_response_header'))+" ")]),_vm._l((_vm.validation_slot_assistant_response),function(new_response,index){return _c('div',{key:index,staticClass:"form-group"},[(new_response.type == 'text')?_c('div',{staticClass:"custom-box"},[_c('span',{staticClass:"btn btn-light",staticStyle:{"float":"right","cursor":"pointer","font-size":"14px"},attrs:{"title":"Remove Response"},on:{"click":function($event){return _vm.remove_slot_to_assistant_response(
                      new_response.id,
                      new_response.recognizes,
                      'slotmodal'
                    )}}},[_c('svg',{staticClass:"bi bi-trash",attrs:{"xmlns":"http://www.w3.org/2000/svg","width":"16","height":"16","fill":"currentColor","viewBox":"0 0 16 16"}},[_c('path',{attrs:{"d":"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z"}}),_c('path',{attrs:{"fill-rule":"evenodd","d":"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z"}})])]),_c('button',{staticClass:"btn btn-light",staticStyle:{"float":"right","cursor":"pointer","font-size":"14px"},style:(index === _vm.validation_slot_assistant_response.length-1 ?'cursor: not-allowed':''),attrs:{"disabled":index === _vm.validation_slot_assistant_response.length-1,"title":"Move down"},on:{"click":function($event){return _vm.interchange_position_assistant_response(
                      new_response.id,
                      _vm.validation_slot_assistant_response[index+1].id,
                      'slot_modal'
                    )}}},[_c('svg',{staticClass:"bi bi-chevron-down",attrs:{"xmlns":"http://www.w3.org/2000/svg","width":"16","height":"16","fill":"currentColor","viewBox":"0 0 16 16"}},[_c('path',{attrs:{"fill-rule":"evenodd","d":"M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z"}})])]),_c('button',{staticClass:"btn btn-light",staticStyle:{"float":"right","cursor":"pointer","font-size":"14px"},style:(index === 0 ?'cursor: not-allowed':''),attrs:{"disabled":index === 0,"title":"Move Up"},on:{"click":function($event){return _vm.interchange_position_assistant_response(
                      new_response.id,
                      _vm.validation_slot_assistant_response[index-1].id,
                      'slot_modal'
                    )}}},[_c('svg',{staticClass:"bi bi-chevron-up",attrs:{"xmlns":"http://www.w3.org/2000/svg","width":"16","height":"16","fill":"#273679","viewBox":"0 0 16 16"}},[_c('path',{attrs:{"fill-rule":"evenodd","d":"M7.646 4.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1-.708.708L8 5.707l-5.646 5.647a.5.5 0 0 1-.708-.708l6-6z"}})])]),_c('p',{staticClass:"sub_heading"},[_vm._v(" "+_vm._s(_vm.tlt('assist_validate_text_response_header'))+" : "+_vm._s(new_response.id)+" ")]),_c('div',[_vm._l((new_response.values),function(response,num){return _c('div',{key:num,staticClass:"form-group"},[_c('div',{staticClass:"d-flex"},[_c('input',{directives:[{name:"model",rawName:"v-model",value:(new_response.values[num]),expression:"new_response.values[num]"}],staticClass:"form-control input-tag",staticStyle:{"width":"100%","padding":"0.375rem 0.5rem"},attrs:{"placeholder":_vm.tlt('response_text'),"type":"text","id":'assistance_response_' + new_response.id + '_' + num},domProps:{"value":(new_response.values[num])},on:{"focusout":function($event){return _vm.insert_variable_block_off(new_response.id, num)},"focusin":function($event){return _vm.insert_variable_block_on(new_response.id, num)},"keyup":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,"enter",13,$event.key,"Enter")){ return null; }return _vm.add_to_assistant_response_text_list(
                            'add',
                            new_response.id
                          )},"input":function($event){if($event.target.composing){ return; }_vm.$set(new_response.values, num, $event.target.value)}}}),_c('div',{staticStyle:{"opacity":"0"},attrs:{"id":'insert_variable_block' +
                          new_response.id +
                          '_' +
                          num}},[_c('a',{staticClass:"example fa-stack fa-1x",staticStyle:{"margin-top":"20px !important"},attrs:{"id":"insert_variable_button","type":"button","data-toggle":"modal","data-target":"#insert_variable_modal"},on:{"click":function($event){return _vm.set_assistance_response_index(
                              new_response.id,
                              num
                            )}}},[_c('i',{staticClass:"fas fa-circle fa-stack-2x",staticStyle:{"color":"#dbe2e8"},attrs:{"id":'insert_variable_circle_' +
                              new_response.id +
                              '_' +
                              num}}),_c('span',{staticClass:"fa fa-stack-1x",staticStyle:{"color":"white"},on:{"mouseover":function($event){return _vm.circle_mouseover(new_response.id, num)},"mouseout":function($event){return _vm.circle_mouseout(new_response.id, num)}}},[_c('span',{staticStyle:{"font-size":"14px","display":"block"}},[_vm._v(" {...} ")])])])]),(
                          _vm.check_slot_value_use_in_response(
                            new_response.values[num]
                          )
                        )?_c('span',{staticClass:"my-auto",staticStyle:{"margin-left":"12px","color":"#0645ad"}},[_c('i',{staticClass:"fa fa-info-circle",staticStyle:{"font-size":"16px"},attrs:{"aria-hidden":"true","title":"You have used {} in the response, which is used to access slot value, i.e it would add the value gathered by slot if enabled in previous or current node. (example: Email: {$email_id} would print Email: test@mail.com)."}})]):_vm._e(),(new_response.values.length > 1)?_c('span',{staticClass:"close my-auto",staticStyle:{"cursor":"pointer","margin-left":"12px"},attrs:{"title":"Remove Text Response"},on:{"click":function($event){return _vm.add_to_assistant_response_text_list(
                            'remove',
                            new_response.id,
                            num
                          )}}},[_vm._v(" × ")]):_vm._e()])])}),_c('div',{staticClass:"d-flex"},[_c('p',{staticStyle:{"margin-top":"6px","margin-bottom":"5px"}},[_vm._v(" "+_vm._s(_vm.tlt('assist_validate_response_header'))+" ")]),_c('button',{staticStyle:{"cursor":"pointer","border":"none","background":"transparent"},on:{"click":function($event){return _vm.add_to_assistant_response_text_list(
                          'add',
                          new_response.id
                        )}}},[_c('img',{attrs:{"src":"/img/black_plus.png","alt":""}})])]),_c('div',{staticClass:"response-variations"},[_c('span',[_vm._v(_vm._s(_vm.tlt('response_variation_text1'))+" "),_c('strong',[_vm._v(_vm._s(new_response.variation))]),_vm._v(".")]),_vm._v(" "+_vm._s(_vm.tlt('response_variation_text2'))+" "),_c('a',{directives:[{name:"show",rawName:"v-show",value:(new_response.variation != 'sequential'),expression:"new_response.variation != 'sequential'"}],staticClass:"response-variation",attrs:{"href":"javascript:void(0);"},on:{"click":function($event){return _vm.select_response_variation(
                          new_response.id,
                          'sequential'
                        )}}},[_vm._v(" "+_vm._s(_vm.tlt('response_variation_text3'))+" ")]),_c('span',{directives:[{name:"show",rawName:"v-show",value:(new_response.variation != 'sequential'),expression:"new_response.variation != 'sequential'"}]},[_vm._v(" | ")]),_c('a',{directives:[{name:"show",rawName:"v-show",value:(new_response.variation != 'multiline'),expression:"new_response.variation != 'multiline'"}],staticClass:"variation-multiline",attrs:{"href":"javascript:void(0);"},on:{"click":function($event){return _vm.select_response_variation(
                          new_response.id,
                          'multiline'
                        )}}},[_vm._v(" "+_vm._s(_vm.tlt('response_variation_text4'))+" ")]),_c('span',{directives:[{name:"show",rawName:"v-show",value:(
                        new_response.variation != 'random' &&
                        new_response.variation != 'multiline'
                      ),expression:"\n                        new_response.variation != 'random' &&\n                        new_response.variation != 'multiline'\n                      "}]},[_vm._v(" | ")]),_c('a',{directives:[{name:"show",rawName:"v-show",value:(new_response.variation != 'random'),expression:"new_response.variation != 'random'"}],staticClass:"variation-random",attrs:{"href":"javascript:void(0);"},on:{"click":function($event){return _vm.select_response_variation(new_response.id, 'random')}}},[_vm._v(" "+_vm._s(_vm.tlt('response_variation_text5'))+" ")])])],2)]):_vm._e(),(new_response.type == 'image')?_c('div',{staticClass:"custom-box"},[_c('span',{staticClass:"btn btn-light",staticStyle:{"float":"right","cursor":"pointer","font-size":"14px"},attrs:{"title":"Remove Response"},on:{"click":function($event){return _vm.remove_slot_to_assistant_response(
                      new_response.id,
                      new_response.recognizes,
                      'slotmodal'
                    )}}},[_c('svg',{staticClass:"bi bi-trash",attrs:{"xmlns":"http://www.w3.org/2000/svg","width":"16","height":"16","fill":"currentColor","viewBox":"0 0 16 16"}},[_c('path',{attrs:{"d":"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z"}}),_c('path',{attrs:{"fill-rule":"evenodd","d":"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z"}})])]),_c('button',{staticClass:"btn btn-light",staticStyle:{"float":"right","cursor":"pointer","font-size":"14px"},style:(index === _vm.validation_slot_assistant_response.length-1 ?'cursor: not-allowed':''),attrs:{"disabled":index === _vm.validation_slot_assistant_response.length-1,"title":"Move down"},on:{"click":function($event){return _vm.interchange_position_assistant_response(
                      new_response.id,
                      _vm.validation_slot_assistant_response[index+1].id,
                      'slot_modal'
                    )}}},[_c('svg',{staticClass:"bi bi-chevron-down",attrs:{"xmlns":"http://www.w3.org/2000/svg","width":"16","height":"16","fill":"currentColor","viewBox":"0 0 16 16"}},[_c('path',{attrs:{"fill-rule":"evenodd","d":"M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z"}})])]),_c('button',{staticClass:"btn btn-light",staticStyle:{"float":"right","cursor":"pointer","font-size":"14px"},style:(index === 0 ?'cursor: not-allowed':''),attrs:{"disabled":index === 0,"title":"Move Up"},on:{"click":function($event){return _vm.interchange_position_assistant_response(
                      new_response.id,
                      _vm.validation_slot_assistant_response[index-1].id,
                      'slot_modal'
                    )}}},[_c('svg',{staticClass:"bi bi-chevron-up",attrs:{"xmlns":"http://www.w3.org/2000/svg","width":"16","height":"16","fill":"#273679","viewBox":"0 0 16 16"}},[_c('path',{attrs:{"fill-rule":"evenodd","d":"M7.646 4.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1-.708.708L8 5.707l-5.646 5.647a.5.5 0 0 1-.708-.708l6-6z"}})])]),_c('p',{staticClass:"sub_heading"},[_vm._v("Image Response : "+_vm._s(new_response.id))]),_c('div',[_c('input',{directives:[{name:"model",rawName:"v-model",value:(new_response.source),expression:"new_response.source"}],staticClass:"form-control input-tag",staticStyle:{"width":"100%","padding":"0.375rem 0.5rem"},attrs:{"placeholder":_vm.tlt('add_img_url'),"type":"text"},domProps:{"value":(new_response.source)},on:{"input":function($event){if($event.target.composing){ return; }_vm.$set(new_response, "source", $event.target.value)}}}),_c('p',{directives:[{name:"show",rawName:"v-show",value:(
                      _vm.check_image_url(new_response.source) == false &&
                      Boolean(new_response.source)
                    ),expression:"\n                      check_image_url(new_response.source) == false &&\n                      Boolean(new_response.source)\n                    "}],staticStyle:{"color":"red !important","margin-bottom":"0px !important","padding-top":"8px !important"}},[_vm._v(" "+_vm._s(_vm.tlt('assist_validate_image_condition_text'))+" ")])])]):_vm._e(),(new_response.type == 'video')?_c('div',{staticClass:"custom-box"},[_c('span',{staticClass:"btn btn-light",staticStyle:{"float":"right","cursor":"pointer","font-size":"14px"},attrs:{"title":"Remove Response"},on:{"click":function($event){return _vm.remove_slot_to_assistant_response(
                      new_response.id,
                      new_response.recognizes,
                      'slotmodal'
                    )}}},[_c('svg',{staticClass:"bi bi-trash",attrs:{"xmlns":"http://www.w3.org/2000/svg","width":"16","height":"16","fill":"currentColor","viewBox":"0 0 16 16"}},[_c('path',{attrs:{"d":"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z"}}),_c('path',{attrs:{"fill-rule":"evenodd","d":"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z"}})])]),_c('button',{staticClass:"btn btn-light",staticStyle:{"float":"right","cursor":"pointer","font-size":"14px"},style:(index === _vm.validation_slot_assistant_response.length-1 ?'cursor: not-allowed':''),attrs:{"disabled":index === _vm.validation_slot_assistant_response.length-1,"title":"Move down"},on:{"click":function($event){return _vm.interchange_position_assistant_response(
                      new_response.id,
                      _vm.validation_slot_assistant_response[index+1].id,
                      'slot_modal'
                    )}}},[_c('svg',{staticClass:"bi bi-chevron-down",attrs:{"xmlns":"http://www.w3.org/2000/svg","width":"16","height":"16","fill":"currentColor","viewBox":"0 0 16 16"}},[_c('path',{attrs:{"fill-rule":"evenodd","d":"M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z"}})])]),_c('button',{staticClass:"btn btn-light",staticStyle:{"float":"right","cursor":"pointer","font-size":"14px"},style:(index === 0 ?'cursor: not-allowed':''),attrs:{"disabled":index === 0,"title":"Move Up"},on:{"click":function($event){return _vm.interchange_position_assistant_response(
                      new_response.id,
                      _vm.validation_slot_assistant_response[index-1].id,
                      'slot_modal'
                    )}}},[_c('svg',{staticClass:"bi bi-chevron-up",attrs:{"xmlns":"http://www.w3.org/2000/svg","width":"16","height":"16","fill":"#273679","viewBox":"0 0 16 16"}},[_c('path',{attrs:{"fill-rule":"evenodd","d":"M7.646 4.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1-.708.708L8 5.707l-5.646 5.647a.5.5 0 0 1-.708-.708l6-6z"}})])]),_c('p',{staticClass:"sub_heading"},[_vm._v(" "+_vm._s(_vm.tlt('assist_validate_video_response_header'))+" : "+_vm._s(new_response.id)+" ")]),_c('div',[_c('input',{directives:[{name:"model",rawName:"v-model.trim",value:(new_response.source),expression:"new_response.source",modifiers:{"trim":true}}],staticClass:"form-control input-tag",staticStyle:{"width":"100%","padding":"0.375rem 0.5rem"},attrs:{"placeholder":_vm.tlt('add_video_url'),"type":"text"},domProps:{"value":(new_response.source)},on:{"input":function($event){if($event.target.composing){ return; }_vm.$set(new_response, "source", $event.target.value.trim())},"blur":function($event){return _vm.$forceUpdate()}}}),_c('p',{directives:[{name:"show",rawName:"v-show",value:(
                      _vm.check_video_url(new_response.source) === false &&
                      Boolean(new_response.source)
                    ),expression:"\n                      check_video_url(new_response.source) === false &&\n                      Boolean(new_response.source)\n                    "}],staticStyle:{"color":"red !important","margin-bottom":"0px !important","padding-top":"8px !important"}},[_vm._v(" "+_vm._s(_vm.tlt('assist_validate_video_condition_text'))+" ")])])]):_vm._e(),(new_response.type == 'choices')?_c('div',{staticClass:"custom-box"},[_c('span',{staticClass:"btn btn-light",staticStyle:{"float":"right","cursor":"pointer","font-size":"14px"},attrs:{"title":"Remove Response"},on:{"click":function($event){return _vm.remove_slot_to_assistant_response(
                      new_response.id,
                      new_response.recognizes,
                      'slotmodal'
                    )}}},[_c('svg',{staticClass:"bi bi-trash",attrs:{"xmlns":"http://www.w3.org/2000/svg","width":"16","height":"16","fill":"currentColor","viewBox":"0 0 16 16"}},[_c('path',{attrs:{"d":"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z"}}),_c('path',{attrs:{"fill-rule":"evenodd","d":"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z"}})])]),_c('button',{staticClass:"btn btn-light",staticStyle:{"float":"right","cursor":"pointer","font-size":"14px"},style:(index === _vm.validation_slot_assistant_response.length-1 ?'cursor: not-allowed':''),attrs:{"disabled":index === _vm.validation_slot_assistant_response.length-1,"title":"Move down"},on:{"click":function($event){return _vm.interchange_position_assistant_response(
                      new_response.id,
                      _vm.validation_slot_assistant_response[index+1].id,
                      'slot_modal'
                    )}}},[_c('svg',{staticClass:"bi bi-chevron-down",attrs:{"xmlns":"http://www.w3.org/2000/svg","width":"16","height":"16","fill":"currentColor","viewBox":"0 0 16 16"}},[_c('path',{attrs:{"fill-rule":"evenodd","d":"M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z"}})])]),_c('button',{staticClass:"btn btn-light",staticStyle:{"float":"right","cursor":"pointer","font-size":"14px"},style:(index === 0 ?'cursor: not-allowed':''),attrs:{"disabled":index === 0,"title":"Move Up"},on:{"click":function($event){return _vm.interchange_position_assistant_response(
                      new_response.id,
                      _vm.validation_slot_assistant_response[index-1].id,
                      'slot_modal'
                    )}}},[_c('svg',{staticClass:"bi bi-chevron-up",attrs:{"xmlns":"http://www.w3.org/2000/svg","width":"16","height":"16","fill":"#273679","viewBox":"0 0 16 16"}},[_c('path',{attrs:{"fill-rule":"evenodd","d":"M7.646 4.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1-.708.708L8 5.707l-5.646 5.647a.5.5 0 0 1-.708-.708l6-6z"}})])]),_c('p',{staticClass:"sub_heading"},[_vm._v(" "+_vm._s(_vm.tlt('assist_validate_choice_response_header'))+" : "+_vm._s(new_response.id)+" ")]),_c('div',[[_c('div',{staticStyle:{"display":"block","margin-bottom":"1rem"}},_vm._l((new_response.choices),function(response,num){return _c('div',{key:num,staticClass:"d-flex mb-2"},[_c('div',{staticClass:"input-group",staticStyle:{"display":"block"}},[_c('div',{staticClass:"d-flex"},[_c('input',{directives:[{name:"model",rawName:"v-model.trim",value:(response.title),expression:"response.title",modifiers:{"trim":true}}],staticClass:"form-control input-tag",staticStyle:{"width":"100% !important","padding":"0.375rem 0.5rem","border-radius":"5px 0px 0px 5px !important"},attrs:{"type":"text","placeholder":_vm.tlt('enter_title'),"maxlength":"50"},domProps:{"value":(response.title)},on:{"input":function($event){if($event.target.composing){ return; }_vm.$set(response, "title", $event.target.value.trim())},"blur":function($event){return _vm.$forceUpdate()}}}),_c('input',{directives:[{name:"model",rawName:"v-model.trim",value:(response.payload),expression:"response.payload",modifiers:{"trim":true}}],staticClass:"form-control input-tag",staticStyle:{"width":"100% !important","padding":"0.375rem 0.5rem","border-radius":"0px !important"},attrs:{"type":"text","placeholder":_vm.change_btn_value_placeholder(response.type)},domProps:{"value":(response.payload)},on:{"input":function($event){if($event.target.composing){ return; }_vm.$set(response, "payload", $event.target.value.trim())},"blur":function($event){return _vm.$forceUpdate()}}}),_c('div',{staticClass:"input-group-append"},[_c('select',{directives:[{name:"model",rawName:"v-model",value:(response.type),expression:"response.type"}],staticClass:"form-control",staticStyle:{"width":"100px !important","height":"38px","padding":"0px !important"},attrs:{"id":"button_type_list_id"},on:{"change":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = "_value" in o ? o._value : o.value;return val}); _vm.$set(response, "type", $event.target.multiple ? $$selectedVal : $$selectedVal[0])}}},_vm._l((_vm.button_type_list),function(option,index){return _c('option',{key:index,domProps:{"value":option.value}},[_vm._v(" "+_vm._s(option.name)+" ")])}),0)])])]),(new_response.choices.length > 1)?_c('span',{staticClass:"close my-auto mr-0 ml-2",staticStyle:{"cursor":"pointer","float":"right"},attrs:{"title":"Remove Choice Response"},on:{"click":function($event){return _vm.add_to_assistant_response_choice_list(
                              'remove',
                              new_response.id,
                              num
                            )}}},[_vm._v(" ×")]):_vm._e()])}),0)],_c('div',{staticClass:"d-flex"},[_c('p',{staticStyle:{"margin-top":"6px","margin-bottom":"5px"}},[_vm._v(" "+_vm._s(_vm.tlt('assist_validate_add_choice_btn'))+" ")]),_c('button',{staticStyle:{"cursor":"pointer","border":"none","background":"transparent"},on:{"click":function($event){return _vm.add_to_assistant_response_choice_list(
                          'add',
                          new_response.id
                        )}}},[_c('img',{attrs:{"src":"/img/black_plus.png","alt":""}})])])],2)]):_vm._e(),(new_response.type == 'card')?_c('div',{staticClass:"custom-box"},[_c('span',{staticClass:"btn btn-light",staticStyle:{"float":"right","cursor":"pointer","font-size":"14px"},attrs:{"title":"Remove Response"},on:{"click":function($event){return _vm.remove_slot_to_assistant_response(
                      new_response.id,
                      new_response.recognizes,
                      'slotmodal'
                    )}}},[_c('svg',{staticClass:"bi bi-trash",attrs:{"xmlns":"http://www.w3.org/2000/svg","width":"16","height":"16","fill":"currentColor","viewBox":"0 0 16 16"}},[_c('path',{attrs:{"d":"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z"}}),_c('path',{attrs:{"fill-rule":"evenodd","d":"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z"}})])]),_c('button',{staticClass:"btn btn-light",staticStyle:{"float":"right","cursor":"pointer","font-size":"14px"},style:(index === _vm.validation_slot_assistant_response.length-1 ?'cursor: not-allowed':''),attrs:{"disabled":index === _vm.validation_slot_assistant_response.length-1,"title":"Move down"},on:{"click":function($event){return _vm.interchange_position_assistant_response(
                      new_response.id,
                      _vm.validation_slot_assistant_response[index+1].id,
                      'slot_modal'
                    )}}},[_c('svg',{staticClass:"bi bi-chevron-down",attrs:{"xmlns":"http://www.w3.org/2000/svg","width":"16","height":"16","fill":"currentColor","viewBox":"0 0 16 16"}},[_c('path',{attrs:{"fill-rule":"evenodd","d":"M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z"}})])]),_c('button',{staticClass:"btn btn-light",staticStyle:{"float":"right","cursor":"pointer","font-size":"14px"},style:(index === 0 ?'cursor: not-allowed':''),attrs:{"disabled":index === 0,"title":"Move Up"},on:{"click":function($event){return _vm.interchange_position_assistant_response(
                      new_response.id,
                      _vm.validation_slot_assistant_response[index-1].id,
                      'slot_modal'
                    )}}},[_c('svg',{staticClass:"bi bi-chevron-up",attrs:{"xmlns":"http://www.w3.org/2000/svg","width":"16","height":"16","fill":"#273679","viewBox":"0 0 16 16"}},[_c('path',{attrs:{"fill-rule":"evenodd","d":"M7.646 4.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1-.708.708L8 5.707l-5.646 5.647a.5.5 0 0 1-.708-.708l6-6z"}})])]),_c('p',{staticClass:"sub_heading"},[_vm._v(" "+_vm._s(_vm.tlt('assist_validate_card_response_header'))+" : "+_vm._s(new_response.id)+" ")]),_c('div',[[_c('div',{staticClass:"row"},_vm._l((new_response.card_list),function(response,num){return _c('div',{key:num,staticClass:"col-sm-4 pb-3"},[_c('div',{staticClass:"card"},[_c('div',{staticClass:"card-body"},[_c('p',{staticClass:"sub_heading_carousel",staticStyle:{"color":"dimgray","margin-bottom":"5px"}},[_vm._v(" "+_vm._s(_vm.tlt('assist_validate_card_response_card_label'))+" : "+_vm._s(num + 1)+" ")]),(new_response.card_list.length > 1)?_c('span',{staticClass:"close ml-auto mr-0",staticStyle:{"cursor":"pointer","float":"right","margin-top":"-29px"},attrs:{"title":"Remove Card Response"},on:{"click":function($event){return _vm.add_to_assistant_response_carousel_card_list(
                                  'remove',
                                  new_response.id,
                                  num
                                )}}},[_vm._v(" ×")]):_vm._e(),_c('div',[_c('div',{staticClass:"d-sm-flex justify-content-start"},[_c('h6',{staticClass:"label_header",staticStyle:{"margin-top":"0"}},[_vm._v(" "+_vm._s(_vm.tlt('assist_validate_card_response_file_type_label'))+": ")]),_c('div',{staticClass:"radio my-auto radio-label"},[_c('label',{staticStyle:{"font-size":"13px"}},[_c('input',{directives:[{name:"model",rawName:"v-model",value:(response.is_image),expression:"response.is_image"}],attrs:{"type":"radio","id":"carousel_img"},domProps:{"value":true,"checked":_vm._q(response.is_image,true)},on:{"change":function($event){return _vm.$set(response, "is_image", true)}}}),_c('span',{staticClass:"icn",attrs:{"id":"filter_portal_user_radio"}}),_vm._v(" "+_vm._s(_vm.tlt('assist_validate_card_response_image_label'))+" ")]),_c('label',{staticStyle:{"font-size":"13px"}},[_c('input',{directives:[{name:"model",rawName:"v-model",value:(response.is_image),expression:"response.is_image"}],attrs:{"type":"radio","id":"carousel_video"},domProps:{"value":false,"checked":_vm._q(response.is_image,false)},on:{"change":function($event){return _vm.$set(response, "is_image", false)}}}),_c('span',{staticClass:"icn"}),_vm._v(" "+_vm._s(_vm.tlt('assist_validate_card_response_video_label'))+" ")])])])]),(response.is_image)?_c('div',[_c('input',{directives:[{name:"model",rawName:"v-model",value:(response.image),expression:"response.image"}],staticClass:"form-control input-tag",staticStyle:{"width":"100%","padding":"0.375rem 0.5rem"},attrs:{"placeholder":_vm.tlt('img_url'),"type":"text"},domProps:{"value":(response.image)},on:{"input":function($event){if($event.target.composing){ return; }_vm.$set(response, "image", $event.target.value)}}}),_c('p',{directives:[{name:"show",rawName:"v-show",value:(
                                  _vm.check_image_url(response.image) === false &&
                                  Boolean(response.image)
                                ),expression:"\n                                  check_image_url(response.image) === false &&\n                                  Boolean(response.image)\n                                "}],staticStyle:{"color":"red !important","margin-bottom":"0px !important","padding-top":"8px !important"}},[_vm._v(" "+_vm._s(_vm.tlt('assist_validate_response_image_condition_text'))+" ")])]):_c('div',[_c('input',{directives:[{name:"model",rawName:"v-model.trim",value:(response.video),expression:"response.video",modifiers:{"trim":true}}],staticClass:"form-control input-tag",staticStyle:{"width":"100% !important","padding":"0.375rem 0.5rem"},attrs:{"type":"text","placeholder":_vm.tlt('video_url')},domProps:{"value":(response.video)},on:{"input":function($event){if($event.target.composing){ return; }_vm.$set(response, "video", $event.target.value.trim())},"blur":function($event){return _vm.$forceUpdate()}}}),_c('p',{directives:[{name:"show",rawName:"v-show",value:(
                                  _vm.check_video_url(response.video) === false &&
                                  Boolean(response.video)
                                ),expression:"\n                                  check_video_url(response.video) === false &&\n                                  Boolean(response.video)\n                                "}],staticStyle:{"color":"red !important","margin-bottom":"0px !important","padding-top":"8px !important"}},[_vm._v(" "+_vm._s(_vm.tlt('assist_validate_card_response_video_condition_text'))+" ")])]),_c('label',{staticClass:"label_header"},[_vm._v(_vm._s(_vm.tlt('assist_validate_card_response_title_label')))]),_c('input',{directives:[{name:"model",rawName:"v-model.trim",value:(response.title),expression:"response.title",modifiers:{"trim":true}}],staticClass:"form-control input-tag",staticStyle:{"width":"100% !important","padding":"0.375rem 0.5rem"},attrs:{"type":"text","placeholder":_vm.tlt('enter_title')},domProps:{"value":(response.title)},on:{"input":function($event){if($event.target.composing){ return; }_vm.$set(response, "title", $event.target.value.trim())},"blur":function($event){return _vm.$forceUpdate()}}}),_c('label',{staticClass:"label_header"},[_vm._v(_vm._s(_vm.tlt('assist_validate_card_response_desc_label')))]),_c('textarea',{directives:[{name:"model",rawName:"v-model.trim",value:(response.text),expression:"response.text",modifiers:{"trim":true}}],staticClass:"form-control input-tag textarea-style",staticStyle:{"resize":"none"},attrs:{"type":"text","rows":"3","cols":"20","placeholder":_vm.tlt('enter_description')},domProps:{"value":(response.text)},on:{"input":function($event){if($event.target.composing){ return; }_vm.$set(response, "text", $event.target.value.trim())},"blur":function($event){return _vm.$forceUpdate()}}}),_c('div',[_c('p',{staticClass:"label_header"},[_vm._v(_vm._s(_vm.tlt('assist_validate_card_response_button_label')))]),_c('div',{staticClass:"ScrollStyle"},_vm._l((response.buttons),function(button,btn_num){return _c('div',{key:btn_num,staticClass:"mb-2"},[_c('div',{staticClass:"d-flex"},[_c('div',{staticClass:"input-group",staticStyle:{"display":"block"}},[_c('div',{staticClass:"d-flex"},[_c('input',{directives:[{name:"model",rawName:"v-model.trim",value:(button.title),expression:"button.title",modifiers:{"trim":true}}],staticClass:"form-control input-tag",staticStyle:{"width":"100% !important","padding":"0.375rem 0.5rem","border-radius":"5px 0px 0px 5px !important"},attrs:{"type":"text","placeholder":_vm.tlt('enter_title'),"maxlength":"50"},domProps:{"value":(button.title)},on:{"input":function($event){if($event.target.composing){ return; }_vm.$set(button, "title", $event.target.value.trim())},"blur":function($event){return _vm.$forceUpdate()}}}),_c('input',{directives:[{name:"model",rawName:"v-model.trim",value:(button.value),expression:"button.value",modifiers:{"trim":true}}],staticClass:"form-control input-tag",staticStyle:{"width":"100% !important","padding":"0.375rem 0.5rem","border-radius":"0px !important"},attrs:{"type":"text","placeholder":_vm.change_btn_value_placeholder(
                                              button.type
                                            )},domProps:{"value":(button.value)},on:{"input":function($event){if($event.target.composing){ return; }_vm.$set(button, "value", $event.target.value.trim())},"blur":function($event){return _vm.$forceUpdate()}}}),_c('div',{staticClass:"input-group-append"},[_c('select',{directives:[{name:"model",rawName:"v-model",value:(button.type),expression:"button.type"}],staticClass:"form-control",staticStyle:{"width":"20px !important","height":"38px","padding":"0px !important"},attrs:{"id":"button_type_list_id"},on:{"change":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = "_value" in o ? o._value : o.value;return val}); _vm.$set(button, "type", $event.target.multiple ? $$selectedVal : $$selectedVal[0])}}},_vm._l((_vm.button_type_list),function(option,index){return _c('option',{key:index,domProps:{"value":option.value}},[_vm._v(" "+_vm._s(option.name)+" ")])}),0)])])]),(response.buttons.length > 1)?_c('span',{staticClass:"close mx-1",staticStyle:{"cursor":"pointer","float":"right","margin-top":"8px"},attrs:{"title":"Remove Button Response"},on:{"click":function($event){return _vm.add_to_assistant_response_carousel_card_button_list(
                                          'remove',
                                          new_response.id,
                                          num,
                                          btn_num
                                        )}}},[_vm._v(" ×")]):_vm._e()])])}),0),_c('div',{staticClass:"d-flex"},[_c('p',{staticStyle:{"margin-top":"6px","margin-bottom":"5px"}},[_vm._v(" "+_vm._s(_vm.tlt('assist_validate_card_response_add_btn_label'))+" ")]),_c('button',{staticStyle:{"cursor":"pointer","border":"none","background":"transparent"},on:{"click":function($event){return _vm.add_to_assistant_response_carousel_card_button_list(
                                      'add',
                                      new_response.id,
                                      num
                                    )}}},[_c('img',{attrs:{"src":"/img/black_plus.png","alt":""}})])])])])])])}),0)],_c('div',{staticClass:"d-flex"},[_c('p',{staticStyle:{"margin-top":"6px","margin-bottom":"5px"}},[_vm._v(" "+_vm._s(_vm.tlt('assist_validate_card_response_add_card_label'))+" ")]),_c('button',{staticStyle:{"cursor":"pointer","border":"none","background":"transparent"},on:{"click":function($event){return _vm.add_to_assistant_response_carousel_card_list(
                          'add',
                          new_response.id
                        )}}},[_c('img',{attrs:{"src":"/img/black_plus.png","alt":""}})])])],2)]):_vm._e()])}),_c('div',{staticClass:"d-flex",staticStyle:{"margin-left":"1rem !important"}},[_c('p',{staticClass:"sub_heading"},[_vm._v(_vm._s(_vm.tlt('assist_validate_response_type_first_label'))+" :")]),_c('select',{directives:[{name:"model",rawName:"v-model",value:(_vm.selected_response_type),expression:"selected_response_type"}],staticClass:"form-control input-tag",staticStyle:{"width":"100px","height":"25px","margin-left":"10px","padding":"0px"},attrs:{"id":"res_n_int_source"},on:{"change":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = "_value" in o ? o._value : o.value;return val}); _vm.selected_response_type=$event.target.multiple ? $$selectedVal : $$selectedVal[0]}}},_vm._l((_vm.assistant_response_type),function(option,index){return _c('option',{key:index,domProps:{"value":option}},[_vm._v(" "+_vm._s(option)+" ")])}),0),_c('p',{staticClass:"sub_heading",staticStyle:{"margin-left":"20px"}},[_vm._v(" "+_vm._s(_vm.tlt('assist_validate_add_response_btn'))+" ")]),_c('button',{staticStyle:{"margin-top":"-14px","cursor":"pointer","border":"none","background":"transparent url('@portal/assets/img/plus.png')"},on:{"click":function($event){return _vm.add_slot_to_assistant_response(
                    'Addbtn',
                    'unused',
                    _vm.edit_slot_check_for,
                    _vm.edit_slot_slot_variable,
                    null,
                    'validation_response'
                  )}}},[_c('img',{attrs:{"src":"/img/black_plus.png","alt":""}})])])],2):_vm._e()])])])]),_c('div',{staticClass:"modal fade",attrs:{"id":"webhookmodal","tabindex":"-1","role":"dialog","aria-labelledby":"webhookmodal","aria-hidden":"true","data-backdrop":"static","data-keyboard":"false"}},[_c('div',{staticClass:"modal-dialog modal-dialog-centered modal-lg",attrs:{"role":"document"}},[_c('div',{staticClass:"modal-content"},[_c('div',{staticClass:"modal-header"},[_c('h5',{staticClass:"modal-title",staticStyle:{"font-style":"regular"}},[_vm._v(" Configure Webhook Response for : "+_vm._s(_vm.webhook_variable)+" ")]),_c('button',{staticClass:"close",attrs:{"type":"button","data-dismiss":"modal","aria-hidden":"true"},on:{"click":function($event){return _vm.on_close_webhook_modal()}}},[_vm._v(" × ")])]),_c('div',{staticClass:"modal-body"},[_c('div',{staticClass:"form-group"},[_c('h5',{staticStyle:{"margin-top":"6px","margin-bottom":"5px"}},[_vm._v(" "+_vm._s(_vm.tlt('slots_assistant_response_header'))+" ")]),_vm._l((_vm.webhook_assistant_response),function(new_response,index){return _c('div',{key:index,staticClass:"form-group"},[(new_response.type == 'text')?_c('div',{staticClass:"custom-box"},[_c('span',{staticClass:"btn btn-light",staticStyle:{"float":"right","cursor":"pointer","font-size":"14px"},attrs:{"title":"Remove Response"},on:{"click":function($event){return _vm.webhook_to_assistant_response(
                      'remove',
                      _vm.webhook_variable,
                      new_response.id
                    )}}},[_c('svg',{staticClass:"bi bi-trash",attrs:{"xmlns":"http://www.w3.org/2000/svg","width":"16","height":"16","fill":"currentColor","viewBox":"0 0 16 16"}},[_c('path',{attrs:{"d":"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z"}}),_c('path',{attrs:{"fill-rule":"evenodd","d":"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z"}})])]),_c('button',{staticClass:"btn btn-light",staticStyle:{"float":"right","cursor":"pointer","font-size":"14px"},style:(index === _vm.webhook_assistant_response.length-1 ?'cursor: not-allowed':''),attrs:{"disabled":index === _vm.webhook_assistant_response.length-1,"title":"Move down"},on:{"click":function($event){return _vm.interchange_position_assistant_response(
                      new_response.id,
                      _vm.webhook_assistant_response[index+1].id,
                      'webhook_modal'
                    )}}},[_c('svg',{staticClass:"bi bi-chevron-down",attrs:{"xmlns":"http://www.w3.org/2000/svg","width":"16","height":"16","fill":"currentColor","viewBox":"0 0 16 16"}},[_c('path',{attrs:{"fill-rule":"evenodd","d":"M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z"}})])]),_c('button',{staticClass:"btn btn-light",staticStyle:{"float":"right","cursor":"pointer","font-size":"14px"},style:(index === 0 ?'cursor: not-allowed':''),attrs:{"disabled":index === 0,"title":"Move Up"},on:{"click":function($event){return _vm.interchange_position_assistant_response(
                      new_response.id,
                      _vm.webhook_assistant_response[index-1].id,
                      'webhook_modal'
                    )}}},[_c('svg',{staticClass:"bi bi-chevron-up",attrs:{"xmlns":"http://www.w3.org/2000/svg","width":"16","height":"16","fill":"#273679","viewBox":"0 0 16 16"}},[_c('path',{attrs:{"fill-rule":"evenodd","d":"M7.646 4.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1-.708.708L8 5.707l-5.646 5.647a.5.5 0 0 1-.708-.708l6-6z"}})])]),_c('p',{staticClass:"sub_heading"},[_vm._v(" "+_vm._s(_vm.tlt('sots_text_response_header'))+" : "+_vm._s(new_response.id)+" ")]),_c('div',[_vm._l((new_response.values),function(response,num){return _c('div',{key:num,staticClass:"form-group"},[_c('div',{staticClass:"d-flex"},[_c('input',{directives:[{name:"model",rawName:"v-model",value:(new_response.values[num]),expression:"new_response.values[num]"}],staticClass:"form-control input-tag",staticStyle:{"width":"100%","padding":"0.375rem 0.5rem"},attrs:{"placeholder":_vm.tlt('response_text'),"type":"text","id":'assistance_response_' + new_response.id + '_' + num},domProps:{"value":(new_response.values[num])},on:{"focusout":function($event){return _vm.insert_variable_block_off(new_response.id, num)},"focusin":function($event){return _vm.insert_variable_block_on(new_response.id, num)},"input":function($event){if($event.target.composing){ return; }_vm.$set(new_response.values, num, $event.target.value)}}}),_c('div',{staticStyle:{"opacity":"0"},attrs:{"id":'insert_variable_block' +
                          new_response.id +
                          '_' +
                          num}},[_c('a',{staticClass:"example fa-stack fa-1x",staticStyle:{"margin-top":"20px !important"},attrs:{"id":"insert_variable_button","type":"button","data-toggle":"modal","data-target":"#insert_variable_modal"},on:{"click":function($event){return _vm.set_assistance_response_index(
                              new_response.id,
                              num
                            )}}},[_c('i',{staticClass:"fas fa-circle fa-stack-2x",staticStyle:{"color":"#dbe2e8"},attrs:{"id":'insert_variable_circle_' +
                              new_response.id +
                              '_' +
                              num}}),_c('span',{staticClass:"fa fa-stack-1x",staticStyle:{"color":"white"},on:{"mouseover":function($event){return _vm.circle_mouseover(new_response.id, num)},"mouseout":function($event){return _vm.circle_mouseout(new_response.id, num)}}},[_c('span',{staticStyle:{"font-size":"14px","display":"block"}},[_vm._v(" {...} ")])])])]),(
                          _vm.check_slot_value_use_in_response(
                            new_response.values[num]
                          )
                        )?_c('span',{staticClass:"my-auto",staticStyle:{"margin-left":"12px","color":"#0645ad"}},[_c('i',{staticClass:"fa fa-info-circle",staticStyle:{"font-size":"16px"},attrs:{"aria-hidden":"true","title":"You have used {} in the response, which is used to access slot value, i.e it would add the value gathered by slot if enabled in previous or current node. (example: Email: {$email_id} would print Email: test@mail.com)."}})]):_vm._e(),(new_response.values.length > 1)?_c('span',{staticClass:"close my-auto",staticStyle:{"cursor":"pointer","margin-left":"12px"},attrs:{"title":"Remove Text Response"},on:{"click":function($event){return _vm.add_to_assistant_response_text_list(
                            'remove',
                            new_response.id,
                            num
                          )}}},[_vm._v(" × ")]):_vm._e()])])}),_c('div',{staticClass:"d-flex"},[_c('p',{staticStyle:{"margin-top":"6px","margin-bottom":"5px"}},[_vm._v(" "+_vm._s(_vm.tlt('slots_add_value_btn'))+" ")]),_c('button',{staticStyle:{"cursor":"pointer","border":"none","background":"transparent"},on:{"click":function($event){return _vm.add_to_assistant_response_text_list(
                          'add',
                          new_response.id
                        )}}},[_c('img',{attrs:{"src":"/img/black_plus.png","alt":""}})])]),_c('div',{staticClass:"response-variations"},[_c('span',[_vm._v(_vm._s(_vm.tlt('response_variation_text1'))+" "),_c('strong',[_vm._v(_vm._s(new_response.variation))]),_vm._v(".")]),_vm._v(" "+_vm._s(_vm.tlt('response_variation_text2'))+" "),_c('a',{directives:[{name:"show",rawName:"v-show",value:(new_response.variation != 'sequential'),expression:"new_response.variation != 'sequential'"}],staticClass:"response-variation",attrs:{"href":"javascript:void(0);"},on:{"click":function($event){return _vm.select_response_variation(
                          new_response.id,
                          'sequential'
                        )}}},[_vm._v(_vm._s(_vm.tlt('response_variation_text3')))]),_c('span',{directives:[{name:"show",rawName:"v-show",value:(new_response.variation != 'sequential'),expression:"new_response.variation != 'sequential'"}]},[_vm._v(" | ")]),_c('a',{directives:[{name:"show",rawName:"v-show",value:(new_response.variation != 'multiline'),expression:"new_response.variation != 'multiline'"}],staticClass:"variation-multiline",attrs:{"href":"javascript:void(0);"},on:{"click":function($event){return _vm.select_response_variation(
                          new_response.id,
                          'multiline'
                        )}}},[_vm._v(_vm._s(_vm.tlt('response_variation_text4')))]),_c('span',{directives:[{name:"show",rawName:"v-show",value:(
                        new_response.variation != 'random' &&
                        new_response.variation != 'multiline'
                      ),expression:"\n                        new_response.variation != 'random' &&\n                        new_response.variation != 'multiline'\n                      "}]},[_vm._v(" | ")]),_c('a',{directives:[{name:"show",rawName:"v-show",value:(new_response.variation != 'random'),expression:"new_response.variation != 'random'"}],staticClass:"variation-random",attrs:{"href":"javascript:void(0);"},on:{"click":function($event){return _vm.select_response_variation(new_response.id, 'random')}}},[_vm._v(_vm._s(_vm.tlt('response_variation_text5')))])])],2)]):_vm._e(),(new_response.type == 'image')?_c('div',{staticClass:"custom-box"},[_c('span',{staticClass:"btn btn-light",staticStyle:{"float":"right","cursor":"pointer","font-size":"14px"},attrs:{"title":"Remove Response"},on:{"click":function($event){return _vm.webhook_to_assistant_response(
                      'remove',
                      _vm.webhook_variable,
                      new_response.id
                    )}}},[_c('svg',{staticClass:"bi bi-trash",attrs:{"xmlns":"http://www.w3.org/2000/svg","width":"16","height":"16","fill":"currentColor","viewBox":"0 0 16 16"}},[_c('path',{attrs:{"d":"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z"}}),_c('path',{attrs:{"fill-rule":"evenodd","d":"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z"}})])]),_c('button',{staticClass:"btn btn-light",staticStyle:{"float":"right","cursor":"pointer","font-size":"14px"},style:(index === _vm.webhook_assistant_response.length-1 ?'cursor: not-allowed':''),attrs:{"disabled":index === _vm.webhook_assistant_response.length-1,"title":"Move down"},on:{"click":function($event){return _vm.interchange_position_assistant_response(
                      new_response.id,
                      _vm.webhook_assistant_response[index+1].id,
                      'webhook_modal'
                    )}}},[_c('svg',{staticClass:"bi bi-chevron-down",attrs:{"xmlns":"http://www.w3.org/2000/svg","width":"16","height":"16","fill":"currentColor","viewBox":"0 0 16 16"}},[_c('path',{attrs:{"fill-rule":"evenodd","d":"M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z"}})])]),_c('button',{staticClass:"btn btn-light",staticStyle:{"float":"right","cursor":"pointer","font-size":"14px"},style:(index === 0 ?'cursor: not-allowed':''),attrs:{"disabled":index === 0,"title":"Move Up"},on:{"click":function($event){return _vm.interchange_position_assistant_response(
                      new_response.id,
                      _vm.webhook_assistant_response[index-1].id,
                      'webhook_modal'
                    )}}},[_c('svg',{staticClass:"bi bi-chevron-up",attrs:{"xmlns":"http://www.w3.org/2000/svg","width":"16","height":"16","fill":"#273679","viewBox":"0 0 16 16"}},[_c('path',{attrs:{"fill-rule":"evenodd","d":"M7.646 4.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1-.708.708L8 5.707l-5.646 5.647a.5.5 0 0 1-.708-.708l6-6z"}})])]),_c('p',{staticClass:"sub_heading"},[_vm._v(_vm._s(_vm.tlt('sots_img_response_header'))+" :")]),_c('div',[_c('input',{directives:[{name:"model",rawName:"v-model",value:(new_response.source),expression:"new_response.source"}],staticClass:"form-control input-tag",staticStyle:{"width":"100%","padding":"0.375rem 0.5rem"},attrs:{"placeholder":_vm.tlt('add_img_url'),"type":"text"},domProps:{"value":(new_response.source)},on:{"input":function($event){if($event.target.composing){ return; }_vm.$set(new_response, "source", $event.target.value)}}}),_c('p',{directives:[{name:"show",rawName:"v-show",value:(
                      _vm.check_image_url(new_response.source) == false &&
                      Boolean(new_response.source)
                    ),expression:"\n                      check_image_url(new_response.source) == false &&\n                      Boolean(new_response.source)\n                    "}],staticStyle:{"color":"red !important","margin-bottom":"0px !important","padding-top":"8px !important"}},[_vm._v(" "+_vm._s(_vm.tlt('slots_img_condition_text'))+" ")])])]):_vm._e(),(new_response.type == 'video')?_c('div',{staticClass:"custom-box"},[_c('span',{staticClass:"btn btn-light",staticStyle:{"float":"right","cursor":"pointer","font-size":"14px"},attrs:{"title":"Remove Response"},on:{"click":function($event){return _vm.webhook_to_assistant_response(
                      'remove',
                      _vm.webhook_variable,
                      new_response.id
                    )}}},[_c('svg',{staticClass:"bi bi-trash",attrs:{"xmlns":"http://www.w3.org/2000/svg","width":"16","height":"16","fill":"currentColor","viewBox":"0 0 16 16"}},[_c('path',{attrs:{"d":"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z"}}),_c('path',{attrs:{"fill-rule":"evenodd","d":"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z"}})])]),_c('button',{staticClass:"btn btn-light",staticStyle:{"float":"right","cursor":"pointer","font-size":"14px"},style:(index === _vm.webhook_assistant_response.length-1 ?'cursor: not-allowed':''),attrs:{"disabled":index === _vm.webhook_assistant_response.length-1,"title":"Move down"},on:{"click":function($event){return _vm.interchange_position_assistant_response(
                      new_response.id,
                      _vm.webhook_assistant_response[index+1].id,
                      'webhook_modal'
                    )}}},[_c('svg',{staticClass:"bi bi-chevron-down",attrs:{"xmlns":"http://www.w3.org/2000/svg","width":"16","height":"16","fill":"currentColor","viewBox":"0 0 16 16"}},[_c('path',{attrs:{"fill-rule":"evenodd","d":"M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z"}})])]),_c('button',{staticClass:"btn btn-light",staticStyle:{"float":"right","cursor":"pointer","font-size":"14px"},style:(index === 0 ?'cursor: not-allowed':''),attrs:{"disabled":index === 0,"title":"Move Up"},on:{"click":function($event){return _vm.interchange_position_assistant_response(
                      new_response.id,
                      _vm.webhook_assistant_response[index-1].id,
                      'webhook_modal'
                    )}}},[_c('svg',{staticClass:"bi bi-chevron-up",attrs:{"xmlns":"http://www.w3.org/2000/svg","width":"16","height":"16","fill":"#273679","viewBox":"0 0 16 16"}},[_c('path',{attrs:{"fill-rule":"evenodd","d":"M7.646 4.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1-.708.708L8 5.707l-5.646 5.647a.5.5 0 0 1-.708-.708l6-6z"}})])]),_c('p',{staticClass:"sub_heading"},[_vm._v(" "+_vm._s(_vm.tlt('sots_video_response_header'))+" : "+_vm._s(new_response.id)+" ")]),_c('div',[_c('input',{directives:[{name:"model",rawName:"v-model.trim",value:(new_response.source),expression:"new_response.source",modifiers:{"trim":true}}],staticClass:"form-control input-tag",staticStyle:{"width":"100%","padding":"0.375rem 0.5rem"},attrs:{"placeholder":_vm.tlt('add_video_url'),"type":"text"},domProps:{"value":(new_response.source)},on:{"input":function($event){if($event.target.composing){ return; }_vm.$set(new_response, "source", $event.target.value.trim())},"blur":function($event){return _vm.$forceUpdate()}}}),_c('p',{directives:[{name:"show",rawName:"v-show",value:(
                      _vm.check_video_url(new_response.source) === false &&
                      Boolean(new_response.source)
                    ),expression:"\n                      check_video_url(new_response.source) === false &&\n                      Boolean(new_response.source)\n                    "}],staticStyle:{"color":"red !important","margin-bottom":"0px !important","padding-top":"8px !important"}},[_vm._v(" "+_vm._s(_vm.tlt('slots_video_condition_text'))+" ")])])]):_vm._e(),(new_response.type == 'choices')?_c('div',{staticClass:"custom-box"},[_c('span',{staticClass:"btn btn-light",staticStyle:{"float":"right","cursor":"pointer","font-size":"14px"},attrs:{"title":"Remove Response"},on:{"click":function($event){return _vm.webhook_to_assistant_response(
                      'remove',
                      _vm.webhook_variable,
                      new_response.id
                    )}}},[_c('svg',{staticClass:"bi bi-trash",attrs:{"xmlns":"http://www.w3.org/2000/svg","width":"16","height":"16","fill":"currentColor","viewBox":"0 0 16 16"}},[_c('path',{attrs:{"d":"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z"}}),_c('path',{attrs:{"fill-rule":"evenodd","d":"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z"}})])]),_c('button',{staticClass:"btn btn-light",staticStyle:{"float":"right","cursor":"pointer","font-size":"14px"},style:(index === _vm.webhook_assistant_response.length-1 ?'cursor: not-allowed':''),attrs:{"disabled":index === _vm.webhook_assistant_response.length-1,"title":"Move down"},on:{"click":function($event){return _vm.interchange_position_assistant_response(
                      new_response.id,
                      _vm.webhook_assistant_response[index+1].id,
                      'webhook_modal'
                    )}}},[_c('svg',{staticClass:"bi bi-chevron-down",attrs:{"xmlns":"http://www.w3.org/2000/svg","width":"16","height":"16","fill":"currentColor","viewBox":"0 0 16 16"}},[_c('path',{attrs:{"fill-rule":"evenodd","d":"M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z"}})])]),_c('button',{staticClass:"btn btn-light",staticStyle:{"float":"right","cursor":"pointer","font-size":"14px"},style:(index === 0 ?'cursor: not-allowed':''),attrs:{"disabled":index === 0,"title":"Move Up"},on:{"click":function($event){return _vm.interchange_position_assistant_response(
                      new_response.id,
                      _vm.webhook_assistant_response[index-1].id,
                      'webhook_modal'
                    )}}},[_c('svg',{staticClass:"bi bi-chevron-up",attrs:{"xmlns":"http://www.w3.org/2000/svg","width":"16","height":"16","fill":"#273679","viewBox":"0 0 16 16"}},[_c('path',{attrs:{"fill-rule":"evenodd","d":"M7.646 4.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1-.708.708L8 5.707l-5.646 5.647a.5.5 0 0 1-.708-.708l6-6z"}})])]),_c('p',{staticClass:"sub_heading"},[_vm._v(" "+_vm._s(_vm.tlt('sots_choice_response_header'))+" : "+_vm._s(new_response.id)+" ")]),_c('div',[[_c('div',{staticStyle:{"display":"block","margin-bottom":"1rem"}},_vm._l((new_response.choices),function(response,num){return _c('div',{key:num,staticClass:"d-flex mb-2"},[_c('div',{staticClass:"input-group",staticStyle:{"display":"block"}},[_c('div',{staticClass:"d-flex"},[_c('input',{directives:[{name:"model",rawName:"v-model.trim",value:(response.title),expression:"response.title",modifiers:{"trim":true}}],staticClass:"form-control input-tag",staticStyle:{"width":"100% !important","padding":"0.375rem 0.5rem","border-radius":"5px 0px 0px 5px !important"},attrs:{"type":"text","placeholder":_vm.tlt('enter_title'),"maxlength":"50"},domProps:{"value":(response.title)},on:{"input":function($event){if($event.target.composing){ return; }_vm.$set(response, "title", $event.target.value.trim())},"blur":function($event){return _vm.$forceUpdate()}}}),_c('input',{directives:[{name:"model",rawName:"v-model.trim",value:(response.payload),expression:"response.payload",modifiers:{"trim":true}}],staticClass:"form-control input-tag",staticStyle:{"width":"100% !important","padding":"0.375rem 0.5rem","border-radius":"0px !important"},attrs:{"type":"text","placeholder":_vm.change_btn_value_placeholder(response.type)},domProps:{"value":(response.payload)},on:{"input":function($event){if($event.target.composing){ return; }_vm.$set(response, "payload", $event.target.value.trim())},"blur":function($event){return _vm.$forceUpdate()}}}),_c('div',{staticClass:"input-group-append"},[_c('select',{directives:[{name:"model",rawName:"v-model",value:(response.type),expression:"response.type"}],staticClass:"form-control",staticStyle:{"width":"100px !important","height":"38px","padding":"0px !important"},attrs:{"id":"button_type_list_id"},on:{"change":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = "_value" in o ? o._value : o.value;return val}); _vm.$set(response, "type", $event.target.multiple ? $$selectedVal : $$selectedVal[0])}}},_vm._l((_vm.button_type_list),function(option,index){return _c('option',{key:index,domProps:{"value":option.value}},[_vm._v(" "+_vm._s(option.name)+" ")])}),0)])])]),(new_response.choices.length > 1)?_c('span',{staticClass:"close my-auto mr-0 ml-2",staticStyle:{"cursor":"pointer","float":"right"},attrs:{"title":"Remove Choice Response"},on:{"click":function($event){return _vm.add_to_assistant_response_choice_list(
                              'remove',
                              new_response.id,
                              num
                            )}}},[_vm._v(" ×")]):_vm._e()])}),0)],_c('div',{staticClass:"d-flex"},[_c('p',{staticStyle:{"margin-top":"6px","margin-bottom":"5px"}},[_vm._v(" "+_vm._s(_vm.tlt('sots_add_choice_btn'))+" ")]),_c('button',{staticStyle:{"cursor":"pointer","border":"none","background":"transparent"},on:{"click":function($event){return _vm.add_to_assistant_response_choice_list(
                          'add',
                          new_response.id
                        )}}},[_c('img',{attrs:{"src":"/img/black_plus.png","alt":""}})])])],2)]):_vm._e(),(new_response.type == 'card')?_c('div',{staticClass:"custom-box"},[_c('span',{staticClass:"btn btn-light",staticStyle:{"float":"right","cursor":"pointer","font-size":"14px"},attrs:{"title":"Remove Response"},on:{"click":function($event){return _vm.webhook_to_assistant_response(
                      'remove',
                      _vm.webhook_variable,
                      new_response.id
                    )}}},[_c('svg',{staticClass:"bi bi-trash",attrs:{"xmlns":"http://www.w3.org/2000/svg","width":"16","height":"16","fill":"currentColor","viewBox":"0 0 16 16"}},[_c('path',{attrs:{"d":"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z"}}),_c('path',{attrs:{"fill-rule":"evenodd","d":"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z"}})])]),_c('button',{staticClass:"btn btn-light",staticStyle:{"float":"right","cursor":"pointer","font-size":"14px"},style:(index === _vm.webhook_assistant_response.length-1 ?'cursor: not-allowed':''),attrs:{"disabled":index === _vm.webhook_assistant_response.length-1,"title":"Move down"},on:{"click":function($event){return _vm.interchange_position_assistant_response(
                      new_response.id,
                      _vm.webhook_assistant_response[index+1].id,
                      'webhook_modal'
                    )}}},[_c('svg',{staticClass:"bi bi-chevron-down",attrs:{"xmlns":"http://www.w3.org/2000/svg","width":"16","height":"16","fill":"currentColor","viewBox":"0 0 16 16"}},[_c('path',{attrs:{"fill-rule":"evenodd","d":"M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z"}})])]),_c('button',{staticClass:"btn btn-light",staticStyle:{"float":"right","cursor":"pointer","font-size":"14px"},style:(index === 0 ?'cursor: not-allowed':''),attrs:{"disabled":index === 0,"title":"Move Up"},on:{"click":function($event){return _vm.interchange_position_assistant_response(
                      new_response.id,
                      _vm.webhook_assistant_response[index-1].id,
                      'webhook_modal'
                    )}}},[_c('svg',{staticClass:"bi bi-chevron-up",attrs:{"xmlns":"http://www.w3.org/2000/svg","width":"16","height":"16","fill":"#273679","viewBox":"0 0 16 16"}},[_c('path',{attrs:{"fill-rule":"evenodd","d":"M7.646 4.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1-.708.708L8 5.707l-5.646 5.647a.5.5 0 0 1-.708-.708l6-6z"}})])]),_c('p',{staticClass:"sub_heading"},[_vm._v(" "+_vm._s(_vm.tlt('sots_card_response_header'))+" : "+_vm._s(new_response.id)+" ")]),_c('div',[[_c('div',{staticClass:"row"},_vm._l((new_response.card_list),function(response,num){return _c('div',{key:num,staticClass:"col-sm-4 pb-3"},[_c('div',{staticClass:"card"},[_c('div',{staticClass:"card-body"},[_c('p',{staticClass:"sub_heading_carousel",staticStyle:{"color":"dimgray","margin-bottom":"5px"}},[_vm._v(" "+_vm._s(_vm.tlt('card_response_card_label'))+" : "+_vm._s(num + 1)+" ")]),(new_response.card_list.length > 1)?_c('span',{staticClass:"close ml-auto mr-0",staticStyle:{"cursor":"pointer","float":"right","margin-top":"-29px"},attrs:{"title":"Remove Card Response"},on:{"click":function($event){return _vm.add_to_assistant_response_carousel_card_list(
                                  'remove',
                                  new_response.id,
                                  num
                                )}}},[_vm._v(" ×")]):_vm._e(),_c('div',[_c('div',{staticClass:"d-sm-flex justify-content-start"},[_c('h6',{staticClass:"label_header",staticStyle:{"margin-top":"0"}},[_vm._v(" "+_vm._s(_vm.tlt('card_response_file_type_label'))+": ")]),_c('div',{staticClass:"radio my-auto radio-label"},[_c('label',{staticStyle:{"font-size":"13px"}},[_c('input',{directives:[{name:"model",rawName:"v-model",value:(response.is_image),expression:"response.is_image"}],attrs:{"type":"radio","id":"carousel_img"},domProps:{"value":true,"checked":_vm._q(response.is_image,true)},on:{"change":function($event){return _vm.$set(response, "is_image", true)}}}),_c('span',{staticClass:"icn",attrs:{"id":"filter_portal_user_radio"}}),_vm._v(" "+_vm._s(_vm.tlt('card_response_image_label'))+" ")]),_c('label',{staticStyle:{"font-size":"13px"}},[_c('input',{directives:[{name:"model",rawName:"v-model",value:(response.is_image),expression:"response.is_image"}],attrs:{"type":"radio","id":"carousel_video"},domProps:{"value":false,"checked":_vm._q(response.is_image,false)},on:{"change":function($event){return _vm.$set(response, "is_image", false)}}}),_c('span',{staticClass:"icn"}),_vm._v(" "+_vm._s(_vm.tlt('card_response_video_label'))+" ")])])])]),(response.is_image)?_c('div',[_c('input',{directives:[{name:"model",rawName:"v-model",value:(response.image),expression:"response.image"}],staticClass:"form-control input-tag",staticStyle:{"width":"100%","padding":"0.375rem 0.5rem"},attrs:{"placeholder":_vm.tlt('img_url'),"type":"text"},domProps:{"value":(response.image)},on:{"input":function($event){if($event.target.composing){ return; }_vm.$set(response, "image", $event.target.value)}}}),_c('p',{directives:[{name:"show",rawName:"v-show",value:(
                                  _vm.check_image_url(response.image) === false &&
                                  Boolean(response.image)
                                ),expression:"\n                                  check_image_url(response.image) === false &&\n                                  Boolean(response.image)\n                                "}],staticStyle:{"color":"red !important","margin-bottom":"0px !important","padding-top":"8px !important"}},[_vm._v(" "+_vm._s(_vm.tlt('card_response_image_condition_text'))+" ")])]):_c('div',[_c('input',{directives:[{name:"model",rawName:"v-model.trim",value:(response.video),expression:"response.video",modifiers:{"trim":true}}],staticClass:"form-control input-tag",staticStyle:{"width":"100% !important","padding":"0.375rem 0.5rem"},attrs:{"type":"text","placeholder":_vm.tlt('video_url')},domProps:{"value":(response.video)},on:{"input":function($event){if($event.target.composing){ return; }_vm.$set(response, "video", $event.target.value.trim())},"blur":function($event){return _vm.$forceUpdate()}}}),_c('p',{directives:[{name:"show",rawName:"v-show",value:(
                                  _vm.check_video_url(response.video) === false &&
                                  Boolean(response.video)
                                ),expression:"\n                                  check_video_url(response.video) === false &&\n                                  Boolean(response.video)\n                                "}],staticStyle:{"color":"red !important","margin-bottom":"0px !important","padding-top":"8px !important"}},[_vm._v(" "+_vm._s(_vm.tlt('card_response_video_condition_text'))+" ")])]),_c('label',{staticClass:"label_header"},[_vm._v(_vm._s(_vm.tlt('card_response_title_label')))]),_c('input',{directives:[{name:"model",rawName:"v-model.trim",value:(response.title),expression:"response.title",modifiers:{"trim":true}}],staticClass:"form-control input-tag",staticStyle:{"width":"100% !important","padding":"0.375rem 0.5rem"},attrs:{"type":"text","placeholder":_vm.tlt('enter_title')},domProps:{"value":(response.title)},on:{"input":function($event){if($event.target.composing){ return; }_vm.$set(response, "title", $event.target.value.trim())},"blur":function($event){return _vm.$forceUpdate()}}}),_c('label',{staticClass:"label_header"},[_vm._v(_vm._s(_vm.tlt('card_response_desc_label')))]),_c('textarea',{directives:[{name:"model",rawName:"v-model.trim",value:(response.text),expression:"response.text",modifiers:{"trim":true}}],staticClass:"form-control input-tag textarea-style",staticStyle:{"resize":"none"},attrs:{"type":"text","rows":"3","cols":"20","placeholder":_vm.tlt('enter_description')},domProps:{"value":(response.text)},on:{"input":function($event){if($event.target.composing){ return; }_vm.$set(response, "text", $event.target.value.trim())},"blur":function($event){return _vm.$forceUpdate()}}}),_c('div',[_c('p',{staticClass:"label_header"},[_vm._v(_vm._s(_vm.tlt('card_response_button_label')))]),_c('div',{staticClass:"ScrollStyle"},_vm._l((response.buttons),function(button,btn_num){return _c('div',{key:btn_num,staticClass:"mb-2"},[_c('div',{staticClass:"d-flex"},[_c('div',{staticClass:"input-group",staticStyle:{"display":"block"}},[_c('div',{staticClass:"d-flex"},[_c('input',{directives:[{name:"model",rawName:"v-model.trim",value:(button.title),expression:"button.title",modifiers:{"trim":true}}],staticClass:"form-control input-tag",staticStyle:{"width":"100% !important","padding":"0.375rem 0.5rem","border-radius":"5px 0px 0px 5px !important"},attrs:{"type":"text","placeholder":_vm.tlt('enter_title'),"maxlength":"50"},domProps:{"value":(button.title)},on:{"input":function($event){if($event.target.composing){ return; }_vm.$set(button, "title", $event.target.value.trim())},"blur":function($event){return _vm.$forceUpdate()}}}),_c('input',{directives:[{name:"model",rawName:"v-model.trim",value:(button.value),expression:"button.value",modifiers:{"trim":true}}],staticClass:"form-control input-tag",staticStyle:{"width":"100% !important","padding":"0.375rem 0.5rem","border-radius":"0px !important"},attrs:{"type":"text","placeholder":_vm.change_btn_value_placeholder(
                                              button.type
                                            )},domProps:{"value":(button.value)},on:{"input":function($event){if($event.target.composing){ return; }_vm.$set(button, "value", $event.target.value.trim())},"blur":function($event){return _vm.$forceUpdate()}}}),_c('div',{staticClass:"input-group-append"},[_c('select',{directives:[{name:"model",rawName:"v-model",value:(button.type),expression:"button.type"}],staticClass:"form-control",staticStyle:{"width":"20px !important","height":"38px","padding":"0px !important"},attrs:{"id":"button_type_list_id"},on:{"change":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = "_value" in o ? o._value : o.value;return val}); _vm.$set(button, "type", $event.target.multiple ? $$selectedVal : $$selectedVal[0])}}},_vm._l((_vm.button_type_list),function(option,index){return _c('option',{key:index,domProps:{"value":option.value}},[_vm._v(" "+_vm._s(option.name)+" ")])}),0)])])]),(response.buttons.length > 1)?_c('span',{staticClass:"close mx-1",staticStyle:{"cursor":"pointer","float":"right","margin-top":"8px"},attrs:{"title":"Remove Button Response"},on:{"click":function($event){return _vm.add_to_assistant_response_carousel_card_button_list(
                                          'remove',
                                          new_response.id,
                                          num,
                                          btn_num
                                        )}}},[_vm._v(" ×")]):_vm._e()])])}),0),_c('div',{staticClass:"d-flex"},[_c('p',{staticStyle:{"margin-top":"6px","margin-bottom":"5px"}},[_vm._v(" "+_vm._s(_vm.tlt('card_response_add_btn_label'))+" ")]),_c('button',{staticStyle:{"cursor":"pointer","border":"none","background":"transparent"},on:{"click":function($event){return _vm.add_to_assistant_response_carousel_card_button_list(
                                      'add',
                                      new_response.id,
                                      num
                                    )}}},[_c('img',{attrs:{"src":"/img/black_plus.png","alt":""}})])])])])])])}),0)],_c('div',{staticClass:"d-flex"},[_c('p',{staticStyle:{"margin-top":"6px","margin-bottom":"5px"}},[_vm._v(" "+_vm._s(_vm.tlt('card_response_add_card_label'))+" ")]),_c('button',{staticStyle:{"cursor":"pointer","border":"none","background":"transparent"},on:{"click":function($event){return _vm.add_to_assistant_response_carousel_card_list(
                          'add',
                          new_response.id
                        )}}},[_c('img',{attrs:{"src":"/img/black_plus.png","alt":""}})])])],2)]):_vm._e()])}),_c('div',{staticClass:"d-flex",staticStyle:{"margin-left":"1rem !important"}},[_c('p',{staticClass:"sub_heading"},[_vm._v(_vm._s(_vm.tlt('assist_validate_response_type_first_label'))+" :")]),_c('select',{directives:[{name:"model",rawName:"v-model",value:(_vm.selected_response_type),expression:"selected_response_type"}],staticClass:"form-control input-tag",staticStyle:{"width":"100px","height":"25px","margin-left":"10px","padding":"0px"},attrs:{"id":"res_n_int_source"},on:{"change":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = "_value" in o ? o._value : o.value;return val}); _vm.selected_response_type=$event.target.multiple ? $$selectedVal : $$selectedVal[0]}}},_vm._l((_vm.assistant_response_type),function(option,index){return _c('option',{key:index,domProps:{"value":option}},[_vm._v(" "+_vm._s(option)+" ")])}),0),_c('p',{staticClass:"sub_heading",staticStyle:{"margin-left":"20px"}},[_vm._v(" "+_vm._s(_vm.tlt('assist_validate_add_response_btn'))+" ")]),_c('button',{staticStyle:{"margin-top":"-14px","cursor":"pointer","border":"none","background":"transparent url('@portal/assets/img/plus.png')"},on:{"click":function($event){return _vm.webhook_to_assistant_response('add', _vm.webhook_variable)}}},[_c('img',{attrs:{"src":"/img/black_plus.png","alt":""}})])])],2)])])])]),_c('div',{staticClass:"modal fade",attrs:{"id":"manage_handler_id","tabindex":"-1","role":"dialog","aria-labelledby":"manage_handler_id","aria-hidden":"true","data-backdrop":"static","data-keyboard":"false"}},[_c('div',{staticClass:"modal-dialog modal-dialog-centered modal-lg",attrs:{"role":"document"}},[_c('div',{staticClass:"modal-content"},[_c('div',{staticClass:"modal-header"},[_c('div',[_c('h5',{staticClass:"modal-title",staticStyle:{"font-style":"regular"}},[_vm._v(" "+_vm._s(_vm.tlt('manage_handlers_header'))+" ")]),_c('p',{staticClass:"m-0"},[_vm._v(" "+_vm._s(_vm.tlt('manage_handlers_help_text'))+" ")])]),_c('button',{staticClass:"close",attrs:{"type":"button","data-dismiss":"modal","aria-hidden":"true"},on:{"click":function($event){return _vm.on_close_manage_handlers()}}},[_vm._v(" × ")])]),_c('div',{staticClass:"modal-body"},[_c('div',{staticClass:"form-group"},[_vm._l((_vm.manage_handlers),function(handler,ind){return _c('div',{key:ind,staticClass:"custom-box-head px-3 py-3 mt-3 mb-3"},[_c('div',[_c('span',{staticClass:"close",staticStyle:{"float":"right","cursor":"pointer","font-size":"14px"},attrs:{"title":"Delete Handler"},on:{"click":function($event){return _vm.add_remove_to_manage_handler_list('remove', ind)}}},[_vm._v(" "+_vm._s(_vm.tlt('manage_handlers_delete_btn'))+" ")]),_c('h5',[_vm._v(_vm._s(_vm.tlt('handler_header'))+": "+_vm._s(ind))])]),_c('div',[_c('div',{staticClass:"form-group"},[_c('h5',[_vm._v(_vm._s(_vm.tlt('manage_handlers_assistant_recognize_header')))]),_c('div',{staticClass:"row d-flex",staticStyle:{"margin-left":"1rem !important"}},_vm._l((handler.triggers),function(trigger,index){return _c('div',{key:index,staticClass:"d-flex pb-2"},[_c('div',{staticClass:"mr-2 my-auto"},[_c('div',[_c('select',{directives:[{name:"model",rawName:"v-model",value:(trigger.trigger_type),expression:"trigger.trigger_type"}],staticClass:"custom-select",staticStyle:{"width":"120px","height":"40px","padding-left":"14px","padding-bottom":"4px"},attrs:{"aria-label":"Filter by","id":"trigger_filter_by_id","placeholder":_vm.tlt('filter_by')},on:{"input":function($event){return _vm.manage_handlers_change_trigger_value(
                                trigger.trigger_type,
                                index,
                                ind
                              )},"change":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = "_value" in o ? o._value : o.value;return val}); _vm.$set(trigger, "trigger_type", $event.target.multiple ? $$selectedVal : $$selectedVal[0])}}},[_c('option',{attrs:{"value":"","disabled":"","selected":""}},[_vm._v(" "+_vm._s(_vm.tlt('filter_by_label'))+" ")]),_c('option',{attrs:{"value":"intent"}},[_vm._v(_vm._s(_vm.tlt('objective_label')))]),_c('option',{attrs:{"value":"entity"}},[_vm._v(_vm._s(_vm.tlt('entity_label')))])])])]),(Boolean(trigger.trigger_type))?_c('div',{staticClass:"mr-2 my-auto"},[_c('multiselect',{staticStyle:{"height":"30px","padding":"0px"},attrs:{"options":trigger.trigger_type === 'intent'
                              ? _vm.trigger_options_intent
                              : _vm.trigger_options_entity,"placeholder":trigger.trigger_type === 'intent'
                              ? _vm.tlt('search_objective')
                              : _vm.tlt('search_entity'),"close-on-select":true,"clear-on-select":false,"preserve-search":true,"show-labels":false,"allow-empty":false,"open-direction":"bottom","searchable":true,"loading":_vm.is_loading,"id":"res_n_int_source"},on:{"input":function($event){return _vm.manage_handlers_change_trigger_type(
                              trigger.trigger_type,
                              trigger.trigger_value,
                              index,
                              ind
                            )},"search-change":function($event){return _vm.search_intent_entity(trigger.trigger_type, $event)}},model:{value:(trigger.trigger_value),callback:function ($$v) {_vm.$set(trigger, "trigger_value", $$v)},expression:"trigger.trigger_value"}},[_c('span',{attrs:{"slot":"noOptions"},slot:"noOptions"}),_c('span',{attrs:{"slot":"noResult"},slot:"noResult"},[_vm._v("No Condition found.")])])],1):_vm._e(),(
                          Boolean(trigger.trigger_type === 'entity') &&
                          Boolean(trigger.trigger_value)
                        )?_c('div',{staticClass:"mr-2 my-auto",style:(_vm.is_entity_type_sys_pattern(
                            trigger.trigger_value
                          ) === true
                            ? 'cursor: not-allowed'
                            : null),attrs:{"title":_vm.is_entity_type_sys_pattern(
                            trigger.trigger_value
                          ) === true
                            ? 'Entity selected is of type pattern or system entity, hence further option(s) cannot be selected.'
                            : null}},[_c('multiselect',{attrs:{"id":"trigger_operand_id","close-on-select":true,"options":_vm.entity_operand_options,"placeholder":_vm.tlt('operator'),"allow-empty":false,"show-labels":false,"disabled":_vm.is_entity_type_sys_pattern(
                              trigger.trigger_value
                            ) === true},on:{"input":function($event){return _vm.manage_handlers_change_trigger_entity_value(
                              trigger.operand,
                              index,
                              ind
                            )}},model:{value:(trigger.operand),callback:function ($$v) {_vm.$set(trigger, "operand", $$v)},expression:"trigger.operand"}})],1):_vm._e(),(
                          Boolean(trigger.trigger_type === 'entity') &&
                          Boolean(trigger.trigger_value) &&
                          Boolean(trigger.operand === 'is')
                        )?_c('div',{staticClass:"mr-2 my-auto"},[_c('multiselect',{attrs:{"id":"trigger_entity_value_id","close-on-select":true,"options":_vm.entity_value_options(trigger.trigger_value),"placeholder":_vm.tlt('entity_value'),"allow-empty":false,"show-labels":false},on:{"input":function($event){return _vm.manage_handlers_set_trigger_entity_value(
                              trigger.entity_value,
                              index,
                              ind
                            )}},model:{value:(trigger.entity_value),callback:function ($$v) {_vm.$set(trigger, "entity_value", $$v)},expression:"trigger.entity_value"}})],1):_vm._e()])}),0)]),_c('div',{staticClass:"form-group"},[_c('h5',{staticStyle:{"margin-top":"6px","margin-bottom":"5px"}},[_vm._v(" "+_vm._s(_vm.tlt('manage_handlers_assist_resp_label'))+" ")]),_vm._l((handler.responses),function(new_response,index){return _c('div',{key:index,staticClass:"form-group"},[(new_response.type == 'text')?_c('div',{staticClass:"custom-box"},[_c('span',{staticClass:"btn btn-light",staticStyle:{"float":"right","cursor":"pointer","font-size":"14px"},attrs:{"title":"Remove Response"},on:{"click":function($event){return _vm.manage_handlers_add_to_assistant_response_list(
                            'remove',
                            ind,
                            index
                          )}}},[_c('svg',{staticClass:"bi bi-trash",attrs:{"xmlns":"http://www.w3.org/2000/svg","width":"16","height":"16","fill":"currentColor","viewBox":"0 0 16 16"}},[_c('path',{attrs:{"d":"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z"}}),_c('path',{attrs:{"fill-rule":"evenodd","d":"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z"}})])]),_c('button',{staticClass:"btn btn-light",staticStyle:{"float":"right","cursor":"pointer","font-size":"14px"},style:(index === handler.responses.length-1 ?'cursor: not-allowed':''),attrs:{"disabled":index === handler.responses.length-1,"title":"Move down"},on:{"click":function($event){return _vm.manage_handlers_interchange_position_assistant_response(
                            new_response.id,
                            handler.responses[index+1].id,
                            ind
                          )}}},[_c('svg',{staticClass:"bi bi-chevron-down",attrs:{"xmlns":"http://www.w3.org/2000/svg","width":"16","height":"16","fill":"currentColor","viewBox":"0 0 16 16"}},[_c('path',{attrs:{"fill-rule":"evenodd","d":"M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z"}})])]),_c('button',{staticClass:"btn btn-light",staticStyle:{"float":"right","cursor":"pointer","font-size":"14px"},style:(index === 0 ?'cursor: not-allowed':''),attrs:{"disabled":index === 0,"title":"Move Up"},on:{"click":function($event){return _vm.manage_handlers_interchange_position_assistant_response(
                            new_response.id,
                            handler.responses[index-1].id,
                            ind
                          )}}},[_c('svg',{staticClass:"bi bi-chevron-up",attrs:{"xmlns":"http://www.w3.org/2000/svg","width":"16","height":"16","fill":"#273679","viewBox":"0 0 16 16"}},[_c('path',{attrs:{"fill-rule":"evenodd","d":"M7.646 4.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1-.708.708L8 5.707l-5.646 5.647a.5.5 0 0 1-.708-.708l6-6z"}})])]),_c('p',{staticClass:"sub_heading"},[_vm._v(" "+_vm._s(_vm.tlt('manage_handlers_text_response_header'))+" ")]),_c('div',[_vm._l((new_response.values),function(response,num){return _c('div',{key:num,staticClass:"form-group"},[_c('div',{staticClass:"d-flex"},[_c('input',{directives:[{name:"model",rawName:"v-model",value:(new_response.values[num]),expression:"new_response.values[num]"}],staticClass:"form-control input-tag",staticStyle:{"width":"100%","padding":"0.375rem 0.5rem"},attrs:{"placeholder":_vm.tlt('response_text'),"type":"text","id":'manage_handlers_assistance_response_' +
                                new_response.id +
                                '_' +
                                num},domProps:{"value":(new_response.values[num])},on:{"focusout":function($event){return _vm.manage_handlers_insert_variable_block_off(
                                  new_response.id,
                                  num
                                )},"focusin":function($event){return _vm.manage_handlers_insert_variable_block_on(
                                  new_response.id,
                                  num
                                )},"keyup":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,"enter",13,$event.key,"Enter")){ return null; }return _vm.manage_handler_add_to_assistant_response_text_list(
                                  'add',
                                  new_response.id,
                                  ind
                                )},"input":function($event){if($event.target.composing){ return; }_vm.$set(new_response.values, num, $event.target.value)}}}),_c('div',{staticStyle:{"opacity":"0"},attrs:{"id":'manage_handlers_insert_variable_block' +
                                new_response.id +
                                '_' +
                                num}},[_c('a',{staticClass:"example fa-stack fa-1x",staticStyle:{"margin-top":"20px !important"},attrs:{"id":"manage_handlers_insert_variable_button","type":"button","data-toggle":"modal","data-target":"#manage_handlers_insert_variable_modal"},on:{"click":function($event){return _vm.manage_handlers_set_assistance_response_index(
                                    new_response.id,
                                    num,
                                    ind
                                  )}}},[_c('i',{staticClass:"fas fa-circle fa-stack-2x",staticStyle:{"color":"#dbe2e8"},attrs:{"id":'manage_handlers_insert_variable_circle_' +
                                    new_response.id +
                                    '_' +
                                    num}}),_c('span',{staticClass:"fa fa-stack-1x",staticStyle:{"color":"white"},on:{"mouseover":function($event){return _vm.manage_handlers_circle_mouseover(
                                      new_response.id,
                                      num
                                    )},"mouseout":function($event){return _vm.manage_handlers_circle_mouseout(
                                      new_response.id,
                                      num
                                    )}}},[_c('span',{staticStyle:{"font-size":"14px","display":"block"}},[_vm._v(" {...} ")])])])]),(
                                _vm.check_slot_value_use_in_response(
                                  new_response.values[num]
                                )
                              )?_c('span',{staticClass:"my-auto",staticStyle:{"margin-left":"12px","color":"#0645ad"}},[_c('i',{staticClass:"fa fa-info-circle",staticStyle:{"font-size":"16px"},attrs:{"aria-hidden":"true","title":"You have used {} in the response, which is used to access slot value, i.e it would add the value gathered by slot if enabled in previous or current node. (example: Email: {$email_id} would print Email: test@mail.com)."}})]):_vm._e(),(new_response.values.length > 1)?_c('span',{staticClass:"close my-auto",staticStyle:{"cursor":"pointer","margin-left":"12px"},attrs:{"title":"Remove Text Response"},on:{"click":function($event){return _vm.manage_handler_add_to_assistant_response_text_list(
                                  'remove',
                                  new_response.id,
                                  ind,
                                  num
                                )}}},[_vm._v(" × ")]):_vm._e()])])}),_c('div',{staticClass:"d-flex"},[_c('p',{staticStyle:{"margin-top":"6px","margin-bottom":"5px"}},[_vm._v(" "+_vm._s(_vm.tlt('manage_handlers_add_value_btn'))+" ")]),_c('button',{staticStyle:{"cursor":"pointer","border":"none","background":"transparent"},on:{"click":function($event){return _vm.manage_handler_add_to_assistant_response_text_list(
                                'add',
                                new_response.id,
                                ind
                              )}}},[_c('img',{attrs:{"src":"/img/black_plus.png","alt":""}})])]),_c('div',{staticClass:"response-variations"},[_c('span',[_vm._v(_vm._s(_vm.tlt('response_variation_text1'))+" "),_c('strong',[_vm._v(_vm._s(new_response.variation))]),_vm._v(".")]),_vm._v(" "+_vm._s(_vm.tlt('response_variation_text2'))+" "),_c('a',{directives:[{name:"show",rawName:"v-show",value:(new_response.variation != 'sequential'),expression:"new_response.variation != 'sequential'"}],staticClass:"response-variation",attrs:{"href":"javascript:void(0);"},on:{"click":function($event){return _vm.manage_handlers_select_response_variation(
                                new_response.id,
                                'sequential',
                                ind
                              )}}},[_vm._v(" "+_vm._s(_vm.tlt('response_variation_text3'))+" ")]),_c('span',{directives:[{name:"show",rawName:"v-show",value:(new_response.variation != 'sequential'),expression:"new_response.variation != 'sequential'"}]},[_vm._v(" | ")]),_c('a',{directives:[{name:"show",rawName:"v-show",value:(new_response.variation != 'multiline'),expression:"new_response.variation != 'multiline'"}],staticClass:"variation-multiline",attrs:{"href":"javascript:void(0);"},on:{"click":function($event){return _vm.manage_handlers_select_response_variation(
                                new_response.id,
                                'multiline',
                                ind
                              )}}},[_vm._v(" "+_vm._s(_vm.tlt('response_variation_text4'))+" ")]),_c('span',{directives:[{name:"show",rawName:"v-show",value:(
                              new_response.variation != 'random' &&
                              new_response.variation != 'multiline'
                            ),expression:"\n                              new_response.variation != 'random' &&\n                              new_response.variation != 'multiline'\n                            "}]},[_vm._v(" | ")]),_c('a',{directives:[{name:"show",rawName:"v-show",value:(new_response.variation != 'random'),expression:"new_response.variation != 'random'"}],staticClass:"variation-random",attrs:{"href":"javascript:void(0);"},on:{"click":function($event){return _vm.manage_handlers_select_response_variation(
                                new_response.id,
                                'random',
                                ind
                              )}}},[_vm._v(" "+_vm._s(_vm.tlt('response_variation_text5'))+" ")])])],2)]):_vm._e(),(new_response.type == 'image')?_c('div',{staticClass:"custom-box"},[_c('span',{staticClass:"btn btn-light",staticStyle:{"float":"right","cursor":"pointer","font-size":"14px"},attrs:{"title":"Remove Response"},on:{"click":function($event){return _vm.manage_handlers_add_to_assistant_response_list(
                            'remove',
                            ind,
                            index
                          )}}},[_c('svg',{staticClass:"bi bi-trash",attrs:{"xmlns":"http://www.w3.org/2000/svg","width":"16","height":"16","fill":"currentColor","viewBox":"0 0 16 16"}},[_c('path',{attrs:{"d":"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z"}}),_c('path',{attrs:{"fill-rule":"evenodd","d":"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z"}})])]),_c('button',{staticClass:"btn btn-light",staticStyle:{"float":"right","cursor":"pointer","font-size":"14px"},style:(index === handler.responses.length-1 ?'cursor: not-allowed':''),attrs:{"disabled":index === handler.responses.length-1,"title":"Move down"},on:{"click":function($event){return _vm.manage_handlers_interchange_position_assistant_response(
                            new_response.id,
                            handler.responses[index+1].id,
                            ind
                          )}}},[_c('svg',{staticClass:"bi bi-chevron-down",attrs:{"xmlns":"http://www.w3.org/2000/svg","width":"16","height":"16","fill":"currentColor","viewBox":"0 0 16 16"}},[_c('path',{attrs:{"fill-rule":"evenodd","d":"M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z"}})])]),_c('button',{staticClass:"btn btn-light",staticStyle:{"float":"right","cursor":"pointer","font-size":"14px"},style:(index === 0 ?'cursor: not-allowed':''),attrs:{"disabled":index === 0,"title":"Move Up"},on:{"click":function($event){return _vm.manage_handlers_interchange_position_assistant_response(
                            new_response.id,
                            handler.responses[index-1].id,
                            ind
                          )}}},[_c('svg',{staticClass:"bi bi-chevron-up",attrs:{"xmlns":"http://www.w3.org/2000/svg","width":"16","height":"16","fill":"#273679","viewBox":"0 0 16 16"}},[_c('path',{attrs:{"fill-rule":"evenodd","d":"M7.646 4.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1-.708.708L8 5.707l-5.646 5.647a.5.5 0 0 1-.708-.708l6-6z"}})])]),_c('p',{staticClass:"sub_heading"},[_vm._v(" "+_vm._s(_vm.tlt('manage_handlers_img_response_header'))+" ")]),_c('div',[_c('input',{directives:[{name:"model",rawName:"v-model",value:(new_response.source),expression:"new_response.source"}],staticClass:"form-control input-tag",staticStyle:{"width":"100%","padding":"0.375rem 0.5rem"},attrs:{"placeholder":_vm.tlt('add_img_url'),"type":"text"},domProps:{"value":(new_response.source)},on:{"input":function($event){if($event.target.composing){ return; }_vm.$set(new_response, "source", $event.target.value)}}}),_c('p',{directives:[{name:"show",rawName:"v-show",value:(
                            _vm.check_image_url(new_response.source) == false &&
                            Boolean(new_response.source)
                          ),expression:"\n                            check_image_url(new_response.source) == false &&\n                            Boolean(new_response.source)\n                          "}],staticStyle:{"color":"red !important","margin-bottom":"0px !important","padding-top":"8px !important"}},[_vm._v(" "+_vm._s(_vm.tlt('manage_handlers_image_condition_text'))+" ")])])]):_vm._e(),(new_response.type == 'video')?_c('div',{staticClass:"custom-box"},[_c('span',{staticClass:"btn btn-light",staticStyle:{"float":"right","cursor":"pointer","font-size":"14px"},attrs:{"title":"Remove Response"},on:{"click":function($event){return _vm.manage_handlers_add_to_assistant_response_list(
                            'remove',
                            ind,
                            index
                          )}}},[_c('svg',{staticClass:"bi bi-trash",attrs:{"xmlns":"http://www.w3.org/2000/svg","width":"16","height":"16","fill":"currentColor","viewBox":"0 0 16 16"}},[_c('path',{attrs:{"d":"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z"}}),_c('path',{attrs:{"fill-rule":"evenodd","d":"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z"}})])]),_c('button',{staticClass:"btn btn-light",staticStyle:{"float":"right","cursor":"pointer","font-size":"14px"},style:(index === handler.responses.length-1 ?'cursor: not-allowed':''),attrs:{"disabled":index === handler.responses.length-1,"title":"Move down"},on:{"click":function($event){return _vm.manage_handlers_interchange_position_assistant_response(
                            new_response.id,
                            handler.responses[index+1].id,
                            ind
                          )}}},[_c('svg',{staticClass:"bi bi-chevron-down",attrs:{"xmlns":"http://www.w3.org/2000/svg","width":"16","height":"16","fill":"currentColor","viewBox":"0 0 16 16"}},[_c('path',{attrs:{"fill-rule":"evenodd","d":"M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z"}})])]),_c('button',{staticClass:"btn btn-light",staticStyle:{"float":"right","cursor":"pointer","font-size":"14px"},style:(index === 0 ?'cursor: not-allowed':''),attrs:{"disabled":index === 0,"title":"Move Up"},on:{"click":function($event){return _vm.manage_handlers_interchange_position_assistant_response(
                            new_response.id,
                            handler.responses[index-1].id,
                            ind
                          )}}},[_c('svg',{staticClass:"bi bi-chevron-up",attrs:{"xmlns":"http://www.w3.org/2000/svg","width":"16","height":"16","fill":"#273679","viewBox":"0 0 16 16"}},[_c('path',{attrs:{"fill-rule":"evenodd","d":"M7.646 4.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1-.708.708L8 5.707l-5.646 5.647a.5.5 0 0 1-.708-.708l6-6z"}})])]),_c('p',{staticClass:"sub_heading"},[_vm._v(" "+_vm._s(_vm.tlt('manage_handlers_video_response_header'))+" ")]),_c('div',[_c('input',{directives:[{name:"model",rawName:"v-model.trim",value:(new_response.source),expression:"new_response.source",modifiers:{"trim":true}}],staticClass:"form-control input-tag",staticStyle:{"width":"100%","padding":"0.375rem 0.5rem"},attrs:{"placeholder":_vm.tlt('add_video_url'),"type":"text"},domProps:{"value":(new_response.source)},on:{"input":function($event){if($event.target.composing){ return; }_vm.$set(new_response, "source", $event.target.value.trim())},"blur":function($event){return _vm.$forceUpdate()}}}),_c('p',{directives:[{name:"show",rawName:"v-show",value:(
                            _vm.check_video_url(new_response.source) === false &&
                            Boolean(new_response.source)
                          ),expression:"\n                            check_video_url(new_response.source) === false &&\n                            Boolean(new_response.source)\n                          "}],staticStyle:{"color":"red !important","margin-bottom":"0px !important","padding-top":"8px !important"}},[_vm._v(" "+_vm._s(_vm.tlt('manage_handlers_video_condition_text'))+" ")])])]):_vm._e(),(new_response.type == 'choices')?_c('div',{staticClass:"custom-box"},[_c('span',{staticClass:"btn btn-light",staticStyle:{"float":"right","cursor":"pointer","font-size":"14px"},attrs:{"title":"Remove Response"},on:{"click":function($event){return _vm.manage_handlers_add_to_assistant_response_list(
                            'remove',
                            ind,
                            index
                          )}}},[_c('svg',{staticClass:"bi bi-trash",attrs:{"xmlns":"http://www.w3.org/2000/svg","width":"16","height":"16","fill":"currentColor","viewBox":"0 0 16 16"}},[_c('path',{attrs:{"d":"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z"}}),_c('path',{attrs:{"fill-rule":"evenodd","d":"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z"}})])]),_c('button',{staticClass:"btn btn-light",staticStyle:{"float":"right","cursor":"pointer","font-size":"14px"},style:(index === handler.responses.length-1 ?'cursor: not-allowed':''),attrs:{"disabled":index === handler.responses.length-1,"title":"Move down"},on:{"click":function($event){return _vm.manage_handlers_interchange_position_assistant_response(
                            new_response.id,
                            handler.responses[index+1].id,
                            ind
                          )}}},[_c('svg',{staticClass:"bi bi-chevron-down",attrs:{"xmlns":"http://www.w3.org/2000/svg","width":"16","height":"16","fill":"currentColor","viewBox":"0 0 16 16"}},[_c('path',{attrs:{"fill-rule":"evenodd","d":"M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z"}})])]),_c('button',{staticClass:"btn btn-light",staticStyle:{"float":"right","cursor":"pointer","font-size":"14px"},style:(index === 0 ?'cursor: not-allowed':''),attrs:{"disabled":index === 0,"title":"Move Up"},on:{"click":function($event){return _vm.manage_handlers_interchange_position_assistant_response(
                            new_response.id,
                            handler.responses[index-1].id,
                            ind
                          )}}},[_c('svg',{staticClass:"bi bi-chevron-up",attrs:{"xmlns":"http://www.w3.org/2000/svg","width":"16","height":"16","fill":"#273679","viewBox":"0 0 16 16"}},[_c('path',{attrs:{"fill-rule":"evenodd","d":"M7.646 4.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1-.708.708L8 5.707l-5.646 5.647a.5.5 0 0 1-.708-.708l6-6z"}})])]),_c('p',{staticClass:"sub_heading"},[_vm._v(" "+_vm._s(_vm.tlt('manage_handlers_choice_response_header'))+" ")]),_c('div',[[_c('div',{staticStyle:{"display":"block","margin-bottom":"1rem"}},_vm._l((new_response.choices),function(response,num){return _c('div',{key:num,staticClass:"d-flex mb-2"},[_c('div',{staticClass:"input-group",staticStyle:{"display":"block"}},[_c('div',{staticClass:"d-flex"},[_c('input',{directives:[{name:"model",rawName:"v-model.trim",value:(response.title),expression:"response.title",modifiers:{"trim":true}}],staticClass:"form-control input-tag",staticStyle:{"width":"100% !important","padding":"0.375rem 0.5rem","border-radius":"5px 0px 0px 5px !important"},attrs:{"type":"text","placeholder":_vm.tlt('enter_title'),"maxlength":"50"},domProps:{"value":(response.title)},on:{"input":function($event){if($event.target.composing){ return; }_vm.$set(response, "title", $event.target.value.trim())},"blur":function($event){return _vm.$forceUpdate()}}}),_c('input',{directives:[{name:"model",rawName:"v-model.trim",value:(response.payload),expression:"response.payload",modifiers:{"trim":true}}],staticClass:"form-control input-tag",staticStyle:{"width":"100% !important","padding":"0.375rem 0.5rem","border-radius":"0px !important"},attrs:{"type":"text","placeholder":_vm.change_btn_value_placeholder(
                                        response.type
                                      )},domProps:{"value":(response.payload)},on:{"input":function($event){if($event.target.composing){ return; }_vm.$set(response, "payload", $event.target.value.trim())},"blur":function($event){return _vm.$forceUpdate()}}}),_c('div',{staticClass:"input-group-append"},[_c('select',{directives:[{name:"model",rawName:"v-model",value:(response.type),expression:"response.type"}],staticClass:"form-control",staticStyle:{"width":"100px !important","height":"38px","padding":"0px !important"},attrs:{"id":"button_type_list_id"},on:{"change":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = "_value" in o ? o._value : o.value;return val}); _vm.$set(response, "type", $event.target.multiple ? $$selectedVal : $$selectedVal[0])}}},_vm._l((_vm.button_type_list),function(option,index){return _c('option',{key:index,domProps:{"value":option.value}},[_vm._v(" "+_vm._s(option.name)+" ")])}),0)])])]),(new_response.choices.length > 1)?_c('span',{staticClass:"close my-auto mr-0 ml-2",staticStyle:{"cursor":"pointer","float":"right"},attrs:{"title":"Remove Choice Response"},on:{"click":function($event){return _vm.manage_handlers_add_to_assistant_response_choice_list(
                                    'remove',
                                    new_response.id,
                                    ind,
                                    num
                                  )}}},[_vm._v(" ×")]):_vm._e()])}),0)],_c('div',{staticClass:"d-flex"},[_c('p',{staticStyle:{"margin-top":"6px","margin-bottom":"5px"}},[_vm._v(" "+_vm._s(_vm.tlt('manage_handlers_add_choice_btn'))+" ")]),_c('button',{staticStyle:{"cursor":"pointer","border":"none","background":"transparent"},on:{"click":function($event){return _vm.manage_handlers_add_to_assistant_response_choice_list(
                                'add',
                                new_response.id,
                                ind
                              )}}},[_c('img',{attrs:{"src":"/img/black_plus.png","alt":""}})])])],2)]):_vm._e(),(new_response.type == 'card')?_c('div',{staticClass:"custom-box"},[_c('span',{staticClass:"btn btn-light",staticStyle:{"float":"right","cursor":"pointer","font-size":"14px"},attrs:{"title":"Remove Response"},on:{"click":function($event){return _vm.manage_handlers_add_to_assistant_response_list(
                            'remove',
                            ind,
                            index
                          )}}},[_c('svg',{staticClass:"bi bi-trash",attrs:{"xmlns":"http://www.w3.org/2000/svg","width":"16","height":"16","fill":"currentColor","viewBox":"0 0 16 16"}},[_c('path',{attrs:{"d":"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z"}}),_c('path',{attrs:{"fill-rule":"evenodd","d":"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z"}})])]),_c('button',{staticClass:"btn btn-light",staticStyle:{"float":"right","cursor":"pointer","font-size":"14px"},style:(index === handler.responses.length-1 ?'cursor: not-allowed':''),attrs:{"disabled":index === handler.responses.length-1,"title":"Move down"},on:{"click":function($event){return _vm.manage_handlers_interchange_position_assistant_response(
                            new_response.id,
                            handler.responses[index+1].id,
                            ind
                          )}}},[_c('svg',{staticClass:"bi bi-chevron-down",attrs:{"xmlns":"http://www.w3.org/2000/svg","width":"16","height":"16","fill":"currentColor","viewBox":"0 0 16 16"}},[_c('path',{attrs:{"fill-rule":"evenodd","d":"M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z"}})])]),_c('button',{staticClass:"btn btn-light",staticStyle:{"float":"right","cursor":"pointer","font-size":"14px"},style:(index === 0 ?'cursor: not-allowed':''),attrs:{"disabled":index === 0,"title":"Move Up"},on:{"click":function($event){return _vm.manage_handlers_interchange_position_assistant_response(
                            new_response.id,
                            handler.responses[index-1].id,
                            ind
                          )}}},[_c('svg',{staticClass:"bi bi-chevron-up",attrs:{"xmlns":"http://www.w3.org/2000/svg","width":"16","height":"16","fill":"#273679","viewBox":"0 0 16 16"}},[_c('path',{attrs:{"fill-rule":"evenodd","d":"M7.646 4.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1-.708.708L8 5.707l-5.646 5.647a.5.5 0 0 1-.708-.708l6-6z"}})])]),_c('p',{staticClass:"sub_heading"},[_vm._v(" "+_vm._s(_vm.tlt('manage_handlers_card_response_header'))+" ")]),_c('div',[[_c('div',{staticClass:"row"},_vm._l((new_response.card_list),function(response,num){return _c('div',{key:num,staticClass:"col-sm-4 pb-3"},[_c('div',{staticClass:"card"},[_c('div',{staticClass:"card-body"},[_c('p',{staticClass:"sub_heading_carousel",staticStyle:{"color":"dimgray","margin-bottom":"5px"}},[_vm._v(" "+_vm._s(_vm.tlt('manage_handlers_card_response_card_label'))+": "+_vm._s(num + 1)+" ")]),(new_response.card_list.length > 1)?_c('span',{staticClass:"close ml-auto mr-0",staticStyle:{"cursor":"pointer","float":"right","margin-top":"-29px"},attrs:{"title":"Remove Card Response"},on:{"click":function($event){return _vm.manage_handlers_add_to_assistant_response_carousel_card_list(
                                        'remove',
                                        new_response.id,
                                        ind,
                                        num
                                      )}}},[_vm._v(" ×")]):_vm._e(),_c('div',[_c('div',{staticClass:"d-sm-flex justify-content-start"},[_c('h6',{staticClass:"label_header",staticStyle:{"margin-top":"0"}},[_vm._v(" "+_vm._s(_vm.tlt('manage_handlers_card_response_file_type_label'))+" ")]),_c('div',{staticClass:"radio my-auto radio-label"},[_c('label',{staticStyle:{"font-size":"13px"}},[_c('input',{directives:[{name:"model",rawName:"v-model",value:(response.is_image),expression:"response.is_image"}],attrs:{"type":"radio","id":"carousel_img"},domProps:{"value":true,"checked":_vm._q(response.is_image,true)},on:{"change":function($event){return _vm.$set(response, "is_image", true)}}}),_c('span',{staticClass:"icn",attrs:{"id":"filter_portal_user_radio"}}),_vm._v(" "+_vm._s(_vm.tlt('manage_handlers_card_response_image_label'))+" ")]),_c('label',{staticStyle:{"font-size":"13px"}},[_c('input',{directives:[{name:"model",rawName:"v-model",value:(response.is_image),expression:"response.is_image"}],attrs:{"type":"radio","id":"carousel_video"},domProps:{"value":false,"checked":_vm._q(response.is_image,false)},on:{"change":function($event){return _vm.$set(response, "is_image", false)}}}),_c('span',{staticClass:"icn"}),_vm._v(" "+_vm._s(_vm.tlt('manage_handlers_card_response_video_label'))+" ")])])])]),(response.is_image)?_c('div',[_c('input',{directives:[{name:"model",rawName:"v-model",value:(response.image),expression:"response.image"}],staticClass:"form-control input-tag",staticStyle:{"width":"100%","padding":"0.375rem 0.5rem"},attrs:{"placeholder":_vm.tlt('img_url'),"type":"text"},domProps:{"value":(response.image)},on:{"input":function($event){if($event.target.composing){ return; }_vm.$set(response, "image", $event.target.value)}}}),_c('p',{directives:[{name:"show",rawName:"v-show",value:(
                                        _vm.check_image_url(response.image) ===
                                          false && Boolean(response.image)
                                      ),expression:"\n                                        check_image_url(response.image) ===\n                                          false && Boolean(response.image)\n                                      "}],staticStyle:{"color":"red !important","margin-bottom":"0px !important","padding-top":"8px !important"}},[_vm._v(" "+_vm._s(_vm.tlt('card_response_image_condition_text'))+" ")])]):_c('div',[_c('input',{directives:[{name:"model",rawName:"v-model.trim",value:(response.video),expression:"response.video",modifiers:{"trim":true}}],staticClass:"form-control input-tag",staticStyle:{"width":"100% !important","padding":"0.375rem 0.5rem"},attrs:{"type":"text","placeholder":_vm.tlt('video_url')},domProps:{"value":(response.video)},on:{"input":function($event){if($event.target.composing){ return; }_vm.$set(response, "video", $event.target.value.trim())},"blur":function($event){return _vm.$forceUpdate()}}}),_c('p',{directives:[{name:"show",rawName:"v-show",value:(
                                        _vm.check_video_url(response.video) ===
                                          false && Boolean(response.video)
                                      ),expression:"\n                                        check_video_url(response.video) ===\n                                          false && Boolean(response.video)\n                                      "}],staticStyle:{"color":"red !important","margin-bottom":"0px !important","padding-top":"8px !important"}},[_vm._v(" "+_vm._s(_vm.tlt('handler_card_response_video_condition_text'))+" ")])]),_c('label',{staticClass:"label_header"},[_vm._v(_vm._s(_vm.tlt('manage_handlers_card_response_title_label')))]),_c('input',{directives:[{name:"model",rawName:"v-model.trim",value:(response.title),expression:"response.title",modifiers:{"trim":true}}],staticClass:"form-control input-tag",staticStyle:{"width":"100% !important","padding":"0.375rem 0.5rem"},attrs:{"type":"text","placeholder":_vm.tlt('enter_title')},domProps:{"value":(response.title)},on:{"input":function($event){if($event.target.composing){ return; }_vm.$set(response, "title", $event.target.value.trim())},"blur":function($event){return _vm.$forceUpdate()}}}),_c('label',{staticClass:"label_header"},[_vm._v(_vm._s(_vm.tlt('manage_handlers_card_response_desc_label')))]),_c('textarea',{directives:[{name:"model",rawName:"v-model.trim",value:(response.text),expression:"response.text",modifiers:{"trim":true}}],staticClass:"\n                                      form-control\n                                      input-tag\n                                      textarea-style\n                                    ",staticStyle:{"resize":"none"},attrs:{"type":"text","rows":"3","cols":"20","placeholder":_vm.tlt('enter_description')},domProps:{"value":(response.text)},on:{"input":function($event){if($event.target.composing){ return; }_vm.$set(response, "text", $event.target.value.trim())},"blur":function($event){return _vm.$forceUpdate()}}}),_c('div',[_c('p',{staticClass:"label_header"},[_vm._v(_vm._s(_vm.tlt('manage_handlers_card_response_button_label')))]),_c('div',{staticClass:"ScrollStyle"},_vm._l((response.buttons),function(button,btn_num){return _c('div',{key:btn_num,staticClass:"mb-2"},[_c('div',{staticClass:"d-flex"},[_c('div',{staticClass:"input-group",staticStyle:{"display":"block"}},[_c('div',{staticClass:"d-flex"},[_c('input',{directives:[{name:"model",rawName:"v-model.trim",value:(button.title),expression:"button.title",modifiers:{"trim":true}}],staticClass:"form-control input-tag",staticStyle:{"width":"100% !important","padding":"0.375rem 0.5rem","border-radius":"5px 0px 0px"},attrs:{"type":"text","placeholder":_vm.tlt('enter_title'),"maxlength":"50"},domProps:{"value":(button.title)},on:{"input":function($event){if($event.target.composing){ return; }_vm.$set(button, "title", $event.target.value.trim())},"blur":function($event){return _vm.$forceUpdate()}}}),_c('input',{directives:[{name:"model",rawName:"v-model.trim",value:(button.value),expression:"button.value",modifiers:{"trim":true}}],staticClass:"form-control input-tag",staticStyle:{"width":"100% !important","padding":"0.375rem 0.5rem","border-radius":"0px !important"},attrs:{"type":"text","placeholder":_vm.change_btn_value_placeholder(
                                                    button.type
                                                  )},domProps:{"value":(button.value)},on:{"input":function($event){if($event.target.composing){ return; }_vm.$set(button, "value", $event.target.value.trim())},"blur":function($event){return _vm.$forceUpdate()}}}),_c('div',{staticClass:"input-group-append"},[_c('select',{directives:[{name:"model",rawName:"v-model",value:(button.type),expression:"button.type"}],staticClass:"form-control",staticStyle:{"width":"20px !important","height":"38px","padding":"0px !important"},attrs:{"id":"button_type_list_id"},on:{"change":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = "_value" in o ? o._value : o.value;return val}); _vm.$set(button, "type", $event.target.multiple ? $$selectedVal : $$selectedVal[0])}}},_vm._l((_vm.button_type_list),function(option,index){return _c('option',{key:index,domProps:{"value":option.value}},[_vm._v(" "+_vm._s(option.name)+" ")])}),0)])])]),(response.buttons.length > 1)?_c('span',{staticClass:"close mx-1",staticStyle:{"cursor":"pointer","float":"right","margin-top":"8px"},attrs:{"title":"Remove Button Response"},on:{"click":function($event){return _vm.manage_handlers_add_to_assistant_response_carousel_card_button_list(
                                                'remove',
                                                new_response.id,
                                                ind,
                                                num,
                                                btn_num
                                              )}}},[_vm._v(" ×")]):_vm._e()])])}),0),_c('div',{staticClass:"d-flex"},[_c('p',{staticStyle:{"margin-top":"6px","margin-bottom":"5px"}},[_vm._v(" "+_vm._s(_vm.tlt('manage_handlers_card_response_add_btn_label'))+" ")]),_c('button',{staticStyle:{"cursor":"pointer","border":"none","background":"transparent"},on:{"click":function($event){return _vm.manage_handlers_add_to_assistant_response_carousel_card_button_list(
                                            'add',
                                            new_response.id,
                                            ind,
                                            num
                                          )}}},[_c('img',{attrs:{"src":"/img/black_plus.png","alt":""}})])])])])])])}),0)],_c('div',{staticClass:"d-flex"},[_c('p',{staticStyle:{"margin-top":"6px","margin-bottom":"5px"}},[_vm._v(" "+_vm._s(_vm.tlt('manage_handlers_card_response_add_card_label'))+" ")]),_c('button',{staticStyle:{"cursor":"pointer","border":"none","background":"transparent"},on:{"click":function($event){return _vm.manage_handlers_add_to_assistant_response_carousel_card_list(
                                'add',
                                new_response.id,
                                ind
                              )}}},[_c('img',{attrs:{"src":"/img/black_plus.png","alt":""}})])])],2)]):_vm._e()])}),_c('div',{staticClass:"d-flex",staticStyle:{"margin-left":"1rem !important"}},[_c('p',{staticClass:"sub_heading"},[_vm._v(_vm._s(_vm.tlt('manage_handlers_response_type_first_label'))+" :")]),_c('select',{directives:[{name:"model",rawName:"v-model",value:(_vm.selected_response_type),expression:"selected_response_type"}],staticClass:"form-control input-tag",staticStyle:{"width":"100px","height":"25px","margin-left":"10px","padding":"0px"},attrs:{"id":"res_n_int_source"},on:{"change":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = "_value" in o ? o._value : o.value;return val}); _vm.selected_response_type=$event.target.multiple ? $$selectedVal : $$selectedVal[0]}}},_vm._l((_vm.assistant_response_type),function(option,index){return _c('option',{key:index,domProps:{"value":option}},[_vm._v(" "+_vm._s(option)+" ")])}),0),_c('p',{staticClass:"sub_heading",staticStyle:{"margin-left":"20px"}},[_vm._v(" "+_vm._s(_vm.tlt('manage_handlers_add_response_btn'))+" ")]),_c('button',{staticStyle:{"margin-top":"-14px","cursor":"pointer","border":"none","background":"transparent"},on:{"click":function($event){return _vm.manage_handlers_add_to_assistant_response_list(
                          'add',
                          ind
                        )}}},[_c('img',{attrs:{"src":"/img/black_plus.png","alt":""}})])])],2),_c('div',{staticClass:"form-group"},[_c('h5',[_vm._v(_vm._s(_vm.tlt('manage_handlers_assist_should_label')))]),_vm._m(2,true)])])])}),_c('div',{staticClass:"d-flex"},[_c('p',{staticClass:"sub_heading",staticStyle:{"margin-top":"6px","margin-bottom":"5px"}},[_vm._v(" "+_vm._s(_vm.tlt('manage_handlers_add_handler_btn'))+" ")]),_c('button',{staticStyle:{"border":"none","background":"transparent url('@portal/assets/img/plus.png')"},style:(!Boolean(_vm.manage_handlers.length === 0)
                    ? 'cursor: not-allowed;'
                    : 'cursor: pointer;'),attrs:{"disabled":!Boolean(_vm.manage_handlers.length === 0)},on:{"click":function($event){return _vm.add_remove_to_manage_handler_list('add')}}},[_c('img',{attrs:{"src":"/img/black_plus.png","alt":""}})])])],2)])])])]),_c('div',{staticClass:"modal fade",attrs:{"id":"notificationmodal","tabindex":"-1","role":"dialog","aria-labelledby":"notificationmodal","aria-hidden":"true","data-backdrop":"static","data-keyboard":"false"}},[_c('div',{staticClass:"modal-dialog modal-dialog-centered modal-lg",attrs:{"role":"document"}},[_c('div',{staticClass:"modal-content"},[_c('div',{staticClass:"modal-header"},[_c('h5',{staticClass:"modal-title",staticStyle:{"font-style":"regular"}},[_vm._v(" "+_vm._s(_vm.tlt('config_notification_header'))+" ")]),_c('button',{staticClass:"close",attrs:{"type":"button","data-dismiss":"modal","aria-hidden":"true"},on:{"click":function($event){return _vm.on_close_notification_modal()}}},[_vm._v(" × ")])]),_c('div',{staticClass:"modal-body"},[_c('div',{staticClass:"form-group"},[_c('h5',{staticStyle:{"margin-top":"6px","margin-bottom":"5px"}},[_vm._v(" "+_vm._s(_vm.tlt('config_notification_when_success_label'))+" ")]),_vm._l((_vm.notification_successful_assistant_response),function(new_response,index){return _c('div',{key:index,staticClass:"form-group"},[(new_response.type == 'text')?_c('div',{staticClass:"custom-box"},[_c('span',{staticClass:"btn btn-light",staticStyle:{"float":"right","cursor":"pointer","font-size":"14px"},attrs:{"title":"Remove Response"},on:{"click":function($event){return _vm.remove_notification_to_assistant_response(
                      new_response.id,
                      new_response.recognizes
                    )}}},[_c('svg',{staticClass:"bi bi-trash",attrs:{"xmlns":"http://www.w3.org/2000/svg","width":"16","height":"16","fill":"currentColor","viewBox":"0 0 16 16"}},[_c('path',{attrs:{"d":"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z"}}),_c('path',{attrs:{"fill-rule":"evenodd","d":"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z"}})])]),_c('button',{staticClass:"btn btn-light",staticStyle:{"float":"right","cursor":"pointer","font-size":"14px"},style:(index === _vm.notification_successful_assistant_response.length-1 ?'cursor: not-allowed':''),attrs:{"disabled":index === _vm.notification_successful_assistant_response.length-1,"title":"Move down"},on:{"click":function($event){return _vm.interchange_position_assistant_response(
                      new_response.id,
                      _vm.notification_successful_assistant_response[index+1].id,
                      'notification_modal'
                    )}}},[_c('svg',{staticClass:"bi bi-chevron-down",attrs:{"xmlns":"http://www.w3.org/2000/svg","width":"16","height":"16","fill":"currentColor","viewBox":"0 0 16 16"}},[_c('path',{attrs:{"fill-rule":"evenodd","d":"M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z"}})])]),_c('button',{staticClass:"btn btn-light",staticStyle:{"float":"right","cursor":"pointer","font-size":"14px"},style:(index === 0 ?'cursor: not-allowed':''),attrs:{"disabled":index === 0,"title":"Move Up"},on:{"click":function($event){return _vm.interchange_position_assistant_response(
                      new_response.id,
                      _vm.notification_successful_assistant_response[index-1].id,
                      'notification_modal'
                    )}}},[_c('svg',{staticClass:"bi bi-chevron-up",attrs:{"xmlns":"http://www.w3.org/2000/svg","width":"16","height":"16","fill":"#273679","viewBox":"0 0 16 16"}},[_c('path',{attrs:{"fill-rule":"evenodd","d":"M7.646 4.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1-.708.708L8 5.707l-5.646 5.647a.5.5 0 0 1-.708-.708l6-6z"}})])]),_c('p',{staticClass:"sub_heading"},[_vm._v(" "+_vm._s(_vm.tlt('config_success_text_response_header'))+" : "+_vm._s(new_response.id)+" ")]),_c('div',[_vm._l((new_response.values),function(response,num){return _c('div',{key:num,staticClass:"form-group"},[_c('div',{staticClass:"d-flex"},[_c('input',{directives:[{name:"model",rawName:"v-model",value:(new_response.values[num]),expression:"new_response.values[num]"}],staticClass:"form-control input-tag",staticStyle:{"width":"100%","padding":"0.375rem 0.5rem"},attrs:{"placeholder":_vm.tlt('response_text'),"type":"text","id":'assistance_response_' + new_response.id + '_' + num},domProps:{"value":(new_response.values[num])},on:{"focusout":function($event){return _vm.insert_variable_block_off(new_response.id, num)},"focusin":function($event){return _vm.insert_variable_block_on(new_response.id, num)},"keyup":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,"enter",13,$event.key,"Enter")){ return null; }return _vm.add_to_assistant_response_text_list(
                            'add',
                            new_response.id
                          )},"input":function($event){if($event.target.composing){ return; }_vm.$set(new_response.values, num, $event.target.value)}}}),_c('div',{staticStyle:{"opacity":"0"},attrs:{"id":'insert_variable_block' +
                          new_response.id +
                          '_' +
                          num}},[_c('a',{staticClass:"example fa-stack fa-1x",staticStyle:{"margin-top":"20px !important"},attrs:{"id":"insert_variable_button","type":"button","data-toggle":"modal","data-target":"#insert_variable_modal"},on:{"click":function($event){return _vm.set_assistance_response_index(
                              new_response.id,
                              num
                            )}}},[_c('i',{staticClass:"fas fa-circle fa-stack-2x",staticStyle:{"color":"#dbe2e8"},attrs:{"id":'insert_variable_circle_' +
                              new_response.id +
                              '_' +
                              num}}),_c('span',{staticClass:"fa fa-stack-1x",staticStyle:{"color":"white"},on:{"mouseover":function($event){return _vm.circle_mouseover(new_response.id, num)},"mouseout":function($event){return _vm.circle_mouseout(new_response.id, num)}}},[_c('span',{staticStyle:{"font-size":"14px","display":"block"}},[_vm._v(" {...} ")])])])]),(
                          _vm.check_slot_value_use_in_response(
                            new_response.values[num]
                          )
                        )?_c('span',{staticClass:"my-auto",staticStyle:{"margin-left":"12px","color":"#0645ad"}},[_c('i',{staticClass:"fa fa-info-circle",staticStyle:{"font-size":"16px"},attrs:{"aria-hidden":"true","title":"You have used {} in the response, which is used to access slot value, i.e it would add the value gathered by slot if enabled in previous or current node. (example: Email: {$email_id} would print Email: test@mail.com)."}})]):_vm._e(),(new_response.values.length > 1)?_c('span',{staticClass:"close my-auto",staticStyle:{"cursor":"pointer","margin-left":"12px"},attrs:{"title":"Remove Text Response"},on:{"click":function($event){return _vm.add_to_assistant_response_text_list(
                            'remove',
                            new_response.id,
                            num
                          )}}},[_vm._v(" × ")]):_vm._e()])])}),_c('div',{staticClass:"d-flex"},[_c('p',{staticStyle:{"margin-top":"6px","margin-bottom":"5px"}},[_vm._v(" "+_vm._s(_vm.tlt('config_success_add_value_btn'))+" ")]),_c('button',{staticStyle:{"cursor":"pointer","border":"none","background":"transparent"},on:{"click":function($event){return _vm.add_to_assistant_response_text_list(
                          'add',
                          new_response.id
                        )}}},[_c('img',{attrs:{"src":"/img/black_plus.png","alt":""}})])]),_c('div',{staticClass:"response-variations"},[_c('span',[_vm._v(_vm._s(_vm.tlt('response_variation_text1'))+" "),_c('strong',[_vm._v(_vm._s(new_response.variation))]),_vm._v(".")]),_vm._v(" "+_vm._s(_vm.tlt('response_variation_text2'))+" "),_c('a',{directives:[{name:"show",rawName:"v-show",value:(new_response.variation != 'sequential'),expression:"new_response.variation != 'sequential'"}],staticClass:"response-variation",attrs:{"href":"javascript:void(0);"},on:{"click":function($event){return _vm.select_response_variation(
                          new_response.id,
                          'sequential'
                        )}}},[_vm._v(" "+_vm._s(_vm.tlt('response_variation_text3'))+" ")]),_c('span',{directives:[{name:"show",rawName:"v-show",value:(new_response.variation != 'sequential'),expression:"new_response.variation != 'sequential'"}]},[_vm._v(" | ")]),_c('a',{directives:[{name:"show",rawName:"v-show",value:(new_response.variation != 'multiline'),expression:"new_response.variation != 'multiline'"}],staticClass:"variation-multiline",attrs:{"href":"javascript:void(0);"},on:{"click":function($event){return _vm.select_response_variation(
                          new_response.id,
                          'multiline'
                        )}}},[_vm._v(" "+_vm._s(_vm.tlt('response_variation_text4'))+" ")]),_c('span',{directives:[{name:"show",rawName:"v-show",value:(
                        new_response.variation != 'random' &&
                        new_response.variation != 'multiline'
                      ),expression:"\n                        new_response.variation != 'random' &&\n                        new_response.variation != 'multiline'\n                      "}]},[_vm._v(" | ")]),_c('a',{directives:[{name:"show",rawName:"v-show",value:(new_response.variation != 'random'),expression:"new_response.variation != 'random'"}],staticClass:"variation-random",attrs:{"href":"javascript:void(0);"},on:{"click":function($event){return _vm.select_response_variation(new_response.id, 'random')}}},[_vm._v(" "+_vm._s(_vm.tlt('response_variation_text5'))+" ")])])],2)]):_vm._e(),(new_response.type == 'image')?_c('div',{staticClass:"custom-box"},[_c('span',{staticClass:"btn btn-light",staticStyle:{"float":"right","cursor":"pointer","font-size":"14px"},attrs:{"title":"Remove Response"},on:{"click":function($event){return _vm.remove_notification_to_assistant_response(
                      new_response.id,
                      new_response.recognizes
                    )}}},[_c('svg',{staticClass:"bi bi-trash",attrs:{"xmlns":"http://www.w3.org/2000/svg","width":"16","height":"16","fill":"currentColor","viewBox":"0 0 16 16"}},[_c('path',{attrs:{"d":"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z"}}),_c('path',{attrs:{"fill-rule":"evenodd","d":"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z"}})])]),_c('button',{staticClass:"btn btn-light",staticStyle:{"float":"right","cursor":"pointer","font-size":"14px"},style:(index === _vm.notification_successful_assistant_response.length-1 ?'cursor: not-allowed':''),attrs:{"disabled":index === _vm.notification_successful_assistant_response.length-1,"title":"Move down"},on:{"click":function($event){return _vm.interchange_position_assistant_response(
                      new_response.id,
                      _vm.notification_successful_assistant_response[index+1].id,
                      'notification_modal'
                    )}}},[_c('svg',{staticClass:"bi bi-chevron-down",attrs:{"xmlns":"http://www.w3.org/2000/svg","width":"16","height":"16","fill":"currentColor","viewBox":"0 0 16 16"}},[_c('path',{attrs:{"fill-rule":"evenodd","d":"M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z"}})])]),_c('button',{staticClass:"btn btn-light",staticStyle:{"float":"right","cursor":"pointer","font-size":"14px"},style:(index === 0 ?'cursor: not-allowed':''),attrs:{"disabled":index === 0,"title":"Move Up"},on:{"click":function($event){return _vm.interchange_position_assistant_response(
                      new_response.id,
                      _vm.notification_successful_assistant_response[index-1].id,
                      'notification_modal'
                    )}}},[_c('svg',{staticClass:"bi bi-chevron-up",attrs:{"xmlns":"http://www.w3.org/2000/svg","width":"16","height":"16","fill":"#273679","viewBox":"0 0 16 16"}},[_c('path',{attrs:{"fill-rule":"evenodd","d":"M7.646 4.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1-.708.708L8 5.707l-5.646 5.647a.5.5 0 0 1-.708-.708l6-6z"}})])]),_c('p',{staticClass:"sub_heading"},[_vm._v(" "+_vm._s(_vm.tlt('config_success_img_response_header'))+" : "+_vm._s(new_response.id)+" ")]),_c('div',[_c('input',{directives:[{name:"model",rawName:"v-model",value:(new_response.source),expression:"new_response.source"}],staticClass:"form-control input-tag",staticStyle:{"width":"100%","padding":"0.375rem 0.5rem"},attrs:{"placeholder":_vm.tlt('add_img_url'),"type":"text"},domProps:{"value":(new_response.source)},on:{"input":function($event){if($event.target.composing){ return; }_vm.$set(new_response, "source", $event.target.value)}}}),_c('p',{directives:[{name:"show",rawName:"v-show",value:(
                      _vm.check_image_url(new_response.source) == false &&
                      Boolean(new_response.source)
                    ),expression:"\n                      check_image_url(new_response.source) == false &&\n                      Boolean(new_response.source)\n                    "}],staticStyle:{"color":"red !important","margin-bottom":"0px !important","padding-top":"8px !important"}},[_vm._v(" "+_vm._s(_vm.tlt('img_url_condition'))+" ")])])]):_vm._e(),(new_response.type == 'video')?_c('div',{staticClass:"custom-box"},[_c('span',{staticClass:"btn btn-light",staticStyle:{"float":"right","cursor":"pointer","font-size":"14px"},attrs:{"title":"Remove Response"},on:{"click":function($event){return _vm.remove_notification_to_assistant_response(
                      new_response.id,
                      new_response.recognizes
                    )}}},[_c('svg',{staticClass:"bi bi-trash",attrs:{"xmlns":"http://www.w3.org/2000/svg","width":"16","height":"16","fill":"currentColor","viewBox":"0 0 16 16"}},[_c('path',{attrs:{"d":"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z"}}),_c('path',{attrs:{"fill-rule":"evenodd","d":"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z"}})])]),_c('button',{staticClass:"btn btn-light",staticStyle:{"float":"right","cursor":"pointer","font-size":"14px"},style:(index === _vm.notification_successful_assistant_response.length-1 ?'cursor: not-allowed':''),attrs:{"disabled":index === _vm.notification_successful_assistant_response.length-1,"title":"Move down"},on:{"click":function($event){return _vm.interchange_position_assistant_response(
                      new_response.id,
                      _vm.notification_successful_assistant_response[index+1].id,
                      'notification_modal'
                    )}}},[_c('svg',{staticClass:"bi bi-chevron-down",attrs:{"xmlns":"http://www.w3.org/2000/svg","width":"16","height":"16","fill":"currentColor","viewBox":"0 0 16 16"}},[_c('path',{attrs:{"fill-rule":"evenodd","d":"M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z"}})])]),_c('button',{staticClass:"btn btn-light",staticStyle:{"float":"right","cursor":"pointer","font-size":"14px"},style:(index === 0 ?'cursor: not-allowed':''),attrs:{"disabled":index === 0,"title":"Move Up"},on:{"click":function($event){return _vm.interchange_position_assistant_response(
                      new_response.id,
                      _vm.notification_successful_assistant_response[index-1].id,
                      'notification_modal'
                    )}}},[_c('svg',{staticClass:"bi bi-chevron-up",attrs:{"xmlns":"http://www.w3.org/2000/svg","width":"16","height":"16","fill":"#273679","viewBox":"0 0 16 16"}},[_c('path',{attrs:{"fill-rule":"evenodd","d":"M7.646 4.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1-.708.708L8 5.707l-5.646 5.647a.5.5 0 0 1-.708-.708l6-6z"}})])]),_c('p',{staticClass:"sub_heading"},[_vm._v(" "+_vm._s(_vm.tlt('config_success_video_response_header'))+" : "+_vm._s(new_response.id)+" ")]),_c('div',[_c('input',{directives:[{name:"model",rawName:"v-model.trim",value:(new_response.source),expression:"new_response.source",modifiers:{"trim":true}}],staticClass:"form-control input-tag",staticStyle:{"width":"100%","padding":"0.375rem 0.5rem"},attrs:{"placeholder":_vm.tlt('add_video_url'),"type":"text"},domProps:{"value":(new_response.source)},on:{"input":function($event){if($event.target.composing){ return; }_vm.$set(new_response, "source", $event.target.value.trim())},"blur":function($event){return _vm.$forceUpdate()}}}),_c('p',{directives:[{name:"show",rawName:"v-show",value:(
                      _vm.check_video_url(new_response.source) === false &&
                      Boolean(new_response.source)
                    ),expression:"\n                      check_video_url(new_response.source) === false &&\n                      Boolean(new_response.source)\n                    "}],staticStyle:{"color":"red !important","margin-bottom":"0px !important","padding-top":"8px !important"}},[_vm._v(" "+_vm._s(_vm.tlt('valid_video_url'))+" ")])])]):_vm._e(),(new_response.type == 'choices')?_c('div',{staticClass:"custom-box"},[_c('span',{staticClass:"btn btn-light",staticStyle:{"float":"right","cursor":"pointer","font-size":"14px"},attrs:{"title":"Remove Response"},on:{"click":function($event){return _vm.remove_notification_to_assistant_response(
                      new_response.id,
                      new_response.recognizes
                    )}}},[_c('svg',{staticClass:"bi bi-trash",attrs:{"xmlns":"http://www.w3.org/2000/svg","width":"16","height":"16","fill":"currentColor","viewBox":"0 0 16 16"}},[_c('path',{attrs:{"d":"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z"}}),_c('path',{attrs:{"fill-rule":"evenodd","d":"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z"}})])]),_c('button',{staticClass:"btn btn-light",staticStyle:{"float":"right","cursor":"pointer","font-size":"14px"},style:(index === _vm.notification_successful_assistant_response.length-1 ?'cursor: not-allowed':''),attrs:{"disabled":index === _vm.notification_successful_assistant_response.length-1,"title":"Move down"},on:{"click":function($event){return _vm.interchange_position_assistant_response(
                      new_response.id,
                      _vm.notification_successful_assistant_response[index+1].id,
                      'notification_modal'
                    )}}},[_c('svg',{staticClass:"bi bi-chevron-down",attrs:{"xmlns":"http://www.w3.org/2000/svg","width":"16","height":"16","fill":"currentColor","viewBox":"0 0 16 16"}},[_c('path',{attrs:{"fill-rule":"evenodd","d":"M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z"}})])]),_c('button',{staticClass:"btn btn-light",staticStyle:{"float":"right","cursor":"pointer","font-size":"14px"},style:(index === 0 ?'cursor: not-allowed':''),attrs:{"disabled":index === 0,"title":"Move Up"},on:{"click":function($event){return _vm.interchange_position_assistant_response(
                      new_response.id,
                      _vm.notification_successful_assistant_response[index-1].id,
                      'notification_modal'
                    )}}},[_c('svg',{staticClass:"bi bi-chevron-up",attrs:{"xmlns":"http://www.w3.org/2000/svg","width":"16","height":"16","fill":"#273679","viewBox":"0 0 16 16"}},[_c('path',{attrs:{"fill-rule":"evenodd","d":"M7.646 4.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1-.708.708L8 5.707l-5.646 5.647a.5.5 0 0 1-.708-.708l6-6z"}})])]),_c('p',{staticClass:"sub_heading"},[_vm._v(" "+_vm._s(_vm.tlt('config_success_choice_response_header'))+" : "+_vm._s(new_response.id)+" ")]),_c('div',[[_c('div',{staticStyle:{"display":"block","margin-bottom":"1rem"}},_vm._l((new_response.choices),function(response,num){return _c('div',{key:num,staticClass:"d-flex mb-2"},[_c('div',{staticClass:"input-group",staticStyle:{"display":"block"}},[_c('div',{staticClass:"d-flex"},[_c('input',{directives:[{name:"model",rawName:"v-model.trim",value:(response.title),expression:"response.title",modifiers:{"trim":true}}],staticClass:"form-control input-tag",staticStyle:{"width":"100% !important","padding":"0.375rem 0.5rem","border-radius":"5px 0px 0px 5px !important"},attrs:{"type":"text","placeholder":_vm.tlt('enter_title'),"maxlength":"50"},domProps:{"value":(response.title)},on:{"input":function($event){if($event.target.composing){ return; }_vm.$set(response, "title", $event.target.value.trim())},"blur":function($event){return _vm.$forceUpdate()}}}),_c('input',{directives:[{name:"model",rawName:"v-model.trim",value:(response.payload),expression:"response.payload",modifiers:{"trim":true}}],staticClass:"form-control input-tag",staticStyle:{"width":"100% !important","padding":"0.375rem 0.5rem","border-radius":"0px !important"},attrs:{"type":"text","placeholder":_vm.change_btn_value_placeholder(response.type)},domProps:{"value":(response.payload)},on:{"input":function($event){if($event.target.composing){ return; }_vm.$set(response, "payload", $event.target.value.trim())},"blur":function($event){return _vm.$forceUpdate()}}}),_c('div',{staticClass:"input-group-append"},[_c('select',{directives:[{name:"model",rawName:"v-model",value:(response.type),expression:"response.type"}],staticClass:"form-control",staticStyle:{"width":"100px !important","height":"38px","padding":"0px !important"},attrs:{"id":"button_type_list_id"},on:{"change":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = "_value" in o ? o._value : o.value;return val}); _vm.$set(response, "type", $event.target.multiple ? $$selectedVal : $$selectedVal[0])}}},_vm._l((_vm.button_type_list),function(option,index){return _c('option',{key:index,domProps:{"value":option.value}},[_vm._v(" "+_vm._s(option.name)+" ")])}),0)])])]),(new_response.choices.length > 1)?_c('span',{staticClass:"close my-auto mr-0 ml-2",staticStyle:{"cursor":"pointer","float":"right"},attrs:{"title":"Remove Choice Response"},on:{"click":function($event){return _vm.add_to_assistant_response_choice_list(
                              'remove',
                              new_response.id,
                              num
                            )}}},[_vm._v(" ×")]):_vm._e()])}),0)],_c('div',{staticClass:"d-flex"},[_c('p',{staticStyle:{"margin-top":"6px","margin-bottom":"5px"}},[_vm._v(" "+_vm._s(_vm.tlt('config_success_add_choice_btn'))+" ")]),_c('button',{staticStyle:{"cursor":"pointer","border":"none","background":"transparent"},on:{"click":function($event){return _vm.add_to_assistant_response_choice_list(
                          'add',
                          new_response.id
                        )}}},[_c('img',{attrs:{"src":"/img/black_plus.png","alt":""}})])])],2)]):_vm._e(),(new_response.type == 'card')?_c('div',{staticClass:"custom-box"},[_c('span',{staticClass:"btn btn-light",staticStyle:{"float":"right","cursor":"pointer","font-size":"14px"},attrs:{"title":"Remove Response"},on:{"click":function($event){return _vm.remove_notification_to_assistant_response(
                      new_response.id,
                      new_response.recognizes
                    )}}},[_c('svg',{staticClass:"bi bi-trash",attrs:{"xmlns":"http://www.w3.org/2000/svg","width":"16","height":"16","fill":"currentColor","viewBox":"0 0 16 16"}},[_c('path',{attrs:{"d":"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z"}}),_c('path',{attrs:{"fill-rule":"evenodd","d":"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z"}})])]),_c('button',{staticClass:"btn btn-light",staticStyle:{"float":"right","cursor":"pointer","font-size":"14px"},style:(index === _vm.notification_successful_assistant_response.length-1 ?'cursor: not-allowed':''),attrs:{"disabled":index === _vm.notification_successful_assistant_response.length-1,"title":"Move down"},on:{"click":function($event){return _vm.interchange_position_assistant_response(
                      new_response.id,
                      _vm.notification_successful_assistant_response[index+1].id,
                      'notification_modal'
                    )}}},[_c('svg',{staticClass:"bi bi-chevron-down",attrs:{"xmlns":"http://www.w3.org/2000/svg","width":"16","height":"16","fill":"currentColor","viewBox":"0 0 16 16"}},[_c('path',{attrs:{"fill-rule":"evenodd","d":"M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z"}})])]),_c('button',{staticClass:"btn btn-light",staticStyle:{"float":"right","cursor":"pointer","font-size":"14px"},style:(index === 0 ?'cursor: not-allowed':''),attrs:{"disabled":index === 0,"title":"Move Up"},on:{"click":function($event){return _vm.interchange_position_assistant_response(
                      new_response.id,
                      _vm.notification_successful_assistant_response[index-1].id,
                      'notification_modal'
                    )}}},[_c('svg',{staticClass:"bi bi-chevron-up",attrs:{"xmlns":"http://www.w3.org/2000/svg","width":"16","height":"16","fill":"#273679","viewBox":"0 0 16 16"}},[_c('path',{attrs:{"fill-rule":"evenodd","d":"M7.646 4.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1-.708.708L8 5.707l-5.646 5.647a.5.5 0 0 1-.708-.708l6-6z"}})])]),_c('p',{staticClass:"sub_heading"},[_vm._v(" "+_vm._s(_vm.tlt('config_success_card_response_header'))+" : "+_vm._s(new_response.id)+" ")]),_c('div',[[_c('div',{staticClass:"row"},_vm._l((new_response.card_list),function(response,num){return _c('div',{key:num,staticClass:"col-sm-4 pb-3"},[_c('div',{staticClass:"card"},[_c('div',{staticClass:"card-body"},[_c('p',{staticClass:"sub_heading_carousel",staticStyle:{"color":"dimgray","margin-bottom":"5px"}},[_vm._v(" "+_vm._s(_vm.tlt('config_success_card_response_card_label'))+" : "+_vm._s(num + 1)+" ")]),(new_response.card_list.length > 1)?_c('span',{staticClass:"close ml-auto mr-0",staticStyle:{"cursor":"pointer","float":"right","margin-top":"-29px"},attrs:{"title":"Remove Card Response"},on:{"click":function($event){return _vm.add_to_assistant_response_carousel_card_list(
                                  'remove',
                                  new_response.id,
                                  num
                                )}}},[_vm._v(" ×")]):_vm._e(),_c('div',[_c('div',{staticClass:"d-sm-flex justify-content-start"},[_c('h6',{staticClass:"label_header",staticStyle:{"margin-top":"0"}},[_vm._v(" "+_vm._s(_vm.tlt('config_success_card_response_file_type_label'))+": ")]),_c('div',{staticClass:"radio my-auto radio-label"},[_c('label',{staticStyle:{"font-size":"13px"}},[_c('input',{directives:[{name:"model",rawName:"v-model",value:(response.is_image),expression:"response.is_image"}],attrs:{"type":"radio","id":"carousel_img"},domProps:{"value":true,"checked":_vm._q(response.is_image,true)},on:{"change":function($event){return _vm.$set(response, "is_image", true)}}}),_c('span',{staticClass:"icn",attrs:{"id":"filter_portal_user_radio"}}),_vm._v(" "+_vm._s(_vm.tlt('config_success_card_response_image_label'))+" ")]),_c('label',{staticStyle:{"font-size":"13px"}},[_c('input',{directives:[{name:"model",rawName:"v-model",value:(response.is_image),expression:"response.is_image"}],attrs:{"type":"radio","id":"carousel_video"},domProps:{"value":false,"checked":_vm._q(response.is_image,false)},on:{"change":function($event){return _vm.$set(response, "is_image", false)}}}),_c('span',{staticClass:"icn"}),_vm._v(" "+_vm._s(_vm.tlt('config_success_card_response_video_label'))+" ")])])])]),(response.is_image)?_c('div',[_c('input',{directives:[{name:"model",rawName:"v-model",value:(response.image),expression:"response.image"}],staticClass:"form-control input-tag",staticStyle:{"width":"100%","padding":"0.375rem 0.5rem"},attrs:{"placeholder":_vm.tlt('img_url'),"type":"text"},domProps:{"value":(response.image)},on:{"input":function($event){if($event.target.composing){ return; }_vm.$set(response, "image", $event.target.value)}}}),_c('p',{directives:[{name:"show",rawName:"v-show",value:(
                                  _vm.check_image_url(response.image) === false &&
                                  Boolean(response.image)
                                ),expression:"\n                                  check_image_url(response.image) === false &&\n                                  Boolean(response.image)\n                                "}],staticStyle:{"color":"red !important","margin-bottom":"0px !important","padding-top":"8px !important"}},[_vm._v(" "+_vm._s(_vm.tlt('img_url_condition'))+" ")])]):_c('div',[_c('input',{directives:[{name:"model",rawName:"v-model.trim",value:(response.video),expression:"response.video",modifiers:{"trim":true}}],staticClass:"form-control input-tag",staticStyle:{"width":"100% !important","padding":"0.375rem 0.5rem"},attrs:{"type":"text","placeholder":_vm.tlt('video_url')},domProps:{"value":(response.video)},on:{"input":function($event){if($event.target.composing){ return; }_vm.$set(response, "video", $event.target.value.trim())},"blur":function($event){return _vm.$forceUpdate()}}}),_c('p',{directives:[{name:"show",rawName:"v-show",value:(
                                  _vm.check_video_url(response.video) === false &&
                                  Boolean(response.video)
                                ),expression:"\n                                  check_video_url(response.video) === false &&\n                                  Boolean(response.video)\n                                "}],staticStyle:{"color":"red !important","margin-bottom":"0px !important","padding-top":"8px !important"}},[_vm._v(" "+_vm._s(_vm.tlt('valid_video_url'))+" ")])]),_c('label',{staticClass:"label_header"},[_vm._v(_vm._s(_vm.tlt('config_success_card_response_title_label')))]),_c('input',{directives:[{name:"model",rawName:"v-model.trim",value:(response.title),expression:"response.title",modifiers:{"trim":true}}],staticClass:"form-control input-tag",staticStyle:{"width":"100% !important","padding":"0.375rem 0.5rem"},attrs:{"type":"text","placeholder":_vm.tlt('enter_title')},domProps:{"value":(response.title)},on:{"input":function($event){if($event.target.composing){ return; }_vm.$set(response, "title", $event.target.value.trim())},"blur":function($event){return _vm.$forceUpdate()}}}),_c('label',{staticClass:"label_header"},[_vm._v(_vm._s(_vm.tlt('config_success_card_response_desc_label')))]),_c('textarea',{directives:[{name:"model",rawName:"v-model.trim",value:(response.text),expression:"response.text",modifiers:{"trim":true}}],staticClass:"form-control input-tag textarea-style",staticStyle:{"resize":"none"},attrs:{"type":"text","rows":"3","cols":"20","placeholder":_vm.tlt('enter_description')},domProps:{"value":(response.text)},on:{"input":function($event){if($event.target.composing){ return; }_vm.$set(response, "text", $event.target.value.trim())},"blur":function($event){return _vm.$forceUpdate()}}}),_c('div',[_c('p',{staticClass:"label_header"},[_vm._v(_vm._s(_vm.tlt('config_success_card_response_button_label')))]),_c('div',{staticClass:"ScrollStyle"},_vm._l((response.buttons),function(button,btn_num){return _c('div',{key:btn_num,staticClass:"mb-2"},[_c('div',{staticClass:"d-flex"},[_c('div',{staticClass:"input-group",staticStyle:{"display":"block"}},[_c('div',{staticClass:"d-flex"},[_c('input',{directives:[{name:"model",rawName:"v-model.trim",value:(button.title),expression:"button.title",modifiers:{"trim":true}}],staticClass:"form-control input-tag",staticStyle:{"width":"100% !important","padding":"0.375rem 0.5rem","border-radius":"5px 0px 0px 5px !important"},attrs:{"type":"text","placeholder":_vm.tlt('enter_title'),"maxlength":"50"},domProps:{"value":(button.title)},on:{"input":function($event){if($event.target.composing){ return; }_vm.$set(button, "title", $event.target.value.trim())},"blur":function($event){return _vm.$forceUpdate()}}}),_c('input',{directives:[{name:"model",rawName:"v-model.trim",value:(button.value),expression:"button.value",modifiers:{"trim":true}}],staticClass:"form-control input-tag",staticStyle:{"width":"100% !important","padding":"0.375rem 0.5rem","border-radius":"0px !important"},attrs:{"type":"text","placeholder":_vm.change_btn_value_placeholder(
                                              button.type
                                            )},domProps:{"value":(button.value)},on:{"input":function($event){if($event.target.composing){ return; }_vm.$set(button, "value", $event.target.value.trim())},"blur":function($event){return _vm.$forceUpdate()}}}),_c('div',{staticClass:"input-group-append"},[_c('select',{directives:[{name:"model",rawName:"v-model",value:(button.type),expression:"button.type"}],staticClass:"form-control",staticStyle:{"width":"20px !important","height":"38px","padding":"0px !important"},attrs:{"id":"button_type_list_id"},on:{"change":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = "_value" in o ? o._value : o.value;return val}); _vm.$set(button, "type", $event.target.multiple ? $$selectedVal : $$selectedVal[0])}}},_vm._l((_vm.button_type_list),function(option,index){return _c('option',{key:index,domProps:{"value":option.value}},[_vm._v(" "+_vm._s(option.name)+" ")])}),0)])])]),(response.buttons.length > 1)?_c('span',{staticClass:"close mx-1",staticStyle:{"cursor":"pointer","float":"right","margin-top":"8px"},attrs:{"title":"Remove Button Response"},on:{"click":function($event){return _vm.add_to_assistant_response_carousel_card_button_list(
                                          'remove',
                                          new_response.id,
                                          num,
                                          btn_num
                                        )}}},[_vm._v(" ×")]):_vm._e()])])}),0),_c('div',{staticClass:"d-flex"},[_c('p',{staticStyle:{"margin-top":"6px","margin-bottom":"5px"}},[_vm._v(" "+_vm._s(_vm.tlt('config_success_card_response_add_btn_label'))+" ")]),_c('button',{staticStyle:{"cursor":"pointer","border":"none","background":"transparent"},on:{"click":function($event){return _vm.add_to_assistant_response_carousel_card_button_list(
                                      'add',
                                      new_response.id,
                                      num
                                    )}}},[_c('img',{attrs:{"src":"/img/black_plus.png","alt":""}})])])])])])])}),0)],_c('div',{staticClass:"d-flex"},[_c('p',{staticStyle:{"margin-top":"6px","margin-bottom":"5px"}},[_vm._v(" "+_vm._s(_vm.tlt('config_success_card_response_add_card_label'))+" ")]),_c('button',{staticStyle:{"cursor":"pointer","border":"none","background":"transparent"},on:{"click":function($event){return _vm.add_to_assistant_response_carousel_card_list(
                          'add',
                          new_response.id
                        )}}},[_c('img',{attrs:{"src":"/img/black_plus.png","alt":""}})])])],2)]):_vm._e()])}),_c('div',{staticClass:"d-flex",staticStyle:{"margin-left":"1rem !important"}},[_c('p',{staticClass:"sub_heading"},[_vm._v(_vm._s(_vm.tlt('config_success_response_type_first_label'))+":")]),_c('select',{directives:[{name:"model",rawName:"v-model",value:(_vm.selected_response_type),expression:"selected_response_type"}],staticClass:"form-control input-tag",staticStyle:{"width":"100px","height":"25px","margin-left":"10px","padding":"0px"},attrs:{"id":"res_n_int_source"},on:{"change":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = "_value" in o ? o._value : o.value;return val}); _vm.selected_response_type=$event.target.multiple ? $$selectedVal : $$selectedVal[0]}}},_vm._l((_vm.assistant_response_type),function(option,index){return _c('option',{key:index,domProps:{"value":option}},[_vm._v(" "+_vm._s(option)+" ")])}),0),_c('p',{staticClass:"sub_heading",staticStyle:{"margin-left":"20px"}},[_vm._v(" "+_vm._s(_vm.tlt('config_success_add_response_btn'))+" ")]),_c('button',{staticStyle:{"margin-top":"-14px","cursor":"pointer","border":"none","background":"transparent url('@portal/assets/img/plus.png')"},on:{"click":function($event){return _vm.add_notification_successful_to_assistant_response(
                    'successful'
                  )}}},[_c('img',{attrs:{"src":"/img/black_plus.png","alt":""}})])])],2),_c('hr'),_c('div',{staticClass:"form-group"},[_c('h5',{staticStyle:{"margin-top":"6px","margin-bottom":"5px"}},[_vm._v(" "+_vm._s(_vm.tlt('config_notification_when_unsuccess_label'))+" ")]),_vm._l((_vm.notification_unsuccessful_assistant_response),function(new_response,index){return _c('div',{key:index,staticClass:"form-group"},[(new_response.type == 'text')?_c('div',{staticClass:"custom-box"},[_c('span',{staticClass:"btn btn-light",staticStyle:{"float":"right","cursor":"pointer","font-size":"14px"},attrs:{"title":"Remove Response"},on:{"click":function($event){return _vm.remove_notification_to_assistant_response(
                      new_response.id,
                      new_response.recognizes
                    )}}},[_c('svg',{staticClass:"bi bi-trash",attrs:{"xmlns":"http://www.w3.org/2000/svg","width":"16","height":"16","fill":"currentColor","viewBox":"0 0 16 16"}},[_c('path',{attrs:{"d":"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z"}}),_c('path',{attrs:{"fill-rule":"evenodd","d":"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z"}})])]),_c('button',{staticClass:"btn btn-light",staticStyle:{"float":"right","cursor":"pointer","font-size":"14px"},style:(index === _vm.notification_unsuccessful_assistant_response.length-1 ?'cursor: not-allowed':''),attrs:{"disabled":index === _vm.notification_unsuccessful_assistant_response.length-1,"title":"Move down"},on:{"click":function($event){return _vm.interchange_position_assistant_response(
                      new_response.id,
                      _vm.notification_unsuccessful_assistant_response[index+1].id,
                      'notification_modal'
                    )}}},[_c('svg',{staticClass:"bi bi-chevron-down",attrs:{"xmlns":"http://www.w3.org/2000/svg","width":"16","height":"16","fill":"currentColor","viewBox":"0 0 16 16"}},[_c('path',{attrs:{"fill-rule":"evenodd","d":"M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z"}})])]),_c('button',{staticClass:"btn btn-light",staticStyle:{"float":"right","cursor":"pointer","font-size":"14px"},style:(index === 0 ?'cursor: not-allowed':''),attrs:{"disabled":index === 0,"title":"Move Up"},on:{"click":function($event){return _vm.interchange_position_assistant_response(
                      new_response.id,
                      _vm.notification_unsuccessful_assistant_response[index-1].id,
                      'notification_modal'
                    )}}},[_c('svg',{staticClass:"bi bi-chevron-up",attrs:{"xmlns":"http://www.w3.org/2000/svg","width":"16","height":"16","fill":"#273679","viewBox":"0 0 16 16"}},[_c('path',{attrs:{"fill-rule":"evenodd","d":"M7.646 4.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1-.708.708L8 5.707l-5.646 5.647a.5.5 0 0 1-.708-.708l6-6z"}})])]),_c('p',{staticClass:"sub_heading"},[_vm._v(" "+_vm._s(_vm.tlt('config_unsuccess_text_response_header'))+" : "+_vm._s(new_response.id)+" ")]),_c('div',[_vm._l((new_response.values),function(response,num){return _c('div',{key:num,staticClass:"form-group"},[_c('div',{staticClass:"d-flex"},[_c('input',{directives:[{name:"model",rawName:"v-model",value:(new_response.values[num]),expression:"new_response.values[num]"}],staticClass:"form-control input-tag",staticStyle:{"width":"100%","padding":"0.375rem 0.5rem"},attrs:{"placeholder":_vm.tlt('response_text'),"type":"text","id":'assistance_response_' + new_response.id + '_' + num},domProps:{"value":(new_response.values[num])},on:{"focusout":function($event){return _vm.insert_variable_block_off(new_response.id, num)},"focusin":function($event){return _vm.insert_variable_block_on(new_response.id, num)},"keyup":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,"enter",13,$event.key,"Enter")){ return null; }return _vm.add_to_assistant_response_text_list(
                            'add',
                            new_response.id
                          )},"input":function($event){if($event.target.composing){ return; }_vm.$set(new_response.values, num, $event.target.value)}}}),_c('div',{staticStyle:{"opacity":"0"},attrs:{"id":'insert_variable_block' +
                          new_response.id +
                          '_' +
                          num}},[_c('a',{staticClass:"example fa-stack fa-1x",staticStyle:{"margin-top":"20px !important"},attrs:{"id":"insert_variable_button","type":"button","data-toggle":"modal","data-target":"#insert_variable_modal"},on:{"click":function($event){return _vm.set_assistance_response_index(
                              new_response.id,
                              num
                            )}}},[_c('i',{staticClass:"fas fa-circle fa-stack-2x",staticStyle:{"color":"#dbe2e8"},attrs:{"id":'insert_variable_circle_' +
                              new_response.id +
                              '_' +
                              num}}),_c('span',{staticClass:"fa fa-stack-1x",staticStyle:{"color":"white"},on:{"mouseover":function($event){return _vm.circle_mouseover(new_response.id, num)},"mouseout":function($event){return _vm.circle_mouseout(new_response.id, num)}}},[_c('span',{staticStyle:{"font-size":"14px","display":"block"}},[_vm._v(" {...} ")])])])]),(
                          _vm.check_slot_value_use_in_response(
                            new_response.values[num]
                          )
                        )?_c('span',{staticClass:"my-auto",staticStyle:{"margin-left":"12px","color":"#0645ad"}},[_c('i',{staticClass:"fa fa-info-circle",staticStyle:{"font-size":"16px"},attrs:{"aria-hidden":"true","title":"You have used {} in the response, which is used to access slot value, i.e it would add the value gathered by slot if enabled in previous or current node. (example: Email: {$email_id} would print Email: test@mail.com)."}})]):_vm._e(),(new_response.values.length > 1)?_c('span',{staticClass:"close my-auto",staticStyle:{"cursor":"pointer","margin-left":"12px"},attrs:{"title":"Remove Text Response"},on:{"click":function($event){return _vm.add_to_assistant_response_text_list(
                            'remove',
                            new_response.id,
                            num
                          )}}},[_vm._v(" × ")]):_vm._e()])])}),_c('div',{staticClass:"d-flex"},[_c('p',{staticStyle:{"margin-top":"6px","margin-bottom":"5px"}},[_vm._v(" "+_vm._s(_vm.tlt('config_unsuccess_add_value_btn'))+" ")]),_c('button',{staticStyle:{"cursor":"pointer","border":"none","background":"transparent"},on:{"click":function($event){return _vm.add_to_assistant_response_text_list(
                          'add',
                          new_response.id
                        )}}},[_c('img',{attrs:{"src":"/img/black_plus.png","alt":""}})])]),_c('div',{staticClass:"response-variations"},[_c('span',[_vm._v(_vm._s(_vm.tlt('response_variation_text1'))+" "),_c('strong',[_vm._v(_vm._s(new_response.variation))]),_vm._v(".")]),_vm._v(" "+_vm._s(_vm.tlt('response_variation_text2'))+" "),_c('a',{directives:[{name:"show",rawName:"v-show",value:(new_response.variation != 'sequential'),expression:"new_response.variation != 'sequential'"}],staticClass:"response-variation",attrs:{"href":"javascript:void(0);"},on:{"click":function($event){return _vm.select_response_variation(
                          new_response.id,
                          'sequential'
                        )}}},[_vm._v(" "+_vm._s(_vm.tlt('response_variation_text3'))+" ")]),_c('span',{directives:[{name:"show",rawName:"v-show",value:(new_response.variation != 'sequential'),expression:"new_response.variation != 'sequential'"}]},[_vm._v(" | ")]),_c('a',{directives:[{name:"show",rawName:"v-show",value:(new_response.variation != 'multiline'),expression:"new_response.variation != 'multiline'"}],staticClass:"variation-multiline",attrs:{"href":"javascript:void(0);"},on:{"click":function($event){return _vm.select_response_variation(
                          new_response.id,
                          'multiline'
                        )}}},[_vm._v(" "+_vm._s(_vm.tlt('response_variation_text4'))+" ")]),_c('span',{directives:[{name:"show",rawName:"v-show",value:(
                        new_response.variation != 'random' &&
                        new_response.variation != 'multiline'
                      ),expression:"\n                        new_response.variation != 'random' &&\n                        new_response.variation != 'multiline'\n                      "}]},[_vm._v(" | ")]),_c('a',{directives:[{name:"show",rawName:"v-show",value:(new_response.variation != 'random'),expression:"new_response.variation != 'random'"}],staticClass:"variation-random",attrs:{"href":"javascript:void(0);"},on:{"click":function($event){return _vm.select_response_variation(new_response.id, 'random')}}},[_vm._v(" "+_vm._s(_vm.tlt('response_variation_text5'))+" ")])])],2)]):_vm._e(),(new_response.type == 'image')?_c('div',{staticClass:"custom-box"},[_c('span',{staticClass:"btn btn-light",staticStyle:{"float":"right","cursor":"pointer","font-size":"14px"},attrs:{"title":"Remove Response"},on:{"click":function($event){return _vm.remove_notification_to_assistant_response(
                      new_response.id,
                      new_response.recognizes
                    )}}},[_c('svg',{staticClass:"bi bi-trash",attrs:{"xmlns":"http://www.w3.org/2000/svg","width":"16","height":"16","fill":"currentColor","viewBox":"0 0 16 16"}},[_c('path',{attrs:{"d":"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z"}}),_c('path',{attrs:{"fill-rule":"evenodd","d":"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z"}})])]),_c('button',{staticClass:"btn btn-light",staticStyle:{"float":"right","cursor":"pointer","font-size":"14px"},style:(index === _vm.notification_unsuccessful_assistant_response.length-1 ?'cursor: not-allowed':''),attrs:{"disabled":index === _vm.notification_unsuccessful_assistant_response.length-1,"title":"Move down"},on:{"click":function($event){return _vm.interchange_position_assistant_response(
                      new_response.id,
                      _vm.notification_unsuccessful_assistant_response[index+1].id,
                      'notification_modal'
                    )}}},[_c('svg',{staticClass:"bi bi-chevron-down",attrs:{"xmlns":"http://www.w3.org/2000/svg","width":"16","height":"16","fill":"currentColor","viewBox":"0 0 16 16"}},[_c('path',{attrs:{"fill-rule":"evenodd","d":"M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z"}})])]),_c('button',{staticClass:"btn btn-light",staticStyle:{"float":"right","cursor":"pointer","font-size":"14px"},style:(index === 0 ?'cursor: not-allowed':''),attrs:{"disabled":index === 0,"title":"Move Up"},on:{"click":function($event){return _vm.interchange_position_assistant_response(
                      new_response.id,
                      _vm.notification_unsuccessful_assistant_response[index-1].id,
                      'notification_modal'
                    )}}},[_c('svg',{staticClass:"bi bi-chevron-up",attrs:{"xmlns":"http://www.w3.org/2000/svg","width":"16","height":"16","fill":"#273679","viewBox":"0 0 16 16"}},[_c('path',{attrs:{"fill-rule":"evenodd","d":"M7.646 4.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1-.708.708L8 5.707l-5.646 5.647a.5.5 0 0 1-.708-.708l6-6z"}})])]),_c('p',{staticClass:"sub_heading"},[_vm._v(_vm._s(_vm.tlt('config_unsuccess_img_response_header'))+" :")]),_c('div',[_c('input',{directives:[{name:"model",rawName:"v-model",value:(new_response.source),expression:"new_response.source"}],staticClass:"form-control input-tag",staticStyle:{"width":"100%","padding":"0.375rem 0.5rem"},attrs:{"placeholder":_vm.tlt('add_img_url'),"type":"text"},domProps:{"value":(new_response.source)},on:{"input":function($event){if($event.target.composing){ return; }_vm.$set(new_response, "source", $event.target.value)}}}),_c('p',{directives:[{name:"show",rawName:"v-show",value:(
                      _vm.check_image_url(new_response.source) == false &&
                      Boolean(new_response.source)
                    ),expression:"\n                      check_image_url(new_response.source) == false &&\n                      Boolean(new_response.source)\n                    "}],staticStyle:{"color":"red !important","margin-bottom":"0px !important","padding-top":"8px !important"}},[_vm._v(" "+_vm._s(_vm.tlt('img_url_condition'))+" ")])])]):_vm._e(),(new_response.type == 'video')?_c('div',{staticClass:"custom-box"},[_c('span',{staticClass:"btn btn-light",staticStyle:{"float":"right","cursor":"pointer","font-size":"14px"},attrs:{"title":"Remove Response"},on:{"click":function($event){return _vm.remove_notification_to_assistant_response(
                      new_response.id,
                      new_response.recognizes
                    )}}},[_c('svg',{staticClass:"bi bi-trash",attrs:{"xmlns":"http://www.w3.org/2000/svg","width":"16","height":"16","fill":"currentColor","viewBox":"0 0 16 16"}},[_c('path',{attrs:{"d":"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z"}}),_c('path',{attrs:{"fill-rule":"evenodd","d":"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z"}})])]),_c('button',{staticClass:"btn btn-light",staticStyle:{"float":"right","cursor":"pointer","font-size":"14px"},style:(index === _vm.notification_unsuccessful_assistant_response.length-1 ?'cursor: not-allowed':''),attrs:{"disabled":index === _vm.notification_unsuccessful_assistant_response.length-1,"title":"Move down"},on:{"click":function($event){return _vm.interchange_position_assistant_response(
                      new_response.id,
                      _vm.notification_unsuccessful_assistant_response[index+1].id,
                      'notification_modal'
                    )}}},[_c('svg',{staticClass:"bi bi-chevron-down",attrs:{"xmlns":"http://www.w3.org/2000/svg","width":"16","height":"16","fill":"currentColor","viewBox":"0 0 16 16"}},[_c('path',{attrs:{"fill-rule":"evenodd","d":"M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z"}})])]),_c('button',{staticClass:"btn btn-light",staticStyle:{"float":"right","cursor":"pointer","font-size":"14px"},style:(index === 0 ?'cursor: not-allowed':''),attrs:{"disabled":index === 0,"title":"Move Up"},on:{"click":function($event){return _vm.interchange_position_assistant_response(
                      new_response.id,
                      _vm.notification_unsuccessful_assistant_response[index-1].id,
                      'notification_modal'
                    )}}},[_c('svg',{staticClass:"bi bi-chevron-up",attrs:{"xmlns":"http://www.w3.org/2000/svg","width":"16","height":"16","fill":"#273679","viewBox":"0 0 16 16"}},[_c('path',{attrs:{"fill-rule":"evenodd","d":"M7.646 4.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1-.708.708L8 5.707l-5.646 5.647a.5.5 0 0 1-.708-.708l6-6z"}})])]),_c('p',{staticClass:"sub_heading"},[_vm._v(" "+_vm._s(_vm.tlt('video_response_label'))+" : "+_vm._s(new_response.id)+" ")]),_c('div',[_c('input',{directives:[{name:"model",rawName:"v-model.trim",value:(new_response.source),expression:"new_response.source",modifiers:{"trim":true}}],staticClass:"form-control input-tag",staticStyle:{"width":"100%","padding":"0.375rem 0.5rem"},attrs:{"placeholder":_vm.tlt('add_video_url'),"type":"text"},domProps:{"value":(new_response.source)},on:{"input":function($event){if($event.target.composing){ return; }_vm.$set(new_response, "source", $event.target.value.trim())},"blur":function($event){return _vm.$forceUpdate()}}}),_c('p',{directives:[{name:"show",rawName:"v-show",value:(
                      _vm.check_video_url(new_response.source) === false &&
                      Boolean(new_response.source)
                    ),expression:"\n                      check_video_url(new_response.source) === false &&\n                      Boolean(new_response.source)\n                    "}],staticStyle:{"color":"red !important","margin-bottom":"0px !important","padding-top":"8px !important"}},[_vm._v(" "+_vm._s(_vm.tlt('valid_video_url'))+" ")])])]):_vm._e(),(new_response.type == 'choices')?_c('div',{staticClass:"custom-box"},[_c('span',{staticClass:"btn btn-light",staticStyle:{"float":"right","cursor":"pointer","font-size":"14px"},attrs:{"title":"Remove Response"},on:{"click":function($event){return _vm.remove_notification_to_assistant_response(
                      new_response.id,
                      new_response.recognizes
                    )}}},[_c('svg',{staticClass:"bi bi-trash",attrs:{"xmlns":"http://www.w3.org/2000/svg","width":"16","height":"16","fill":"currentColor","viewBox":"0 0 16 16"}},[_c('path',{attrs:{"d":"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z"}}),_c('path',{attrs:{"fill-rule":"evenodd","d":"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z"}})])]),_c('button',{staticClass:"btn btn-light",staticStyle:{"float":"right","cursor":"pointer","font-size":"14px"},style:(index === _vm.notification_unsuccessful_assistant_response.length-1 ?'cursor: not-allowed':''),attrs:{"disabled":index === _vm.notification_unsuccessful_assistant_response.length-1,"title":"Move down"},on:{"click":function($event){return _vm.interchange_position_assistant_response(
                      new_response.id,
                      _vm.notification_unsuccessful_assistant_response[index+1].id,
                      'notification_modal'
                    )}}},[_c('svg',{staticClass:"bi bi-chevron-down",attrs:{"xmlns":"http://www.w3.org/2000/svg","width":"16","height":"16","fill":"currentColor","viewBox":"0 0 16 16"}},[_c('path',{attrs:{"fill-rule":"evenodd","d":"M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z"}})])]),_c('button',{staticClass:"btn btn-light",staticStyle:{"float":"right","cursor":"pointer","font-size":"14px"},style:(index === 0 ?'cursor: not-allowed':''),attrs:{"disabled":index === 0,"title":"Move Up"},on:{"click":function($event){return _vm.interchange_position_assistant_response(
                      new_response.id,
                      _vm.notification_unsuccessful_assistant_response[index-1].id,
                      'notification_modal'
                    )}}},[_c('svg',{staticClass:"bi bi-chevron-up",attrs:{"xmlns":"http://www.w3.org/2000/svg","width":"16","height":"16","fill":"#273679","viewBox":"0 0 16 16"}},[_c('path',{attrs:{"fill-rule":"evenodd","d":"M7.646 4.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1-.708.708L8 5.707l-5.646 5.647a.5.5 0 0 1-.708-.708l6-6z"}})])]),_c('p',{staticClass:"sub_heading"},[_vm._v(" "+_vm._s(_vm.tlt('config_unsuccess_choice_response_header'))+" : "+_vm._s(new_response.id)+" ")]),_c('div',[[_c('div',{staticStyle:{"display":"block","margin-bottom":"1rem"}},_vm._l((new_response.choices),function(response,num){return _c('div',{key:num,staticClass:"d-flex mb-2"},[_c('div',{staticClass:"input-group",staticStyle:{"display":"block"}},[_c('div',{staticClass:"d-flex"},[_c('input',{directives:[{name:"model",rawName:"v-model.trim",value:(response.title),expression:"response.title",modifiers:{"trim":true}}],staticClass:"form-control input-tag",staticStyle:{"width":"100% !important","padding":"0.375rem 0.5rem","border-radius":"5px 0px 0px 5px !important"},attrs:{"type":"text","placeholder":_vm.tlt('enter_title'),"maxlength":"50"},domProps:{"value":(response.title)},on:{"input":function($event){if($event.target.composing){ return; }_vm.$set(response, "title", $event.target.value.trim())},"blur":function($event){return _vm.$forceUpdate()}}}),_c('input',{directives:[{name:"model",rawName:"v-model.trim",value:(response.payload),expression:"response.payload",modifiers:{"trim":true}}],staticClass:"form-control input-tag",staticStyle:{"width":"100% !important","padding":"0.375rem 0.5rem","border-radius":"0px !important"},attrs:{"type":"text","placeholder":_vm.change_btn_value_placeholder(response.type)},domProps:{"value":(response.payload)},on:{"input":function($event){if($event.target.composing){ return; }_vm.$set(response, "payload", $event.target.value.trim())},"blur":function($event){return _vm.$forceUpdate()}}}),_c('div',{staticClass:"input-group-append"},[_c('select',{directives:[{name:"model",rawName:"v-model",value:(response.type),expression:"response.type"}],staticClass:"form-control",staticStyle:{"width":"100px !important","height":"38px","padding":"0px !important"},attrs:{"id":"button_type_list_id"},on:{"change":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = "_value" in o ? o._value : o.value;return val}); _vm.$set(response, "type", $event.target.multiple ? $$selectedVal : $$selectedVal[0])}}},_vm._l((_vm.button_type_list),function(option,index){return _c('option',{key:index,domProps:{"value":option.value}},[_vm._v(" "+_vm._s(option.name)+" ")])}),0)])])]),(new_response.choices.length > 1)?_c('span',{staticClass:"close my-auto mr-0 ml-2",staticStyle:{"cursor":"pointer","float":"right"},attrs:{"title":"Remove Choice Response"},on:{"click":function($event){return _vm.add_to_assistant_response_choice_list(
                              'remove',
                              new_response.id,
                              num
                            )}}},[_vm._v(" ×")]):_vm._e()])}),0)],_c('div',{staticClass:"d-flex"},[_c('p',{staticStyle:{"margin-top":"6px","margin-bottom":"5px"}},[_vm._v(" "+_vm._s(_vm.tlt('config_unsuccess_add_choice_btn'))+" ")]),_c('button',{staticStyle:{"cursor":"pointer","border":"none","background":"transparent"},on:{"click":function($event){return _vm.add_to_assistant_response_choice_list(
                          'add',
                          new_response.id
                        )}}},[_c('img',{attrs:{"src":"/img/black_plus.png","alt":""}})])])],2)]):_vm._e(),(new_response.type == 'card')?_c('div',{staticClass:"custom-box"},[_c('span',{staticClass:"btn btn-light",staticStyle:{"float":"right","cursor":"pointer","font-size":"14px"},attrs:{"title":"Remove Response"},on:{"click":function($event){return _vm.remove_notification_to_assistant_response(
                      new_response.id,
                      new_response.recognizes
                    )}}},[_c('svg',{staticClass:"bi bi-trash",attrs:{"xmlns":"http://www.w3.org/2000/svg","width":"16","height":"16","fill":"currentColor","viewBox":"0 0 16 16"}},[_c('path',{attrs:{"d":"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z"}}),_c('path',{attrs:{"fill-rule":"evenodd","d":"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z"}})])]),_c('button',{staticClass:"btn btn-light",staticStyle:{"float":"right","cursor":"pointer","font-size":"14px"},style:(index === _vm.notification_unsuccessful_assistant_response.length-1 ?'cursor: not-allowed':''),attrs:{"disabled":index === _vm.notification_unsuccessful_assistant_response.length-1,"title":"Move down"},on:{"click":function($event){return _vm.interchange_position_assistant_response(
                      new_response.id,
                      _vm.notification_unsuccessful_assistant_response[index+1].id,
                      'notification_modal'
                    )}}},[_c('svg',{staticClass:"bi bi-chevron-down",attrs:{"xmlns":"http://www.w3.org/2000/svg","width":"16","height":"16","fill":"currentColor","viewBox":"0 0 16 16"}},[_c('path',{attrs:{"fill-rule":"evenodd","d":"M1.646 4.646a.5.5 0 0 1 .708 0L8 10.293l5.646-5.647a.5.5 0 0 1 .708.708l-6 6a.5.5 0 0 1-.708 0l-6-6a.5.5 0 0 1 0-.708z"}})])]),_c('button',{staticClass:"btn btn-light",staticStyle:{"float":"right","cursor":"pointer","font-size":"14px"},style:(index === 0 ?'cursor: not-allowed':''),attrs:{"disabled":index === 0,"title":"Move Up"},on:{"click":function($event){return _vm.interchange_position_assistant_response(
                      new_response.id,
                      _vm.notification_unsuccessful_assistant_response[index-1].id,
                      'notification_modal'
                    )}}},[_c('svg',{staticClass:"bi bi-chevron-up",attrs:{"xmlns":"http://www.w3.org/2000/svg","width":"16","height":"16","fill":"#273679","viewBox":"0 0 16 16"}},[_c('path',{attrs:{"fill-rule":"evenodd","d":"M7.646 4.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1-.708.708L8 5.707l-5.646 5.647a.5.5 0 0 1-.708-.708l6-6z"}})])]),_c('p',{staticClass:"sub_heading"},[_vm._v(" "+_vm._s(_vm.tlt('config_unsuccess_card_response_header'))+" : "+_vm._s(new_response.id)+" ")]),_c('div',[[_c('div',{staticClass:"row"},_vm._l((new_response.card_list),function(response,num){return _c('div',{key:num,staticClass:"col-sm-4 pb-3"},[_c('div',{staticClass:"card"},[_c('div',{staticClass:"card-body"},[_c('p',{staticClass:"sub_heading_carousel",staticStyle:{"color":"dimgray","margin-bottom":"5px"}},[_vm._v(" "+_vm._s(_vm.tlt('config_unsuccess_card_response_card_label'))+" : "+_vm._s(num + 1)+" ")]),(new_response.card_list.length > 1)?_c('span',{staticClass:"close ml-auto mr-0",staticStyle:{"cursor":"pointer","float":"right","margin-top":"-29px"},attrs:{"title":"Remove Card Response"},on:{"click":function($event){return _vm.add_to_assistant_response_carousel_card_list(
                                  'remove',
                                  new_response.id,
                                  num
                                )}}},[_vm._v(" ×")]):_vm._e(),_c('div',[_c('div',{staticClass:"d-sm-flex justify-content-start"},[_c('h6',{staticClass:"label_header",staticStyle:{"margin-top":"0"}},[_vm._v(" "+_vm._s(_vm.tlt('config_unsuccess_card_response_file_type_label'))+": ")]),_c('div',{staticClass:"radio my-auto radio-label"},[_c('label',{staticStyle:{"font-size":"13px"}},[_c('input',{directives:[{name:"model",rawName:"v-model",value:(response.is_image),expression:"response.is_image"}],attrs:{"type":"radio","id":"carousel_img"},domProps:{"value":true,"checked":_vm._q(response.is_image,true)},on:{"change":function($event){return _vm.$set(response, "is_image", true)}}}),_c('span',{staticClass:"icn",attrs:{"id":"filter_portal_user_radio"}}),_vm._v(" "+_vm._s(_vm.tlt('config_unsuccess_card_response_image_label'))+" ")]),_c('label',{staticStyle:{"font-size":"13px"}},[_c('input',{directives:[{name:"model",rawName:"v-model",value:(response.is_image),expression:"response.is_image"}],attrs:{"type":"radio","id":"carousel_video"},domProps:{"value":false,"checked":_vm._q(response.is_image,false)},on:{"change":function($event){return _vm.$set(response, "is_image", false)}}}),_c('span',{staticClass:"icn"}),_vm._v(" "+_vm._s(_vm.tlt('config_unsuccess_card_response_video_label'))+" ")])])])]),(response.is_image)?_c('div',[_c('input',{directives:[{name:"model",rawName:"v-model",value:(response.image),expression:"response.image"}],staticClass:"form-control input-tag",staticStyle:{"width":"100%","padding":"0.375rem 0.5rem"},attrs:{"placeholder":_vm.tlt('img_url'),"type":"text"},domProps:{"value":(response.image)},on:{"input":function($event){if($event.target.composing){ return; }_vm.$set(response, "image", $event.target.value)}}}),_c('p',{directives:[{name:"show",rawName:"v-show",value:(
                                  _vm.check_image_url(response.image) === false &&
                                  Boolean(response.image)
                                ),expression:"\n                                  check_image_url(response.image) === false &&\n                                  Boolean(response.image)\n                                "}],staticStyle:{"color":"red !important","margin-bottom":"0px !important","padding-top":"8px !important"}},[_vm._v(" "+_vm._s(_vm.tlt('card_response_image_condition_text'))+" ")])]):_c('div',[_c('input',{directives:[{name:"model",rawName:"v-model.trim",value:(response.video),expression:"response.video",modifiers:{"trim":true}}],staticClass:"form-control input-tag",staticStyle:{"width":"100% !important","padding":"0.375rem 0.5rem"},attrs:{"type":"text","placeholder":_vm.tlt('video_url')},domProps:{"value":(response.video)},on:{"input":function($event){if($event.target.composing){ return; }_vm.$set(response, "video", $event.target.value.trim())},"blur":function($event){return _vm.$forceUpdate()}}}),_c('p',{directives:[{name:"show",rawName:"v-show",value:(
                                  _vm.check_video_url(response.video) === false &&
                                  Boolean(response.video)
                                ),expression:"\n                                  check_video_url(response.video) === false &&\n                                  Boolean(response.video)\n                                "}],staticStyle:{"color":"red !important","margin-bottom":"0px !important","padding-top":"8px !important"}},[_vm._v(" "+_vm._s(_vm.tlt('card_response_video_condition_text'))+" ")])]),_c('label',{staticClass:"label_header"},[_vm._v(_vm._s(_vm.tlt('config_unsuccess_card_response_title_label')))]),_c('input',{directives:[{name:"model",rawName:"v-model.trim",value:(response.title),expression:"response.title",modifiers:{"trim":true}}],staticClass:"form-control input-tag",staticStyle:{"width":"100% !important","padding":"0.375rem 0.5rem"},attrs:{"type":"text","placeholder":_vm.tlt('enter_title')},domProps:{"value":(response.title)},on:{"input":function($event){if($event.target.composing){ return; }_vm.$set(response, "title", $event.target.value.trim())},"blur":function($event){return _vm.$forceUpdate()}}}),_c('label',{staticClass:"label_header"},[_vm._v(_vm._s(_vm.tlt('config_unsuccess_card_response_desc_label')))]),_c('textarea',{directives:[{name:"model",rawName:"v-model.trim",value:(response.text),expression:"response.text",modifiers:{"trim":true}}],staticClass:"form-control input-tag textarea-style",staticStyle:{"resize":"none"},attrs:{"type":"text","rows":"3","cols":"20","placeholder":_vm.tlt('enter_description')},domProps:{"value":(response.text)},on:{"input":function($event){if($event.target.composing){ return; }_vm.$set(response, "text", $event.target.value.trim())},"blur":function($event){return _vm.$forceUpdate()}}}),_c('div',[_c('p',{staticClass:"label_header"},[_vm._v(_vm._s(_vm.tlt('config_unsuccess_card_response_button_label')))]),_c('div',{staticClass:"ScrollStyle"},_vm._l((response.buttons),function(button,btn_num){return _c('div',{key:btn_num,staticClass:"mb-2"},[_c('div',{staticClass:"d-flex"},[_c('div',{staticClass:"input-group",staticStyle:{"display":"block"}},[_c('div',{staticClass:"d-flex"},[_c('input',{directives:[{name:"model",rawName:"v-model.trim",value:(button.title),expression:"button.title",modifiers:{"trim":true}}],staticClass:"form-control input-tag",staticStyle:{"width":"100% !important","padding":"0.375rem 0.5rem","border-radius":"5px 0px 0px 5px !important"},attrs:{"type":"text","placeholder":_vm.tlt('enter_title'),"maxlength":"50"},domProps:{"value":(button.title)},on:{"input":function($event){if($event.target.composing){ return; }_vm.$set(button, "title", $event.target.value.trim())},"blur":function($event){return _vm.$forceUpdate()}}}),_c('input',{directives:[{name:"model",rawName:"v-model.trim",value:(button.value),expression:"button.value",modifiers:{"trim":true}}],staticClass:"form-control input-tag",staticStyle:{"width":"100% !important","padding":"0.375rem 0.5rem","border-radius":"0px !important"},attrs:{"type":"text","placeholder":_vm.change_btn_value_placeholder(
                                              button.type
                                            )},domProps:{"value":(button.value)},on:{"input":function($event){if($event.target.composing){ return; }_vm.$set(button, "value", $event.target.value.trim())},"blur":function($event){return _vm.$forceUpdate()}}}),_c('div',{staticClass:"input-group-append"},[_c('select',{directives:[{name:"model",rawName:"v-model",value:(button.type),expression:"button.type"}],staticClass:"form-control",staticStyle:{"width":"20px !important","height":"38px","padding":"0px !important"},attrs:{"id":"button_type_list_id"},on:{"change":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = "_value" in o ? o._value : o.value;return val}); _vm.$set(button, "type", $event.target.multiple ? $$selectedVal : $$selectedVal[0])}}},_vm._l((_vm.button_type_list),function(option,index){return _c('option',{key:index,domProps:{"value":option.value}},[_vm._v(" "+_vm._s(option.name)+" ")])}),0)])])]),(response.buttons.length > 1)?_c('span',{staticClass:"close mx-1",staticStyle:{"cursor":"pointer","float":"right","margin-top":"8px"},attrs:{"title":"Remove Button Response"},on:{"click":function($event){return _vm.add_to_assistant_response_carousel_card_button_list(
                                          'remove',
                                          new_response.id,
                                          num,
                                          btn_num
                                        )}}},[_vm._v(" ×")]):_vm._e()])])}),0),_c('div',{staticClass:"d-flex"},[_c('p',{staticStyle:{"margin-top":"6px","margin-bottom":"5px"}},[_vm._v(" "+_vm._s(_vm.tlt('config_unsuccess_card_response_add_btn_label'))+" ")]),_c('button',{staticStyle:{"cursor":"pointer","border":"none","background":"transparent"},on:{"click":function($event){return _vm.add_to_assistant_response_carousel_card_button_list(
                                      'add',
                                      new_response.id,
                                      num
                                    )}}},[_c('img',{attrs:{"src":"/img/black_plus.png","alt":""}})])])])])])])}),0)],_c('div',{staticClass:"d-flex"},[_c('p',{staticStyle:{"margin-top":"6px","margin-bottom":"5px"}},[_vm._v(" "+_vm._s(_vm.tlt('config_unsuccess_card_response_add_card_label'))+" ")]),_c('button',{staticStyle:{"cursor":"pointer","border":"none","background":"transparent"},on:{"click":function($event){return _vm.add_to_assistant_response_carousel_card_list(
                          'add',
                          new_response.id
                        )}}},[_c('img',{attrs:{"src":"/img/black_plus.png","alt":""}})])])],2)]):_vm._e()])}),_c('div',{staticClass:"d-flex",staticStyle:{"margin-left":"1rem !important"}},[_c('p',{staticClass:"sub_heading"},[_vm._v(_vm._s(_vm.tlt('config_unsuccess_response_type_first_label'))+" :")]),_c('select',{directives:[{name:"model",rawName:"v-model",value:(_vm.selected_response_type),expression:"selected_response_type"}],staticClass:"form-control input-tag",staticStyle:{"width":"100px","height":"25px","margin-left":"10px","padding":"0px"},attrs:{"id":"res_n_int_source"},on:{"change":function($event){var $$selectedVal = Array.prototype.filter.call($event.target.options,function(o){return o.selected}).map(function(o){var val = "_value" in o ? o._value : o.value;return val}); _vm.selected_response_type=$event.target.multiple ? $$selectedVal : $$selectedVal[0]}}},_vm._l((_vm.assistant_response_type),function(option,index){return _c('option',{key:index,domProps:{"value":option}},[_vm._v(" "+_vm._s(option)+" ")])}),0),_c('p',{staticClass:"sub_heading",staticStyle:{"margin-left":"20px"}},[_vm._v(" "+_vm._s(_vm.tlt('config_unsuccess_add_response_btn'))+" ")]),_c('button',{staticStyle:{"margin-top":"-14px","cursor":"pointer","border":"none","background":"transparent url('@portal/assets/img/plus.png')"},on:{"click":function($event){return _vm.add_notification_successful_to_assistant_response(
                    'unsuccessful'
                  )}}},[_c('img',{attrs:{"src":"/img/black_plus.png","alt":""}})])])],2)])])])]),_c('div',{staticClass:"modal",attrs:{"id":"insert_variable_modal","aria-labelledby":"insert_variable_modal"}},[_c('div',{staticClass:"modal-dialog modal-dialog-centered modal-sm",attrs:{"role":"document"}},[_c('div',{staticClass:"modal-content",staticStyle:{"box-shadow":"none !important"}},[_c('div',{staticClass:"modal-body"},[_c('div',[_c('multiselect',{attrs:{"id":"insert_variable_id","close-on-select":false,"options":_vm.insert_slot_variable_options,"placeholder":_vm.tlt('select_variable'),"show-labels":false,"open-direction":"top","max-height":120},on:{"open":_vm.add_to_insert_slot_variable_options,"input":function($event){return _vm.insert_slot_variable_to_assistance_response($event)}}})],1)])])])]),_c('div',{staticClass:"modal",attrs:{"id":"manage_handlers_insert_variable_modal","aria-labelledby":"manage_handlers_insert_variable_modal"}},[_c('div',{staticClass:"modal-dialog modal-dialog-centered modal-sm",attrs:{"role":"document"}},[_c('div',{staticClass:"modal-content",staticStyle:{"box-shadow":"none !important"}},[_c('div',{staticClass:"modal-body"},[_c('div',[_c('multiselect',{attrs:{"id":"manage_handlers_insert_variable_id","close-on-select":false,"options":_vm.insert_slot_variable_options,"placeholder":_vm.tlt('select_variable'),"show-labels":false,"open-direction":"top","max-height":120},on:{"open":_vm.add_to_insert_slot_variable_options,"input":function($event){return _vm.manage_handlers_insert_slot_variable_to_assistance_response(
                  $event
                )}}})],1)])])])])])}
var staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('span',{staticClass:"my-auto ml-2",staticStyle:{"margin-left":"0px","color":"#0645ad"}},[_c('i',{staticClass:"fa fa-info-circle",staticStyle:{"font-size":"16px"},attrs:{"aria-hidden":"true","title":"To avoid overide always use unique webhook return variable"}})])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('span',{staticClass:"my-auto",staticStyle:{"margin-left":"12px","color":"#0645ad"}},[_c('i',{staticClass:"fa fa-info-circle",staticStyle:{"font-size":"16px"},attrs:{"aria-hidden":"true","title":"the value here should be the value of 'Save it as' of any slots used to capture email/sms. Example $email_id."}})])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"d-flex",staticStyle:{"margin-left":"1rem !important"}},[_c('select',{staticClass:"form-control input-tag",staticStyle:{"width":"120px","height":"30px","padding":"0px"},attrs:{"id":"res_n_int_source","disabled":""}},[_c('option',{attrs:{"value":"skip_all_slots","disabled":"","selected":""}},[_vm._v(" Skip all slots ")])])])}]

export { render, staticRenderFns }"}]}