{"remainingRequest":"/home/vimalesh/CENSE/chatbot-portal/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/vimalesh/CENSE/chatbot-portal/src/portal/Chatbot/Dashboard/ConversationalFlow/Entities.vue?vue&type=template&id=0b7b5b62&scoped=true&","dependencies":[{"path":"/home/vimalesh/CENSE/chatbot-portal/src/portal/Chatbot/Dashboard/ConversationalFlow/Entities.vue","mtime":1655466542520},{"path":"/home/vimalesh/CENSE/chatbot-portal/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vimalesh/CENSE/chatbot-portal/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/vimalesh/CENSE/chatbot-portal/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vimalesh/CENSE/chatbot-portal/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CjxkaXY+CiAgPGRpdiBjbGFzcz0ic3Bpbm5lciIgaWQ9InNwaW5uZXIiIHYtc2hvdz0ic3Bpbm5lck9uIj48L2Rpdj4KICA8ZGl2IGNsYXNzPSJjb250YWluZXItZmx1aWQgcC0wIiBpZD0iZW50aXRpZXNfcGFnZSI+CiAgICA8ZGl2IGNsYXNzPSJjYXJkIGRhc2gtY2FyZCI+CiAgICAgIDxkaXYKICAgICAgICBjbGFzcz0iY2FyZC1oZWFkZXIgZC1ibG9jayBkLXNtLWZsZXggZmxleC13cmFwIGp1c3RpZnktY29udGVudC1iZXR3ZWVuIgogICAgICA+CiAgICAgICAgPGg0IGNsYXNzPSJtYi1zbS0wIj5FbnRpdGllczwvaDQ+CiAgICAgICAgPGRpdiBjbGFzcz0iY2FyZC1hY3QgZC1mbGV4IGZsZXgtd3JhcCI+CiAgICAgICAgICA8aW5wdXQKICAgICAgICAgICAgY2xhc3M9ImZvcm0tY29udHJvbCBzZWFyY2gtYmFyIgogICAgICAgICAgICBpZD0ic2VhcmNoX2Jhcl9pZCIKICAgICAgICAgICAgcGxhY2Vob2xkZXI9IlNlYXJjaCBoZXJlIgogICAgICAgICAgICB2LW1vZGVsLnRyaW09InNlYXJjaF9uYW1lIgogICAgICAgICAgICB2LW9uOmtleXVwPSJjYWxsc2VhcmNoIgogICAgICAgICAgLz4KICAgICAgICAgIDxhCiAgICAgICAgICAgIHR5cGU9ImJ1dHRvbiIKICAgICAgICAgICAgdi1pZj0iaXNWaXNpYmxlU2VhcmNoQ2xlYXIiCiAgICAgICAgICAgIGNsYXNzPSJidG4gYmctdHJhbnNwYXJlbnQgbXQtYXV0byBtYi1hdXRvIHB5LTAiCiAgICAgICAgICAgIEBjbGljaz0iY2xlYXJfc2VhcmNoX25hbWUiCiAgICAgICAgICAgIHN0eWxlPSJtYXJnaW4tbGVmdDogLTQwcHg7IHotaW5kZXg6IDEwIgogICAgICAgICAgPgogICAgICAgICAgICA8aW1nIHNyYz0iL2ltZy9jbG9zZS1pY24ucG5nIiBhbHQgLz4KICAgICAgICAgIDwvYT4KICAgICAgICAgIDxhCiAgICAgICAgICAgIGhyZWY9ImphdmFzY3JpcHQ6dm9pZCgwKSIKICAgICAgICAgICAgY2xhc3M9ImRhcmtibHVlLWJ0biIKICAgICAgICAgICAgQGNsaWNrPSJpc0VkaXRFbnRpdHkgPyB2ZXJpZnlfY2hhbmdlcygpIDogc2VhcmNoX2VudGl0eSgpIgogICAgICAgICAgICBpZD0ic2VhcmNoX2J0bl9pZCIKICAgICAgICAgID4KICAgICAgICAgICAgPHN2ZwogICAgICAgICAgICAgIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIKICAgICAgICAgICAgICB4bWxuczp4bGluaz0iaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayIKICAgICAgICAgICAgICB3aWR0aD0iMTQiCiAgICAgICAgICAgICAgaGVpZ2h0PSIxNCIKICAgICAgICAgICAgPgogICAgICAgICAgICAgIDxwYXRoCiAgICAgICAgICAgICAgICBkPSJNMTMuODA5MDExMzI3MTAwMDcxLDEyLjk2NTUwNTQzNTYwMTQ3MiBMOS4zMDkxMDAxMjExNzgyMyw4LjQ5MzMwNjY0ODU0MTk5IEMxMC4wMDczOTIwNzk1ODY1ODQsNy41OTYxMTE1ODk2MDU1MjEgMTAuMzg1MTI4MTc2MTk0NTgsNi40OTkxNTcxNzAxMzgxMDYgMTAuMzg1MTI4MTc2MTk0NTgsNS4zNDUzNzQ2NTY3MjY1MzIgYzAsLTEuMzgxMDk0ODg5MTg4MTgwMiAtMC41NDIzNDU4NjM0Nzg0NTE0LC0yLjY3NjA4NjYwNTczMzcwNSAtMS41MjMwNzM1MjcxNDg3NDksLTMuNjUyNDk2NTgzNTAxNDA4MyBjLTAuOTgwNzI3NjYzNjcwMjk3NiwtMC45NzY0MDk5Nzc3Njc3MDMzIC0yLjI4NzIwOTM5MjMwNTI4OSwtMS41MTM2OTM3NzUwNTc4Njg1IC0zLjY3NTEyOTYzNzE4MTQ1MjYsLTEuNTEzNjkzNzc1MDU3ODY4NSBzLTIuNjk0NDAxOTczNTExMTU0NCwwLjUzOTAwNTg2MDc0MzAxNzggLTMuNjc1MTI5NjM3MTgxNDUyNiwxLjUxMzY5Mzc3NTA1Nzg2ODUgQzAuNTI5MzM0OTc2NjI0NTE3OSwyLjY2NzU2NTk4NzUzOTk3NSAtMC4wMTEyNzgxNTI0NjU4MjAzMTYsMy45NjQyNzk3Njc1MzgzNTc2IC0wLjAxMTI3ODE1MjQ2NTgyMDMxNiw1LjM0NTM3NDY1NjcyNjUzMiBjMCwxLjM3OTM3MjgyNTczNTMyNzMgMC41NDIzNDU4NjM0Nzg0NTE0LDIuNjc3ODA4NjY5MTg2NTU3NSAxLjUyMzA3MzUyNzE0ODc0OSwzLjY1MjQ5NjU4MzUwMTQwODMgQzIuNDkyNTIzMDM4MzUzMjIyLDkuOTc0MjgxMjE3OTk1NjQ4IDMuNzk3MjcyMDMyNjAwMTA0NCwxMC41MTE1NjUwMTUyODU4MSA1LjE4NjkyNTAxMTg2NDM4LDEwLjUxMTU2NTAxNTI4NTgxIGMxLjE2MDkzMjA0MDAzMzc0NSwwIDIuMjYyOTUxMTEwODcxNzQ3NSwtMC4zNzU0MDk4MzI3MjE5NzQzNyAzLjE2NTcwNTcyNzA3NzA5MiwtMS4wNjc2NzkzNDA3Njg5MTcxIGw0LjQ5OTkxMTIwNTkyMTg0NCw0LjQ3MDQ3NjcyMzYwNjYyOCBhMC4xNDIwODQyMTk4MjUwMjU3LDAuMTQxMjA5MjAzMTMzOTUzNjMgMCAwIDAgMC4yMDA5OTcxODkwMjA3NjgwNSwwIGwwLjc1NTQ3MjE5MzIxNTk5MDQsLTAuNzQ5MDk3NjAxOTkxMDk1NSBhMC4xNDIwODQyMTk4MjUwMjU3LDAuMTQxMjA5MjAzMTMzOTUzNjMgMCAwIDAgMCwtMC4xOTk3NTkzNjA1MzA5NTkwNSB6TTcuOTMxNTc2MjgyNjMwNzI4LDguMDczMTIzMTY2MDQ1ODM2IEM3LjE5Njg5NjkwMjA3MjA1OCw4LjgwMTU1NjAwNjYwMjY5IDYuMjIzMTAwMTc1OTU0MjA1NSw5LjIwMjc5Njc5MTExNzQ2IDUuMTg2OTI1MDExODY0MzgsOS4yMDI3OTY3OTExMTc0NiBzLTIuMDA5OTcxODkwMjA3Njc3NSwtMC40MDEyNDA3ODQ1MTQ3NzA2IC0yLjc0NDY1MTI3MDc2NjM0NywtMS4xMjk2NzM2MjUwNzE2Mjg2IEMxLjcwOTMyNzA5NDkyNzQ3OCw3LjM0Mjk2ODI2MjAzNjEyMSAxLjMwNTU5OTk4MjQ5NzgzNzUsNi4zNzUxNjg2MDE1MzI2OCAxLjMwNTU5OTk4MjQ5NzgzNzUsNS4zNDUzNzQ2NTY3MjY1MzIgczAuNDAzNzI3MTEyNDI5NjQ1OCwtMS45OTkzMTU2Njg3NjI0NCAxLjEzNjY3Mzc1ODYwMDIwMzYsLTIuNzI3NzQ4NTA5MzE5Mjk4IEMzLjE3Njk1MzEyMTY1NjcwMjYsMS44ODkxOTMzMDY4NTAzODE3IDQuMTUwNzQ5ODQ3Nzc0NTYyLDEuNDg3OTUyNTIyMzM1NjA2NyA1LjE4NjkyNTAxMTg2NDM4LDEuNDg3OTUyNTIyMzM1NjA2NyBzMi4wMTE3MDQ2MjQ1OTU3ODg0LDAuMzk5NTE4NzIxMDYxOTE3NSAyLjc0NDY1MTI3MDc2NjM0NywxLjEyOTY3MzYyNTA3MTYyODYgUzkuMDY4MjUwMDQxMjMwOTMsNC4zMTU1ODA3MTE5MjAzODUgOS4wNjgyNTAwNDEyMzA5Myw1LjM0NTM3NDY1NjcyNjUzMiBzLTAuNDAzNzI3MTEyNDI5NjQ1OCwxLjk5OTMxNTY2ODc2MjQ0IC0xLjEzNjY3Mzc1ODYwMDIwMzYsMi43Mjc3NDg1MDkzMTkyOTggeiIKICAgICAgICAgICAgICAgIGZpbGw9IiNmZmYiCiAgICAgICAgICAgICAgLz4KICAgICAgICAgICAgPC9zdmc+CiAgICAgICAgICA8L2E+IAogICAgICAgICAgPGEKICAgICAgICAgICAgaHJlZj0iIyIKICAgICAgICAgICAgY2xhc3M9ImRhcmtibHVlLWJ0biIKICAgICAgICAgICAgZGF0YS10YXJnZXQ9IiNlbnRpdHltb2RlbCIKICAgICAgICAgICAgaWQ9ImFkZF9lbnRpdHlfYnRuIgogICAgICAgICAgICB0aXRsZT0iQWRkIG5ldyBFbnRpdHkiCiAgICAgICAgICA+CiAgICAgICAgICAgIDxzdmcKICAgICAgICAgICAgICB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciCiAgICAgICAgICAgICAgd2lkdGg9IjE0IgogICAgICAgICAgICAgIGhlaWdodD0iMTMuOTk3IgogICAgICAgICAgICAgIHZpZXdCb3g9IjAgMCAxNCAxMy45OTciCiAgICAgICAgICAgID4KICAgICAgICAgICAgICA8cGF0aAogICAgICAgICAgICAgICAgaWQ9IlVuaW9uXzEzIgogICAgICAgICAgICAgICAgZGF0YS1uYW1lPSJVbmlvbiAxMyIKICAgICAgICAgICAgICAgIGQ9Ik0tMTI2ODQsMjA1OHYtNWgtNWExLDEsMCwwLDEtMS0xLDEsMSwwLDAsMSwxLTFoNXYtNWExLDEsMCwwLDEsMS0xLDEsMSwwLDAsMSwxLDF2NWg1YTEsMSwwLDAsMSwxLDEsMSwxLDAsMCwxLTEsMWgtNXY1YTEsMSwwLDAsMS0xLDFBMSwxLDAsMCwxLTEyNjg0LDIwNThaIgogICAgICAgICAgICAgICAgdHJhbnNmb3JtPSJ0cmFuc2xhdGUoMTI2OTAuMDAxIC0yMDQ1LjAwMikiCiAgICAgICAgICAgICAgICBmaWxsPSIjZmZmIgogICAgICAgICAgICAgIC8+CiAgICAgICAgICAgIDwvc3ZnPgogICAgICAgICAgICBBZGQgRW50aXR5CiAgICAgICAgICA8L2E+CiAgICAgICAgICA8IS0tIDxhCiAgICAgICAgICAgIGhyZWY9IiMiCiAgICAgICAgICAgIGNsYXNzPSJkYXJrYmx1ZS1idG4iCiAgICAgICAgICAgIHRpdGxlPSJVcGxvYWQgRmlsZSIKICAgICAgICAgICAgZGF0YS10b2dnbGU9Im1vZGFsIgogICAgICAgICAgICBkYXRhLXRhcmdldD0iI2ZpbGVfdXBsb2FkIgogICAgICAgICAgPgogICAgICAgICAgICA8c3ZnCiAgICAgICAgICAgICAgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIgogICAgICAgICAgICAgIHdpZHRoPSIxNCIKICAgICAgICAgICAgICBoZWlnaHQ9IjE0IgogICAgICAgICAgICAgIHZpZXdCb3g9IjAgMCAxNCAxMy45OTciCiAgICAgICAgICAgID4KICAgICAgICAgICAgICA8cGF0aAogICAgICAgICAgICAgICAgZD0iTTguNjkzOTk0NjU5NTQyOCwtMC4wMTQwNzQ2NDc2ODU1ODk1MjkgSDEuODMwNzUzNDE5Mzc4NjU3NyBhMS43MTU4MTAzMTAwNDEwMzU4LDEuMzg3MzMyODczODM5NTQgMCAwIDAgLTEuNzE1ODEwMzEwMDQxMDM1OCwxLjM4NzMzMjg3MzgzOTU0IHYxMS4wOTg2NjI5OTA3MTYzMiBhMS43MTU4MTAzMTAwNDEwMzU4LDEuMzg3MzMyODczODM5NTQgMCAwIDAgMS43MTU4MTAzMTAwNDEwMzU4LDEuMzg3MzMyODczODM5NTQgaDEwLjI5NDg2MTg2MDI0NjIxNSBhMS43MTU4MTAzMTAwNDEwMzU4LDEuMzg3MzMyODczODM5NTQgMCAwIDAgMS43MTU4MTAzMTAwNDEwMzU4LC0xLjM4NzMzMjg3MzgzOTU0IFY0LjE0NzkyMzk3MzgzMzAzMSBsLTUuMTQ3NDMwOTMwMTIzMTA3LC00LjE2MTk5ODYyMTUxODYyIHptLTAuNDI4OTUyNTc3NTEwMjU5NTYsOS43MTEzMzAxMTY4NzY3OCB2Mi4wODA5OTkzMTA3NTkzMSBoLTIuNTczNzE1NDY1MDYxNTUzNyB2LTIuMDgwOTk5MzEwNzU5MzEgSDMuNTQ2NTYzNzI5NDE5NjkzNCBsMy40MzE2MjA2MjAwODIwNzE2LC0yLjc3NDY2NTc0NzY3OTA4IGwzLjQzMTYyMDYyMDA4MjA3MTYsMi43NzQ2NjU3NDc2NzkwOCBoLTIuMTQ0NzYyODg3NTUxMjk0NyB6TTcuODM2MDg5NTA0NTIyMjgzLDQuODQxNTkwNDEwNzUyODAxIFYxLjAyNjQyNTAwNzY5NDA2NTcgTDEyLjU1NDU2Nzg1NzEzNTEzMSw0Ljg0MTU5MDQxMDc1MjgwMSBINy44MzYwODk1MDQ1MjIyODMgeiIKICAgICAgICAgICAgICAgIGlkPSJzdmdfMSIKICAgICAgICAgICAgICAgIGNsYXNzCiAgICAgICAgICAgICAgICBmaWxsPSIjZmZmIgogICAgICAgICAgICAgIC8+CiAgICAgICAgICAgIDwvc3ZnPgogICAgICAgICAgPC9hPgogICAgICAgICAgPGEKICAgICAgICAgICAgaHJlZj0iIyIKICAgICAgICAgICAgY2xhc3M9ImRhcmtibHVlLWJ0biIKICAgICAgICAgICAgQGNsaWNrPSJkb3dubG9hZF9jc3YiCiAgICAgICAgICAgIHRpdGxlPSJEb3dubG9hZCBDU1YgRmlsZSIKICAgICAgICAgID4KICAgICAgICAgICAgPHN2ZwogICAgICAgICAgICAgIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIKICAgICAgICAgICAgICB4bWxuczp4bGluaz0iaHR0cDovL3d3dy53My5vcmcvMTk5OS94bGluayIKICAgICAgICAgICAgICB3aWR0aD0iMTQiCiAgICAgICAgICAgICAgaGVpZ2h0PSIxNCIKICAgICAgICAgICAgPgogICAgICAgICAgICAgIDxwYXRoCiAgICAgICAgICAgICAgICBkPSJNOC4xMjQwNDY1Njk3OTY0NDgsMy43MDQ4ODg4NDIzODExNTYzIFYtMC4wMDA0NzI1MDg1NjkyNTkwMzE5IEgwLjg2ODQ0ODAyNzUzMjM3NTggQzAuMzg1OTUwNzI0NDcxODE2LC0wLjAwMDQ3MjUwODU2OTI1OTAzMTkgLTAuMDAyMjIzNzk3NTM5MzA5NDY2NSwwLjI5MTA1MjI0NDc3NzU3NjEzIC0wLjAwMjIyMzc5NzUzOTMwOTQ2NjUsMC42NTM0MTQ3ODg2NTcyODI5IHYxMi42NDE4MjEwNzk3MTMxNzMgYzAsMC4zNjIzNjI1NDM4Nzk3MTAzIDAuMzg4MTc0NTIyMDExMTI4OSwwLjY1Mzg4NzI5NzIyNjU0NDIgMC44NzA2NzE4MjUwNzE2ODg2LDAuNjUzODg3Mjk3MjI2NTQ0MiBoMTIuMTg5NDA1NTUxMDAzNjQgYzAuNDgyNDk3MzAzMDYwNTYxOSwwIDAuODcwNjcxODI1MDcxNjg4NiwtMC4yOTE1MjQ3NTMzNDY4MzQ2IDAuODcwNjcxODI1MDcxNjg4NiwtMC42NTM4ODcyOTcyMjY1NDQyIFY0LjM1ODc3NjEzOTYwNzY5NyBIOC45OTQ3MTgzOTQ4NjgxMzcgYy0wLjQ3ODg2OTUwMzc4OTQyODgzLDAgLTAuODcwNjcxODI1MDcxNjg4NiwtMC4yOTQyNDkyODM3NTE5NDQ5IC0wLjg3MDY3MTgyNTA3MTY4ODYsLTAuNjUzODg3Mjk3MjI2NTQ0MiB6bTIuNzczNDUyNTQyNzgwNDQyLDUuNzU4NTY3NDY0MjQxNzYxIGwtMy40OTc5MjQwNTcyMjU1MDgsMi42MDczNzU1OTc2OTA4NDE1IGMtMC4yNDEyNDg2NTE1MzAyODA2MywwLjE4MDA5MTQ1OTc3NzgxMDcxIC0wLjYzMDg3NDI5MzI0OTg2MTQsMC4xODAwOTE0NTk3Nzc4MTA3MSAtMC44NzIxMjI5NDQ3ODAxNDIsMCBsLTMuNDk3OTI0MDU3MjI1NTA4LC0yLjYwNzM3NTU5NzY5MDg0MTUgQzIuNjYxMzA2NDI3MzI1ODI5LDkuMTg5MDk2MDk0ODI4Mjc4IDIuOTE5NjA1NzM1NDMwNDMzNyw4LjcxODAyNDc4Nzc4NDY1NSAzLjQzNzY1NTQ3MTM0ODA4NCw4LjcxODAyNDc4Nzc4NDY1NSBINS44MDIyNTUwMzYyNzE5NDcgdi0yLjE3OTYyNDMyNDA4ODQ3ODMgYzAsLTAuMjQwODQ4NDg3ODExNzc3MzQgMC4yNTk3NTA0Mjc4MTMwNTQzLC0wLjQzNTkyNDg2NDgxNzY5NjYgMC41ODA0NDc4ODMzODExMjY5LC0wLjQzNTkyNDg2NDgxNzY5NjYgaDEuMTYwODk1NzY2NzYyMjUyMSBjMC4zMjA2OTc0NTU1NjgwNzI1LDAgMC41ODA0NDc4ODMzODExMjY5LDAuMTk1MDc2Mzc3MDA1OTE5NiAwLjU4MDQ0Nzg4MzM4MTEyNjksMC40MzU5MjQ4NjQ4MTc2OTY2IHYyLjE3OTYyNDMyNDA4ODQ3ODMgaDIuMzY0NTk5NTY0OTIzODYyNSBjMC41MTgwNDk3MzU5MTc2NTUxLDAgMC43NzYzNDkwNDQwMjIyNTU0LDAuNDcxMDcxMzA3MDQzNjIyOTMgMC40MDg4NTI5Nzc4NTY1ODE2LDAuNzQ1NDMxNTE4ODM4MjYxMSB6TTEzLjY3NDU3OTQ1NDYyODQ2MiwyLjg2MDI4NDQxNjc5Njg3IEwxMC4xMjI5NjM5NjgxOTAxOTksMC4xOTAyNDQ2MTk3ODg0ODUyIGMtMC4xNjMyNTA5NjcyMDA5NDE5NSwtMC4xMjI2MDM4NjgyMjk5NzcxOCAtMC4zODQ1NDY3MjI3Mzk5OTY0NiwtMC4xOTA3MTcxMjgzNTc3NDIzIC0wLjYxNjcyNTg3NjA5MjQ0NjMsLTAuMTkwNzE3MTI4MzU3NzQyMyBIOS4yODQ5NDIzMzY1NTg3MDIgdjMuNDg3Mzk4OTE4NTQxNTY0NCBoNC42NDM1ODMwNjcwNDkwMDcgdi0wLjE2NjE5NjM1NDcxMTc0Njg1IGMwLC0wLjE3MTY0NTQxNTUyMTk2ODEgLTAuMDkwNjk0OTgxNzc4MzAwOTYsLTAuMzM3ODQxNzcwMjMzNzE0ODcgLTAuMjUzOTQ1OTQ4OTc5MjQzMSwtMC40NjA0NDU2Mzg0NjM2OTEzNSB6IgogICAgICAgICAgICAgICAgZmlsbD0iI2ZmZiIKICAgICAgICAgICAgICAvPgogICAgICAgICAgICA8L3N2Zz4KICAgICAgICAgIDwvYT4KICAgICAgICAgIDxidXR0b24gaWQ9InRyYWluX21vZGVsX2J0biIgY2xhc3M9ImRhcmtibHVlLWJ0biIgQGNsaWNrPSJ0cmFpbl9tb2RlbCI+CiAgICAgICAgICAgIFRyYWluIE1vZGVsCiAgICAgICAgICA8L2J1dHRvbj4gLS0+CiAgICAgICAgICA8YQogICAgICAgICAgICBocmVmPSJqYXZhc2NyaXB0OnZvaWQoMCkiCiAgICAgICAgICAgIGNsYXNzPSJyZWQtYnRuIgogICAgICAgICAgICBAY2xpY2s9ImlzRWRpdEVudGl0eSA/IHZlcmlmeV9jaGFuZ2VzKCkgOiBkZWxldGVfc2VsZWN0ZWQoKSIKICAgICAgICAgICAgaWQ9ImRlbGV0ZV9lbnRpdHlfaWQiCiAgICAgICAgICA+CiAgICAgICAgICAgIDxzdmcKICAgICAgICAgICAgICB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciCiAgICAgICAgICAgICAgd2lkdGg9IjE0IgogICAgICAgICAgICAgIGhlaWdodD0iMTQiCiAgICAgICAgICAgICAgdmlld0JveD0iMCAwIDE0IDE0IgogICAgICAgICAgICA+CiAgICAgICAgICAgICAgPHBhdGgKICAgICAgICAgICAgICAgIGQ9Ik04LjM3NSwzdi43NzhINFY1LjMzM2guODc1VjE1LjQ0NEExLjY2MSwxLjY2MSwwLDAsMCw2LjYyNSwxN2g4Ljc1YTEuNjYxLDEuNjYxLDAsMCwwLDEuNzUtMS41NTZWNS4zMzNIMThWMy43NzhIMTMuNjI1VjNIOC4zNzVNNi42MjUsNS4zMzNoOC43NVYxNS40NDRINi42MjVWNS4zMzNtMS43NSwxLjU1NnY3aDEuNzV2LTdIOC4zNzVtMy41LDB2N2gxLjc1di03WiIKICAgICAgICAgICAgICAgIHRyYW5zZm9ybT0idHJhbnNsYXRlKC00IC0zKSIKICAgICAgICAgICAgICAgIGZpbGw9IiNmZmYiCiAgICAgICAgICAgICAgLz4KICAgICAgICAgICAgPC9zdmc+CiAgICAgICAgICAgIERlbGV0ZQogICAgICAgICAgPC9hPgogICAgICAgIDwvZGl2PgogICAgICA8L2Rpdj4KICAgICAgPGRpdiBjbGFzcz0iY2FyZC1ib2R5IiBpZD0icGFnZSI+CiAgICAgICAgPGRpdiBjbGFzcz0iY29sLXNtLTEyIGQtZmxleCBweC0wIiB2LXNob3c9IkJvb2xlYW4oZW50aXR5X2xpc3QubGVuZ3RoID4gMCkiPgogICAgICAgICAgPGRpdiBjbGFzcz0iY29sLXNtLTQgcGwtMCIgdi1zaG93PSJCb29sZWFuKGVudGl0eV9saXN0Lmxlbmd0aCA+IDApIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0idGFibGUtYm94Ij4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ0YWJsZS1yZXNwb25zaXZlIj4KICAgICAgICAgICAgICAgIDx0YWJsZSBjbGFzcz0idGFibGUiPgogICAgICAgICAgICAgICAgICA8dGhlYWQ+CiAgICAgICAgICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgICAgICAgPHRoIHNjb3BlPSJjb2wiPgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJmb3JtLWNoZWNrIGNoZWNrYm94IGNoZWNrYm94LXN1Y2Nlc3MiPgogICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBjbGFzcz0iZm9ybS1jaGVjay1sYWJlbCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3M9ImZvcm0tY2hlY2staW5wdXQiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGlkPSJzZWxlY3RhbGwiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU9ImNoZWNrYm94IgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBAY2hhbmdlPSJzZWxlY3RlZF9lbnRpdGllcygnYWxsJykiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImljbiI+PC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgPC90aD4KICAgICAgICAgICAgICAgICAgICAgIDx0aCBzY29wZT0iY29sIiBjbGFzcz0idGV4dC1sZWZ0Ij5FbnRpdHk8L3RoPgogICAgICAgICAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgICAgICAgIDwvdGhlYWQ+CiAgICAgICAgICAgICAgICAgIDx0Ym9keT4KICAgICAgICAgICAgICAgICAgICA8dHIKICAgICAgICAgICAgICAgICAgICAgIHYtZm9yPSIoZW50aXRlcywgaW5kZXgpIGluIGVudGl0eV9saXN0IgogICAgICAgICAgICAgICAgICAgICAgOmtleT0iaW5kZXgiCiAgICAgICAgICAgICAgICAgICAgICA6Y2xhc3M9ImNoZWNrX2N1cnJlbnRfZW50aXR5KGluZGV4KSIKICAgICAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICAgICAgICA8dGggc2NvcGU9ImNvbCI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZvcm0tY2hlY2sgY2hlY2tib3gtc3VjY2VzcyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzcz0iZm9ybS1jaGVjay1sYWJlbCBjaGVja2JveCBjaGVja2JveC1zdWNjZXNzIiA6c3R5bGU9ImVudGl0ZXMudHlwZSA9PT0gJ3N5c3RlbSc/J2N1cnNvcjogbm90LWFsbG93ZWQnOm51bGwiCiAgICAgICAgICAgICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPSJmb3JtLWNoZWNrLWlucHV0IgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0eXBlPSJjaGVja2JveCIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgOmlkPSInZW50aXR5X2NoZWNrYm94XycraW5kZXgiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEBjaGFuZ2U9InNlbGVjdGVkX2VudGl0aWVzKGVudGl0ZXMuZW50aXR5KSIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgOmRpc2FibGVkPSJlbnRpdGVzLnR5cGUgPT09ICdzeXN0ZW0nIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgLz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJpY24iIHYtaWY9ImVudGl0ZXMudHlwZSA9PT0gJ3N5c3RlbSciIHN0eWxlPSJiYWNrZ3JvdW5kOiNiYmI7IGJvcmRlcjpzb2xpZCAxcHggI2U1ZTVlNTsiPjwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJpY24iIHYtZWxzZT48L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgPC9sYWJlbD4KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICA8L3RoPgogICAgICAgICAgICAgICAgICAgICAgPHRkCiAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJjdXJzb3I6IHBvaW50ZXIiCiAgICAgICAgICAgICAgICAgICAgICAgIEBjbGljaz0iaXNFZGl0RW50aXR5ID8gdmVyaWZ5X2NoYW5nZXMoKSA6IHNob3dfZW50aXRpZXMoaW5kZXgpIgogICAgICAgICAgICAgICAgICAgICAgICA6dGl0bGU9ImVudGl0ZXMuZW50aXR5IgogICAgICAgICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgICAgICAgICA8dGVtcGxhdGU+CiAgICAgICAgICAgICAgICAgICAgICAgICAgPHAgc3R5bGU9Im1hcmdpbi1ib3R0b206IDAiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAge3sgZW50aXRlcy5lbnRpdHkgfX0KICAgICAgICAgICAgICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvdGVtcGxhdGU+CiAgICAgICAgICAgICAgICAgICAgICA8L3RkPgogICAgICAgICAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgICAgICAgIDwvdGJvZHk+CiAgICAgICAgICAgICAgICA8L3RhYmxlPgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPGRpdiBjbGFzcz0iY29sLXNtLTggcHItMCIgdi1zaG93PSJCb29sZWFuKGVudGl0eV9saXN0Lmxlbmd0aCA+IDApIj4KICAgICAgICAgICAgPGRpdiBzdHlsZT0iYm9yZGVyOiAxcHggc29saWQgI2RiZTJlOCI+CiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLXNtLTEyIj4KICAgICAgICAgICAgICAgIDxkaXYgc3R5bGU9ImNvbG9yOiAjNDE0MTQxIiBjbGFzcz0iZC1mbGV4Ij4KICAgICAgICAgICAgICAgICAgPGg1PjxwIGNsYXNzPSJtdC0yIG1iLTAiPkVudGl0eSBEZXRhaWxzPC9wPjwvaDU+CiAgICAgICAgICAgICAgICAgIDxzcGFuCiAgICAgICAgICAgICAgICAgICAgQGNsaWNrPSJjdXJyZW50X3NlbGVjdGVkX3R5cGUgPT09ICdzeXN0ZW0nPyBudWxsOmVkaXRfZW50aXR5X2RldGFpbHMoKSIKICAgICAgICAgICAgICAgICAgICB2LWh0bWw9InBlbmNpbF9zdmciCiAgICAgICAgICAgICAgICAgICAgY2xhc3M9Im1sLWF1dG8gbXItMCBtdC0yIgogICAgICAgICAgICAgICAgICAgIDp0aXRsZT0iKGN1cnJlbnRfc2VsZWN0ZWRfdHlwZSA9PT0gJ3N5c3RlbScpPydTeXN0ZW0gZW50aXR5IGNhbiBub3QgYmUgZWRpdGVkJzpudWxsIgogICAgICAgICAgICAgICAgICAgIDpzdHlsZT0iIShjdXJyZW50X3NlbGVjdGVkX3R5cGUgPT09ICdzeXN0ZW0nKT8nY3Vyc29yOiBwb2ludGVyJzonY3Vyc29yOiBub3QtYWxsb3dlZCciCiAgICAgICAgICAgICAgICAgID48L3NwYW4+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICA8aHIgLz4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtc20tMTIiIHN0eWxlPSJtYXJnaW4tYm90dG9tOiAxcmVtIj4KICAgICAgICAgICAgICAgIDxoNT4KICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9Im10LTIgbWItMCIgc3R5bGU9ImNvbG9yOiAjNDE0MTQxIj4KICAgICAgICAgICAgICAgICAgICBFbnRpdHkgTmFtZSAKICAgICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICAgICAgPC9oNT4KICAgICAgICAgICAgICAgIDxsYWJlbCBjbGFzcz0icGwtMSBmb3JtLXRleHQgdGV4dC1tdXRlZCIgdi1pZj0iaXNFZGl0RW50aXR5Ij4oT25seSBBbHBoYWJldHMsIE51bWJlcnMgYW5kIF8gYWxsb3dlZC4gTm8gc3BlY2lhbCBjaGFyYWN0ZXJzLiBtYXhpbXVtIDI1IGNoYXJhY3RlcnMgYWxsb3dlZC4pPC9sYWJlbD4KICAgICAgICAgICAgICAgIDxkaXYgdi1pZj0iIWlzRWRpdEVudGl0eSIgY2xhc3M9Im1sLTMiPgogICAgICAgICAgICAgICAgICA8cD5Ae3sgY3VycmVudF9zZWxlY3RlZF9lbnRpdHkgfX08L3A+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDx0ZW1wbGF0ZSB2LWVsc2UtaWY9ImlzRWRpdEVudGl0eSI+CiAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImlucHV0LWJveCI+CiAgICAgICAgICAgICAgICAgICAgPGlucHV0CiAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0icGFkZGluZy1sZWZ0OjE5cHggIWltcG9ydGFudDsiCiAgICAgICAgICAgICAgICAgICAgICBhbGlnbj0icmlnaHQiCiAgICAgICAgICAgICAgICAgICAgICBjbGFzcz0iZm9ybS1jb250cm9sIGVkaXQiCiAgICAgICAgICAgICAgICAgICAgICBwbGFjZWhvbGRlcj0iVHlwZSBlbnRpdHkgbmFtZSBoZXJlLCBlLmcuIGFjY291bnRfdHlwZSIKICAgICAgICAgICAgICAgICAgICAgIGlkPSJlbnRlcl9lbnRpdHlfZWRpdF9pZCIKICAgICAgICAgICAgICAgICAgICAgIG1heGxlbmd0aD0iMjUiCiAgICAgICAgICAgICAgICAgICAgICB2LW9uOmtleXVwPSJlbnRlcl9lbnRpdHlfZWRpdCIKICAgICAgICAgICAgICAgICAgICAgIHYtbW9kZWwudHJpbT0iY3VycmVudF9zZWxlY3RlZF9lbnRpdHkiCiAgICAgICAgICAgICAgICAgICAgICBAa2V5ZG93bj0iZW50aXR5X25hbWVfY2hlY2tfc3BlY2lhbF9jaGFyYWN0ZXJzKCRldmVudCkiCiAgICAgICAgICAgICAgICAgICAgLz4KICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0idW5pdCI+QDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgIDxzcGFuCiAgICAgICAgICAgICAgICAgICAgdi1zaG93PSJlbnRpdHlfYWxyZWFkeV9leGlzdHNfZWRpdCIKICAgICAgICAgICAgICAgICAgICBzdHlsZT0iY29sb3I6IHJlZDsiCiAgICAgICAgICAgICAgICAgICAgPkFuIEVudGl0eSB3aXRoIHRoaXMgbmFtZSBhbHJlYWR5IGV4aXN0cy48L3NwYW4+CiAgICAgICAgICAgICAgICA8L3RlbXBsYXRlPgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgIDxociAvPgogICAgICAgICAgICAgIDxkaXYgdi1pZj0iIWlzRWRpdEVudGl0eSI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtc20tMTIiPgogICAgICAgICAgICAgICAgICA8aDUgY2xhc3M9ImhlYWRpbmciPlZhbGlkYXRpb24gVHlwZTwvaDU+CiAgICAgICAgICAgICAgICAgIDxsYWJlbCBjbGFzcz0ibWwtMyI+e3tjdXJyZW50X3NlbGVjdGVkX3ZhbGlkYXRpb25fdHlwZX19PC9sYWJlbD4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLXNtLTEyIHAtMCIgdi1pZj0idGhpcy5jdXJyZW50X3NlbGVjdGVkX3R5cGUgPT09ICdzeXN0ZW0nIj4KICAgICAgICAgICAgICAgICAgPGg1PgogICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJtdC0yIG1iLTAiIHN0eWxlPSJjb2xvcjogIzQxNDE0MSI+RGVzY3JpcHRpb248L3A+CiAgICAgICAgICAgICAgICAgIDwvaDU+CiAgICAgICAgICAgICAgICAgIDx0ZW1wbGF0ZT4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJTY3JvbGxTdHlsZSBtbC0zIiBzdHlsZT0icGFkZGluZy1yaWdodDo4cHggIWltcG9ydGFudCI+CiAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0ibXQtMiBtYi0wIiBzdHlsZT0iY29sb3I6ICM0MTQxNDE7Ij57e2N1cnJlbnRfc2VsZWN0ZWRfZGVzY3JpcHRpb259fTwvcD4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgPC90ZW1wbGF0ZT4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLXNtLTEyIHByLTAiIHYtaWY9InRoaXMuY3VycmVudF9zZWxlY3RlZF90eXBlID09PSAncGF0dGVybiciPgogICAgICAgICAgICAgICAgICA8aDU+CiAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9Im10LTIgbWItMCIgc3R5bGU9ImNvbG9yOiAjNDE0MTQxIj5QYXR0ZXJuPC9wPgogICAgICAgICAgICAgICAgICA8L2g1PgogICAgICAgICAgICAgICAgICA8dGVtcGxhdGU+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iU2Nyb2xsU3R5bGUgbWwtMyIgc3R5bGU9InBhZGRpbmctcmlnaHQ6OHB4ICFpbXBvcnRhbnQiPgogICAgICAgICAgICAgICAgICAgICAgPGRpdgogICAgICAgICAgICAgICAgICAgICAgICB2LWZvcj0iKAogICAgICAgICAgICAgICAgICAgICAgICAgIG5ld19wYXR0ZXJuLCBpbmRleAogICAgICAgICAgICAgICAgICAgICAgICApIGluIGN1cnJlbnRfc2VsZWN0ZWRfcGF0dGVybiIKICAgICAgICAgICAgICAgICAgICAgICAgOmtleT0iaW5kZXgiCiAgICAgICAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICAgICAgICAgIDxsaQogICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSIKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBhZGRpbmctbGVmdDogMHJlbTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxpc3Qtc3R5bGUtcG9zaXRpb246IGluc2lkZTsKICAgICAgICAgICAgICAgICAgICAgICAgICAiCiAgICAgICAgICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgICAgICAgICAgICB7eyBjdXJyZW50X3NlbGVjdGVkX3BhdHRlcm5baW5kZXhdWydwYXR0ZXJuJ10gfX0KICAgICAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICA8L3RlbXBsYXRlPgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtc20tMTIgcHItMCIgdi1lbHNlLWlmPSJ0aGlzLmN1cnJlbnRfc2VsZWN0ZWRfdHlwZSA9PT0gJ3N5bm9ueW1zJyI+CiAgICAgICAgICAgICAgICAgIDxoNT4KICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0ibXQtMiBtYi0wIiBzdHlsZT0iY29sb3I6ICM0MTQxNDEiPlZhbHVlPC9wPgogICAgICAgICAgICAgICAgICA8L2g1PgogICAgICAgICAgICAgICAgICA8dGVtcGxhdGU+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iU2Nyb2xsU3R5bGUgbWwtMyIgc3R5bGU9InBhZGRpbmctcmlnaHQ6OHB4ICFpbXBvcnRhbnQiPgogICAgICAgICAgICAgICAgICAgICAgPGRpdgogICAgICAgICAgICAgICAgICAgICAgICB2LWZvcj0iKAogICAgICAgICAgICAgICAgICAgICAgICAgIG5ld192YWx1ZSwgaW5kZXgKICAgICAgICAgICAgICAgICAgICAgICAgKSBpbiBjdXJyZW50X3NlbGVjdGVkX3ZhbHVlcyIKICAgICAgICAgICAgICAgICAgICAgICAgOmtleT0iaW5kZXgiCiAgICAgICAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICAgICAgICAgIDxsaQogICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSIKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBhZGRpbmctbGVmdDogMHJlbTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxpc3Qtc3R5bGUtcG9zaXRpb246IGluc2lkZTsKICAgICAgICAgICAgICAgICAgICAgICAgICAiCiAgICAgICAgICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgICAgICAgICAgICB7eyBjdXJyZW50X3NlbGVjdGVkX3ZhbHVlc1tpbmRleF1bJ3ZhbHVlJ10gfX0KICAgICAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICAgICAgPCEtLSA8aDY+IC0tPgogICAgICAgICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJtdC0wIG1iLTAiIHN0eWxlPSJwYWRkaW5nLWxlZnQ6IDEuMzhyZW07Ij5TeW5vbnltczo8L3A+CiAgICAgICAgICAgICAgICAgICAgICAgIDwhLS0gPC9oNj4gLS0+CiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZW1wbGF0ZT4KICAgICAgICAgICAgICAgICAgICAgICAgICA8b2w+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHYtZm9yPSIoCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmV3X3N1bm9ueW1zLCBpbmRleDEKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgKSBpbiBjdXJyZW50X3NlbGVjdGVkX3ZhbHVlc1tpbmRleF1bJ3N5bm9ueW1zJ10iCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDprZXk9ImluZGV4MSIKICAgICAgICAgICAgICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxpCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9IgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcGFkZGluZy1sZWZ0OiAwcmVtOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbGlzdC1zdHlsZS1wb3NpdGlvbjogaW5zaWRlOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt7IG5ld19zdW5vbnltcyB9fQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgPC9vbD4KICAgICAgICAgICAgICAgICAgICAgICAgPC90ZW1wbGF0ZT4KICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICA8L3RlbXBsYXRlPgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgPGRpdiB2LWVsc2UtaWY9ImlzRWRpdEVudGl0eSI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtc20tMTIiPgogICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJmb3JtLWdyb3VwIj4KICAgICAgICAgICAgICAgICAgICA8aDUgY2xhc3M9ImQtZmxleCBoZWFkaW5nIj5WYWxpZGF0aW9uPC9oNT4KICAgICAgICAgICAgICAgICAgICA8bGFiZWwgY2xhc3M9InN3aXRjaCBmbG9hdC1yaWdodCIgc3R5bGU9Im1hcmdpbi10b3A6IC0yN3B4ICFpbXBvcnRhbnQ7Ij4KICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dAogICAgICAgICAgICAgICAgICAgICAgICB0eXBlPSJjaGVja2JveCIKICAgICAgICAgICAgICAgICAgICAgICAgdi1tb2RlbD0iY3VycmVudF9zZWxlY3RlZF92YWxpZGF0aW9uX25lZWRlZCIKICAgICAgICAgICAgICAgICAgICAgICAgaWQ9ImN1cnJlbnRfc2VsZWN0ZWRfdmFsaWRhdGlvbl9uZWVkZWRfaWQiCiAgICAgICAgICAgICAgICAgICAgICAvPgogICAgICAgICAgICAgICAgICAgICAgPHNwYW4KICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3M9InNsaWRlciByb3VuZCIKICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImJvcmRlci1yYWRpdXM6IDUwcHg7IgogICAgICAgICAgICAgICAgICAgICAgPjwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICA8L2xhYmVsPgogICAgICAgICAgICAgICAgICAgIDxsYWJlbCBjbGFzcz0iZm9ybS10ZXh0IHRleHQtbXV0ZWQiPgogICAgICAgICAgICAgICAgICAgICAgdHVybiBvbiB0aGUgdG9nZ2xlIHRvIGFkZCBiYXNpYyB2YWxpZGF0aW9uIHRvIHRoZSBlbnRpdHkKICAgICAgICAgICAgICAgICAgICA8L2xhYmVsPgogICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgPGRpdiB2LWlmPSJjdXJyZW50X3NlbGVjdGVkX3ZhbGlkYXRpb25fbmVlZGVkIiBjbGFzcz0iZm9ybS1ncm91cCI+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icmFkaW8gbXktYXV0byI+CiAgICAgICAgICAgICAgICAgICAgICA8bGFiZWw+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dAogICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU9InJhZGlvIgogICAgICAgICAgICAgICAgICAgICAgICAgIHYtbW9kZWw9ImN1cnJlbnRfc2VsZWN0ZWRfdmFsaWRhdGlvbl90eXBlIgogICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlPSJudW1lcmljIgogICAgICAgICAgICAgICAgICAgICAgICAgIGlkPSJjdXJyZW50X3NlbGVjdGVkX3ZhbGlkYXRpb25fdHlwZV9udW1lcmljX2lkIgogICAgICAgICAgICAgICAgICAgICAgICAvPgogICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iaWNuIj48L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIE51bWVyaWMKICAgICAgICAgICAgICAgICAgICAgIDwvbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgICA8bGFiZWw+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dAogICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU9InJhZGlvIgogICAgICAgICAgICAgICAgICAgICAgICAgIHYtbW9kZWw9ImN1cnJlbnRfc2VsZWN0ZWRfdmFsaWRhdGlvbl90eXBlIgogICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlPSJhbHBoYWJldGljYWwiCiAgICAgICAgICAgICAgICAgICAgICAgICAgaWQ9ImN1cnJlbnRfc2VsZWN0ZWRfdmFsaWRhdGlvbl90eXBlX2FscGhhYmV0aWNhbF9pZCIKICAgICAgICAgICAgICAgICAgICAgICAgLz4KICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImljbiI+PC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICBBbHBoYWJldGljYWwKICAgICAgICAgICAgICAgICAgICAgIDwvbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgICA8bGFiZWw+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dAogICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU9InJhZGlvIgogICAgICAgICAgICAgICAgICAgICAgICAgIHYtbW9kZWw9ImN1cnJlbnRfc2VsZWN0ZWRfdmFsaWRhdGlvbl90eXBlIgogICAgICAgICAgICAgICAgICAgICAgICAgIHZhbHVlPSJhbHBoYW51bWVyaWMiCiAgICAgICAgICAgICAgICAgICAgICAgICAgaWQ9ImN1cnJlbnRfc2VsZWN0ZWRfdmFsaWRhdGlvbl90eXBlX2FscGhhbnVtZXJpY19pZCIKICAgICAgICAgICAgICAgICAgICAgICAgLz4KICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImljbiI+PC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICBBbHBoYW51bWVyaWMKICAgICAgICAgICAgICAgICAgICAgIDwvbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8IS0tIDxociAvPiAtLT4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC1zbS0xMiIgdi1pZj0idGhpcy5jdXJyZW50X3NlbGVjdGVkX3R5cGUgPT09ICdwYXR0ZXJuJyI+CiAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1iLTMiPgogICAgICAgICAgICAgICAgICAgIDxidXR0b24KICAgICAgICAgICAgICAgICAgICAgIGlkPSJhZGRfcGF0dGVybl9idXR0b25faWQiCiAgICAgICAgICAgICAgICAgICAgICBjbGFzcz0iZGFya2JsdWUtYnRuIG1iLTAiCiAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0icGFkZGluZzogNXB4IDEwcHg7IGZsb2F0OiByaWdodCAhaW1wb3J0YW50OyIKICAgICAgICAgICAgICAgICAgICAgIEBjbGljaz0iYWRkX3RvX3BhdHRlcm5fbGlzdF9lZGl0KCdhZGQnKSIKICAgICAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICAgICAgICA8c3ZnCiAgICAgICAgICAgICAgICAgICAgICAgIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIKICAgICAgICAgICAgICAgICAgICAgICAgd2lkdGg9IjE0IgogICAgICAgICAgICAgICAgICAgICAgICBoZWlnaHQ9IjEzLjk5NyIKICAgICAgICAgICAgICAgICAgICAgICAgdmlld0JveD0iMCAwIDE0IDEzLjk5NyIKICAgICAgICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgICAgICAgICAgPHBhdGgKICAgICAgICAgICAgICAgICAgICAgICAgICBpZD0iVW5pb25fMTMiCiAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1uYW1lPSJVbmlvbiAxMyIKICAgICAgICAgICAgICAgICAgICAgICAgICBkPSJNLTEyNjg0LDIwNTh2LTVoLTVhMSwxLDAsMCwxLTEtMSwxLDEsMCwwLDEsMS0xaDV2LTVhMSwxLDAsMCwxLDEtMSwxLDEsMCwwLDEsMSwxdjVoNWExLDEsMCwwLDEsMSwxLDEsMSwwLDAsMS0xLDFoLTV2NWExLDEsMCwwLDEtMSwxQTEsMSwwLDAsMS0xMjY4NCwyMDU4WiIKICAgICAgICAgICAgICAgICAgICAgICAgICB0cmFuc2Zvcm09InRyYW5zbGF0ZSgxMjY5MC4wMDEgLTIwNDUuMDAyKSIKICAgICAgICAgICAgICAgICAgICAgICAgICBmaWxsPSIjZmZmIgogICAgICAgICAgICAgICAgICAgICAgICAvPgogICAgICAgICAgICAgICAgICAgICAgPC9zdmc+CiAgICAgICAgICAgICAgICAgICAgPC9idXR0b24+CiAgICAgICAgICAgICAgICAgICAgPGg1PgogICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9Im10LTIgbWItMCIgc3R5bGU9ImNvbG9yOiAjNDE0MTQxIj5QYXR0ZXJuPC9wPgogICAgICAgICAgICAgICAgICAgIDwvaDU+CiAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICA8dGVtcGxhdGU+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iU2Nyb2xsU3R5bGUiIHN0eWxlPSJkaXNwbGF5OiBibG9jazsgbWFyZ2luLWJvdHRvbTogMXJlbTsiPgogICAgICAgICAgICAgICAgICAgICAgPGRpdgogICAgICAgICAgICAgICAgICAgICAgICB2LWZvcj0iKAogICAgICAgICAgICAgICAgICAgICAgICAgIG5ld19wYXR0ZXJuLCBpbmRleAogICAgICAgICAgICAgICAgICAgICAgICApIGluIGN1cnJlbnRfc2VsZWN0ZWRfcGF0dGVybiIKICAgICAgICAgICAgICAgICAgICAgICAgOmtleT0iaW5kZXgiCiAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPSJmb3JtLWdyb3VwIgogICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0iZGlzcGxheTpmbGV4OyIKICAgICAgICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0CiAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZT0idGV4dCIKICAgICAgICAgICAgICAgICAgICAgICAgICB2LW1vZGVsLnRyaW09ImN1cnJlbnRfc2VsZWN0ZWRfcGF0dGVybltpbmRleF1bJ3BhdHRlcm4nXSIKICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzcz0iZm9ybS1jb250cm9sIGVkaXQiCiAgICAgICAgICAgICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI9IkVudGVyIGEgcGF0dGVybiIKICAgICAgICAgICAgICAgICAgICAgICAgICA6aWQ9ImBlbnRlcl9wYXR0ZXJuX2lkXyR7aW5kZXh9YCIKICAgICAgICAgICAgICAgICAgICAgICAgLz4KICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4KICAgICAgICAgICAgICAgICAgICAgICAgICB2LWlmPSJjdXJyZW50X3NlbGVjdGVkX3BhdHRlcm4ubGVuZ3RoID4gMSIKICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0iY3Vyc29yOiBwb2ludGVyIgogICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPSJteS1hdXRvIG1sLTIgbXItMCIKICAgICAgICAgICAgICAgICAgICAgICAgICBAY2xpY2s9ImFkZF90b19wYXR0ZXJuX2xpc3RfZWRpdCgncmVtb3ZlJywgaW5kZXgpIgogICAgICAgICAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICAgICAgICAgICAgPGkgc3R5bGU9ImZvbnQtc2l6ZTogMTZweCIgY2xhc3M9ImZhIj4mI3hmMDBkOzwvaT4KICAgICAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgIDwvdGVtcGxhdGU+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC1zbS0xMiIgdi1lbHNlLWlmPSJ0aGlzLmN1cnJlbnRfc2VsZWN0ZWRfdHlwZSA9PT0gJ3N5bm9ueW1zJyI+CiAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNhcmQtYWN0Ij4KICAgICAgICAgICAgICAgICAgICA8YnV0dG9uCiAgICAgICAgICAgICAgICAgICAgICBpZD0iYWRkX3ZhbHVlc19idXR0b25faWRfaWQiCiAgICAgICAgICAgICAgICAgICAgICBjbGFzcz0iZGFya2JsdWUtYnRuIG1yLTAiCiAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0icGFkZGluZzogNXB4IDEwcHg7IGZsb2F0OnJpZ2h0OyIKICAgICAgICAgICAgICAgICAgICAgIEBjbGljaz0iYWRkX3RvX3ZhbHVlc19saXN0X2VkaXQoJ2FkZCcpIgogICAgICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgICAgICAgIDxzdmcKICAgICAgICAgICAgICAgICAgICAgICAgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIgogICAgICAgICAgICAgICAgICAgICAgICB3aWR0aD0iMTQiCiAgICAgICAgICAgICAgICAgICAgICAgIGhlaWdodD0iMTMuOTk3IgogICAgICAgICAgICAgICAgICAgICAgICB2aWV3Qm94PSIwIDAgMTQgMTMuOTk3IgogICAgICAgICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgICAgICAgICA8cGF0aAogICAgICAgICAgICAgICAgICAgICAgICAgIGlkPSJVbmlvbl8xMyIKICAgICAgICAgICAgICAgICAgICAgICAgICBkYXRhLW5hbWU9IlVuaW9uIDEzIgogICAgICAgICAgICAgICAgICAgICAgICAgIGQ9Ik0tMTI2ODQsMjA1OHYtNWgtNWExLDEsMCwwLDEtMS0xLDEsMSwwLDAsMSwxLTFoNXYtNWExLDEsMCwwLDEsMS0xLDEsMSwwLDAsMSwxLDF2NWg1YTEsMSwwLDAsMSwxLDEsMSwxLDAsMCwxLTEsMWgtNXY1YTEsMSwwLDAsMS0xLDFBMSwxLDAsMCwxLTEyNjg0LDIwNThaIgogICAgICAgICAgICAgICAgICAgICAgICAgIHRyYW5zZm9ybT0idHJhbnNsYXRlKDEyNjkwLjAwMSAtMjA0NS4wMDIpIgogICAgICAgICAgICAgICAgICAgICAgICAgIGZpbGw9IiNmZmYiCiAgICAgICAgICAgICAgICAgICAgICAgIC8+CiAgICAgICAgICAgICAgICAgICAgICA8L3N2Zz4KICAgICAgICAgICAgICAgICAgICA8L2J1dHRvbj4KICAgICAgICAgICAgICAgICAgICA8aDU+CiAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0ibXQtMiBtYi0wIiBzdHlsZT0iY29sb3I6ICM0MTQxNDEiPlZhbHVlczwvcD4KICAgICAgICAgICAgICAgICAgICA8L2g1PgogICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgPHRlbXBsYXRlPgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im10LTMgU2Nyb2xsU3R5bGUiIHN0eWxlPSJkaXNwbGF5OiBibG9jazsgbWFyZ2luLWJvdHRvbTogMXJlbTsiPgogICAgICAgICAgICAgICAgICAgICAgPGRpdgogICAgICAgICAgICAgICAgICAgICAgICB2LWZvcj0iKAogICAgICAgICAgICAgICAgICAgICAgICAgIG5ld19zeW5vbnltcywgaW5kZXgKICAgICAgICAgICAgICAgICAgICAgICAgKSBpbiBjdXJyZW50X3NlbGVjdGVkX3ZhbHVlcyIKICAgICAgICAgICAgICAgICAgICAgICAgOmtleT0iaW5kZXgiCiAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPSJjdXN0b20tYnV0dG9uLWJveCBwbC0zIHB0LTMgcHItMSBtdC0wIG1iLTMiCiAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSIiCiAgICAgICAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBjbGFzcz0ibXQtMCIgc3R5bGU9IiI+VmFsdWU6PC9sYWJlbD4KICAgICAgICAgICAgICAgICAgICAgICAgPGkKICAgICAgICAgICAgICAgICAgICAgICAgICB2LWlmPSJjdXJyZW50X3NlbGVjdGVkX3ZhbHVlcy5sZW5ndGggPiAxIgogICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSIKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGN1cnNvcjogcG9pbnRlcjsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvbnQtc2l6ZTogMTZweDsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZsb2F0OiByaWdodDsiCiAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3M9ImZhIG1sLWF1dG8gbXItMSIKICAgICAgICAgICAgICAgICAgICAgICAgICBAY2xpY2s9ImFkZF90b192YWx1ZXNfbGlzdF9lZGl0KCdyZW1vdmUnLCBpbmRleCkiCiAgICAgICAgICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgICAgICAgICAgICAmI3hmMWY4OwogICAgICAgICAgICAgICAgICAgICAgICA8L2k+CiAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dAogICAgICAgICAgICAgICAgICAgICAgICAgIHR5cGU9InRleHQiCiAgICAgICAgICAgICAgICAgICAgICAgICAgdi1tb2RlbC50cmltPSJjdXJyZW50X3NlbGVjdGVkX3ZhbHVlc1tpbmRleF1bJ3ZhbHVlJ10iCiAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3M9ImZvcm0tY29udHJvbCBlZGl0IgogICAgICAgICAgICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyPSJFbnRlciBhIHZhbHVlIgogICAgICAgICAgICAgICAgICAgICAgICAgIDppZD0iYGVudGVyX3ZhbHVlX2lkXyR7aW5kZXh9YCIKICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0id2lkdGg6OTkuNSUgIWltcG9ydGFudDsiCiAgICAgICAgICAgICAgICAgICAgICAgIC8+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im10LTIgbWItMiI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIHN0eWxlPSIiPlN5bm9ueW1zOjwvbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgICAgICAgPGEKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPSJkYXJrYmx1ZS1idG4gbXItMSIKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJwYWRkaW5nOiA1cHggMTBweDsgZmxvYXQ6cmlnaHQ7IgogICAgICAgICAgICAgICAgICAgICAgICAgICAgQGNsaWNrPSJhZGRfdG9fc3lub255bXNfbGlzdF9lZGl0KCdhZGQnLCBpbmRleCkiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZD0iYWRkX3N5bm9ueW1zX2J1dHRvbl9pZCIKICAgICAgICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3ZnCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgd2lkdGg9IjE0IgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBoZWlnaHQ9IjEzLjk5NyIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmlld0JveD0iMCAwIDE0IDEzLjk5NyIKICAgICAgICAgICAgICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHBhdGgKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZD0iVW5pb25fMTMiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1uYW1lPSJVbmlvbiAxMyIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkPSJNLTEyNjg0LDIwNTh2LTVoLTVhMSwxLDAsMCwxLTEtMSwxLDEsMCwwLDEsMS0xaDV2LTVhMSwxLDAsMCwxLDEtMSwxLDEsMCwwLDEsMSwxdjVoNWExLDEsMCwwLDEsMSwxLDEsMSwwLDAsMS0xLDFoLTV2NWExLDEsMCwwLDEtMSwxQTEsMSwwLDAsMS0xMjY4NCwyMDU4WiIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0cmFuc2Zvcm09InRyYW5zbGF0ZSgxMjY5MC4wMDEgLTIwNDUuMDAyKSIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBmaWxsPSIjZmZmIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9zdmc+CiAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdgogICAgICAgICAgICAgICAgICAgICAgICAgIHYtZm9yPSIoCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBuZXdfc3Vub255bXMsIGluZGV4MQogICAgICAgICAgICAgICAgICAgICAgICAgICkgaW4gY3VycmVudF9zZWxlY3RlZF92YWx1ZXNbaW5kZXhdWydzeW5vbnltcyddIgogICAgICAgICAgICAgICAgICAgICAgICAgIDprZXk9ImluZGV4MSIKICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzcz0iZm9ybS1ncm91cCIKICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0iZGlzcGxheTpmbGV4OyIKICAgICAgICAgICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgICAgICAgICAgIDxpbnB1dAogICAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZT0idGV4dCIKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHYtbW9kZWwudHJpbT0iY3VycmVudF9zZWxlY3RlZF92YWx1ZXNbaW5kZXhdWydzeW5vbnltcyddW2luZGV4MV0iCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzcz0iZm9ybS1jb250cm9sIGVkaXQiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBwbGFjZWhvbGRlcj0iRW50ZXIgYSBzeW5vbnltcyIKICAgICAgICAgICAgICAgICAgICAgICAgICAgIDppZD0iYGVudGVyX3N5bm9ueW1zX2lkXyR7aW5kZXh9YCIKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJ3aWR0aDo5OS41JSAhaW1wb3J0YW50OyIKICAgICAgICAgICAgICAgICAgICAgICAgICAvPgogICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2LWlmPSJjdXJyZW50X3NlbGVjdGVkX3ZhbHVlc1tpbmRleF1bJ3N5bm9ueW1zJ10ubGVuZ3RoID4gMSIKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJjdXJzb3I6IHBvaW50ZXI7IgogICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3M9Im15LWF1dG8gbWwtMiBtci0xIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgQGNsaWNrPSJhZGRfdG9fc3lub255bXNfbGlzdF9lZGl0KCdyZW1vdmUnLGluZGV4LCBpbmRleDEpIgogICAgICAgICAgICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpIHN0eWxlPSJmb250LXNpemU6IDE2cHgiIGNsYXNzPSJmYSI+JiN4ZjAwZDs8L2k+CiAgICAgICAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICA8L3RlbXBsYXRlPgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJtb2RhbC1mb290ZXIiPgogICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJkYXNoLW1vZGFsIj4KICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iYnRuLXdyYXAgdGV4dC1yaWdodCBtdC0wIHB5LTAgYm9yZGVyLXRvcC0wIj4KICAgICAgICAgICAgICAgICAgICA8YnV0dG9uCiAgICAgICAgICAgICAgICAgICAgICB0eXBlPSJidXR0b24iCiAgICAgICAgICAgICAgICAgICAgICBjbGFzcz0iYnRuIGJ0bi1saW5rIgogICAgICAgICAgICAgICAgICAgICAgZGF0YS1kaXNtaXNzPSJtb2RhbCIKICAgICAgICAgICAgICAgICAgICAgIEBjbGljaz0iZWRpdF9lbnRpdHlfZGV0YWlscyIKICAgICAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICAgICAgICBDYW5jZWwKICAgICAgICAgICAgICAgICAgICA8L2J1dHRvbj4KICAgICAgICAgICAgICAgICAgICA8YnV0dG9uCiAgICAgICAgICAgICAgICAgICAgICB0eXBlPSJzdWJtaXQiCiAgICAgICAgICAgICAgICAgICAgICBjbGFzcz0iZGFya2JsdWUtYnRuIgogICAgICAgICAgICAgICAgICAgICAgaWQ9InJlc19uX2ludF9zYXZlIgogICAgICAgICAgICAgICAgICAgICAgQGNsaWNrPSJlZGl0X2VudGl0eSgpIgogICAgICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgICAgICAgIFNhdmUKICAgICAgICAgICAgICAgICAgICA8L2J1dHRvbj4KICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPGRpdiB2LXNob3c9IkJvb2xlYW4oZW50aXR5X2xpc3QubGVuZ3RoID09PSAwKSAmJiAhc3Bpbm5lck9uIj4KICAgICAgICAgIDxwIGNsYXNzPSJ0ZXh0LWNlbnRlciI+CiAgICAgICAgICAgIDxzdHJvbmc+CiAgICAgICAgICAgICAgWW91IGN1cnJlbnRseSBoYXZlIE5vIEVudGl0aWVzIEFkZGVkLiBQbGVhc2UgYWRkIHRvCiAgICAgICAgICAgICAgY29udGludWUuPC9zdHJvbmcKICAgICAgICAgICAgPgogICAgICAgICAgPC9wPgogICAgICAgIDwvZGl2PgogICAgICAgIDxkaXYgY2xhc3M9InBhZ2luLXRhYmxlIiBzdHlsZT0ibWFyZ2luLXRvcDogMiUiIHYtc2hvdz0iQm9vbGVhbihlbnRpdHlfbGlzdC5sZW5ndGggPiAwKSI+CiAgICAgICAgICA8bmF2IGFyaWEtbGFiZWw9IlBhZ2UgbmF2aWdhdGlvbiBleGFtcGxlIj4KICAgICAgICAgICAgPHVsIGNsYXNzPSJwYWdpbmF0aW9uIGp1c3RpZnktY29udGVudC1jZW50ZXIiPgogICAgICAgICAgICAgIDxsaSBjbGFzcz0icGFnZS1pdGVtIj4KICAgICAgICAgICAgICAgIDxhCiAgICAgICAgICAgICAgICAgIGNsYXNzPSJwYWdlLWxpbmsiCiAgICAgICAgICAgICAgICAgIGhyZWY9IiMiCiAgICAgICAgICAgICAgICAgIEBjbGljaz0iaXNFZGl0RW50aXR5ID8gdmVyaWZ5X2NoYW5nZXMoKSA6IHBhZ2VfcmVxdWlyZShwYWdlX25vIC0gMSkiCiAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICAgIDxzdmcKICAgICAgICAgICAgICAgICAgICB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciCiAgICAgICAgICAgICAgICAgICAgd2lkdGg9IjguNjY3IgogICAgICAgICAgICAgICAgICAgIGhlaWdodD0iMTUuMjA0IgogICAgICAgICAgICAgICAgICAgIHZpZXdCb3g9IjAgMCA4LjY2NyAxNS4yMDQiCiAgICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgICAgICA8ZwogICAgICAgICAgICAgICAgICAgICAgaWQ9ImFycm93LXBvaW50LXRvLWxlZnQiCiAgICAgICAgICAgICAgICAgICAgICB0cmFuc2Zvcm09InRyYW5zbGF0ZSgxMDUuODA2IDE1LjIwNCkgcm90YXRlKDE4MCkiCiAgICAgICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgICAgICAgPHBhdGgKICAgICAgICAgICAgICAgICAgICAgICAgaWQ9IlBhdGhfMTEzNiIKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1uYW1lPSJQYXRoIDExMzYiCiAgICAgICAgICAgICAgICAgICAgICAgIGQ9Ik0xMDUuNDkzLDguMzU0bC02LjUzNyw2LjUzN2ExLjA2NSwxLjA2NSwwLDEsMS0xLjUwNi0xLjUwNkwxMDMuMjM1LDcuNiw5Ny40NSwxLjgxN0ExLjA2NSwxLjA2NSwwLDAsMSw5OC45NTYuMzEybDYuNTM3LDYuNTM3YTEuMDY1LDEuMDY1LDAsMCwxLDAsMS41MDVaIgogICAgICAgICAgICAgICAgICAgICAgICB0cmFuc2Zvcm09InRyYW5zbGF0ZSgwIDApIgogICAgICAgICAgICAgICAgICAgICAgICBmaWxsPSIjOTQ5OWFlIgogICAgICAgICAgICAgICAgICAgICAgLz4KICAgICAgICAgICAgICAgICAgICA8L2c+CiAgICAgICAgICAgICAgICAgIDwvc3ZnPgogICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgPGxpCiAgICAgICAgICAgICAgICA6Y2xhc3M9IidwYWdlLWl0ZW0gJyArIHBhZ2luYXRpb25fY2xhc3MocGFnZW5vKSIKICAgICAgICAgICAgICAgIHYtZm9yPSJwYWdlbm8gaW4gcGFnZV9hcnJheSIKICAgICAgICAgICAgICAgIDprZXk9InBhZ2VubyIKICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICA8YQogICAgICAgICAgICAgICAgICB2LWlmPSJwYWdlbm8gPT0gJy4uLnMnIHx8IHBhZ2VubyA9PSAnLi4ubCciCiAgICAgICAgICAgICAgICAgIGNsYXNzPSJwYWdlLWxpbmsiCiAgICAgICAgICAgICAgICAgIGhyZWY9IiMiCiAgICAgICAgICAgICAgICAgIEBjbGljaz0iaXNFZGl0RW50aXR5ID8gdmVyaWZ5X2NoYW5nZXMoKSA6IHBhZ2VfcmVxdWlyZShwYWdlbm8pIgogICAgICAgICAgICAgICAgICA+Li4uPC9hCiAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICA8YQogICAgICAgICAgICAgICAgICB2LWlmPSJwYWdlbm8gIT0gJy4uLnMnICYmIHBhZ2VubyAhPSAnLi4ubCciCiAgICAgICAgICAgICAgICAgIGNsYXNzPSJwYWdlLWxpbmsiCiAgICAgICAgICAgICAgICAgIGhyZWY9IiMiCiAgICAgICAgICAgICAgICAgIEBjbGljaz0iaXNFZGl0RW50aXR5ID8gdmVyaWZ5X2NoYW5nZXMoKSA6IHBhZ2VfcmVxdWlyZShwYWdlbm8pIgogICAgICAgICAgICAgICAgICA+e3sgcGFnZW5vIH19PC9hCiAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICA8bGkgY2xhc3M9InBhZ2UtaXRlbSI+CiAgICAgICAgICAgICAgICA8YQogICAgICAgICAgICAgICAgICBjbGFzcz0icGFnZS1saW5rIgogICAgICAgICAgICAgICAgICBocmVmPSIjIgogICAgICAgICAgICAgICAgICBAY2xpY2s9ImlzRWRpdEVudGl0eSA/IHZlcmlmeV9jaGFuZ2VzKCkgOiBwYWdlX3JlcXVpcmUocGFnZV9ubyArIDEpIgogICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgICA8c3ZnCiAgICAgICAgICAgICAgICAgICAgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIgogICAgICAgICAgICAgICAgICAgIHdpZHRoPSI4LjY2NyIKICAgICAgICAgICAgICAgICAgICBoZWlnaHQ9IjE1LjIwNCIKICAgICAgICAgICAgICAgICAgICB2aWV3Qm94PSIwIDAgOC42NjcgMTUuMjA0IgogICAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICAgICAgPGcKICAgICAgICAgICAgICAgICAgICAgIGlkPSJhcnJvdy1wb2ludC10by1yaWdodCIKICAgICAgICAgICAgICAgICAgICAgIHRyYW5zZm9ybT0idHJhbnNsYXRlKC05Ny4xMzkgMCkiCiAgICAgICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgICAgICAgPHBhdGgKICAgICAgICAgICAgICAgICAgICAgICAgaWQ9IlBhdGhfMTEzNiIKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1uYW1lPSJQYXRoIDExMzYiCiAgICAgICAgICAgICAgICAgICAgICAgIGQ9Ik0xMDUuNDkzLDguMzU0bC02LjUzNyw2LjUzN2ExLjA2NSwxLjA2NSwwLDEsMS0xLjUwNi0xLjUwNkwxMDMuMjM1LDcuNiw5Ny40NSwxLjgxN0ExLjA2NSwxLjA2NSwwLDAsMSw5OC45NTYuMzEybDYuNTM3LDYuNTM3YTEuMDY1LDEuMDY1LDAsMCwxLDAsMS41MDVaIgogICAgICAgICAgICAgICAgICAgICAgICB0cmFuc2Zvcm09InRyYW5zbGF0ZSgwIDApIgogICAgICAgICAgICAgICAgICAgICAgICBmaWxsPSIjOTQ5OWFlIgogICAgICAgICAgICAgICAgICAgICAgLz4KICAgICAgICAgICAgICAgICAgICA8L2c+CiAgICAgICAgICAgICAgICAgIDwvc3ZnPgogICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgIDwvdWw+CiAgICAgICAgICA8L25hdj4KICAgICAgICA8L2Rpdj4KICAgICAgPC9kaXY+CiAgICA8L2Rpdj4KICA8L2Rpdj4KICA8ZGl2CiAgICBpZD0iZW50aXR5bW9kZWwiCiAgICBjbGFzcz0ibW9kYWwgZmFkZSBkYXNoLW1vZGFsIgogICAgcm9sZT0iZGlhbG9nIgogICAgZGF0YS1iYWNrZHJvcD0ic3RhdGljIgogICAgZGF0YS1rZXlib2FyZD0iZmFsc2UiCiAgPgogICAgPGRpdiBjbGFzcz0ibW9kYWwtZGlhbG9nIG1vZGFsLWxnIj4KICAgICAgPGRpdiBjbGFzcz0ibW9kYWwtY29udGVudCI+CiAgICAgICAgPGRpdiBjbGFzcz0ibW9kYWwtYm9keSI+CiAgICAgICAgICA8ZGl2IGNsYXNzPSJtb2RhbC1oZWFkIGQtZmxleCBhbGlnbi1pdGVtcy1jZW50ZXIiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJoZWFkLWljbiI+CiAgICAgICAgICAgICAgPGltZyBzcmM9Ii9pbWcvbXNnLWJsdWUucG5nIiBhbHQgLz4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxoMz5BZGQgRW50aXR5PC9oMz4KICAgICAgICAgICAgPGJ1dHRvbiB0eXBlPSJidXR0b24iIGNsYXNzPSJjbG9zZSIgZGF0YS1kaXNtaXNzPSJtb2RhbCI+CiAgICAgICAgICAgICAgPGltZyBzcmM9Ii9pbWcvY2xvc2UtaWNuLnBuZyIgYWx0IC8+CiAgICAgICAgICAgIDwvYnV0dG9uPgogICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8ZGl2IGNsYXNzPSJmb3JtLWdyb3VwIj4KICAgICAgICAgICAgPGg1IGNsYXNzPSJoZWFkaW5nIj5FbnRpdHkgTmFtZTwvaDU+CiAgICAgICAgICAgIDxsYWJlbCBjbGFzcz0iZm9ybS10ZXh0IHRleHQtbXV0ZWQiPgogICAgICAgICAgICAgIE5hbWUgeW91ciBlbnRpdGllcyB0byBtYXRjaCB0aGUgY2F0ZWdvcnkgb2YgdmFsdWVzIHRoYXQgaXQgd2lsbCBkZXRlY3QgKE9ubHkgQWxwaGFiZXRzLCBOdW1iZXJzIGFuZCBfIGFsbG93ZWQuIE5vIHNwZWNpYWwgY2hhcmFjdGVycy4gbWF4aW11bSAyNSBjaGFyYWN0ZXJzIGFsbG93ZWQuKQogICAgICAgICAgICA8L2xhYmVsPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJpbnB1dC1ib3giPgogICAgICAgICAgICAgIDxpbnB1dAogICAgICAgICAgICAgICAgdi1tb2RlbC50cmltPSJzYXZlX25ld19lbnRpdGllcyIKICAgICAgICAgICAgICAgIGlkPSJlbnRlcl9lbnRpdGllc19uYW1lX2lkIgogICAgICAgICAgICAgICAgdHlwZT0idGV4dCIKICAgICAgICAgICAgICAgIGNsYXNzPSJmb3JtLWNvbnRyb2wiCiAgICAgICAgICAgICAgICBwbGFjZWhvbGRlcj0iVHlwZSBlbnRpdHkgbmFtZSBoZXJlLCBlLmcuIGFjY291bnRfdHlwZSIKICAgICAgICAgICAgICAgIHJlcXVpcmVkCiAgICAgICAgICAgICAgICBtYXhsZW5ndGg9IjI1IgogICAgICAgICAgICAgICAgQGtleXVwPSJzZWFyY2hfZW50aXRpZXNfbmFtZSgpIgogICAgICAgICAgICAgICAgQGtleWRvd249ImVudGl0eV9uYW1lX2NoZWNrX3NwZWNpYWxfY2hhcmFjdGVycygkZXZlbnQpIgogICAgICAgICAgICAgICAgOnN0eWxlPSIoc2F2ZV9uZXdfZW50aXRpZXMubGVuZ3RoID4gMCkgPyAncGFkZGluZy1sZWZ0OjE5cHggIWltcG9ydGFudDsnOiBudWxsIgogICAgICAgICAgICAgID4KICAgICAgICAgICAgICA8c3BhbiB2LWlmPSJzYXZlX25ld19lbnRpdGllcy5sZW5ndGggPiAwIiBjbGFzcz0idW5pdCI+QDwvc3Bhbj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxwIHYtc2hvdz0iZW50aXR5X2FscmVhZHlfZXhpc3RzIiAKICAgICAgICAgICAgICBzdHlsZT0iCiAgICAgICAgICAgICAgICBjb2xvcjogcmVkICFpbXBvcnRhbnQ7IAogICAgICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTowcHggIWltcG9ydGFudDsgCiAgICAgICAgICAgICAgICBwYWRkaW5nLXRvcDo4cHggIWltcG9ydGFudCI+CiAgICAgICAgICAgICAgQW4gRW50aXR5IHdpdGggdGhpcyBuYW1lIGFscmVhZHkgZXhpc3RzLgogICAgICAgICAgICA8L3A+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDxkaXYgY2xhc3M9ImZvcm0tZ3JvdXAiPgogICAgICAgICAgICA8aDUgY2xhc3M9ImQtZmxleCBoZWFkaW5nIj5WYWxpZGF0aW9uPC9oNT4KICAgICAgICAgICAgPGxhYmVsIGNsYXNzPSJzd2l0Y2ggZmxvYXQtcmlnaHQiIHN0eWxlPSJtYXJnaW4tdG9wOiAtMjdweCAhaW1wb3J0YW50OyI+CiAgICAgICAgICAgICAgPGlucHV0CiAgICAgICAgICAgICAgICB0eXBlPSJjaGVja2JveCIKICAgICAgICAgICAgICAgIHYtbW9kZWw9InZhbGlkYXRpb25fbmVlZGVkIgogICAgICAgICAgICAgICAgaWQ9InZhbGlkYXRpb25fbmVlZGVkX2lkIgogICAgICAgICAgICAgIC8+CiAgICAgICAgICAgICAgPHNwYW4KICAgICAgICAgICAgICAgIGNsYXNzPSJzbGlkZXIgcm91bmQiCiAgICAgICAgICAgICAgICBzdHlsZT0iYm9yZGVyLXJhZGl1czogNTBweDsiCiAgICAgICAgICAgICAgPjwvc3Bhbj4KICAgICAgICAgICAgPC9sYWJlbD4KICAgICAgICAgICAgPGxhYmVsIGNsYXNzPSJmb3JtLXRleHQgdGV4dC1tdXRlZCI+CiAgICAgICAgICAgICAgdHVybiBvbiB0aGUgdG9nZ2xlIHRvIGFkZCBiYXNpYyB2YWxpZGF0aW9uIHRvIHRoZSBlbnRpdHkKICAgICAgICAgICAgPC9sYWJlbD4KICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPGRpdiB2LWlmPSJ2YWxpZGF0aW9uX25lZWRlZCIgY2xhc3M9ImZvcm0tZ3JvdXAiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJyYWRpbyBteS1hdXRvIj4KICAgICAgICAgICAgICA8bGFiZWw+CiAgICAgICAgICAgICAgICA8aW5wdXQKICAgICAgICAgICAgICAgICAgdHlwZT0icmFkaW8iCiAgICAgICAgICAgICAgICAgIHYtbW9kZWw9InZhbGlkYXRpb25fdHlwZSIKICAgICAgICAgICAgICAgICAgdmFsdWU9Im51bWVyaWMiCiAgICAgICAgICAgICAgICAgIGlkPSJ2YWxpZGF0aW9uX3R5cGVfbnVtZXJpY19pZCIKICAgICAgICAgICAgICAgIC8+CiAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0iaWNuIj48L3NwYW4+CiAgICAgICAgICAgICAgICBOdW1lcmljCiAgICAgICAgICAgICAgPC9sYWJlbD4KICAgICAgICAgICAgICA8bGFiZWw+CiAgICAgICAgICAgICAgICA8aW5wdXQKICAgICAgICAgICAgICAgICAgdHlwZT0icmFkaW8iCiAgICAgICAgICAgICAgICAgIHYtbW9kZWw9InZhbGlkYXRpb25fdHlwZSIKICAgICAgICAgICAgICAgICAgdmFsdWU9ImFscGhhYmV0aWNhbCIKICAgICAgICAgICAgICAgICAgaWQ9InZhbGlkYXRpb25fdHlwZV9hbHBoYWJldGljYWxfaWQiCiAgICAgICAgICAgICAgICAvPgogICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImljbiI+PC9zcGFuPgogICAgICAgICAgICAgICAgQWxwaGFiZXRpY2FsCiAgICAgICAgICAgICAgPC9sYWJlbD4KICAgICAgICAgICAgICA8bGFiZWw+CiAgICAgICAgICAgICAgICA8aW5wdXQKICAgICAgICAgICAgICAgICAgdHlwZT0icmFkaW8iCiAgICAgICAgICAgICAgICAgIHYtbW9kZWw9InZhbGlkYXRpb25fdHlwZSIKICAgICAgICAgICAgICAgICAgdmFsdWU9ImFscGhhbnVtZXJpYyIKICAgICAgICAgICAgICAgICAgaWQ9InZhbGlkYXRpb25fdHlwZV9hbHBoYW51bWVyaWNfaWQiCiAgICAgICAgICAgICAgICAvPgogICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImljbiI+PC9zcGFuPgogICAgICAgICAgICAgICAgQWxwaGFudW1lcmljCiAgICAgICAgICAgICAgPC9sYWJlbD4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDxkaXYgY2xhc3M9ImZvcm0tZ3JvdXAiPgogICAgICAgICAgICA8aDUgY2xhc3M9ImhlYWRpbmciID5WYWx1ZSB0eXBlPC9oNT4KICAgICAgICAgICAgPGRpdiBjbGFzcz0icmFkaW8gbXktYXV0byI+CiAgICAgICAgICAgICAgPGxhYmVsPgogICAgICAgICAgICAgICAgPGlucHV0CiAgICAgICAgICAgICAgICAgIHR5cGU9InJhZGlvIgogICAgICAgICAgICAgICAgICB2LW1vZGVsPSJlbnRpdGllc192YWx1ZV90eXBlIgogICAgICAgICAgICAgICAgICB2YWx1ZT0ic3lub255bXMiCiAgICAgICAgICAgICAgICAgIGlkPSJlbnRpdGllc192YWx1ZV90eXBlX3N5bm9ueW1zX2lkIgogICAgICAgICAgICAgICAgLz4KICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJpY24iPjwvc3Bhbj4KICAgICAgICAgICAgICAgIFN5bm9ueW1zCiAgICAgICAgICAgICAgPC9sYWJlbD4KICAgICAgICAgICAgICA8bGFiZWw+CiAgICAgICAgICAgICAgICA8aW5wdXQKICAgICAgICAgICAgICAgICAgdHlwZT0icmFkaW8iCiAgICAgICAgICAgICAgICAgIHYtbW9kZWw9ImVudGl0aWVzX3ZhbHVlX3R5cGUiCiAgICAgICAgICAgICAgICAgIHZhbHVlPSJwYXR0ZXJuIgogICAgICAgICAgICAgICAgICBpZD0iZW50aXRpZXNfdmFsdWVfdHlwZV9wYXR0ZXJuX2lkIgogICAgICAgICAgICAgICAgLz4KICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJpY24iPjwvc3Bhbj4KICAgICAgICAgICAgICAgIFBhdHRlcm4KICAgICAgICAgICAgICA8L2xhYmVsPgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPGRpdiBjbGFzcz0iZm9ybS1ncm91cCIgdi1pZj0iZW50aXRpZXNfdmFsdWVfdHlwZSA9PSAnc3lub255bXMnIj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iY2FyZC1hY3QiPgogICAgICAgICAgICAgIDxidXR0b24KICAgICAgICAgICAgICAgIGlkPSJhZGRfdmFsdWVzX2J1dHRvbl9pZF9pZCIKICAgICAgICAgICAgICAgIGNsYXNzPSJkYXJrYmx1ZS1idG4iCiAgICAgICAgICAgICAgICBzdHlsZT0icGFkZGluZzogNXB4IDEwcHg7IGZsb2F0OnJpZ2h0OyIKICAgICAgICAgICAgICAgIEBjbGljaz0iYWRkX3RvX3ZhbHVlc19saXN0KCdhZGQnKSIKICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICA8c3ZnCiAgICAgICAgICAgICAgICAgIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIKICAgICAgICAgICAgICAgICAgd2lkdGg9IjE0IgogICAgICAgICAgICAgICAgICBoZWlnaHQ9IjEzLjk5NyIKICAgICAgICAgICAgICAgICAgdmlld0JveD0iMCAwIDE0IDEzLjk5NyIKICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgICAgPHBhdGgKICAgICAgICAgICAgICAgICAgICBpZD0iVW5pb25fMTMiCiAgICAgICAgICAgICAgICAgICAgZGF0YS1uYW1lPSJVbmlvbiAxMyIKICAgICAgICAgICAgICAgICAgICBkPSJNLTEyNjg0LDIwNTh2LTVoLTVhMSwxLDAsMCwxLTEtMSwxLDEsMCwwLDEsMS0xaDV2LTVhMSwxLDAsMCwxLDEtMSwxLDEsMCwwLDEsMSwxdjVoNWExLDEsMCwwLDEsMSwxLDEsMSwwLDAsMS0xLDFoLTV2NWExLDEsMCwwLDEtMSwxQTEsMSwwLDAsMS0xMjY4NCwyMDU4WiIKICAgICAgICAgICAgICAgICAgICB0cmFuc2Zvcm09InRyYW5zbGF0ZSgxMjY5MC4wMDEgLTIwNDUuMDAyKSIKICAgICAgICAgICAgICAgICAgICBmaWxsPSIjZmZmIgogICAgICAgICAgICAgICAgICAvPgogICAgICAgICAgICAgICAgPC9zdmc+CiAgICAgICAgICAgICAgPC9idXR0b24+CiAgICAgICAgICAgICAgPGg1PgogICAgICAgICAgICAgICAgPHAgY2xhc3M9Im10LTIgbWItMCIgc3R5bGU9ImNvbG9yOiAjNDE0MTQxIj5WYWx1ZXM8L3A+CiAgICAgICAgICAgICAgPC9oNT4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDx0ZW1wbGF0ZT4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJtdC0zIFNjcm9sbFN0eWxlIiBzdHlsZT0iZGlzcGxheTogYmxvY2s7IG1hcmdpbi1ib3R0b206IDFyZW07Ij4KICAgICAgICAgICAgICAgIDxkaXYKICAgICAgICAgICAgICAgICAgdi1mb3I9IigKICAgICAgICAgICAgICAgICAgICBuZXdfc3lub255bXMsIGluZGV4CiAgICAgICAgICAgICAgICAgICkgaW4gc3lub255bXNfdmFsdWVfbGlzdCIKICAgICAgICAgICAgICAgICAgOmtleT0iaW5kZXgiCiAgICAgICAgICAgICAgICAgIGNsYXNzPSJjdXN0b20tYnV0dG9uLWJveCBwbC0zIHB0LTMgcHItMSBtdC0wIG1iLTMiCiAgICAgICAgICAgICAgICAgIHN0eWxlPSIiCiAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICAgIDxsYWJlbCBjbGFzcz0ibXQtMCIgc3R5bGU9IiI+VmFsdWU6PC9sYWJlbD4KICAgICAgICAgICAgICAgICAgPGkKICAgICAgICAgICAgICAgICAgICB2LWlmPSJzeW5vbnltc192YWx1ZV9saXN0Lmxlbmd0aCA+IDEiCiAgICAgICAgICAgICAgICAgICAgc3R5bGU9IgogICAgICAgICAgICAgICAgICAgICAgY3Vyc29yOiBwb2ludGVyOwogICAgICAgICAgICAgICAgICAgICAgZm9udC1zaXplOiAxNnB4OwogICAgICAgICAgICAgICAgICAgICAgZmxvYXQ6IHJpZ2h0OyIKICAgICAgICAgICAgICAgICAgICBjbGFzcz0iZmEgbWwtYXV0byBtci0xIgogICAgICAgICAgICAgICAgICAgIEBjbGljaz0iYWRkX3RvX3ZhbHVlc19saXN0KCdyZW1vdmUnLCBpbmRleCkiCiAgICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgICAgICAmI3hmMWY4OwogICAgICAgICAgICAgICAgICA8L2k+CiAgICAgICAgICAgICAgICAgIDxpbnB1dAogICAgICAgICAgICAgICAgICAgIHR5cGU9InRleHQiCiAgICAgICAgICAgICAgICAgICAgdi1tb2RlbC50cmltPSJzeW5vbnltc192YWx1ZV9saXN0W2luZGV4XVsndmFsdWUnXSIKICAgICAgICAgICAgICAgICAgICBjbGFzcz0iZm9ybS1jb250cm9sIGVkaXQiCiAgICAgICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI9IkVudGVyIGEgdmFsdWUiCiAgICAgICAgICAgICAgICAgICAgOmlkPSJgZW50ZXJfdmFsdWVfaWRfJHtpbmRleH1gIgogICAgICAgICAgICAgICAgICAgIHN0eWxlPSJ3aWR0aDo5OS41JSAhaW1wb3J0YW50OyIKICAgICAgICAgICAgICAgICAgLz4KICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibXQtMiBtYi0yIj4KICAgICAgICAgICAgICAgICAgICA8bGFiZWwgc3R5bGU9IiI+U3lub255bXM6PC9sYWJlbD4KICAgICAgICAgICAgICAgICAgICA8YQogICAgICAgICAgICAgICAgICAgICAgY2xhc3M9ImRhcmtibHVlLWJ0biBtci0xIgogICAgICAgICAgICAgICAgICAgICAgc3R5bGU9InBhZGRpbmc6IDVweCAxMHB4OyBmbG9hdDpyaWdodDsiCiAgICAgICAgICAgICAgICAgICAgICBAY2xpY2s9ImFkZF90b19zeW5vbnltc19saXN0KCdhZGQnLCBpbmRleCkiCiAgICAgICAgICAgICAgICAgICAgICBpZD0iYWRkX3N5bm9ueW1zX2J1dHRvbl9pZCIKICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICAgICAgICA8c3ZnCiAgICAgICAgICAgICAgICAgICAgICAgIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIKICAgICAgICAgICAgICAgICAgICAgICAgd2lkdGg9IjE0IgogICAgICAgICAgICAgICAgICAgICAgICBoZWlnaHQ9IjEzLjk5NyIKICAgICAgICAgICAgICAgICAgICAgICAgdmlld0JveD0iMCAwIDE0IDEzLjk5NyIKICAgICAgICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgICAgICAgICAgPHBhdGgKICAgICAgICAgICAgICAgICAgICAgICAgICBpZD0iVW5pb25fMTMiCiAgICAgICAgICAgICAgICAgICAgICAgICAgZGF0YS1uYW1lPSJVbmlvbiAxMyIKICAgICAgICAgICAgICAgICAgICAgICAgICBkPSJNLTEyNjg0LDIwNTh2LTVoLTVhMSwxLDAsMCwxLTEtMSwxLDEsMCwwLDEsMS0xaDV2LTVhMSwxLDAsMCwxLDEtMSwxLDEsMCwwLDEsMSwxdjVoNWExLDEsMCwwLDEsMSwxLDEsMSwwLDAsMS0xLDFoLTV2NWExLDEsMCwwLDEtMSwxQTEsMSwwLDAsMS0xMjY4NCwyMDU4WiIKICAgICAgICAgICAgICAgICAgICAgICAgICB0cmFuc2Zvcm09InRyYW5zbGF0ZSgxMjY5MC4wMDEgLTIwNDUuMDAyKSIKICAgICAgICAgICAgICAgICAgICAgICAgICBmaWxsPSIjZmZmIgogICAgICAgICAgICAgICAgICAgICAgICAvPgogICAgICAgICAgICAgICAgICAgICAgPC9zdmc+CiAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgPGRpdgogICAgICAgICAgICAgICAgICAgIHYtZm9yPSIoCiAgICAgICAgICAgICAgICAgICAgICBuZXdfc3Vub255bXMsIGluZGV4MQogICAgICAgICAgICAgICAgICAgICkgaW4gc3lub255bXNfdmFsdWVfbGlzdFtpbmRleF1bJ3N5bm9ueW1zJ10iCiAgICAgICAgICAgICAgICAgICAgOmtleT0iaW5kZXgxIgogICAgICAgICAgICAgICAgICAgIGNsYXNzPSJmb3JtLWdyb3VwIgogICAgICAgICAgICAgICAgICAgIHN0eWxlPSJkaXNwbGF5OmZsZXg7IgogICAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICAgICAgPGlucHV0CiAgICAgICAgICAgICAgICAgICAgICB0eXBlPSJ0ZXh0IgogICAgICAgICAgICAgICAgICAgICAgdi1tb2RlbC50cmltPSJzeW5vbnltc192YWx1ZV9saXN0W2luZGV4XVsnc3lub255bXMnXVtpbmRleDFdIgogICAgICAgICAgICAgICAgICAgICAgY2xhc3M9ImZvcm0tY29udHJvbCBlZGl0IgogICAgICAgICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI9IkVudGVyIGEgc3lub255bXMiCiAgICAgICAgICAgICAgICAgICAgICA6aWQ9ImBlbnRlcl9zeW5vbnltc19pZF8ke2luZGV4fWAiCiAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0id2lkdGg6OTkuNSUgIWltcG9ydGFudDsiCiAgICAgICAgICAgICAgICAgICAgLz4KICAgICAgICAgICAgICAgICAgICA8c3BhbgogICAgICAgICAgICAgICAgICAgICAgdi1pZj0ic3lub255bXNfdmFsdWVfbGlzdFtpbmRleF1bJ3N5bm9ueW1zJ10ubGVuZ3RoID4gMSIKICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJjdXJzb3I6IHBvaW50ZXI7IgogICAgICAgICAgICAgICAgICAgICAgY2xhc3M9Im15LWF1dG8gbWwtMiBtci0xIgogICAgICAgICAgICAgICAgICAgICAgQGNsaWNrPSJhZGRfdG9fc3lub255bXNfbGlzdCgncmVtb3ZlJyxpbmRleCwgaW5kZXgxKSIKICAgICAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICAgICAgICA8aSBzdHlsZT0iZm9udC1zaXplOiAxNnB4IiBjbGFzcz0iZmEiPiYjeGYwMGQ7PC9pPgogICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC90ZW1wbGF0ZT4KICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPGRpdiBjbGFzcz0iZm9ybS1ncm91cCIgdi1pZj0iZW50aXRpZXNfdmFsdWVfdHlwZSA9PSAncGF0dGVybiciPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJtYi0zIj4KICAgICAgICAgICAgICA8YnV0dG9uCiAgICAgICAgICAgICAgICBpZD0iYWRkX3BhdHRlcm5fYnV0dG9uX2lkIgogICAgICAgICAgICAgICAgY2xhc3M9ImRhcmtibHVlLWJ0biBtYi0wIgogICAgICAgICAgICAgICAgc3R5bGU9InBhZGRpbmc6IDVweCAxMHB4OyBmbG9hdDogcmlnaHQgIWltcG9ydGFudDsiCiAgICAgICAgICAgICAgICBAY2xpY2s9ImFkZF90b19wYXR0ZXJuX2xpc3QoJ2FkZCcpIgogICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgIDxzdmcKICAgICAgICAgICAgICAgICAgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIgogICAgICAgICAgICAgICAgICB3aWR0aD0iMTQiCiAgICAgICAgICAgICAgICAgIGhlaWdodD0iMTMuOTk3IgogICAgICAgICAgICAgICAgICB2aWV3Qm94PSIwIDAgMTQgMTMuOTk3IgogICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgICA8cGF0aAogICAgICAgICAgICAgICAgICAgIGlkPSJVbmlvbl8xMyIKICAgICAgICAgICAgICAgICAgICBkYXRhLW5hbWU9IlVuaW9uIDEzIgogICAgICAgICAgICAgICAgICAgIGQ9Ik0tMTI2ODQsMjA1OHYtNWgtNWExLDEsMCwwLDEtMS0xLDEsMSwwLDAsMSwxLTFoNXYtNWExLDEsMCwwLDEsMS0xLDEsMSwwLDAsMSwxLDF2NWg1YTEsMSwwLDAsMSwxLDEsMSwxLDAsMCwxLTEsMWgtNXY1YTEsMSwwLDAsMS0xLDFBMSwxLDAsMCwxLTEyNjg0LDIwNThaIgogICAgICAgICAgICAgICAgICAgIHRyYW5zZm9ybT0idHJhbnNsYXRlKDEyNjkwLjAwMSAtMjA0NS4wMDIpIgogICAgICAgICAgICAgICAgICAgIGZpbGw9IiNmZmYiCiAgICAgICAgICAgICAgICAgIC8+CiAgICAgICAgICAgICAgICA8L3N2Zz4KICAgICAgICAgICAgICA8L2J1dHRvbj4KICAgICAgICAgICAgICA8aDU+CiAgICAgICAgICAgICAgICA8cCBjbGFzcz0ibXQtMiBtYi0wIiBzdHlsZT0iY29sb3I6ICM0MTQxNDEiPlBhdHRlcm48L3A+CiAgICAgICAgICAgICAgPC9oNT4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDx0ZW1wbGF0ZT4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJTY3JvbGxTdHlsZSIgc3R5bGU9ImRpc3BsYXk6IGJsb2NrOyBtYXJnaW4tYm90dG9tOiAxcmVtOyI+CiAgICAgICAgICAgICAgICA8ZGl2CiAgICAgICAgICAgICAgICAgIHYtZm9yPSIoCiAgICAgICAgICAgICAgICAgICAgbmV3X3BhdHRlcm4sIGluZGV4CiAgICAgICAgICAgICAgICAgICkgaW4gcGF0dGVybl9saXN0IgogICAgICAgICAgICAgICAgICA6a2V5PSJpbmRleCIKICAgICAgICAgICAgICAgICAgY2xhc3M9ImZvcm0tZ3JvdXAiCiAgICAgICAgICAgICAgICAgIHN0eWxlPSJkaXNwbGF5OmZsZXg7IgogICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgICA8aW5wdXQKICAgICAgICAgICAgICAgICAgICB0eXBlPSJ0ZXh0IgogICAgICAgICAgICAgICAgICAgIHYtbW9kZWwudHJpbT0icGF0dGVybl9saXN0W2luZGV4XVsncGF0dGVybiddIgogICAgICAgICAgICAgICAgICAgIGNsYXNzPSJmb3JtLWNvbnRyb2wgZWRpdCIKICAgICAgICAgICAgICAgICAgICBwbGFjZWhvbGRlcj0iRW50ZXIgYSBwYXR0ZXJuIgogICAgICAgICAgICAgICAgICAgIDppZD0iYGVudGVyX3BhdHRlcm5faWRfJHtpbmRleH1gIgogICAgICAgICAgICAgICAgICAvPgogICAgICAgICAgICAgICAgICA8c3BhbgogICAgICAgICAgICAgICAgICAgIHYtaWY9InBhdHRlcm5fbGlzdC5sZW5ndGggPiAxIgogICAgICAgICAgICAgICAgICAgIHN0eWxlPSJjdXJzb3I6IHBvaW50ZXIiCiAgICAgICAgICAgICAgICAgICAgY2xhc3M9Im15LWF1dG8gbWwtMiBtci0wIgogICAgICAgICAgICAgICAgICAgIEBjbGljaz0iYWRkX3RvX3BhdHRlcm5fbGlzdCgncmVtb3ZlJywgaW5kZXgpIgogICAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICAgICAgPGkgc3R5bGU9ImZvbnQtc2l6ZTogMTZweCIgY2xhc3M9ImZhIj4mI3hmMDBkOzwvaT4KICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvdGVtcGxhdGU+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgICAgICA8ZGl2IGNsYXNzPSJtb2RhbC1mb290ZXIiPgogICAgICAgICAgPGRpdiBjbGFzcz0iYnRuLXdyYXAgdGV4dC1yaWdodCBtdC0wIHB5LTAgYm9yZGVyLXRvcC0wIj4KICAgICAgICAgICAgPGJ1dHRvbgogICAgICAgICAgICAgIHR5cGU9ImJ1dHRvbiIKICAgICAgICAgICAgICBjbGFzcz0iYnRuIGJ0bi1saW5rIgogICAgICAgICAgICAgIGRhdGEtZGlzbWlzcz0ibW9kYWwiCiAgICAgICAgICAgICAgQGNsaWNrPSJlbXB0eV92YXJpYWJsZSIKICAgICAgICAgICAgPgogICAgICAgICAgICAgIENhbmNlbAogICAgICAgICAgICA8L2J1dHRvbj4KICAgICAgICAgICAgPGJ1dHRvbgogICAgICAgICAgICAgIHR5cGU9InN1Ym1pdCIKICAgICAgICAgICAgICBjbGFzcz0iZGFya2JsdWUtYnRuIgogICAgICAgICAgICAgIGlkPSJyZXNfbl9pbnRfc2F2ZSIKICAgICAgICAgICAgICBAY2xpY2s9InNhdmVfZW50aXR5KCkiCiAgICAgICAgICAgID4KICAgICAgICAgICAgICBTYXZlCiAgICAgICAgICAgIDwvYnV0dG9uPgogICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICAgIDwvZGl2PgogICAgPC9kaXY+CiAgPC9kaXY+CiAgPGRpdgogICAgY2xhc3M9Im1vZGFsIGZhZGUgZGFzaC1tb2RhbCIKICAgIGlkPSJmaWxlX3VwbG9hZF9pZCIKICAgIHRhYmluZGV4PSItMSIKICAgIHJvbGU9ImRpYWxvZyIKICAgIGFyaWEtbGFiZWxsZWRieT0iZXhhbXBsZU1vZGFsQ2VudGVyVGl0bGUiCiAgICBhcmlhLWhpZGRlbj0idHJ1ZSIKICAgIGRhdGEtYmFja2Ryb3A9InN0YXRpYyIKICAgIGRhdGEta2V5Ym9hcmQ9ImZhbHNlIgogID4KICAgIDxkaXYgY2xhc3M9Im1vZGFsLWRpYWxvZyBtb2RhbC1kaWFsb2ctY2VudGVyZWQiIHJvbGU9ImRvY3VtZW50Ij4KICAgICAgPGRpdiBjbGFzcz0ibW9kYWwtY29udGVudCI+CiAgICAgICAgPGRpdiBjbGFzcz0ibW9kYWwtYm9keSI+CiAgICAgICAgICA8ZGl2IGNsYXNzPSJtb2RhbC1oZWFkIGQtZmxleCBhbGlnbi1pdGVtcy1jZW50ZXIiPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJoZWFkLWljbiI+CiAgICAgICAgICAgICAgPGltZyBzcmM9Ii9pbWcvbXNnLWJsdWUucG5nIiBhbHQgLz4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxoMz5VcGxvYWQgQ1NWIEZpbGU8L2gzPgogICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8YnV0dG9uCiAgICAgICAgICAgIHR5cGU9ImJ1dHRvbiIKICAgICAgICAgICAgY2xhc3M9ImNsb3NlIgoKICAgICAgICAgICAgZGF0YS1kaXNtaXNzPSJtb2RhbCIKICAgICAgICAgICAgYXJpYS1sYWJlbD0iQ2xvc2UiCiAgICAgICAgICAgIEBjbGljaz0iZW1wdHlfdmFyaWFibGUiCiAgICAgICAgICA+CiAgICAgICAgICAgIDxpbWcgc3JjPSIvaW1nL2Nsb3NlLWljbi5wbmciIGFsdCAvPgogICAgICAgICAgPC9idXR0b24+CiAgICAgICAgICA8Zm9ybSBAc3VibWl0LnByZXZlbnQ9ImZpbGVfc3VibWl0Ij4KICAgICAgICAgICAgPGRpdiBjbGFzcz0iZm9ybS1ncm91cCI+CiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY3VzdG9tLWZpbGUiPgogICAgICAgICAgICAgICAgPGlucHV0CiAgICAgICAgICAgICAgICAgIHR5cGU9ImZpbGUiCiAgICAgICAgICAgICAgICAgIGFjY2VwdD0iLmNzdiIKICAgICAgICAgICAgICAgICAgY2xhc3M9ImN1c3RvbS1maWxlLWlucHV0IgogICAgICAgICAgICAgICAgICBAY2hhbmdlPSJmaWxlaW5wdXRfY3N2IgogICAgICAgICAgICAgICAgICBpZD0iaW5wdXRHcm91cEZpbGVjc3ZfaWQiCiAgICAgICAgICAgICAgICAgIGFyaWEtZGVzY3JpYmVkYnk9ImlucHV0R3JvdXBGaWxlQWRkb25jc3YiCiAgICAgICAgICAgICAgICAvPgogICAgICAgICAgICAgICAgPGxhYmVsCiAgICAgICAgICAgICAgICAgIHN0eWxlPSJmb250LXdlaWdodDogNDAwOyBsaW5lLWhlaWdodDogMTVweCIKICAgICAgICAgICAgICAgICAgY2xhc3M9ImN1c3RvbS1maWxlLWxhYmVsIGZvcm0tY29udHJvbCIKICAgICAgICAgICAgICAgICAgZm9yPSJmaWxlIgogICAgICAgICAgICAgICAgICA+e3sgZmlsZV9sYWJlbF9jc3YgfX08L2xhYmVsCiAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgPHAgY2xhc3M9Im10LTIiIHN0eWxlPSJjb2xvcjogI2ZhMDAwMDsgZm9udC1zaXplOiAwLjg1cmVtIj4KICAgICAgICAgICAgICAgICogUGxlYXNlIE5vdGUgdGhhdCBvbmx5IFJlc3BvbnNlcyB3aXRoIG9ubHkgVGV4dCBSZXNwb25zZSBjYW4KICAgICAgICAgICAgICAgIGJlIGFkZGVkIHZpYSBDU1YsIEFQSSBFbmRwb2ludHMgYW5kIFJlc3BvbnNlcyB3aXRoIEltYWdlIG5lZWQKICAgICAgICAgICAgICAgIHRvIGJlIGFkZGVkIGZyb20gdGhlIHBvcnRhbC4KICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJidG4td3JhcCB0ZXh0LXJpZ2h0Ij4KICAgICAgICAgICAgICA8YSBocmVmPSIjIiBAY2xpY2sucHJldmVudD0iZG93bmxvYWRfc2FtcGxlX2ZpbGUiPgogICAgICAgICAgICAgICAgRG93bmxvYWQgU2FtcGxlIENTViBGaWxlCiAgICAgICAgICAgICAgICA8aQogICAgICAgICAgICAgICAgICBjbGFzcz0iZmEgZmEtc3Bpbm5lciBmYS1zcGluIgogICAgICAgICAgICAgICAgICB2LXNob3c9InNwaW5uZXJPbkZpbGVEb3dubG9hZCIKICAgICAgICAgICAgICAgID48L2k+CiAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgIDxidXR0b24KICAgICAgICAgICAgICAgIHR5cGU9ImJ1dHRvbiIKICAgICAgICAgICAgICAgIGNsYXNzPSJidG4gYnRuLWxpbmsiCiAgICAgICAgICAgICAgICBAY2xpY2s9ImVtcHR5X3ZhcmlhYmxlIgogICAgICAgICAgICAgICAgZGF0YS1kaXNtaXNzPSJtb2RhbCIKICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICBDYW5jZWwKICAgICAgICAgICAgICA8L2J1dHRvbj4KICAgICAgICAgICAgICA8YnV0dG9uIHR5cGU9InN1Ym1pdCIgY2xhc3M9ImRhcmtibHVlLWJ0biI+U3VibWl0PC9idXR0b24+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPC9mb3JtPgogICAgICAgIDwvZGl2PgogICAgICA8L2Rpdj4KICAgIDwvZGl2PgogIDwvZGl2Pgo8L2Rpdj4K"},null]}