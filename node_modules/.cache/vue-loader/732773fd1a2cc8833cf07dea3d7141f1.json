{"remainingRequest":"/home/vimalesh/Learning/devops_ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/vimalesh/Learning/devops_ui/src/portal/analytics/components/Piechart.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/home/vimalesh/Learning/devops_ui/src/portal/analytics/components/Piechart.vue","mtime":1643027096188},{"path":"/home/vimalesh/Learning/devops_ui/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vimalesh/Learning/devops_ui/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/vimalesh/Learning/devops_ui/node_modules/@vue/cli-service/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/vimalesh/Learning/devops_ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vimalesh/Learning/devops_ui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi8qIC50b29sVGlwIHsKICBwb3NpdGlvbjogYWJzb2x1dGU7CiAgZGlzcGxheTogbm9uZTsKICBtaW4td2lkdGg6IDgwcHg7CiAgaGVpZ2h0OiBhdXRvOwogIGJhY2tncm91bmQ6IG5vbmUgcmVwZWF0IHNjcm9sbCAwIDAgI2ZmZmZmZjsKICBib3JkZXI6IDFweCBzb2xpZCAjNkYyNTdGOwogIHBhZGRpbmc6IDE0cHg7CiAgdGV4dC1hbGlnbjogY2VudGVyOwp9ICovCiAuY2hhcnQtbGVnZW5kIHsKICAgIGZvbnQtd2VpZ2h0OiA1MCAhaW1wb3J0YW50OwogICAgZm9udC1zaXplOiAxNXB4OwogICAgZm9udC1mYW1pbHk6IC1hcHBsZS1zeXN0ZW0sQmxpbmtNYWNTeXN0ZW1Gb250LCJTZWdvZSBVSSIsUm9ib3RvLCJIZWx2ZXRpY2EgTmV1ZSIsQXJpYWwsc2Fucy1zZXJpZiwiQXBwbGUgQ29sb3IgRW1vamkiLCJTZWdvZSBVSSBFbW9qaSIsIlNlZ29lIFVJIFN5bWJvbCIsIk5vdG8gQ29sb3IgRW1vamkiOwogICAgfQoKICAK"},{"version":3,"sources":["Piechart.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Piechart.vue","sourceRoot":"src/portal/analytics/components","sourcesContent":["<template>\n  <div id=\"chart\">\n  <svg width=\"700\" height=\"3000\" id=\"svg\" />\n  </div>\n</template>\n\n<script>\nconst d3 = require(\"d3\");\nexport default {\n  mounted () {\n    console.log(\"Hi\");\n    // for(let i = 0; i < this.data.length; i++) {\n    //   if(Number.isNaN(this.data[i][this.yKey])) {\n    //     this.data = this.data.splice(0,this.data[i]);\n    //   }\n    // }\n    // console.log(this.data);\n    var svg = d3.select(\"#svg\");\n    var width = +svg.attr(\"width\");\n    var height = +400;\n    var margin = { top: 20, left: 0, bottom: 30, right: 0 };\n    var chartWidth = width - (margin.left + margin.right);\n    var chartHeight = height - (margin.top + margin.bottom);\n    \n    // console.log(chartHeight / 2)\n    this.chartLayer = svg\n      .append(\"g\")\n      .attr(\"transform\", `translate(${margin.left}, ${margin.top})`)\n      .style(\"z-index\",\"-1000\" );\n    this.arc = d3\n      .arc()\n      .outerRadius(chartHeight / 2)\n      .innerRadius(0)\n      .padAngle(0.0)\n      .cornerRadius(0)\n    //   .startAngle( function ( d ) { return isNaN( d.startAngle ) ? 0 : d.startAngle; })\n    // .endAngle( function ( d ) { return isNaN( d.endAngle ) ? 0 : d.endAngle; });\n    this.pieG = this.chartLayer\n      .append(\"g\")\n      .attr(\"transform\", `translate(${chartWidth / 4}, ${chartHeight / 2})`);\n\n\n    svg.append('g').attr('class', 'labelName');\n    this.drawChart(this.data,chartHeight);\n\n  },\n  props: {\n    data: Array,\n    xKey: String,\n    yKey: String,\n  },\n  watch: {\n    data: function(newData) {\n      this.drawChart(newData);\n    }\n  },\n  methods: {\n    drawChart: function(data,Height) {\n      var vm = this;\n      const color = d3.scaleOrdinal()\n      // const color = d3.scaleQuantize()\n       .domain(data.map(d => d[vm.xKey]))\n      //  .range(d3.quantize(t => d3.interpolateSpectral  (t * 0.8 + 0.1), data.length).reverse());\n      //  .range(d3.quantize(t => d3.interpolateSpectral  (t * 0.8 + 0.1), data.length).reverse());\n         .range([\"#5d62b5\", \"#29c3be\", \"#f1726e\", \"#fbc53f\", \"#62b58f\", \"#d0743c\",\"#ca0020\",\"#f4a582\",\"#92c5de\",\"#0571b0\", \"#d3fe14\", \"#fec7f8\", \"#0b7b3e\", \"#0bf0e9\",'#E666B3', '#33991A', '#CC9999', '#B3B31A', '#00E680',\n            '#FF9AA2', '#FFB7B2', '#FFDAC1', '#B5EAD7', '#63d2a8', \"#225a4b\", \"#e5df73\", '#6666FF','#ff0000\t','#a2798f','#d7c6cf','#e88758','#b13a15','#6d3656','#fffa90','#a4ffaa','#a6cbff','#8500f9','#b077ba','\t#765284','#984b67','#9c624e','#feb8ff','#9be3bd','#775934','#008385','#6a2ca1','#e60e68','#ff6d01','#fee9d3'\n            ]);\n\n      var arcs = d3\n        .pie()\n        .sort(null)\n        .value(function(d) {\n          return d[vm.yKey];\n        })(data);\n      var block = this.pieG.selectAll(\".arc\").data(arcs);\n      block.select(\"path\").attr(\"d\", this.arc);\n      var newBlock = block\n        .enter()\n        .append(\"g\")\n        .attr(\"id\", function(d, i) {\n          return  i;\n        })\n        .classed(\"arc\", true);\n        var getAngle = function (d) {\n         return (180 / Math.PI * (d.startAngle + d.endAngle) / 2 - 90);\n         };\n\n      newBlock\n        .append(\"path\")\n        .attr(\"d\", this.arc)\n        .attr(\"id\", function(d, i) {\n          return \"arc-\" + i;\n        })\n        .attr(\"fill\", d => color(d.data[vm.xKey]))\n        .transition()\n        .duration(function(d, i) {\n            return i * 100;\n          }).duration(1200)\n        .attrTween('d', function(d) {\n        var i = d3.interpolate(d.startAngle+0.1, d.endAngle);\n        return function(t) {\n            d.endAngle = i(t);\n          return vm.arc(d);\n        }\n      });\n\n    // d3.select(\"#svg\").selectAll(\"text\").data(data)\n    // .enter()\n    // .append(\"text\")\n    // .attr(\"text-anchor\", \"middle\")\n    // .attr(\"x\", function(d) {\n    //   console.log(d.startAngle, arcs(d.startAngle));\n    //     var a = d.startAngle + (d.endAngle - d.startAngle)/2 - Math.PI/2;\n    //     d.cx = Math.cos(a) * ((Height / 2) - 75);\n    //     return d.x = Math.cos(a) * ((Height / 2) - 20);\n    // })\n    // .attr(\"y\", function(d) {\n    //     var a = d.startAngle + (d.endAngle - d.startAngle)/2 - Math.PI/2;\n    //     d.cy = Math.sin(a) * ((Height / 2) - 75);\n    //     return d.y = Math.sin(a) * ((Height / 2) - 20);\n    // })\n    // .text(function(d) { return d[vm.yKey]; })\n    // .each(function(d) {\n    //     var bbox = this.getBBox();\n    //     d.sx = d.x - bbox.width/2 - 2;\n    //     d.ox = d.x + bbox.width/2 + 2;\n    //     d.sy = d.oy = d.y + 5;\n    // });\n\n    // var label = \n     var outerArc = d3.arc()\n                .outerRadius((Height/2) * 0.9)\n                .innerRadius((Height/2) * 0.9);\n      d3.select(\"#svg\").select('.labelName').selectAll('text')\n      .data(data)\n    // newBlock\n      .enter().append('text')\n      .attr('dy', '.35em')\n      .html(function(d) {\n          // add \"key: value\" for given category. Number inside tspan is bolded in stylesheet.\n          // console.log(d);\n          return d[vm.xKey] + ': <tspan>' + (d[vm.yKey]) + '</tspan>';\n      })\n      .attr('transform', function(d) {\n\n          // effectively computes the centre of the slice.\n          // see https://github.com/d3/d3-shape/blob/master/README.md#arc_centroid\n          var pos = outerArc.centroid(d);\n          // changes the point to be on left or right depending on where label is.\n          console.log(d);\n          pos[0] = (Height/2) * 0.95 * (midAngle(d) < Math.PI ? 1 : -1);\n          // console.log(vm.arc.centroid(d))\n          return 'translate(' + pos + ')';\n      })\n      .style('text-anchor', function(d) {\n          // if slice centre is on the left, anchor text to start, otherwise anchor to end\n          return (midAngle(d)) < Math.PI ? 'start' : 'end';\n      });\n\n      function midAngle(d) { return d.startAngle + (d.endAngle - d.startAngle) / 2; }\n\n      var tooltip = \n        d3.select(\"#chart\").append(\"div\").attr(\"class\", \"toolTip\")\n      newBlock.on(\"mouseover\", function(d) {\n         var x = d3.select(this).attr('id');\n           tooltip\n              .style(\"left\", d3.event.pageX - 40 + \"px\")\n              .style(\"top\", d3.event.pageY - 70 + \"px\")\n              .style(\"display\", \"inline-block\")\n              .html((vm.data[x][vm.xKey]) + \"<br>\"  + (vm.data[x][vm.yKey]).toFixed(2));\n      });\n\n      newBlock.on(\"mouseout\", function() {\n        tooltip.style(\"display\", \"none\"); // hide tooltip for that element\n      });\n\n      newBlock.on(\"mousemove\", function(d) {\n        tooltip\n          .style(\"top\", d3.event.layerY + 10 + \"px\") \n          .style(\"left\", d3.event.layerX + 10 + \"px\"); \n      });\n\n      setTimeout(() => {\n        \n      \n      const g = d3.select(\"#chart\")\n            .append('svg');\n      const l =  d3.select(\"#svg\").append('g')\n            .attr(\"transform\", function(d,i){\n            return \"translate(20,\" + (i * 15 + 20) + \")\"; // place each legend on the right and bump each one down 15 pixels\n          });\n      const xl = d3.scaleBand()\n        \t.range([0, 500])\n        \t.padding(1)\n        \t.domain(this.data.map(d => d[vm.xKey]))\n        ;\n      const legend = l.selectAll('.chart-legend')\n        \t.data(color.domain())\n        \t.enter()\n        \t.append('g')\n          .attr('class', 'chart-legend')\n          .attr('id', 'legend')\n          .attr(\"dy\", 2)\n          .attr(\"dx\", 2)\n          .attr('transform', (d, i) => `translate(400,` + (i * 19 + 30) +`)`);\n          \n       legend.append('rect')\n        \t.attr('width', 13)\n        \t.attr('height', 12)\n        \t.style('fill', color)\n        ;\n        \n        legend.append('text')\n        \t.attr('x', 20)\n          .attr('y', 10)\n          .style('color', \"blue\")\n          .text(d => d)\n        ;\n\n      }, 900);\n        \n    }\n  }\n};\n</script>\n<style>\n/* .toolTip {\n  position: absolute;\n  display: none;\n  min-width: 80px;\n  height: auto;\n  background: none repeat scroll 0 0 #ffffff;\n  border: 1px solid #6F257F;\n  padding: 14px;\n  text-align: center;\n} */\n .chart-legend {\n    font-weight: 50 !important;\n    font-size: 15px;\n    font-family: -apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,\"Helvetica Neue\",Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\",\"Segoe UI Symbol\",\"Noto Color Emoji\";\n    }\n\n  \n</style>"]}]}