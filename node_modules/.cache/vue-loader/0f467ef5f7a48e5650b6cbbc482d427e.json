{"remainingRequest":"/home/vimalesh/Learning/devops_ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/vimalesh/Learning/devops_ui/src/portal/Chatbot/Dashboard/HR Management/Recruitment.vue?vue&type=style&index=0&id=3e7314fe&scoped=true&lang=css&","dependencies":[{"path":"/home/vimalesh/Learning/devops_ui/src/portal/Chatbot/Dashboard/HR Management/Recruitment.vue","mtime":1655466542524},{"path":"/home/vimalesh/Learning/devops_ui/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vimalesh/Learning/devops_ui/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/vimalesh/Learning/devops_ui/node_modules/@vue/cli-service/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/vimalesh/Learning/devops_ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vimalesh/Learning/devops_ui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoucHJldmlvdXMgewogIGJhY2tncm91bmQtY29sb3I6ICNmMWYxZjE7CiAgY29sb3I6IGJsYWNrOwp9Ci5yb3VuZCB7CiAgYm9yZGVyLXJhZGl1czogNTAlOwp9Cg=="},{"version":3,"sources":["Recruitment.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA44BA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Recruitment.vue","sourceRoot":"src/portal/Chatbot/Dashboard/HR Management","sourcesContent":["<template>\n  <div>\n    <div class=\"spinner\" id=\"spinner\" v-show=\"spinnerOn\"></div>\n    <div class=\"dash-cont\">\n      <div class=\"container-fluid\">\n        <div class=\"card dash-card\">\n          <div\n            class=\"\n              card-header\n              d-block d-sm-flex\n              flex-wrap\n            \"\n            style=\"padding: 20px 22px\"\n          >\n            <a v-if=\"Boolean(selected_position)\" @click=\"get_position_details()\" class=\"page-link\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"8.667\" height=\"15.204\" viewBox=\"0 0 8.667 15.204\"><g data-v-3e7314fe=\"\" id=\"arrow-point-to-left\" transform=\"translate(105.806 15.204) rotate(180)\"><path data-v-3e7314fe=\"\" id=\"Path_1136\" data-name=\"Path 1136\" d=\"M105.493,8.354l-6.537,6.537a1.065,1.065,0,1,1-1.506-1.506L103.235,7.6,97.45,1.817A1.065,1.065,0,0,1,98.956.312l6.537,6.537a1.065,1.065,0,0,1,0,1.505Z\" transform=\"translate(0 0)\" fill=\"#9499ae\"></path></g></svg></a>\n            <h3 v-if=\"Boolean(selected_position)\" style=\"margin: 2px 15px;\">\n              Candidate list for {{ selected_position.position_name }}\n            </h3>\n            <h3 v-else class=\"mb-sm-0\" style=\"margin: 2px 15px;\">\n              Positions\n            </h3>\n            <div\n              class=\"ml-auto card-act d-flex m-0\"\n              v-if=\"candidates_list.length > 0 || positions_list.length > 0\"\n            >\n              <input\n                class=\"form-control search-bar\"\n                id=\"search_bar\"\n                placeholder=\"Search here\"\n                v-model.trim=\"search_name\"\n                v-on:keyup=\"callsearch\"\n              />\n              <a\n                type=\"button\"\n                v-if=\"isVisibleSearchClear\"\n                class=\"btn bg-transparent mt-auto mb-auto py-0\"\n                @click=\"clear_search_name\"\n                style=\"margin-left: -40px; z-index: 10\"\n              >\n                <img src=\"/img/close-icn.png\" alt />\n              </a>\n              <a\n                href=\"#\"\n                class=\"darkblue-btn\"\n                @click=\"callsearch\"\n                id=\"search_btn\"\n              >\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n                  width=\"14\"\n                  height=\"14\"\n                >\n                  <path\n                    d=\"M13.809011327100071,12.965505435601472 L9.30910012117823,8.49330664854199 C10.007392079586584,7.596111589605521 10.38512817619458,6.499157170138106 10.38512817619458,5.345374656726532 c0,-1.3810948891881802 -0.5423458634784514,-2.676086605733705 -1.523073527148749,-3.6524965835014083 c-0.9807276636702976,-0.9764099777677033 -2.287209392305289,-1.5136937750578685 -3.6751296371814526,-1.5136937750578685 s-2.6944019735111544,0.5390058607430178 -3.6751296371814526,1.5136937750578685 C0.5293349766245179,2.667565987539975 -0.011278152465820316,3.9642797675383576 -0.011278152465820316,5.345374656726532 c0,1.3793728257353273 0.5423458634784514,2.6778086691865575 1.523073527148749,3.6524965835014083 C2.492523038353222,9.974281217995648 3.7972720326001044,10.51156501528581 5.18692501186438,10.51156501528581 c1.160932040033745,0 2.2629511108717475,-0.37540983272197437 3.165705727077092,-1.0676793407689171 l4.499911205921844,4.470476723606628 a0.1420842198250257,0.14120920313395363 0 0 0 0.20099718902076805,0 l0.7554721932159904,-0.7490976019910955 a0.1420842198250257,0.14120920313395363 0 0 0 0,-0.19975936053095905 zM7.931576282630728,8.073123166045836 C7.196896902072058,8.80155600660269 6.2231001759542055,9.20279679111746 5.18692501186438,9.20279679111746 s-2.0099718902076775,-0.4012407845147706 -2.744651270766347,-1.1296736250716286 C1.709327094927478,7.342968262036121 1.3055999824978375,6.37516860153268 1.3055999824978375,5.345374656726532 s0.4037271124296458,-1.99931566876244 1.1366737586002036,-2.727748509319298 C3.1769531216567026,1.8891933068503817 4.150749847774562,1.4879525223356067 5.18692501186438,1.4879525223356067 s2.0117046245957884,0.3995187210619175 2.744651270766347,1.1296736250716286 S9.06825004123093,4.315580711920385 9.06825004123093,5.345374656726532 s-0.4037271124296458,1.99931566876244 -1.1366737586002036,2.727748509319298 z\"\n                    fill=\"#fff\"\n                  />\n                </svg>\n              </a>\n            </div>\n          </div>\n          <div class=\"card-body\">\n            <div class=\"table-box\" v-if=\"Boolean(selected_position) && candidates_list.length > 0\">\n              <div class=\"table-responsive\">\n                <table class=\"table\">\n                  <thead>\n                    <tr>\n                      <th scope=\"col\">\n                        <div class=\"form-check checkbox checkbox-success\">\n                          <label\n                            class=\"form-check-label checkbox checkbox-success\"\n                          >\n                            <input\n                              class=\"form-check-input\"\n                              id=\"selectall\"\n                              type=\"checkbox\"\n                              @click=\"check_list_array('all')\"\n                            />\n                            <span class=\"icn\"></span>\n                          </label>\n                        </div>\n                      </th>\n                      <th scope=\"col\" v-for=\"(col_name, index) in candidates_list[0].CandidateDetails\" :key=\"index\">\n                        {{col_name.key_name}}\n                      </th>\n                      <!-- <th scope=\"col\" style=\"width: 10%\">ACTION</th> -->\n                    </tr>\n                  </thead>\n                  <tbody v-for=\"(candidate, index) in candidates_list\" :key=\"index\">\n                    <tr>\n                      <th scope=\"col\">\n                        <div class=\"form-check checkbox-success\">\n                          <label\n                            class=\"form-check-label checkbox checkbox-success\"\n                          >\n                            <input\n                              class=\"form-check-input\"\n                              type=\"checkbox\"\n                              @change=\"check_list_array(index)\"\n                            />\n                            <span class=\"icn\"></span>\n                          </label>\n                        </div>\n                      </th>\n                      <td v-for=\"(detail, index) in candidate.CandidateDetails\" :key=\"index\">\n                        <div v-if=\"detail.key_name == 'resume'\">\n                          Hii\n                        </div>\n                        {{detail.key_value}}\n                      </td>\n                    </tr>\n                  </tbody>\n                </table>\n              </div>\n            </div>\n            <div class=\"card col-sm-12\" v-if=\"!Boolean(selected_position)\">\n              <div class=\"row m-0 p-0\">\n                <div v-for=\"(position, index) in positions_list\" :key=\"index\">\n                  <div class=\"col-sm-12 p-3\">\n                    <div\n                      class=\"card border-1\"\n                      style=\"padding: 12px 12px 12px 0; height: 135px\"\n                    >\n                      <a\n                        href=\"javascript:void(0)\"\n                        class=\"mx-auto\"\n                        data-toggle=\"modal\"\n                        data-target=\"#widget_code_modal\"\n                        @click=\"selected_position = position; get_candidates_details()\"\n                      >\n                        <div class=\"d-flex\">\n                          <h1\n                            class=\"p-2\"\n                            style=\"\n                              font-size: 70px;\n                              width: 93px;\n                              text-align: center;\n                              margin-top: 0px;\n                            \"\n                          >\n                            {{ position.Count.New }}\n                          </h1>\n                          <div style=\"padding-top: 18px; width: 135px\">\n                            <h4 style=\"margin-bottom: 0\">\n                              {{ position.position_name }}\n                            </h4>\n                            <p>\n                              ( {{ position.Count.total_count }} Candidates )\n                            </p>\n                          </div>\n                          <div>\n                            <vc-donut \n                              :sections=\"sections\"\n                              :size=\"100\" unit=\"px\" :thickness=\"30\"\n                              >Basic donut</vc-donut>\n                          </div>\n                        </div>\n                      </a>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div v-if=\"positions_list.length == 0 && !Boolean(selected_position)\">\n              <p class=\"text-center mt-5\">\n                <strong>\n                  You currently have 0 Job positions opened. Please create to\n                  continue.</strong\n                >\n              </p>\n            </div>\n            <div v-if=\"Boolean(selected_position) && candidates_list.length == 0\">\n              <p class=\"text-center mt-5\">\n                <strong>\n                  No data Available</strong\n                >\n              </p>\n            </div>\n            <div\n              class=\"pagin-table\"\n              style=\"margin-top: 2%\"\n              v-if=\"\n              positions_list.length > 0 || candidates_list.length > 0\"\n            >\n              <nav aria-label=\"Page navigation example\">\n                <ul class=\"pagination justify-content-center\">\n                  <li class=\"page-item\">\n                    <a\n                      class=\"page-link\"\n                      href=\"#\"\n                      @click=\"page_require(page_no - 1)\"\n                    >\n                      <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        width=\"8.667\"\n                        height=\"15.204\"\n                        viewBox=\"0 0 8.667 15.204\"\n                      >\n                        <g\n                          id=\"arrow-point-to-left\"\n                          transform=\"translate(105.806 15.204) rotate(180)\"\n                        >\n                          <path\n                            id=\"Path_1136\"\n                            data-name=\"Path 1136\"\n                            d=\"M105.493,8.354l-6.537,6.537a1.065,1.065,0,1,1-1.506-1.506L103.235,7.6,97.45,1.817A1.065,1.065,0,0,1,98.956.312l6.537,6.537a1.065,1.065,0,0,1,0,1.505Z\"\n                            transform=\"translate(0 0)\"\n                            fill=\"#9499ae\"\n                          />\n                        </g>\n                      </svg>\n                    </a>\n                  </li>\n                  <li\n                    :class=\"'page-item ' + pagination_class(pageno)\"\n                    v-for=\"pageno in page_array\"\n                    :key=\"pageno\"\n                  >\n                    <a\n                      v-if=\"pageno == '...s' || pageno == '...l'\"\n                      class=\"page-link\"\n                      href=\"#\"\n                      @click=\"page_require(pageno)\"\n                      >...</a\n                    >\n                    <a\n                      v-if=\"pageno != '...s' && pageno != '...l'\"\n                      class=\"page-link\"\n                      href=\"#\"\n                      @click=\"page_require(pageno)\"\n                      >{{ pageno }}</a\n                    >\n                  </li>\n                  <li class=\"page-item\">\n                    <a\n                      class=\"page-link\"\n                      href=\"#\"\n                      @click=\"page_require(page_no + 1)\"\n                    >\n                      <svg\n                        xmlns=\"http://www.w3.org/2000/svg\"\n                        width=\"8.667\"\n                        height=\"15.204\"\n                        viewBox=\"0 0 8.667 15.204\"\n                      >\n                        <g\n                          id=\"arrow-point-to-right\"\n                          transform=\"translate(-97.139 0)\"\n                        >\n                          <path\n                            id=\"Path_1136\"\n                            data-name=\"Path 1136\"\n                            d=\"M105.493,8.354l-6.537,6.537a1.065,1.065,0,1,1-1.506-1.506L103.235,7.6,97.45,1.817A1.065,1.065,0,0,1,98.956.312l6.537,6.537a1.065,1.065,0,0,1,0,1.505Z\"\n                            transform=\"translate(0 0)\"\n                            fill=\"#9499ae\"\n                          />\n                        </g>\n                      </svg>\n                    </a>\n                  </li>\n                </ul>\n              </nav>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\nimport Swal from \"sweetalert2\";\nimport api_calls from \"@/portal/api_calls\";\nimport Vue from 'vue'\nimport Donut from 'vue-css-donut-chart';\nimport 'vue-css-donut-chart/dist/vcdonut.css';\nVue.use(Donut);\n\nexport default {\n  name: \"Recruitment\",\n  data() {\n    return {\n      company_id: this.$session.get(\"UserInformation\").company_id,\n      company_name: this.$session.get(\"UserInformation\").company_name,\n      sections: [\n          { label: 'Red section', value: 25, color: 'red' },\n          { label: 'Green section', value: 25, color: 'green' },\n          { label: 'Blue section', value: 25, color: 'blue' }\n        ],\n      selected_position: null,\n      positions_list: [],\n      selected_candidate: null,\n      candidates_list: [],\n      checked_list: [],\n      page_no: 1,\n      per_page: 10,\n      total_pages: 0,\n      page_array: [],\n      search_name: \"\",\n      spinnerOn: false,\n      isVisibleSearchClear: false,\n    };\n  },\n  watch: {\n    search_name() {\n      if (this.search_name === \"\") {\n        if(Boolean(this.selected_position)) {\n          this.get_candidates_details();\n        }else {\n          this.get_position_details();\n        }\n        this.isVisibleSearchClear = false;\n      } else if (this.search_name !== \"\") {\n        this.isVisibleSearchClear = true;\n      }\n    },\n  },\n  created() {\n    this.get_position_details();\n    // company_id = request.json.get('company_id', None)\n    // company_name = request.json.get('company_name', None)\n    // is_get = request.json.get('is_get', False)\n    // get_all_positions = request.json.get('get_all_positions', False)\n    // req_position = request.json.get('required_position', None)\n    // filter_by = request.json.get('filter_by', ['All'])\n    // page_no = request.json.get('page_no', 1)\n    // per_page = request.json.get('per_page', 10)\n  },\n  mounted() {\n    var vm = this;\n    $(\"#selectall\").click(function () {\n      if ($(this).is(\":checked\")) {\n        $(\"input:checkbox\").prop(\"checked\", true);\n      } else {\n        vm.checked_list = [];\n        $(\"input:checkbox\").prop(\"checked\", false);\n      }\n    });\n  },\n  methods: {\n    clear_search_name() {\n      this.search_name = \"\";\n    },\n    get_candidates_details() {\n      this.spinnerOn = true;\n      this.checked_list = [];\n      this.positions_list = [];\n      $(\"input:checkbox\").prop(\"checked\", false);\n      axios\n        .post(\n          api_calls.hr_candidate_details(),\n          {\n            company_id: this.$session.get(\"UserInformation\").company_id,\n            company_name: this.$session.get(\"UserInformation\").company_name,\n            page_no: 1,\n            per_page: this.per_page,\n            is_get: true,\n            required_position: this.selected_position.position_name,\n            filter_by: [\"All\"],\n          },\n          {\n            headers: {\n              Authorization: `Bearer ${this.$session.get(\"at\")}`,\n            },\n          }\n        )\n        .then((response) => {\n          console.log(\"Selected position candidates data\", response);\n          this.spinnerOn = false;\n          if (\n            response.data != \"\" &&\n            response.data != null &&\n            response.data != \"Internal server Error\"\n          ) {\n            this.number_of_rows = response.data.count;\n            this.total_pages = Math.ceil(\n              this.number_of_rows / this.per_page\n            );\n            this.setpagination(this.page_no);\n            this.candidates_list = response.data.data\n          } else {\n            Swal({\n              type: \"error\",\n              text: \"Internal Server Error\",\n              timer: 2000,\n            });\n          }\n        })\n        .catch((e) => {\n          if (\n            e.response.status === 410 ||\n            e.response.status === 440 ||\n            e.response.status === 409\n          ) {\n            this.$root.$emit(\"Session_Expired\", e.response.data);\n          }\n        });\n    },\n    get_position_details() {\n      this.empty_variables();\n      this.spinnerOn = true;\n      axios\n        .post(\n          api_calls.hr_candidate_details(),\n          {\n            company_id: this.$session.get(\"UserInformation\").company_id,\n            company_name: this.$session.get(\"UserInformation\").company_name,\n            page_no: 1,\n            per_page: 6,\n            is_get: true,\n            get_all_positions: true,\n          },\n          {\n            headers: {\n              Authorization: `Bearer ${this.$session.get(\"at\")}`,\n            },\n          }\n        )\n        .then((response) => {\n          console.log(\"All Position data\", response);\n          this.spinnerOn = false;\n          if (\n            response.data != \"\" &&\n            response.data != null &&\n            response.data != \"Internal server Error\"\n          ) {\n            this.number_of_rows = response.data.count;\n            this.total_pages = Math.ceil(\n              this.number_of_rows / this.per_page\n            );\n            this.setpagination(this.page_no);\n            this.positions_list = response.data.data;\n          } else {\n            Swal({\n              type: \"error\",\n              text: \"Internal Server Error\",\n              timer: 2000,\n            });\n          }\n        })\n        .catch((e) => {\n          if (\n            e.response.status === 410 ||\n            e.response.status === 440 ||\n            e.response.status === 409\n          ) {\n            this.$root.$emit(\"Session_Expired\", e.response.data);\n          }\n        });\n    },\n    check_list_array(index) {\n      if (index == \"all\") {\n        this.checked_list = [];\n        var role_length = this.role_name.length;\n        for (var i = 0; i < role_length; i++) {\n          this.checked_list.push(i);\n        }\n      } else {\n        if (event.target.checked == true) {\n          if (!this.checked_list.includes(index)) {\n            this.checked_list.push(index);\n          }\n        } else if (event.target.checked == false) {\n          var selectall = document.querySelector(\"#selectall\");\n          if (selectall.checked == true) {\n            selectall.checked = false;\n          }\n          var temp = this.checked_list.filter((role) => {\n            return role !== index;\n          });\n          this.checked_list = temp;\n        }\n      }\n    },\n    page_require(page) {\n      if (page == 0 || page == this.total_pages + 1) {\n      } else {\n        if (this.search_name == \"\") {\n          if (page == \"...s\") {\n          this.page_no = Math.ceil((1 + this.page_no) / 2);\n          } else if (page == \"...l\") {\n            this.page_no = Math.ceil((this.total_pages + this.page_no) / 2);\n          } else {\n            this.page_no = page;\n          }\n          $(\"input:checkbox\").prop(\"checked\", false);\n          this.spinnerOn = true;\n          this.checked_list = [];\n          if(Boolean(this.selected_position)) {\n            axios\n            .post(\n              api_calls.hr_candidate_details(),\n              {\n                company_id: this.company_id,\n                company_name: this.company_name,\n                is_get: true,\n                page_no: this.page_no,\n                per_page: 10,\n                required_position: this.selected_position.position_name,\n                filter_by: [\"All\"],\n              },\n              {\n                headers: {\n                  Authorization: `Bearer ${this.$session.get(\"at\")}`,\n                },\n              }\n            )\n            .then((response) => {\n              this.spinnerOn = false;\n              this.candidates_list = [];\n              if (response.data != \"\" &&\n                response.data != null &&\n                response.data != \"Internal server Error\" &&\n                (!response.data.errors)\n              ) {\n                this.number_of_rows = response.data.count;\n                this.total_pages = Math.ceil(\n                  this.number_of_rows / this.per_page\n                );\n                this.candidates_list = response.data.data;\n                this.setpagination(this.page_no);\n              }\n            })\n            .catch((e) => {\n              this.spinnerOn = false;\n              if (\n                e.response.status === 410 ||\n                e.response.status === 440 ||\n                e.response.status === 409\n              ) {\n                this.$root.$emit(\"Session_Expired\", e.response.data);\n              }\n            });\n          }else {\n            axios\n            .post(\n              api_calls.hr_candidate_details(),\n              {\n                company_id: this.company_id,\n                company_name: this.company_name,\n                is_get: true,\n                get_all_positions: true,\n                page_no: this.page_no,\n                per_page: 6,\n              },\n              {\n                headers: {\n                  Authorization: `Bearer ${this.$session.get(\"at\")}`,\n                },\n              }\n            )\n            .then((response) => {\n              this.spinnerOn = false;\n              this.positions_list = [];\n              if (response.data != \"\" &&\n                response.data != null &&\n                response.data != \"Internal server Error\" &&\n                (!response.data.errors)\n              ) {\n                this.number_of_rows = response.data.count;\n                this.total_pages = Math.ceil(\n                  this.number_of_rows / 6\n                );\n                this.positions_list = response.data.data;\n                this.setpagination(this.page_no);\n              }\n            })\n            .catch((e) => {\n              this.spinnerOn = false;\n              if (\n                e.response.status === 410 ||\n                e.response.status === 440 ||\n                e.response.status === 409\n              ) {\n                this.$root.$emit(\"Session_Expired\", e.response.data);\n              }\n            });\n          }\n        }else {\n          if (page == \"...s\") {\n            this.page_no = Math.ceil((1 + this.page_no) / 2);\n          } else if (page == \"...l\") {\n            this.page_no = Math.ceil((this.total_pages + this.page_no) / 2);\n          } else {\n            this.page_no = page;\n          }\n          $(\"input:checkbox\").prop(\"checked\", false);\n          this.spinnerOn = true;\n          this.checked_list = [];\n          if(Boolean(this.selected_position)) {\n            axios\n            .post(\n              api_calls.hr_candidate_details(),\n              {\n                company_id: this.company_id,\n                company_name: this.company_name,\n                is_search: true,\n                search_key: this.search_name,\n                page_no: this.page_no,\n                per_page: 10,\n                required_position: this.selected_position.position_name,\n                filter_by: [\"All\"],\n              },\n              {\n                headers: {\n                  Authorization: `Bearer ${this.$session.get(\"at\")}`,\n                },\n              }\n            )\n            .then((response) => {\n              this.spinnerOn = false;\n              this.candidates_list = [];\n              if (response.data != \"\" &&\n                response.data != null &&\n                response.data != \"Internal server Error\" &&\n                (!response.data.errors)\n              ) {\n                this.number_of_rows = response.data.count;\n                this.total_pages = Math.ceil(\n                  this.number_of_rows / this.per_page\n                );\n                this.candidates_list = response.data.data;\n                this.setpagination(this.page_no);\n              }\n            })\n            .catch((e) => {\n              this.spinnerOn = false;\n              if (\n                e.response.status === 410 ||\n                e.response.status === 440 ||\n                e.response.status === 409\n              ) {\n                this.$root.$emit(\"Session_Expired\", e.response.data);\n              }\n            });\n          }else {\n            axios\n            .post(\n              api_calls.hr_candidate_details(),\n              {\n                company_id: this.company_id,\n                company_name: this.company_name,\n                is_get: true,\n                is_search: true,\n                search_key: this.search_name,\n                get_all_positions: true,\n                page_no: this.page_no,\n                per_page: 6,\n              },\n              {\n                headers: {\n                  Authorization: `Bearer ${this.$session.get(\"at\")}`,\n                },\n              }\n            )\n            .then((response) => {\n              this.spinnerOn = false;\n              this.positions_list = [];\n              if (response.data != \"\" &&\n                response.data != null &&\n                response.data != \"Internal server Error\" &&\n                (!response.data.errors)\n              ) {\n                this.number_of_rows = response.data.count;\n                this.total_pages = Math.ceil(\n                  this.number_of_rows / 6\n                );\n                this.positions_list = response.data.data;\n                this.setpagination(this.page_no);\n              }\n            })\n            .catch((e) => {\n              this.spinnerOn = false;\n              if (\n                e.response.status === 410 ||\n                e.response.status === 440 ||\n                e.response.status === 409\n              ) {\n                this.$root.$emit(\"Session_Expired\", e.response.data);\n              }\n            });\n          }\n        }\n      }\n    },\n    setpagination(page_no) {\n      this.page_array = [];\n      if (this.total_pages <= 7) {\n        for (let i = 0; i < this.total_pages; i++) {\n          this.page_array.push(i + 1);\n        }\n      } else if (page_no == 1) {\n        for (let i = 0; i < 4; i++) {\n          this.page_array.push(i + 1);\n        }\n        this.page_array.push(\"...l\");\n        this.page_array.push(this.total_pages);\n      } else if (page_no == this.total_pages) {\n        this.page_array.push(1);\n        this.page_array.push(\"...s\");\n        for (let i = this.total_pages - 4; i < this.total_pages; i++) {\n          this.page_array.push(i + 1);\n        }\n      } else if (page_no <= 4) {\n        for (let i = 0; i < page_no + 3; i++) {\n          this.page_array.push(i + 1);\n        }\n        this.page_array.push(\"...l\");\n        this.page_array.push(this.total_pages);\n      } else if (page_no >= this.total_pages - 4) {\n        this.page_array.push(1);\n        this.page_array.push(\"...s\");\n        for (let i = page_no - 4; i < this.total_pages; i++) {\n          this.page_array.push(i + 1);\n        }\n      } else {\n        this.page_array.push(1);\n        this.page_array.push(\"...s\");\n        for (let i = page_no - 3; i <= page_no + 3; i++) {\n          this.page_array.push(i);\n        }\n        this.page_array.push(\"...l\");\n        this.page_array.push(this.total_pages);\n      }\n    },\n    pagination_class(index) {\n      if (index == this.page_no) {\n        return \" active\";\n      } else {\n        return \"\";\n      }\n    },\n    callsearch() {\n      // if (event.keyCode === 13) {\n        if (Boolean(this.selected_position)) {\n          this.search_candidate();\n        }else {\n          this.search_position();\n        }\n      // }\n    },\n    search_position() {\n      if (this.search_name != \"\") {\n        this.spinnerOn = true;\n        axios\n          .post(\n            api_calls.hr_candidate_details(),\n            {\n              company_id: this.$session.get(\"UserInformation\").company_id,\n              company_name: this.$session.get(\"UserInformation\").company_name,\n              is_search: true,\n              search_key: this.search_name,\n              get_all_positions: true,\n              per_page: 6,\n              page_no: 1,\n            },\n            {\n              headers: {\n                Authorization: `Bearer ${this.$session.get(\"at\")}`,\n              },\n            }\n          )\n          .then((response) => {\n            this.spinnerOn = false;\n            console.log(\"Candidate search\", response);\n            if (\n              response.data != null &&\n              response.data != \"Internal server Error\" &&\n              (!response.data.errors)\n            ) {\n              this.number_of_rows = response.data.count;\n              this.total_pages = Math.ceil(\n                this.number_of_rows / 6\n              );\n              this.setpagination(this.page_no);\n              this.positions_list = response.data.data;\n            } else if (response.data.MSG == \"Internal Server Error\") {\n              Swal({\n                text: \"Internal Server Error\",\n                toast: true,\n                position: \"top-end\",\n                type: \"warning\",\n                showConfirmButton: false,\n                timer: 2000,\n              });\n            } else {\n              Swal({\n                text: \"Internal Server Error\",\n                toast: true,\n                position: \"top-end\",\n                type: \"error\",\n                showConfirmButton: false,\n                timer: 2000,\n              });\n            }\n          })\n          .catch((e) => {\n            if (\n              e.response.status === 410 ||\n              e.response.status === 440 ||\n              e.response.status === 409\n            ) {\n              this.$root.$emit(\"Session_Expired\", e.response.data);\n            }\n          });\n      } else {\n        Swal({\n          text: \"Enter proper data for searching\",\n          toast: true,\n          position: \"top-end\",\n          type: \"warning\",\n          showConfirmButton: false,\n          timer: 2000,\n        });\n      }\n    },\n    search_candidate() {\n      if (this.search_name != \"\") {\n        this.checked_list = [];\n        $(\"input:checkbox\").prop(\"checked\", false);\n        this.spinnerOn = true;\n        axios\n          .post(\n            api_calls.hr_candidate_details(),\n            {\n              company_id: this.$session.get(\"UserInformation\").company_id,\n              company_name: this.$session.get(\"UserInformation\").company_name,\n              is_search: true,\n              search_key: this.search_name,\n              required_position: this.selected_position.position_name,\n              filter_by: [\"All\"],\n              per_page: this.per_page,\n              page_no: 1,\n            },\n            {\n              headers: {\n                Authorization: `Bearer ${this.$session.get(\"at\")}`,\n              },\n            }\n          )\n          .then((response) => {\n            this.spinnerOn = false;\n            console.log(\"Candidate search\", response);\n            if (\n              response.data != null &&\n              response.data != \"Internal server Error\" &&\n              (!response.data.errors)\n            ) {\n              this.number_of_rows = response.data.count;\n              this.total_pages = Math.ceil(\n                this.number_of_rows / this.per_page\n              );\n              this.setpagination(this.page_no);\n              this.candidates_list = response.data.data;\n            } else if (response.data.MSG == \"Internal Server Error\") {\n              Swal({\n                text: \"Internal Server Error\",\n                toast: true,\n                position: \"top-end\",\n                type: \"warning\",\n                showConfirmButton: false,\n                timer: 2000,\n              });\n            } else {\n              Swal({\n                text: \"Internal Server Error\",\n                toast: true,\n                position: \"top-end\",\n                type: \"error\",\n                showConfirmButton: false,\n                timer: 2000,\n              });\n            }\n          })\n          .catch((e) => {\n            if (\n              e.response.status === 410 ||\n              e.response.status === 440 ||\n              e.response.status === 409\n            ) {\n              this.$root.$emit(\"Session_Expired\", e.response.data);\n            }\n          });\n      } else {\n        Swal({\n          text: \"Enter proper data for searching\",\n          toast: true,\n          position: \"top-end\",\n          type: \"warning\",\n          showConfirmButton: false,\n          timer: 2000,\n        });\n      }\n    },\n    empty_variables() {\n      this.candidates_list = [];\n      this.checked_list = [];\n      $(\"input:checkbox\").prop(\"checked\", false);\n      this.selected_position = null;\n      this.positions_list = [];\n      this.selected_candidate = null;\n      this.search_name = \"\";\n    }\n  },\n};\n</script>\n<style scoped>\n.previous {\n  background-color: #f1f1f1;\n  color: black;\n}\n.round {\n  border-radius: 50%;\n}\n</style>"]}]}