{"remainingRequest":"/home/vimalesh/Learning/devops_ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/vimalesh/Learning/devops_ui/src/portal/Chatbot/Dashboard/Data Inputs/AddQuestions.vue?vue&type=style&index=1&id=c3fc4a9e&scoped=true&lang=css&","dependencies":[{"path":"/home/vimalesh/Learning/devops_ui/src/portal/Chatbot/Dashboard/Data Inputs/AddQuestions.vue","mtime":1660042032563},{"path":"/home/vimalesh/Learning/devops_ui/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vimalesh/Learning/devops_ui/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/vimalesh/Learning/devops_ui/node_modules/@vue/cli-service/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/vimalesh/Learning/devops_ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vimalesh/Learning/devops_ui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLm11bHRpc2VsZWN0X190YWdzIHsKICBib3JkZXI6IDFweCBzb2xpZCAjZGJlMmU4Owp9CnRyIHRkIHsKICBoZWlnaHQ6IDUwcHg7Cn0KLmVkaXQtY29sdW1uIHsKICBoZWlnaHQ6IDI5cHggIWltcG9ydGFudDsKfQo="},{"version":3,"sources":["AddQuestions.vue"],"names":[],"mappingsfile":"AddQuestions.vue","sourceRoot":"src/portal/Chatbot/Dashboard/Data Inputs","sourcesContent":["<template>\n  <!-- TODO Remove the company_id prefix for intents -->\n  <div class=\"dash-cont\">\n    <div class=\"spinner\" id=\"spinner\" v-show=\"spinnerOn\"></div>\n    <div class=\"container-fluid\">\n      <div class=\"card dash-card\">\n        <div\n          class=\"card-header d-block d-sm-flex flex-wrap justify-content-between\"\n        >\n          <h4 class=\"mb-sm-0\">Questions</h4>\n          <div class=\"card-act d-flex flex-wrap\">\n            <input\n              class=\"form-control search-bar\"\n              id=\"search_bar\"\n              placeholder=\"Search here\"\n              v-model=\"search_name\"\n              v-on:keyup=\"callsearch\"\n            />\n            <a type=\"button\" v-if=\"isVisibleSearchClear\" class=\"btn bg-transparent mt-auto mb-auto py-0\" @click=\"clear_search_name\" style=\"margin-left: -40px; z-index: 10;\">\n                <img src=\"/img/close-icn.png\" alt />\n            </a>\n            <a\n              href=\"#\"\n              class=\"darkblue-btn\"\n              @click=\"search_product\"\n              id=\"search_btn\"\n            >\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n                width=\"14\"\n                height=\"14\"\n              >\n                <path\n                  d=\"M13.809011327100071,12.965505435601472 L9.30910012117823,8.49330664854199 C10.007392079586584,7.596111589605521 10.38512817619458,6.499157170138106 10.38512817619458,5.345374656726532 c0,-1.3810948891881802 -0.5423458634784514,-2.676086605733705 -1.523073527148749,-3.6524965835014083 c-0.9807276636702976,-0.9764099777677033 -2.287209392305289,-1.5136937750578685 -3.6751296371814526,-1.5136937750578685 s-2.6944019735111544,0.5390058607430178 -3.6751296371814526,1.5136937750578685 C0.5293349766245179,2.667565987539975 -0.011278152465820316,3.9642797675383576 -0.011278152465820316,5.345374656726532 c0,1.3793728257353273 0.5423458634784514,2.6778086691865575 1.523073527148749,3.6524965835014083 C2.492523038353222,9.974281217995648 3.7972720326001044,10.51156501528581 5.18692501186438,10.51156501528581 c1.160932040033745,0 2.2629511108717475,-0.37540983272197437 3.165705727077092,-1.0676793407689171 l4.499911205921844,4.470476723606628 a0.1420842198250257,0.14120920313395363 0 0 0 0.20099718902076805,0 l0.7554721932159904,-0.7490976019910955 a0.1420842198250257,0.14120920313395363 0 0 0 0,-0.19975936053095905 zM7.931576282630728,8.073123166045836 C7.196896902072058,8.80155600660269 6.2231001759542055,9.20279679111746 5.18692501186438,9.20279679111746 s-2.0099718902076775,-0.4012407845147706 -2.744651270766347,-1.1296736250716286 C1.709327094927478,7.342968262036121 1.3055999824978375,6.37516860153268 1.3055999824978375,5.345374656726532 s0.4037271124296458,-1.99931566876244 1.1366737586002036,-2.727748509319298 C3.1769531216567026,1.8891933068503817 4.150749847774562,1.4879525223356067 5.18692501186438,1.4879525223356067 s2.0117046245957884,0.3995187210619175 2.744651270766347,1.1296736250716286 S9.06825004123093,4.315580711920385 9.06825004123093,5.345374656726532 s-0.4037271124296458,1.99931566876244 -1.1366737586002036,2.727748509319298 z\"\n                  fill=\"#fff\"\n                />\n              </svg>\n            </a>\n\n            <a\n              href=\"#\"\n              class=\"darkblue-btn\"\n              title=\"Upload Files\"\n              data-toggle=\"modal\"\n              data-target=\"#file_upload\"\n            >\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"14\"\n                height=\"14\"\n                viewBox=\"0 0 14 13.997\"\n              >\n                <path\n                  d=\"M8.6939946595428,-0.014074647685589529 H1.8307534193786577 a1.7158103100410358,1.38733287383954 0 0 0 -1.7158103100410358,1.38733287383954 v11.09866299071632 a1.7158103100410358,1.38733287383954 0 0 0 1.7158103100410358,1.38733287383954 h10.294861860246215 a1.7158103100410358,1.38733287383954 0 0 0 1.7158103100410358,-1.38733287383954 V4.147923973833031 l-5.147430930123107,-4.16199862151862 zm-0.42895257751025956,9.71133011687678 v2.08099931075931 h-2.5737154650615537 v-2.08099931075931 H3.5465637294196934 l3.4316206200820716,-2.77466574767908 l3.4316206200820716,2.77466574767908 h-2.1447628875512947 zM7.836089504522283,4.841590410752801 V1.0264250076940657 L12.554567857135131,4.841590410752801 H7.836089504522283 z\"\n                  id=\"svg_1\"\n                  class\n                  fill=\"#fff\"\n                />\n              </svg>\n            </a>\n            <a\n              href=\"#\"\n              class=\"darkblue-btn\"\n              @click=\"download_csv\"\n              title=\"Download CSV File\"\n            >\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n                width=\"14\"\n                height=\"14\"\n              >\n                <path\n                  d=\"M8.124046569796448,3.7048888423811563 V-0.0004725085692590319 H0.8684480275323758 C0.385950724471816,-0.0004725085692590319 -0.0022237975393094665,0.29105224477757613 -0.0022237975393094665,0.6534147886572829 v12.641821079713173 c0,0.3623625438797103 0.3881745220111289,0.6538872972265442 0.8706718250716886,0.6538872972265442 h12.18940555100364 c0.4824973030605619,0 0.8706718250716886,-0.2915247533468346 0.8706718250716886,-0.6538872972265442 V4.358776139607697 H8.994718394868137 c-0.47886950378942883,0 -0.8706718250716886,-0.2942492837519449 -0.8706718250716886,-0.6538872972265442 zm2.773452542780442,5.758567464241761 l-3.497924057225508,2.6073755976908415 c-0.24124865153028063,0.18009145977781071 -0.6308742932498614,0.18009145977781071 -0.872122944780142,0 l-3.497924057225508,-2.6073755976908415 C2.661306427325829,9.189096094828278 2.9196057354304337,8.718024787784655 3.437655471348084,8.718024787784655 H5.802255036271947 v-2.1796243240884783 c0,-0.24084848781177734 0.2597504278130543,-0.4359248648176966 0.5804478833811269,-0.4359248648176966 h1.1608957667622521 c0.3206974555680725,0 0.5804478833811269,0.1950763770059196 0.5804478833811269,0.4359248648176966 v2.1796243240884783 h2.3645995649238625 c0.5180497359176551,0 0.7763490440222554,0.47107130704362293 0.4088529778565816,0.7454315188382611 zM13.674579454628462,2.86028441679687 L10.122963968190199,0.1902446197884852 c-0.16325096720094195,-0.12260386822997718 -0.38454672273999646,-0.1907171283577423 -0.6167258760924463,-0.1907171283577423 H9.284942336558702 v3.4873989185415644 h4.643583067049007 v-0.16619635471174685 c0,-0.1716454155219681 -0.09069498177830096,-0.33784177023371487 -0.2539459489792431,-0.46044563846369135 z\"\n                  fill=\"#fff\"\n                />\n              </svg>\n            </a>\n            <a\n              href=\"#\"\n              class=\"darkblue-btn\"\n              data-toggle=\"modal\"\n              data-target=\"#exampleModalCenter\"\n              id=\"add_quesn_btn\"\n              title=\"Add Questions\"\n            >\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"14\"\n                height=\"13.997\"\n                viewBox=\"0 0 14 13.997\"\n              >\n                <path\n                  id=\"Union_13\"\n                  data-name=\"Union 13\"\n                  d=\"M-12684,2058v-5h-5a1,1,0,0,1-1-1,1,1,0,0,1,1-1h5v-5a1,1,0,0,1,1-1,1,1,0,0,1,1,1v5h5a1,1,0,0,1,1,1,1,1,0,0,1-1,1h-5v5a1,1,0,0,1-1,1A1,1,0,0,1-12684,2058Z\"\n                  transform=\"translate(12690.001 -2045.002)\"\n                  fill=\"#fff\"\n                />\n              </svg>\n            </a>\n            <a\n              href=\"#\"\n              class=\"darkblue-btn\"\n              id=\"save_edit\"\n              v-if=\"isGlobalEdit\"\n              @click=\"submit_question\"\n            >\n              Save\n            </a>\n            <a\n              href=\"javascript:void(0)\"\n              class=\"red-btn\"\n              @click=\"delete_selected\"\n              id=\"delete_question\"\n            >\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"14\"\n                height=\"14\"\n                viewBox=\"0 0 14 14\"\n              >\n                <path\n                  id=\"trash-can-outline\"\n                  d=\"M8.375,3v.778H4V5.333h.875V15.444A1.661,1.661,0,0,0,6.625,17h8.75a1.661,1.661,0,0,0,1.75-1.556V5.333H18V3.778H13.625V3H8.375M6.625,5.333h8.75V15.444H6.625V5.333m1.75,1.556v7h1.75v-7H8.375m3.5,0v7h1.75v-7Z\"\n                  transform=\"translate(-4 -3)\"\n                  fill=\"#fff\"\n                />\n              </svg>\n            </a>\n          </div>\n        </div>\n        <div class=\"card-body\" id=\"page\">\n          <div class=\"table-box\">\n            <div class=\"table-responsive\">\n              <table class=\"table\">\n                <thead>\n                  <tr>\n                    <th scope=\"col\">\n                      <div class=\"form-check checkbox checkbox-success\">\n                        <label class=\"form-check-label\">\n                          <input\n                            class=\"form-check-input\"\n                            id=\"selectall\"\n                            type=\"checkbox\"\n                            @change=\"selected_questions('all')\"\n                          />\n                          <span class=\"icn\"></span>\n                        </label>\n                      </div>\n                    </th>\n                    <th\n                      scope=\"col\"\n                      style=\"\n                        width: auto;\n                        display: flex;\n                        justify-content: space-evenly;\n                      \"\n                    >\n                      ACTION\n                      <a\n                        href=\"#\"\n                        @click=\"isGlobalEdit = !isGlobalEdit\"\n                        id=\"global_edit_question_icn\"\n                      >\n                        <svg\n                          xmlns=\"http://www.w3.org/2000/svg\"\n                          width=\"15.392\"\n                          height=\"15.392\"\n                          viewBox=\"0 0 15.392 15.392\"\n                        >\n                          <path\n                            id=\"square-edit-outline\"\n                            d=\"M4.71,3A1.7,1.7,0,0,0,3,4.71V16.682a1.71,1.71,0,0,0,1.71,1.71H16.682a1.71,1.71,0,0,0,1.71-1.71V10.7h-1.71v5.986H4.71V4.71H10.7V3H4.71m10.928.855a.591.591,0,0,0-.41.171L14.185,5.061,16.322,7.2l1.043-1.035a.578.578,0,0,0,0-.812L16.04,4.026a.571.571,0,0,0-.4-.171M13.578,5.668l-6.3,6.311v2.138H9.413l6.3-6.311Z\"\n                            transform=\"translate(-3 -3)\"\n                            fill=\"#9499ae\"\n                          />\n                        </svg>\n                      </a>\n                    </th>\n                    <th scope=\"col\">QUESTION</th>\n                    <th scope=\"col\" style=\"width: 20%\">INTENT</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr v-for=\"(question, index) in questionslist\" :key=\"index\">\n                    <th scope=\"row\">\n                      <div class=\"form-check checkbox checkbox-success\">\n                        <label class=\"form-check-label\">\n                          <input\n                            class=\"form-check-input\"\n                            type=\"checkbox\"\n                            @change=\"selected_questions(index)\"\n                          />\n                          <span class=\"icn\"></span>\n                        </label>\n                      </div>\n                    </th>\n                    <td class=\"action\">\n                      <a href=\"#\" @click=\"edit_question(question)\">\n                        <svg\n                          xmlns=\"http://www.w3.org/2000/svg\"\n                          width=\"15.392\"\n                          height=\"15.392\"\n                          viewBox=\"0 0 15.392 15.392\"\n                          data-toggle=\"modal\"\n                          data-target=\"#exampleModalCenter\"\n                          id=\"edit_quesn_btn\"\n                        >\n                          <path\n                            id=\"square-edit-outline\"\n                            d=\"M4.71,3A1.7,1.7,0,0,0,3,4.71V16.682a1.71,1.71,0,0,0,1.71,1.71H16.682a1.71,1.71,0,0,0,1.71-1.71V10.7h-1.71v5.986H4.71V4.71H10.7V3H4.71m10.928.855a.591.591,0,0,0-.41.171L14.185,5.061,16.322,7.2l1.043-1.035a.578.578,0,0,0,0-.812L16.04,4.026a.571.571,0,0,0-.4-.171M13.578,5.668l-6.3,6.311v2.138H9.413l6.3-6.311Z\"\n                            transform=\"translate(-3 -3)\"\n                            fill=\"#9499ae\"\n                          />\n                        </svg>\n                      </a>\n                      <a\n                        href=\"#\"\n                        id=\"single_delete_question_id\"\n                        @click=\"delete_questions(question)\"\n                      >\n                        <svg\n                          xmlns=\"http://www.w3.org/2000/svg\"\n                          width=\"13.682\"\n                          height=\"15.392\"\n                          viewBox=\"0 0 13.682 15.392\"\n                        >\n                          <path\n                            id=\"trash-can-outline\"\n                            d=\"M8.276,3v.855H4v1.71h.855V16.682a1.71,1.71,0,0,0,1.71,1.71h8.551a1.71,1.71,0,0,0,1.71-1.71V5.565h.855V3.855H13.406V3H8.276M6.565,5.565h8.551V16.682H6.565V5.565m1.71,1.71v7.7h1.71v-7.7H8.276m3.42,0v7.7h1.71v-7.7Z\"\n                            transform=\"translate(-4 -3)\"\n                            fill=\"#f23d3d\"\n                          />\n                        </svg>\n                      </a>\n                    </td>\n                    <td\n                      data-toggle=\"tooltip\"\n                      data-placement=\"bottom\"\n                      :title=\"question.question\"\n                    >\n                      <template v-if=\"!isGlobalEdit\">{{\n                        question.question\n                      }}</template>\n                      <template v-else-if=\"isGlobalEdit\">\n                        <input\n                          class=\"w-100 form-control edit-column\"\n                          placeholder=\"Question\"\n                          v-model=\"global_edit_questions_list[index].question\"\n                      /></template>\n                    </td>\n                    <td>\n                      <template v-if=\"!isGlobalEdit\">{{\n                        question.intent\n                      }}</template>\n                      <template v-else-if=\"isGlobalEdit\">\n                        <multiselect\n                          v-model=\"global_edit_questions_list[index].intent\"\n                          :id=\"'intent' + index\"\n                          :options=\"intentlist\"\n                          :searchable=\"true\"\n                          :close-on-select=\"true\"\n                          :show-labels=\"false\"\n                        >\n                          <span>{{\n                            global_edit_questions_list[index].intent\n                          }}</span>\n                        </multiselect>\n                      </template>\n                    </td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <div\n        class=\"modal fade dash-modal\"\n        id=\"file_upload\"\n        tabindex=\"-1\"\n        role=\"dialog\"\n        aria-labelledby=\"exampleModalCenterTitle\"\n        aria-hidden=\"true\"\n        data-backdrop=\"static\"\n        data-keyboard=\"false\"\n      >\n        <div class=\"modal-dialog modal-dialog-centered\" role=\"document\">\n          <div class=\"modal-content\">\n            <div class=\"modal-body\">\n              <div class=\"modal-head d-flex align-items-center\">\n                <div class=\"head-icn\">\n                  <img src=\"/img/msg-blue.png\" alt />\n                </div>\n                <h3>Upload CSV Files</h3>\n              </div>\n              <button\n                type=\"button\"\n                class=\"close\"\n                data-dismiss=\"modal\"\n                aria-label=\"Close\"\n                @click=\"clear_file_details\"\n              >\n                <img src=\"/img/close-icn.png\" alt />\n              </button>\n              <form @submit.prevent=\"file_submit\">\n                <div class=\"form-group\">\n                  <div class=\"custom-file\">\n                    <input\n                      type=\"file\"\n                      accept=\".csv\"\n                      class=\"custom-file-input\"\n                      id=\"inputGroupFile01\"\n                      @change=\"fileinput\"\n                      aria-describedby=\"inputGroupFileAddon01\"\n                    />\n                    <label\n                      style=\"font-weight: 400; line-height: 15px\"\n                      class=\"custom-file-label form-control\"\n                      for=\"file\"\n                      >{{ file_label }}</label\n                    >\n                  </div>\n                </div>\n                <div class=\"btn-wrap text-right\">\n                  <a href=\"#\" @click=\"download_sample\">\n                    Download Sample Add Questions CSV\n                    <i class=\"fa fa-spinner fa-spin\" v-show=\"spinnerOn\"></i>\n                  </a>\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-link\"\n                    data-dismiss=\"modal\"\n                    @click=\"clear_file_details\"\n                  >\n                    Cancel\n                  </button>\n                  <button type=\"submit\" class=\"darkblue-btn\">Submit</button>\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div\n        class=\"modal fade dash-modal\"\n        id=\"exampleModalCenter\"\n        tabindex=\"-1\"\n        role=\"dialog\"\n        aria-labelledby=\"exampleModalCenterTitle\"\n        aria-hidden=\"true\"\n      >\n        <div class=\"modal-dialog modal-dialog-centered\" role=\"document\">\n          <div class=\"modal-content\">\n            <div class=\"modal-body\">\n              <div class=\"modal-head d-flex align-items-center\">\n                <div class=\"head-icn\">\n                  <img src=\"/img/msg-blue.png\" alt />\n                </div>\n                <h3>Add Question</h3>\n              </div>\n              <button\n                type=\"button\"\n                class=\"close\"\n                data-dismiss=\"modal\"\n                aria-label=\"Close\"\n              >\n                <img src=\"/img/close-icn.png\" alt />\n              </button>\n              <form @submit.prevent=\"submit_question\">\n                <div class=\"form-group\">\n                  <label>Your Question</label>\n                  <input\n                    type=\"text\"\n                    class=\"form-control\"\n                    placeholder=\"Enter your question\"\n                    v-model.trim=\"input_fields.question\"\n                    id=\"add_question_question\"\n                  />\n                </div>\n                <div class=\"form-group\">\n                  <label>Select Intent</label>\n                  <multiselect\n                    v-model=\"input_fields.intent\"\n                    id=\"res_n_int_intent\"\n                    :options=\"intentlist\"\n                    :searchable=\"true\"\n                    :close-on-select=\"true\"\n                    :show-labels=\"false\"\n                  >\n                    <span>{{ input_fields.intent }}</span>\n                  </multiselect>\n                </div>\n                <div class=\"btn-wrap text-right\">\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-link\"\n                    data-dismiss=\"modal\"\n                  >\n                    Cancel\n                  </button>\n                  <button\n                    type=\"submit\"\n                    class=\"darkblue-btn\"\n                    id=\"add_quesn_save\"\n                  >\n                    Save\n                  </button>\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"pagin-table\" style=\"margin-top: 2%; margin-bottom: 4%\">\n        <nav aria-label=\"Page navigation example\">\n          <ul class=\"pagination justify-content-center\">\n            <li class=\"page-item\">\n              <a class=\"page-link\" href=\"#\" @click=\"page_require(page_no - 1)\">\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  width=\"8.667\"\n                  height=\"15.204\"\n                  viewBox=\"0 0 8.667 15.204\"\n                >\n                  <g\n                    id=\"arrow-point-to-left\"\n                    transform=\"translate(105.806 15.204) rotate(180)\"\n                  >\n                    <path\n                      id=\"Path_1136\"\n                      data-name=\"Path 1136\"\n                      d=\"M105.493,8.354l-6.537,6.537a1.065,1.065,0,1,1-1.506-1.506L103.235,7.6,97.45,1.817A1.065,1.065,0,0,1,98.956.312l6.537,6.537a1.065,1.065,0,0,1,0,1.505Z\"\n                      transform=\"translate(0 0)\"\n                      fill=\"#9499ae\"\n                    />\n                  </g>\n                </svg>\n              </a>\n            </li>\n            <li\n              class=\"page-item\"\n              :class=\"{ active: page === page_no }\"\n              v-for=\"(page, index) in page_array\"\n              :key=\"index\"\n            >\n              <a\n                v-if=\"page == '...s' || page == '...l'\"\n                class=\"page-link\"\n                href=\"#\"\n                @click=\"page_require(page)\"\n                >...</a\n              >\n              <a\n                v-if=\"page != '...s' && page != '...l'\"\n                class=\"page-link\"\n                href=\"#\"\n                @click=\"page_require(page)\"\n                >{{ page }}</a\n              >\n              <!-- <a class=\"page-link\" href=\"#\" @click=\"page_require(page)\">{{page}}</a> -->\n            </li>\n\n            <li class=\"page-item\">\n              <a class=\"page-link\" href=\"#\" @click=\"page_require(page_no + 1)\">\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  width=\"8.667\"\n                  height=\"15.204\"\n                  viewBox=\"0 0 8.667 15.204\"\n                >\n                  <g id=\"arrow-point-to-right\" transform=\"translate(-97.139 0)\">\n                    <path\n                      id=\"Path_1136\"\n                      data-name=\"Path 1136\"\n                      d=\"M105.493,8.354l-6.537,6.537a1.065,1.065,0,1,1-1.506-1.506L103.235,7.6,97.45,1.817A1.065,1.065,0,0,1,98.956.312l6.537,6.537a1.065,1.065,0,0,1,0,1.505Z\"\n                      transform=\"translate(0 0)\"\n                      fill=\"#9499ae\"\n                    />\n                  </g>\n                </svg>\n              </a>\n            </li>\n          </ul>\n        </nav>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\nimport api_calls from \"@/portal/api_calls\";\nimport Swal from \"sweetalert2\";\nimport Multiselect from \"vue-multiselect\";\nimport swal from \"sweetalert2\";\nexport default {\n  components: {\n    Multiselect,\n  },\n  data() {\n    return {\n      intentlist: [],\n      input_fields: {\n        intent: \"\",\n        question: \"\",\n      },\n      intent: \"\",\n      question: \"\",\n      isEdit: false,\n      isGlobalEdit: false,\n      global_edit_questions_list: [],\n      questionslist: [],\n      page_no: 1,\n      number_of_rows: 0,\n      total_pages: 1,\n      per_page: 20,\n      checked_list: [],\n      spinnerOn: false,\n      companyid: null,\n      companyname: null,\n      user_role: null,\n      file_label: \"Choose file\",\n      file_content: \"\",\n      csv_file: \"\",\n      // search_by: '',\n      search_name: \"\",\n      page_array: [],\n      old_question_data: [],\n      new_question_data: [],\n      isVisibleSearchClear:false,\n      // select_list: ['Question','Intent'],\n    };\n  },\n  watch: {\n    isGlobalEdit(newVal) {\n      if (Boolean(newVal)) {\n        this.global_edit_questions_list = this.questionslist.map(\n          ({ question, intent }) => ({ question, intent })\n        );\n      } else {\n        this.global_edit_questions_list = [];\n      }\n    },\n    search_name(){\n      if (this.search_name === \"\"){\n      this.get_questions_list();\n      this.isVisibleSearchClear = false;\n      }\n      else if (this.search_name !== \"\"){\n        this.isVisibleSearchClear = true;\n      }\n    },\n  },\n  created() {\n    this.user_role = this.$session.get(\"UserInformation\").role;\n    if (\n      !this.$session.has(\"CompanyId\") &&\n      this.$session.get(\"UserInformation\").role == \"SuperAdmin\"\n    ) {\n      toastr.warning(\"Please select a company name from the dropdown\");\n    } else if (this.user_role == \"SuperAdmin\") {\n      if (this.$session.has(\"CompanyId\")) {\n        this.companyid = this.$session.get(\"CompanyId\");\n        this.companyname = this.$session.get(\"CompanyName\");\n      } else {\n        this.companyid = this.$session.get(\"UserInformation\").company_id;\n        this.companyname = this.$session.get(\"UserInformation\").company_name;\n      }\n    } else {\n      this.companyid = this.$session.get(\"UserInformation\").company_id;\n      this.companyname = this.$session.get(\"UserInformation\").company_name;\n    }\n    axios\n      .post(\n        api_calls.show_intent_url(),\n        {\n          company_name: this.companyname,\n          company_id: this.companyid,\n          email: this.$session.get(\"UserInformation\").email,\n          license_key: this.$session.get(\"UserInformation\").license_key,\n          token: this.$session.get(\"UserInformation\").tokens,\n          subscription: this.$session.get(\"UserInformation\").subscription,\n          showintent: \"True\",\n        },\n        {\n          headers: {\n            Authorization: `Bearer ${this.$session.get(\"at\")}`,\n          },\n        }\n      )\n      .then((response) => {\n        if (response.data == \"Internal Server Error\") {\n          toastr.error(\"Internal Server Error\");\n        } else {\n          for (var i in response.data) {\n            this.intentlist.push(\n              response.data[i].replace(this.companyid + \"_\", \"\")\n            );\n          }\n          this.input_fields.intent = this.intentlist[0];\n        }\n      })\n      .catch((e) => {\n        if (\n          e.response.status === 410 ||\n          e.response.status === 440 ||\n          e.response.status === 409\n        ) {\n          this.$root.$emit(\"Session_Expired\", e.response.data);\n        } else {\n          toastr.error(\"Internal Server Error\");\n        }\n      });\n    this.get_questions_list();\n  },\n  mounted() {\n    var vm = this;\n    $(\"#selectall\").click(function () {\n      if ($(this).is(\":checked\")) {\n        // $('div:input').prop('checked',true);\n        $(\"input:checkbox\").prop(\"checked\", true);\n      } else {\n        vm.checked_list = [];\n        $(\"input:checkbox\").prop(\"checked\", false);\n      }\n    });\n    $('[data-toggle=\"tooltip\"]').tooltip();\n    $(\"#exampleModalCenter\").on(\"hidden.bs.modal\", function (e) {\n      vm.clear_fields();\n      $(\"input:checkbox\").prop(\"checked\", false);\n    });\n    if(this.$route.params.modal_open_switch_tab){\n      $(\"#exampleModalCenter\").modal(\"show\");\n    }\n  },\n  methods: {\n    clear_search_name(){\n      this.search_name = \"\";\n    },\n    download_csv() {\n      axios\n        .post(\n          api_calls.question_intent_csv(),\n          {\n            company_name: this.companyname,\n            company_id: this.companyid,\n            email: this.$session.get(\"UserInformation\").email,\n            license_key: this.$session.get(\"UserInformation\").license_key,\n            token: this.$session.get(\"UserInformation\").tokens,\n          },\n          {\n            headers: {\n              Authorization: `Bearer ${this.$session.get(\"at\")}`,\n            },\n          }\n        )\n        .then((response) => {\n          var a = window.document.createElement(\"a\");\n          a.href = response.data.CSV_URL;\n          a.download = true;\n          document.body.appendChild(a);\n          a.click();\n          document.body.removeChild(a);\n        })\n        .catch((e) => {\n          if (\n            e.response.status === 410 ||\n            e.response.status === 440 ||\n            e.response.status === 409\n          ) {\n            this.$root.$emit(\"Session_Expired\", e.response.data);\n          }\n        });\n    },\n    download_sample() {\n      event.preventDefault();\n      this.spinnerOn = true;\n      axios({\n        method: \"post\",\n        url: api_calls.file_download(),\n        responseType: \"blob\",\n        data: {\n          company_id: this.$session.get(\"UserInformation\").company_id,\n          company_name: this.$session.get(\"UserInformation\").company_name,\n          license_key: this.$session.get(\"UserInformation\").license_key,\n          token: this.$session.get(\"UserInformation\").tokens,\n          email: this.$session.get(\"UserInformation\").email,\n          sample_file: \"False\",\n        },\n        headers: {\n          Authorization: `Bearer ${this.$session.get(\"at\")}`,\n        },\n      })\n        .then((response) => {\n          var url = window.URL.createObjectURL(new Blob([response.data]));\n          var link = document.createElement(\"a\");\n          link.href = url;\n          // console.log(this.companyname);\n          link.setAttribute(\n            \"download\",\n            this.companyname + \"QuestionIntent.csv\"\n          );\n          document.body.appendChild(link);\n          link.click();\n          this.spinnerOn = false;\n        })\n        .catch((e) => {\n          if (\n            e.response.status === 410 ||\n            e.response.status === 440 ||\n            e.response.status === 409\n          ) {\n            this.$root.$emit(\"Session_Expired\", e.response.data);\n          }\n        });\n    },\n    callsearch() {\n      if (event.keyCode === 13) {\n        this.search_product();\n      }\n    },\n    search_product() {\n      // if(this.search_by!=''){\n      if (this.search_name != \"\") {\n        this.spinnerOn = true;\n        axios\n          .post(\n            api_calls.add_question_url(),\n            {\n              company_id: this.$session.get(\"UserInformation\").company_id,\n              company_name: this.$session.get(\"UserInformation\").company_name,\n              license_key: this.$session.get(\"UserInformation\").license_key,\n              email: this.$session.get(\"UserInformation\").email,\n              token: this.$session.get(\"UserInformation\").tokens,\n              issearch: true,\n              // searchby: this.search_by,\n              key: this.search_name,\n              per_page: this.per_page,\n              page_no: 1,\n            },\n            {\n              headers: {\n                Authorization: `Bearer ${this.$session.get(\"at\")}`,\n              },\n            }\n          )\n          .then((response) => {\n            this.spinnerOn = false;\n            if (response.data.pagecount != undefined) {\n              this.page_no = 1;\n              this.questionslist = [];\n              this.number_of_rows = response.data.QuestionsList.length;\n              this.total_pages = response.data.pagecount;\n              for (let i = 0; i < response.data.QuestionsList.length; i++) {\n                this.questionslist.push({\n                  question: response.data.QuestionsList[i].Question,\n                  intent: response.data.QuestionsList[i].Intent.replace(\n                    this.companyid + \"_\",\n                    \"\"\n                  ),\n                });\n              }\n              this.setpagination(this.page_no);\n            } else if (response.data.MSG == \"No Results Found\") {\n              toastr.error(\"No Results Found\");\n            } else {\n              setTimeout(() => {\n                toastr.error(\"Internal Server Error\");\n                // this.$router.go();\n                this.get_questions_list();\n              }, 2500);\n            }\n          })\n          .catch((e) => {\n            if (\n              e.response.status === 410 ||\n              e.response.status === 440 ||\n              e.response.status === 409\n            ) {\n              this.$root.$emit(\"Session_Expired\", e.response.data);\n            }\n          });\n      } else {\n        toastr.error(\"Enter proper data for searching\");\n      }\n      // }else{\n      //   toastr.error(\"Select header for searching\");\n      // }\n    },\n    clear_fields() {\n      this.isEdit = false;\n      this.input_fields = this.$options.data().input_fields;\n    },\n    edit_question(question) {\n      this.isEdit = true;\n      this.old_question_data.push({\n        question: question.question,\n        intent: this.companyid + \"_\" + question.intent,\n      });\n      this.input_fields.question = question.question;\n      this.input_fields.intent = question.intent;\n    },\n    selected_questions(index) {\n      if (index == \"all\") {\n        if (event.target.checked) {\n          this.checked_list = this.questionslist;\n        } else if (!event.target.checked) {\n          this.checked_list = [];\n        }\n      } else {\n        if (event.target.checked == true) {\n          let val_index = this.checked_list.indexOf(this.questionslist[index]);\n          var temp = this.questionslist[index];\n          if (val_index == -1) {\n            this.checked_list.push(temp);\n          }\n        } else if (event.target.checked == false) {\n          var selectall = document.querySelector(\"#selectall\");\n          if (selectall.checked == true) {\n            selectall.checked = false;\n          }\n          var temp = this.checked_list.filter((question) => {\n            return question.question !== this.questionslist[index].question;\n          });\n          this.checked_list = temp;\n        }\n      }\n    },\n    submit_question() {\n      this.new_question_data.push({\n        question: this.input_fields.question,\n        intent: `${this.companyid}_${this.input_fields.intent}`,\n      });\n      if (this.isGlobalEdit) {\n        this.spinnerOn = true;\n        var vm = this;\n        var questions_map = this.questionslist.map(({ question, intent }) => ({\n          question,\n          intent,\n        }));\n\n        //Find values that are in result1 but not in result2\n        var uniqueResultOne = questions_map\n          .filter(function (obj) {\n            return !vm.global_edit_questions_list.some(function (obj2) {\n              return obj.question == obj2.question && obj.intent == obj2.intent;\n            });\n          })\n          .map(({ question, intent }) => ({\n            question,\n            intent: `${vm.companyid}_${intent}`,\n          }));\n\n        //Find values that are in result2 but not in result1\n        var uniqueResultTwo = vm.global_edit_questions_list\n          .filter(function (obj) {\n            return !questions_map.some(function (obj2) {\n              return obj.question == obj2.question && obj.intent == obj2.intent;\n            });\n          })\n          .map(({ question, intent }) => ({\n            question,\n            intent: `${vm.companyid}_${intent}`,\n          }));\n\n        this.edit_question_api(uniqueResultOne, uniqueResultTwo);\n      } else if (\n        this.input_fields.question == \"\" ||\n        this.input_fields.intent == \"\"\n      ) {\n        toastr.error(\"Please enter all the fields.\");\n      } else if (this.isEdit) {\n        this.edit_question_api(this.old_question_data, this.new_question_data);\n      } else {\n        $(\"#exampleModalCenter\").modal(\"hide\");\n        this.spinnerOn = true;\n        axios\n          .post(\n            api_calls.add_question_url(),\n            {\n              edit_intent: this.isEdit,\n              company_name: this.companyname,\n              company_id: this.companyid,\n              new_question_data: this.new_question_data,\n              email: this.$session.get(\"UserInformation\").email,\n              license_key: this.$session.get(\"UserInformation\").license_key,\n              token: this.$session.get(\"UserInformation\").tokens,\n              subscription: this.$session.get(\"UserInformation\").subscription,\n            },\n            {\n              headers: {\n                Authorization: `Bearer ${this.$session.get(\"at\")}`,\n              },\n            }\n          )\n          .then((response) => {\n            this.spinnerOn = false;\n            this.input_fields = this.$options.data().input_fields;\n            this.old_question_data = this.$options.data().old_question_data;\n            this.new_question_data = this.$options.data().new_question_data;\n            if (response.data == \"Internal Server Error\") {\n              // toastr.error(\"Internal Server Error\");\n              Swal({\n                type: \"error\",\n                text: \"There was an internal server error. Please try again.\",\n              });\n            } else if (response.data.status == \"Success\") {\n              Swal({\n                type: \"success\",\n                text: \"Your question has been added successfully\",\n                allowOutsideClick: false,\n                allowEscapeKey: false,\n              }).then((result) => {\n                if (result.value) {\n                  this.get_questions_list();\n                  // this.$router.go();\n                }\n              });\n            } else if (response.data.status == \"Failure\") {\n              Swal({\n                type: \"warning\",\n                text: \"The questions already exist.\",\n              });\n            } else if (response.data.status == \"Error\") {\n              Swal({\n                type: \"error\",\n                text: \"There was an internal server error. Please try again.\",\n              });\n            }\n          })\n          .catch((e) => {\n            if (\n              e.response.status === 410 ||\n              e.response.status === 440 ||\n              e.response.status === 409\n            ) {\n              this.$root.$emit(\"Session_Expired\", e.response.data);\n            } else {\n              Swal({\n                type: \"error\",\n                text: \"There was an internal server error. Please try again.\",\n              });\n              // toastr.error(\"Internal Server Error\");\n            }\n          });\n      }\n    },\n    edit_question_api(old_question_data, new_question_data) {\n      $(\"#exampleModalCenter\").modal(\"hide\");\n      this.spinnerOn = true;\n      axios\n        .post(\n          api_calls.add_question_url(),\n          {\n            edit_intent: true,\n            company_name: this.companyname,\n            company_id: this.companyid,\n            old_question_data: old_question_data,\n            new_question_data: new_question_data,\n            email: this.$session.get(\"UserInformation\").email,\n            license_key: this.$session.get(\"UserInformation\").license_key,\n            token: this.$session.get(\"UserInformation\").tokens,\n            subscription: this.$session.get(\"UserInformation\").subscription,\n          },\n          {\n            headers: {\n              Authorization: `Bearer ${this.$session.get(\"at\")}`,\n            },\n          }\n        )\n        .then((response) => {\n          this.spinnerOn = false;\n          this.isEdit = false;\n          this.isGlobalEdit = false;\n          if (response.data == \"Internal Server Error\") {\n            // toastr.error(\"Internal Server Error\");\n            Swal({\n              type: \"error\",\n              text: \"There was an Internal Server Error. Please try again.\",\n            });\n          } else if (response.data.status == \"Success\") {\n            Swal({\n              type: \"success\",\n              text: \"Question(s) updated successfully\",\n              allowOutsideClick: false,\n              allowEscapeKey: false,\n            }).then((result) => {\n              if (result.value) {\n                // this.$router.go()\n                this.get_questions_list();\n              }\n            });\n          } else if (response.data.status == \"Failure\") {\n            Swal({\n              type: \"warning\",\n              text: \"The questions already exist.\",\n            });\n          } else if (response.data.status == \"Error\") {\n            Swal({\n              type: \"error\",\n              text: \"There was an internal server error. Please try again.\",\n            });\n          }\n        })\n        .catch((e) => {\n          if (\n            e.response.status === 410 ||\n            e.response.status === 440 ||\n            e.response.status === 409\n          ) {\n            this.$root.$emit(\"Session_Expired\", e.response.data);\n          } else {\n            // toastr.error(\"Internal Server Error\");\n            Swal({\n              type: \"error\",\n              text: \"There was an internal server error. Please try again.\",\n            });\n          }\n        });\n    },\n    delete_selected() {\n      if (this.checked_list.length == 0) {\n        Swal.fire(\"No question selected!\", \"\", \"error\");\n      } else if (this.checked_list.length > 0) {\n        let questionlist = [],\n          intentlist = [];\n        for (var i in this.checked_list) {\n          questionlist.push(this.checked_list[i].question);\n          intentlist.push(this.companyid + \"_\" + this.checked_list[i].intent);\n        }\n        this.delete_qns_api(questionlist, intentlist);\n      }\n    },\n    delete_questions(question) {\n      let questionlist = [],\n        intentlist = [];\n      questionlist.push(question.question);\n      intentlist.push(this.companyid + \"_\" + question.intent);\n      this.delete_qns_api(questionlist, intentlist);\n    },\n    delete_qns_api(questionlist, intentlist) {\n      Swal.fire({\n        title: \"Are you sure?\",\n        text: \"You won't be able to revert this!\",\n        type: \"warning\",\n        showCancelButton: true,\n        confirmButtonColor: \"#3085d6\",\n        cancelButtonColor: \"#d33\",\n        confirmButtonText: \"Yes, delete!!\",\n      }).then((result) => {\n        if (result.value) {\n          $(\"input:checkbox\").prop(\"checked\", false);\n          this.spinnerOn = true;\n          axios\n            .post(\n              api_calls.delete_question_intent_url(),\n              {\n                questionlist: questionlist,\n                company_name: this.companyname,\n                company_id: this.companyid,\n                intentlist: intentlist,\n                token: this.$session.get(\"UserInformation\").tokens,\n                license_key: this.$session.get(\"UserInformation\").license_key,\n                subscription: this.$session.get(\"UserInformation\").subscription,\n                email: this.$session.get(\"UserInformation\").email,\n              },\n              {\n                headers: {\n                  Authorization: `Bearer ${this.$session.get(\"at\")}`,\n                },\n              }\n            )\n            .then((response) => {\n              this.spinnerOn = false;\n              if (response.data == \"Internal Server Error\") {\n                toastr.error(\"Internal Server Error\");\n              } else if (response.data == \"Query Executed Successfully\") {\n                Swal({\n                  type: \"success\",\n                  title: \"Deleted!\",\n                  text: \"Your question has been deleted.\",\n                  allowOutsideClick: false,\n                  allowEscapeKey: false,\n                }).then((res) => {\n                  if (res.value) {\n                    // this.$router.go();\n                    this.get_questions_list();\n                  }\n                });\n              } else {\n                toastr.error(\"Questions not deleted!!\");\n              }\n            })\n            .catch((e) => {\n              if (\n                e.response.status === 410 ||\n                e.response.status === 440 ||\n                e.response.status === 409\n              ) {\n                this.$root.$emit(\"Session_Expired\", e.response.data);\n              } else {\n                toastr.error(\"Internal Server Error\");\n              }\n            });\n        } else {\n          $(\"input:checkbox\").prop(\"checked\", false);\n        }\n      });\n    },\n    update_questions(message) {\n      this.questionslist = [];\n      this.total_pages = message.pagecount;\n      this.number_of_rows =\n        message.show_intent_field.intent_questionlist.length;\n      for (var i in message.show_intent_field.intent_questionlist) {\n        this.questionslist.push({\n          question: message.show_intent_field.intent_questionlist[i],\n          intent: message.show_intent_field.intent_intentlist[i].replace(\n            this.companyid + \"_\",\n            \"\"\n          ),\n        });\n      }\n    },\n    page_require(page) {\n      if (page == 0 || page == this.total_pages + 1) {\n        event.preventDefault();\n      } else {\n        if (this.search_name == \"\") {\n          $(\"input:checkbox\").prop(\"checked\", false);\n          if (page == \"...s\") {\n            this.page_no = Math.ceil((1 + this.page_no) / 2);\n          } else if (page == \"...l\") {\n            this.page_no = Math.ceil((this.total_pages + this.page_no) / 2);\n          } else {\n            this.page_no = page;\n          }\n          this.spinnerOn = true;\n          axios\n            .post(\n              api_calls.load_question_intent_url(),\n              {\n                company_name: this.companyname,\n                email: this.$session.get(\"UserInformation\").email,\n                company_id: this.companyid,\n                subscription: this.$session.get(\"UserInformation\").subscription,\n                license_key: this.$session.get(\"UserInformation\").license_key,\n                token: this.$session.get(\"UserInformation\").tokens,\n                page_no: this.page_no,\n                per_page: this.per_page,\n              },\n              {\n                headers: {\n                  Authorization: `Bearer ${this.$session.get(\"at\")}`,\n                },\n              }\n            )\n            .then((response) => {\n              this.spinnerOn = false;\n              this.update_questions(response.data);\n              this.setpagination(this.page_no);\n            })\n            .catch((e) => {\n              if (\n                e.response.status === 410 ||\n                e.response.status === 440 ||\n                e.response.status === 409\n              ) {\n                this.$root.$emit(\"Session_Expired\", e.response.data);\n              }\n            });\n        } else {\n          $(\"input:checkbox\").prop(\"checked\", false);\n          if (page == \"...s\") {\n            this.page_no = Math.ceil((1 + this.page_no) / 2);\n          } else if (page == \"...l\") {\n            this.page_no = Math.ceil((this.total_pages + this.page_no) / 2);\n          } else {\n            this.page_no = page;\n          }\n          axios\n            .post(\n              api_calls.add_question_url(),\n              {\n                company_id: this.$session.get(\"UserInformation\").company_id,\n                company_name: this.$session.get(\"UserInformation\").company_name,\n                license_key: this.$session.get(\"UserInformation\").license_key,\n                email: this.$session.get(\"UserInformation\").email,\n                token: this.$session.get(\"UserInformation\").tokens,\n                issearch: true,\n                // searchby: this.search_by,\n                key: this.search_name,\n                per_page: this.per_page,\n                page_no: this.page_no,\n              },\n              {\n                headers: {\n                  Authorization: `Bearer ${this.$session.get(\"at\")}`,\n                },\n              }\n            )\n            .then((response) => {\n              this.setpagination(this.page_no);\n              this.spinnerOn = false;\n              if (response.data.pagecount != undefined) {\n                this.questionslist = [];\n                this.number_of_rows = response.data.QuestionsList.length;\n                this.total_pages = response.data.pagecount;\n                for (let i = 0; i < response.data.QuestionsList.length; i++) {\n                  this.questionslist.push({\n                    question: response.data.QuestionsList[i].Question,\n                    intent: response.data.QuestionsList[i].Intent.replace(\n                      this.companyid + \"_\",\n                      \"\"\n                    ),\n                  });\n                }\n              } else {\n                toastr.error(\"Intrnal Server Error\");\n                setTimeout(() => {\n                  // this.$router.go();\n                  this.get_questions_list();\n                }, 2500);\n              }\n            })\n            .catch((e) => {\n              if (\n                e.response.status === 410 ||\n                e.response.status === 440 ||\n                e.response.status === 409\n              ) {\n                this.$root.$emit(\"Session_Expired\", e.response.data);\n              }\n            });\n        }\n      }\n    },\n    setpagination(page_no) {\n      this.page_array = [];\n      if (this.total_pages <= 7) {\n        for (let i = 0; i < this.total_pages; i++) {\n          this.page_array.push(i + 1);\n        }\n      } else if (page_no == 1) {\n        for (let i = 0; i < 4; i++) {\n          this.page_array.push(i + 1);\n        }\n        this.page_array.push(\"...l\");\n        this.page_array.push(this.total_pages);\n      } else if (page_no == this.total_pages) {\n        this.page_array.push(1);\n        this.page_array.push(\"...s\");\n        for (let i = this.total_pages - 4; i < this.total_pages; i++) {\n          this.page_array.push(i + 1);\n        }\n      } else if (page_no <= 4) {\n        for (let i = 0; i < page_no + 3; i++) {\n          this.page_array.push(i + 1);\n        }\n        this.page_array.push(\"...l\");\n        this.page_array.push(this.total_pages);\n      } else if (page_no >= this.total_pages - 4) {\n        this.page_array.push(1);\n        this.page_array.push(\"...s\");\n        for (let i = page_no - 4; i < this.total_pages; i++) {\n          this.page_array.push(i + 1);\n        }\n      } else {\n        this.page_array.push(1);\n        this.page_array.push(\"...s\");\n        for (let i = page_no - 3; i <= page_no + 3; i++) {\n          this.page_array.push(i);\n        }\n        this.page_array.push(\"...l\");\n        this.page_array.push(this.total_pages);\n      }\n    },\n    fileinput() {\n      if (event.target.files[0].type != \"text/csv\") {\n        Swal({\n          type: \"error\",\n          text: \"Upload only .csv file\",\n        }).then((result) => {\n          this.file_label = \"Choose file\";\n          this.file_content = \"\";\n        });\n      } else if (event.target.files[0].size > 1000000) {\n        Swal({\n          type: \"error\",\n          text: \"Upload file of size less than 1MB\",\n        }).then((result) => {\n          this.file_label = \"Choose file\";\n          this.file_content = \"\";\n        });\n      } else {\n        this.file_label = event.target.files[0].name;\n        var file_name = this.companyname + \"IntentFile.csv\";\n        this.file_content = event.target.files[0];\n        this.createCSV(this.file_content);\n      }\n    },\n    createCSV(file, type) {\n      let reader = new FileReader();\n      reader.onload = (e) => {\n        this.csv_file = e.target.result.split(\"base64,\")[1];\n      };\n      reader.readAsDataURL(file);\n    },\n    file_submit() {\n      $(\"#file_upload\").modal(\"hide\");\n      this.spinnerOn = true;\n      axios\n        .post(\n          api_calls.upload_question_intent(),\n          {\n            email: this.$session.get(\"UserInformation\").email,\n            token: this.$session.get(\"UserInformation\").tokens,\n            company_name: this.$session.get(\"UserInformation\").company_name,\n            company_id: this.$session.get(\"UserInformation\").company_id,\n            license_key: this.$session.get(\"UserInformation\").license_key,\n            file_name: this.file_label,\n            file_data: this.csv_file,\n          },\n          {\n            headers: {\n              Authorization: `Bearer ${this.$session.get(\"at\")}`,\n            },\n          }\n        )\n        .then((response) => {\n          this.spinnerOn = false;\n          if (response.data.Msg == \"Invalid Header\") {\n            Swal({\n              type: \"error\",\n              text:\n                \"Please keep the headers of Sample file & Uploaded file same\",\n            }).then((res) => {\n              this.file_label = \"Choose file\";\n              this.file_content = \"\";\n              document.getElementById(\"inputGroupFile01\").value = \"\";\n              // this.$router.go();\n              this.get_questions_list();\n            });\n          } else if (response.data.Msg == \"Error while uploading\") {\n            Swal({\n              type: \"error\",\n              text: \"There was some error while uploading the file\",\n            }).then((res) => {\n              this.file_label = \"Choose file\";\n              this.file_content = \"\";\n              document.getElementById(\"inputGroupFile01\").value = \"\";\n              // this.$router.go();\n              this.get_questions_list();\n            });\n          } else if (response.data.Msg == \"file uploaded successfully\") {\n            Swal({\n              type: \"success\",\n              text: \"File Uploaded Successfully\",\n            }).then((res) => {\n              this.file_label = \"Choose file\";\n              this.file_content = \"\";\n              document.getElementById(\"inputGroupFile01\").value = \"\";\n              // this.$router.go();\n              this.get_questions_list();\n            });\n          }\n        })\n        .catch((e) => {\n          if (\n            e.response.status === 410 ||\n            e.response.status === 440 ||\n            e.response.status === 409\n          ) {\n            this.$root.$emit(\"Session_Expired\", e.response.data);\n          }\n        });\n    },\n    get_questions_list() {\n      this.spinnerOn = true;\n      axios\n        .post(\n          api_calls.load_question_intent_url(),\n          {\n            company_name: this.companyname,\n            company_id: this.companyid,\n            email: this.$session.get(\"UserInformation\").email,\n            license_key: this.$session.get(\"UserInformation\").license_key,\n            token: this.$session.get(\"UserInformation\").tokens,\n            subscription: this.$session.get(\"UserInformation\").subscription,\n            page_no: this.page_no,\n            per_page: this.per_page,\n          },\n          {\n            headers: {\n              Authorization: `Bearer ${this.$session.get(\"at\")}`,\n            },\n          }\n        )\n        .then((response) => {\n          this.spinnerOn = false;\n          if (response.data == \"Internal Server Error\") {\n            toastr.error(\"Internal Server Error\");\n          } else {\n            this.update_questions(response.data);\n            this.setpagination(this.page_no);\n          }\n        })\n        .catch((e) => {\n          if (\n            e.response.status === 410 ||\n            e.response.status === 440 ||\n            e.response.status === 409\n          ) {\n            this.$root.$emit(\"Session_Expired\", e.response.data);\n          } else {\n            toastr.error(\"Internal Server Error\");\n          }\n        });\n    },\n    clear_file_details() {\n      this.file_label = \"Choose file\";\n      this.file_content = \"\";\n      document.getElementById(\"inputGroupFile01\").value = \"\";\n    },\n  },\n};\n</script>\n<style src=\"vue-multiselect/dist/vue-multiselect.min.css\">\n</style>\n<style scoped>\n.multiselect__tags {\n  border: 1px solid #dbe2e8;\n}\ntr td {\n  height: 50px;\n}\n.edit-column {\n  height: 29px !important;\n}\n</style>\n"]}]}