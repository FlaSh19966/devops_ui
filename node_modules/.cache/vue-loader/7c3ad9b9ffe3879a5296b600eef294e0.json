{"remainingRequest":"/home/vimalesh/CENSE/chatbot-portal/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/vimalesh/CENSE/chatbot-portal/src/portal/analytics/components/MultiLineChartAlternative.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/vimalesh/CENSE/chatbot-portal/src/portal/analytics/components/MultiLineChartAlternative.vue","mtime":1643027096188},{"path":"/home/vimalesh/CENSE/chatbot-portal/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vimalesh/CENSE/chatbot-portal/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vimalesh/CENSE/chatbot-portal/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/vimalesh/CENSE/chatbot-portal/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vimalesh/CENSE/chatbot-portal/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCAqIGFzIGQzIGZyb20gImQzLTMiOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogIk11bHRpTGluZUNoYXJ0QWx0ZXJuYXRpdmUiLAogIHByb3BzIDogewogICAgeEtleTogU3RyaW5nLAogICAgeUtleTogU3RyaW5nLAogICAgYXBpRGF0YTogQXJyYXksCiAgICBkYXRlS2V5OiBTdHJpbmcKICB9LAogIC8vIGRhdGEgOiB7CgogIC8vIH0sCiAgbW91bnRlZCgpIHsKCiAgICAgIHNldFRpbWVvdXQoKCkgPT4gewogICAgICAgIHJlc2l6ZV9vZl9wYWdlKCk7CiAgICAgICAgcmVzaXplX29mX3BhZ2UoKTsKICAgICAgICByZXNpemVfb2ZfcGFnZSgpOwogICAgICAgIHJlc2l6ZV9vZl9wYWdlKCk7CiAgICAgICAgcmVzaXplX29mX3BhZ2UoKTsKICAgICAgfSwgNDAwKTsKICAgICAgLy8gc2V0VGltZW91dCgoKSA9PiB7CiAgICAgIC8vICAgcmVzaXplX29mX3BhZ2UoKTsKICAgICAgLy8gfSwgMTIwMCk7CiAgICAgIC8vIHNldFRpbWVvdXQoKCkgPT4gewogICAgICAvLyAgIHJlc2l6ZV9vZl9wYWdlKCk7CiAgICAgIC8vIH0sIDE1MDApOwogICAgICAvLyBzZXRUaW1lb3V0KCgpID0+IHsKICAgICAgLy8gICByZXNpemVfb2ZfcGFnZSgpOwogICAgICAvLyB9LCA4MDApOwoKICAgIC8vIGNvbnNvbGUubG9nKHRoaXMueEtleSx0aGlzLnlLZXksdGhpcy5kYXRlS2V5KTsKICAgIC8vIGNvbnNvbGUubG9nKHRoaXMuYXBpRGF0YSk7CiAgIHZhciBhcGlfZGF0YSA9IAogICAgICAgIFsKICAgICAgICAgICAgeyJTQUxFUyI6MTM0MC40NTA0MTk5OTk5OTksIllFQVIiOiIyMDE2IiwiREFURU5FVyI6IlRodSwgMTcgTWFyIDIwMTYgMTA6MTg6NDcgR01UIiwiQ0FURUdPUlkiOiJTdG9uZWZydWl0cyIsIk1PTlRIIjoiMDMifSwKICAgICAgICAgICAgeyJTQUxFUyI6MTcwLjkwMTk0MDAwMDAwMDA1LCJZRUFSIjoiMjAxNiIsIkRBVEVORVciOiJUaHUsIDE3IE1hciAyMDE2IDExOjUzOjEyIEdNVCIsIkNBVEVHT1JZIjoiQ3VjdW1iZXJzIiwiTU9OVEgiOiIwMyJ9LAogICAgICAgICAgICB7IlNBTEVTIjo3NC43OTk5OTk5OTk5OTk5OCwiWUVBUiI6IjIwMTYiLCJEQVRFTkVXIjoiRnJpLCAxOCBNYXIgMjAxNiAxMjoxMzo1NSBHTVQiLCJDQVRFR09SWSI6IlNyaSBMYW5rYW4gR3JvY2VyaWVzIiwiTU9OVEgiOiIwMyJ9LAogICAgICAgICAgICB7IlNBTEVTIjo2Mi45MzkzNjAwMDAwMDAwMSwiWUVBUiI6IjIwMTYiLCJEQVRFTkVXIjoiU2F0LCAxOSBNYXIgMjAxNiAxOTo0MjoxMCBHTVQiLCJDQVRFR09SWSI6IlZlZ2dpZXMiLCJNT05USCI6IjAzIn0sCiAgICAgICAgICAgIHsiU0FMRVMiOjIxOC40Nzc4ODAwMDAwMDAxLCJZRUFSIjoiMjAxNiIsIkRBVEVORVciOiJTdW4sIDIwIE1hciAyMDE2IDE3OjEyOjA2IEdNVCIsIkNBVEVHT1JZIjoiTXVzaHJvb21zIiwiTU9OVEgiOiIwMyJ9LAogICAgICAgICAgICB7IlNBTEVTIjoyNjIuNTk5NTIzNjM2MzYzOCwiWUVBUiI6IjIwMTYiLCJEQVRFTkVXIjoiU3VuLCAyMCBNYXIgMjAxNiAxNzozNDoyMiBHTVQiLCJDQVRFR09SWSI6IlRyb3BpY2FsIEZydWl0cyIsIk1PTlRIIjoiMDMifSwKICAgICAgICAgICAgeyJTQUxFUyI6NjkuNTkzMjAwMDAwMDAwMDEsIllFQVIiOiIyMDE2IiwiREFURU5FVyI6IlN1biwgMjAgTWFyIDIwMTYgMTk6MDI6MTUgR01UIiwiQ0FURUdPUlkiOiJDYWJiYWdlcyIsIk1PTlRIIjoiMDMifSwKICAgICAgICAgICAgeyJTQUxFUyI6NjcxLjgzNDk2MDAwMDAwMDUsIllFQVIiOiIyMDE2IiwiREFURU5FVyI6IldlZCwgMjMgTWFyIDIwMTYgMDE6MDQ6MDYgR01UIiwiQ0FURUdPUlkiOiJCYW5hbmFzIiwiTU9OVEgiOiIwMyJ9LAogICAgICAgICAgICB7IlNBTEVTIjoxMTYuMjAxMjg1NDU0NTQ1NDcsIllFQVIiOiIyMDE2IiwiREFURU5FVyI6IldlZCwgMjMgTWFyIDIwMTYgMDE6MzU6MTMgR01UIiwiQ0FURUdPUlkiOiJOdXRzIiwiTU9OVEgiOiIwMyJ9LAogICAgICAgICAgICB7IlNBTEVTIjoyOTUuMjAwMDAwMDAwMDAwMiwiWUVBUiI6IjIwMTYiLCJEQVRFTkVXIjoiV2VkLCAyMyBNYXIgMjAxNiAwNDozMToxNyBHTVQiLCJDQVRFR09SWSI6IkF2b2NhZG9lcyIsIk1PTlRIIjoiMDMifSwKICAgICAgICAgICAgeyJTQUxFUyI6NDcuNSwiWUVBUiI6IjIwMTYiLCJEQVRFTkVXIjoiVGh1LCAyNCBNYXIgMjAxNiAwMzoxMzowNyBHTVQiLCJDQVRFR09SWSI6IkhlcmJzIiwiTU9OVEgiOiIwMyJ9LAogICAgICAgICAgICB7IlNBTEVTIjoxNjkuMjAyNTYwMDAwMDAwMDMsIllFQVIiOiIyMDE2IiwiREFURU5FVyI6IlRodSwgMjQgTWFyIDIwMTYgMDQ6MTI6MzIgR01UIiwiQ0FURUdPUlkiOiJQdW1wa2lucyIsIk1PTlRIIjoiMDMifSx7IlNBTEVTIjozMDcuNjQ5OTk5OTk5OTk5NywiWUVBUiI6IjIwMTYiLCJEQVRFTkVXIjoiVGh1LCAyNCBNYXIgMjAxNiAwNDo0Mzo1OSBHTVQiLCJDQVRFR09SWSI6IkVnZ3MiLCJNT05USCI6IjAzIn0seyJTQUxFUyI6OTc1LjEyMDA1NDU0NTQ1NTMsIllFQVIiOiIyMDE2IiwiREFURU5FVyI6IlRodSwgMjQgTWFyIDIwMTYgMDU6MjI6NTAgR01UIiwiQ0FURUdPUlkiOiJPdGhlciBWZWdpZXMiLCJNT05USCI6IjAzIn0seyJTQUxFUyI6MTEyLjQ0NDcsIllFQVIiOiIyMDE2IiwiREFURU5FVyI6IkZyaSwgMjUgTWFyIDIwMTYgMDE6NDg6NDUgR01UIiwiQ0FURUdPUlkiOiJDaGlsbGllcyIsIk1PTlRIIjoiMDMifSx7IlNBTEVTIjo1OTcuMDkwNTM2MzYzNjM2NSwiWUVBUiI6IjIwMTYiLCJEQVRFTkVXIjoiRnJpLCAyNSBNYXIgMjAxNiAwMzoyODowMyBHTVQiLCJDQVRFR09SWSI6IkNpdHJ1cyIsIk1PTlRIIjoiMDMifSx7IlNBTEVTIjoxNjYuODEyLCJZRUFSIjoiMjAxNiIsIkRBVEVORVciOiJGcmksIDI1IE1hciAyMDE2IDAzOjUwOjA4IEdNVCIsIkNBVEVHT1JZIjoiY2Fycm90cyIsIk1PTlRIIjoiMDMifSx7IlNBTEVTIjozNjAuOTIxMDYsIllFQVIiOiIyMDE2IiwiREFURU5FVyI6IkZyaSwgMjUgTWFyIDIwMTYgMDQ6NDE6MTkgR01UIiwiQ0FURUdPUlkiOiJjYXBzaWN1bSIsIk1PTlRIIjoiMDMifSx7IlNBTEVTIjo1Ny44ODM2MzYzNjM2MzYzNywiWUVBUiI6IjIwMTYiLCJEQVRFTkVXIjoiU2F0LCAyNiBNYXIgMjAxNiAyMjo1MToyNyBHTVQiLCJDQVRFR09SWSI6Ik90aGVyIEZydWl0cyIsIk1PTlRIIjoiMDMifSx7IlNBTEVTIjo4ODQuNDQxMTE5OTk5OTk5NywiWUVBUiI6IjIwMTYiLCJEQVRFTkVXIjoiU2F0LCAyNiBNYXIgMjAxNiAyMzozNzozOCBHTVQiLCJDQVRFR09SWSI6IlBvdGF0b2VzIiwiTU9OVEgiOiIwMyJ9LHsiU0FMRVMiOjMwNC45MjU0NjAwMDAwMDAwNCwiWUVBUiI6IjIwMTYiLCJEQVRFTkVXIjoiU3VuLCAyNyBNYXIgMjAxNiAwMDoyNTowNyBHTVQiLCJDQVRFR09SWSI6IlBlYXJzIiwiTU9OVEgiOiIwMyJ9LHsiU0FMRVMiOjMwMy4yMjYwMDAwMDAwMDA0LCJZRUFSIjoiMjAxNiIsIkRBVEVORVciOiJTdW4sIDI3IE1hciAyMDE2IDAwOjI4OjUwIEdNVCIsIkNBVEVHT1JZIjoiQnVuY2ggVmVnaWVzIiwiTU9OVEgiOiIwMyJ9LHsiU0FMRVMiOjYyMC42NjczOTk5OTk5OTk3LCJZRUFSIjoiMjAxNiIsIkRBVEVORVciOiJTdW4sIDI3IE1hciAyMDE2IDAxOjA4OjAzIEdNVCIsIkNBVEVHT1JZIjoiVG9tYXRvZXMiLCJNT05USCI6IjAzIn0seyJTQUxFUyI6NjI5Ljg1MTY4MDAwMDAwMDQsIllFQVIiOiIyMDE2IiwiREFURU5FVyI6IlN1biwgMjcgTWFyIDIwMTYgMDE6NDU6NTggR01UIiwiQ0FURUdPUlkiOiJBcHBsZXMiLCJNT05USCI6IjAzIn0seyJTQUxFUyI6MzcyLjgyMDk5OTk5OTk5OTIzLCJZRUFSIjoiMjAxNiIsIkRBVEVORVciOiJTdW4sIDI3IE1hciAyMDE2IDAzOjM4OjE2IEdNVCIsIkNBVEVHT1JZIjoiTGV0dHVjZXMiLCJNT05USCI6IjAzIn0seyJTQUxFUyI6MTU0LjQ4NSwiWUVBUiI6IjIwMTYiLCJEQVRFTkVXIjoiU3VuLCAyNyBNYXIgMjAxNiAyMzowODo0MCBHTVQiLCJDQVRFR09SWSI6Ik11bHRpIGJ1eSIsIk1PTlRIIjoiMDMifSx7IlNBTEVTIjozODcuOTE1Nzk5OTk5OTk5OSwiWUVBUiI6IjIwMTYiLCJEQVRFTkVXIjoiTW9uLCAyOCBNYXIgMjAxNiAwMjoxNToxMSBHTVQiLCJDQVRFR09SWSI6Ik1lbG9ucyIsIk1PTlRIIjoiMDMifSx7IlNBTEVTIjoxODAuMjE3MjcyNzI3MjcyOCwiWUVBUiI6IjIwMTYiLCJEQVRFTkVXIjoiTW9uLCAyOCBNYXIgMjAxNiAyMjo1OTozNCBHTVQiLCJDQVRFR09SWSI6Ik9seW1waWFuIFByb2R1Y3RzIiwiTU9OVEgiOiIwMyJ9LHsiU0FMRVMiOjYzMy4zNjgyNDM2MzYzNjM4LCJZRUFSIjoiMjAxNiIsIkRBVEVORVciOiJNb24sIDI4IE1hciAyMDE2IDIzOjU3OjI4IEdNVCIsIkNBVEVHT1JZIjoiT25pb25zIiwiTU9OVEgiOiIwMyJ9LHsiU0FMRVMiOjg1NC4zMDA5NiwiWUVBUiI6IjIwMTYiLCJEQVRFTkVXIjoiV2VkLCAzMCBNYXIgMjAxNiAwMzowMjowOSBHTVQiLCJDQVRFR09SWSI6IkdyYXBlcyIsIk1PTlRIIjoiMDMifSx7IlNBTEVTIjoxMDguMCwiWUVBUiI6IjIwMTYiLCJEQVRFTkVXIjoiV2VkLCAzMCBNYXIgMjAxNiAwNDoxNTo1OSBHTVQiLCJDQVRFR09SWSI6IkZsb3dlcnMiLCJNT05USCI6IjAzIn0seyJTQUxFUyI6ODcuMTA3NDE5OTk5OTk5OTksIllFQVIiOiIyMDE2IiwiREFURU5FVyI6IldlZCwgMzAgTWFyIDIwMTYgMjE6NDA6MTUgR01UIiwiQ0FURUdPUlkiOiJSb290IFZlZ2llcyIsIk1PTlRIIjoiMDMifSx7IlNBTEVTIjo3My43LCJZRUFSIjoiMjAxNiIsIkRBVEVORVciOiJUaHUsIDMxIE1hciAyMDE2IDAwOjIzOjUwIEdNVCIsIkNBVEVHT1JZIjoiQ3V0IFZlZ2dpZXMiLCJNT05USCI6IjAzIn0seyJTQUxFUyI6MjE2LjUwNDEwMDAwMDAwMDAyLCJZRUFSIjoiMjAxNiIsIkRBVEVORVciOiJUaHUsIDMxIE1hciAyMDE2IDAxOjI3OjQzIEdNVCIsIkNBVEVHT1JZIjoiQXNpYW4gVmVnaWVzIiwiTU9OVEgiOiIwMyJ9LHsiU0FMRVMiOjE2Ny44Nzk5OTk5OTk5OTk5NywiWUVBUiI6IjIwMTYiLCJEQVRFTkVXIjoiVGh1LCAzMSBNYXIgMjAxNiAwMTo1OTowNyBHTVQiLCJDQVRFR09SWSI6IkJlcnJpZXMiLCJNT05USCI6IjAzIn0sCiAgICAgICAgICAgIHsiU0FMRVMiOjYwMi4yMjU5NDU0NTQ1NDU4LCJZRUFSIjoiMjAxNiIsIkRBVEVORVciOiJGcmksIDAxIEFwciAyMDE2IDAwOjI2OjIzIEdNVCIsIkNBVEVHT1JZIjoiQ2l0cnVzIiwiTU9OVEgiOiIwNCJ9LAogICAgICAgICAgICB7IlNBTEVTIjo5NjQuMDUyNzgwMDAwMDAwOCwiWUVBUiI6IjIwMTYiLCJEQVRFTkVXIjoiRnJpLCAwMSBBcHIgMjAxNiAwMDo0MTowMSBHTVQiLCJDQVRFR09SWSI6Ik90aGVyIFZlZ2llcyIsIk1PTlRIIjoiMDQifSwKICAgICAgICAgICAgeyJTQUxFUyI6MTA3Ljg3OTk5OTk5OTk5OTk4LCJZRUFSIjoiMjAxNiIsIkRBVEVORVciOiJGcmksIDAxIEFwciAyMDE2IDA0OjUwOjI0IEdNVCIsIkNBVEVHT1JZIjoiQ2FiYmFnZXMiLCJNT05USCI6IjA0In0sCiAgICAgICAgICAgIHsiU0FMRVMiOjg2LjU1NTYsIllFQVIiOiIyMDE2IiwiREFURU5FVyI6IkZyaSwgMDEgQXByIDIwMTYgMDQ6NTA6MjQgR01UIiwiQ0FURUdPUlkiOiJSb290IFZlZ2llcyIsIk1PTlRIIjoiMDQifSwKICAgICAgICAgICAgeyJTQUxFUyI6Njc1LjkyOTkwMDAwMDAwMDIsIllFQVIiOiIyMDE2IiwiREFURU5FVyI6IkZyaSwgMDEgQXByIDIwMTYgMDQ6NTU6MjQgR01UIiwiQ0FURUdPUlkiOiJCYW5hbmFzIiwiTU9OVEgiOiIwNCJ9LAogICAgICAgICAgICB7IlNBTEVTIjoxOTcuMjA4MDgwMDAwMDAwMDUsIllFQVIiOiIyMDE2IiwiREFURU5FVyI6IkZyaSwgMDEgQXByIDIwMTYgMDg6MDY6MjYgR01UIiwiQ0FURUdPUlkiOiJBc2lhbiBWZWdpZXMiLCJNT05USCI6IjA0In0sCiAgICAgICAgICAgIHsiU0FMRVMiOjEwOC4wLCJZRUFSIjoiMjAxNiIsIkRBVEVORVciOiJGcmksIDAxIEFwciAyMDE2IDIxOjUyOjEyIEdNVCIsIkNBVEVHT1JZIjoiRmxvd2VycyIsIk1PTlRIIjoiMDQifSwKICAgICAgICAgICAgeyJTQUxFUyI6MTUuMjAwMDAwMDAwMDAwMDAzLCJZRUFSIjoiMjAxNiIsIkRBVEVORVciOiJTYXQsIDAyIEFwciAyMDE2IDAwOjIyOjE0IEdNVCIsIkNBVEVHT1JZIjoiU3JpIExhbmthbiBHcm9jZXJpZXMiLCJNT05USCI6IjA0In0sCiAgICAgICAgICAgIHsiU0FMRVMiOjExOC42MzIwMDAwMDAwMDAwOSwiWUVBUiI6IjIwMTYiLCJEQVRFTkVXIjoiU2F0LCAwMiBBcHIgMjAxNiAwMDoyMjoxNCBHTVQiLCJDQVRFR09SWSI6ImNhcnJvdHMiLCJNT05USCI6IjA0In0sCiAgICAgICAgICAgIHsiU0FMRVMiOjEyOS4wLCJZRUFSIjoiMjAxNiIsIkRBVEVORVciOiJTdW4sIDAzIEFwciAyMDE2IDAwOjAwOjUyIEdNVCIsIkNBVEVHT1JZIjoiTXVsdGkgYnV5IiwiTU9OVEgiOiIwNCJ9LAogICAgICAgICAgICB7IlNBTEVTIjoxNzQuMTc1MDgwMDAwMDAwMDQsIllFQVIiOiIyMDE2IiwiREFURU5FVyI6IlN1biwgMDMgQXByIDIwMTYgMDA6MDA6NTIgR01UIiwiQ0FURUdPUlkiOiJjYXBzaWN1bSIsIk1PTlRIIjoiMDQifSx7IlNBTEVTIjoyMzAuNTYyNzI3MjcyNzI3MzMsIllFQVIiOiIyMDE2IiwiREFURU5FVyI6IlN1biwgMDMgQXByIDIwMTYgMDA6MzQ6MTkgR01UIiwiQ0FURUdPUlkiOiJPbHltcGlhbiBQcm9kdWN0cyIsIk1PTlRIIjoiMDQifSx7IlNBTEVTIjo5Ni44NDYxNDcyNzI3MjcyOCwiWUVBUiI6IjIwMTYiLCJEQVRFTkVXIjoiU3VuLCAwMyBBcHIgMjAxNiAwMDozNzo0OSBHTVQiLCJDQVRFR09SWSI6Ik51dHMiLCJNT05USCI6IjA0In0seyJTQUxFUyI6NDM5LjEwODk2NTQ1NDU0NTM0LCJZRUFSIjoiMjAxNiIsIkRBVEVORVciOiJTdW4sIDAzIEFwciAyMDE2IDAxOjQyOjE4IEdNVCIsIkNBVEVHT1JZIjoiVG9tYXRvZXMiLCJNT05USCI6IjA0In0seyJTQUxFUyI6NTEyLjA1NjkyMDAwMDAwMDEsIllFQVIiOiIyMDE2IiwiREFURU5FVyI6IlN1biwgMDMgQXByIDIwMTYgMDI6NDQ6NTkgR01UIiwiQ0FURUdPUlkiOiJHcmFwZXMiLCJNT05USCI6IjA0In0seyJTQUxFUyI6MTUxLjA0NzksIllFQVIiOiIyMDE2IiwiREFURU5FVyI6IlN1biwgMDMgQXByIDIwMTYgMDI6NTM6MDAgR01UIiwiQ0FURUdPUlkiOiJQdW1wa2lucyIsIk1PTlRIIjoiMDQifSx7IlNBTEVTIjo0My4wLCJZRUFSIjoiMjAxNiIsIkRBVEVORVciOiJTdW4sIDAzIEFwciAyMDE2IDAyOjUzOjAwIEdNVCIsIkNBVEVHT1JZIjoiQ3V0IFZlZ2dpZXMiLCJNT05USCI6IjA0In0seyJTQUxFUyI6MTM3LjgwNjA3OTk5OTk5OTk1LCJZRUFSIjoiMjAxNiIsIkRBVEVORVciOiJTdW4sIDAzIEFwciAyMDE2IDA2OjA5OjUwIEdNVCIsIkNBVEVHT1JZIjoiQ3VjdW1iZXJzIiwiTU9OVEgiOiIwNCJ9LHsiU0FMRVMiOjExOS4wMTQ1LCJZRUFSIjoiMjAxNiIsIkRBVEVORVciOiJNb24sIDA0IEFwciAyMDE2IDAxOjE4OjAwIEdNVCIsIkNBVEVHT1JZIjoiQ2hpbGxpZXMiLCJNT05USCI6IjA0In0seyJTQUxFUyI6Mjc2LjEwMDg3OTk5OTk5OTksIllFQVIiOiIyMDE2IiwiREFURU5FVyI6Ik1vbiwgMDQgQXByIDIwMTYgMDE6NDY6MDEgR01UIiwiQ0FURUdPUlkiOiJNdXNocm9vbXMiLCJNT05USCI6IjA0In0seyJTQUxFUyI6MjAyLjg4NDc0MDAwMDAwMDA4LCJZRUFSIjoiMjAxNiIsIkRBVEVORVciOiJNb24sIDA0IEFwciAyMDE2IDAzOjUyOjA4IEdNVCIsIkNBVEVHT1JZIjoiTWVsb25zIiwiTU9OVEgiOiIwNCJ9LHsiU0FMRVMiOjEzMS4zNTI3NiwiWUVBUiI6IjIwMTYiLCJEQVRFTkVXIjoiVHVlLCAwNSBBcHIgMjAxNiAwMTo0Njo0MiBHTVQiLCJDQVRFR09SWSI6IlRyb3BpY2FsIEZydWl0cyIsIk1PTlRIIjoiMDQifSx7IlNBTEVTIjo5MC41NTgxODE4MTgxODE4MSwiWUVBUiI6IjIwMTYiLCJEQVRFTkVXIjoiVHVlLCAwNSBBcHIgMjAxNiAwNDowMTowNyBHTVQiLCJDQVRFR09SWSI6Ik90aGVyIEZydWl0cyIsIk1PTlRIIjoiMDQifSx7IlNBTEVTIjoxODcuNjMyMjU5OTk5OTk5OTIsIllFQVIiOiIyMDE2IiwiREFURU5FVyI6IlR1ZSwgMDUgQXByIDIwMTYgMDQ6NDk6MjYgR01UIiwiQ0FURUdPUlkiOiJQZWFycyIsIk1PTlRIIjoiMDQifSx7IlNBTEVTIjo0OTYuMzc4MDgwMDAwMDAwMywiWUVBUiI6IjIwMTYiLCJEQVRFTkVXIjoiVHVlLCAwNSBBcHIgMjAxNiAwNTowMDoyOSBHTVQiLCJDQVRFR09SWSI6Ik9uaW9ucyIsIk1PTlRIIjoiMDQifSx7IlNBTEVTIjoyMC40NDE3NCwiWUVBUiI6IjIwMTYiLCJEQVRFTkVXIjoiVHVlLCAwNSBBcHIgMjAxNiAyMjozNjozNCBHTVQiLCJDQVRFR09SWSI6IlZlZ2dpZXMiLCJNT05USCI6IjA0In0seyJTQUxFUyI6NjQyLjgyMTk0MDAwMDAwMDIsIllFQVIiOiIyMDE2IiwiREFURU5FVyI6IldlZCwgMDYgQXByIDIwMTYgMDI6MTY6MTMgR01UIiwiQ0FURUdPUlkiOiJQb3RhdG9lcyIsIk1PTlRIIjoiMDQifSx7IlNBTEVTIjoyNzUuODAwMDAwMDAwMDAwMiwiWUVBUiI6IjIwMTYiLCJEQVRFTkVXIjoiV2VkLCAwNiBBcHIgMjAxNiAwMzoyNjo1MiBHTVQiLCJDQVRFR09SWSI6IkF2b2NhZG9lcyIsIk1PTlRIIjoiMDQifSx7IlNBTEVTIjozOS45NiwiWUVBUiI6IjIwMTYiLCJEQVRFTkVXIjoiV2VkLCAwNiBBcHIgMjAxNiAwMzoyNzo1OCBHTVQiLCJDQVRFR09SWSI6Ikdyb2Nlcmllcy1EcnkgR29vZHMiLCJNT05USCI6IjA0In0seyJTQUxFUyI6NjE4Ljk2NTc3OTk5OTk5OTcsIllFQVIiOiIyMDE2IiwiREFURU5FVyI6IldlZCwgMDYgQXByIDIwMTYgMDQ6NDc6NTMgR01UIiwiQ0FURUdPUlkiOiJTdG9uZWZydWl0cyIsIk1PTlRIIjoiMDQifSx7IlNBTEVTIjozNDguNTEyMDAwMDAwMDAwMiwiWUVBUiI6IjIwMTYiLCJEQVRFTkVXIjoiVGh1LCAwNyBBcHIgMjAxNiAwMjo0NToxMyBHTVQiLCJDQVRFR09SWSI6IkxldHR1Y2VzIiwiTU9OVEgiOiIwNCJ9LHsiU0FMRVMiOjI5My4xMDAwMDAwMDAwMDAyNSwiWUVBUiI6IjIwMTYiLCJEQVRFTkVXIjoiVGh1LCAwNyBBcHIgMjAxNiAwMzoyNDo0OCBHTVQiLCJDQVRFR09SWSI6IkJ1bmNoIFZlZ2llcyIsIk1PTlRIIjoiMDQifSx7IlNBTEVTIjoyMjcuMzQ5OTk5OTk5OTk5ODUsIllFQVIiOiIyMDE2IiwiREFURU5FVyI6IkZyaSwgMDggQXByIDIwMTYgMDE6MDQ6NDQgR01UIiwiQ0FURUdPUlkiOiJFZ2dzIiwiTU9OVEgiOiIwNCJ9LHsiU0FMRVMiOjEzOC45NzE5OTk5OTk5OTk5OCwiWUVBUiI6IjIwMTYiLCJEQVRFTkVXIjoiRnJpLCAwOCBBcHIgMjAxNiAwNDoyMTo1NCBHTVQiLCJDQVRFR09SWSI6IkhlcmJzIiwiTU9OVEgiOiIwNCJ9LHsiU0FMRVMiOjUwMi4zNzIzODAwMDAwMDAyNSwiWUVBUiI6IjIwMTYiLCJEQVRFTkVXIjoiU2F0LCAwOSBBcHIgMjAxNiAwMzozNDo1MCBHTVQiLCJDQVRFR09SWSI6IkFwcGxlcyIsIk1PTlRIIjoiMDQifSx7IlNBTEVTIjo3NC4yNzAwMDAwMDAwMDAwMSwiWUVBUiI6IjIwMTYiLCJEQVRFTkVXIjoiU2F0LCAwOSBBcHIgMjAxNiAwNDoyMjozNyBHTVQiLCJDQVRFR09SWSI6IkJlcnJpZXMiLCJNT05USCI6IjA0In0seyJTQUxFUyI6Mi4wLCJZRUFSIjoiMjAxNiIsIkRBVEVORVciOiJTYXQsIDA5IEFwciAyMDE2IDA0OjIyOjM3IEdNVCIsIkNBVEVHT1JZIjoiQ3V0IEZydWl0cyIsIk1PTlRIIjoiMDQifQogICAgICAgIF0KCiAgICAvLyB2YXIgbWFwID0gYXBpX2RhdGEucmVkdWNlKChyLCBpKSA9PiAoY29uc29sZS5sb2cociksKChyW2kuQ0FURUdPUlldID0gcltpLkNBVEVHT1JZXSB8fCBbXSkucHVzaCh7CiAgICAvLyAgIGRhdGUgOiBpLkRBVEVORVcsCiAgICAvLyAgIHNhbGVzOiBpLlNBTEVTCiAgICAvLyB9KSwgcikpLCB7fSk7CiAgICAvLyB2YXIgZW50cmllcyA9IE9iamVjdC5lbnRyaWVzKG1hcCk7CiAgICAvLyBjb25zdCBzZWNvbmRfZGF0YSA9IFtdOwogICAgLy8gICBmb3IobGV0IGkgPTA7IGkgPCBlbnRyaWVzLmxlbmd0aDsgaSsrKSB7CiAgICAvLyAgICAgc2Vjb25kX2RhdGEucHVzaCh7CiAgICAvLyAgICAgICBsYWJlbCA6IGVudHJpZXNbaV1bMF0sCiAgICAvLyAgICAgICBkYXRhOiBbXSwKICAgIC8vICAgICB9KQogICAgLy8gICAgIGZvcihsZXQgaiA9MCA7IGogPCBlbnRyaWVzW2ldWzFdLmxlbmd0aDsgaisrKSB7CiAgICAvLyAgICAgICBzZWNvbmRfZGF0YVtpXS5kYXRhLnB1c2goewogICAgLy8gICAgICAgICBkYXRlOiBlbnRyaWVzW2ldWzFdW2pdLmRhdGUsCiAgICAvLyAgICAgICAgIHNhbGVzOiBlbnRyaWVzW2ldWzFdW2pdLnNhbGVzCiAgICAvLyAgICAgICB9KQogICAgLy8gICAgIH0KICAgIC8vICAgfQogICAgLy8gY29uc29sZS5sb2coInNlY29uZCBkYXRhIixzZWNvbmRfZGF0YSkKCiAgICAvLyBjb25zdCBkYXRhID0gW107CiAgICAvLyAgIGZvcihsZXQgaSA9MDsgaSA8IGVudHJpZXMubGVuZ3RoOyBpKyspIHsKICAgIC8vICAgICBkYXRhLnB1c2goewogICAgLy8gICAgICAgbGFiZWwgOiBlbnRyaWVzW2ldWzBdLAogICAgLy8gICAgICAgZGF0YTogW10sCiAgICAvLyAgICAgfSkKICAgIC8vICAgICBmb3IobGV0IGogPTAgOyBqIDwgZW50cmllc1tpXVsxXS5sZW5ndGg7IGorKykgewogICAgLy8gICAgICAgZGF0YVtpXS5kYXRhLnB1c2goewogICAgLy8gICAgICAgICBkYXRlOiBuZXcgRGF0ZShlbnRyaWVzW2ldWzFdW2pdLmRhdGUpLAogICAgLy8gICAgICAgICBzYWxlczogZW50cmllc1tpXVsxXVtqXS5zYWxlcwogICAgLy8gICAgICAgfSkKICAgIC8vICAgICB9CiAgICAvLyAgIH0KICAgIC8vIHZhciB2bSA9dGhpczsKICAgIC8vIGNvbnNvbGUubG9nKHRoaXMuYXBpRGF0YSk7CiAgICB2YXIgbWFwID0gdGhpcy5hcGlEYXRhLnJlZHVjZSgociwgaSkgPT4gKChyW2lbdGhpcy54S2V5XV0gPSByW2lbdGhpcy54S2V5XV0gfHwgW10pLnB1c2goewogICAgICAvLyBkYXRlIDogaVsiTU9OVEgiXSsiLyIrIjAxLyIraVsiWUVBUiJdLAogICAgICBkYXRlIDogaVt0aGlzLmRhdGVLZXldLAogICAgICAvLyBkYXRlIDogaVsiTU9OVEgiXSwKICAgICAgc2FsZXM6IGlbdGhpcy55S2V5XQogICAgICAvLyBpCiAgICB9KSwgciksIHt9KTsKICAgIHZhciBlbnRyaWVzID0gT2JqZWN0LmVudHJpZXMobWFwKTsKICAgIC8vIGNvbnNvbGUubG9nKGVudHJpZXMpOwogICAgY29uc3Qgc2Vjb25kX2RhdGEgPSBbXTsKICAgICAgZm9yKGxldCBpID0wOyBpIDwgZW50cmllcy5sZW5ndGg7IGkrKykgewogICAgICAgIHNlY29uZF9kYXRhLnB1c2goewogICAgICAgICAgbGFiZWwgOiBlbnRyaWVzW2ldWzBdLAogICAgICAgICAgZGF0YTogW10sCiAgICAgICAgfSkKICAgICAgICBmb3IobGV0IGogPTAgOyBqIDwgZW50cmllc1tpXVsxXS5sZW5ndGg7IGorKykgewogICAgICAgICAgc2Vjb25kX2RhdGFbaV0uZGF0YS5wdXNoKHsKICAgICAgICAgICAgZGF0ZTogZW50cmllc1tpXVsxXVtqXS5kYXRlLAogICAgICAgICAgICBzYWxlczogZW50cmllc1tpXVsxXVtqXS5zYWxlcwogICAgICAgICAgfSkKICAgICAgICB9CiAgICAgIH0KICAgIC8vIGNvbnNvbGUubG9nKCJzZWNvbmQgZGF0YSIsc2Vjb25kX2RhdGEpCgogICAgY29uc3QgZGF0YSA9IFtdOwogICAgICBmb3IobGV0IGkgPTA7IGkgPCBlbnRyaWVzLmxlbmd0aDsgaSsrKSB7CiAgICAgICAgZGF0YS5wdXNoKHsKICAgICAgICAgIGxhYmVsIDogZW50cmllc1tpXVswXSwKICAgICAgICAgIGRhdGE6IFtdLAogICAgICAgIH0pCiAgICAgICAgZm9yKGxldCBqID0wIDsgaiA8IGVudHJpZXNbaV1bMV0ubGVuZ3RoOyBqKyspIHsKICAgICAgICAgIGRhdGFbaV0uZGF0YS5wdXNoKHsKICAgICAgICAgICAgZGF0ZTogbmV3IERhdGUoZW50cmllc1tpXVsxXVtqXS5kYXRlKSwKICAgICAgICAgICAgc2FsZXM6IGVudHJpZXNbaV1bMV1bal0uc2FsZXMKICAgICAgICAgIH0pCiAgICAgICAgfQogICAgICB9CgogICAgLy8gY29uc29sZS5sb2coZGF0YVswXS5kYXRhWzBdLmRhdGUsICJISSIsbmV3IERhdGUoZGF0YVswXS5kYXRhWzBdLmRhdGUpKTsKICAgIC8vIGNvbnNvbGUubG9nKCJmaW5hbCBkYXRhIixkYXRhLCJIaSIpOwoKCiAgICB2YXIgbWFyZ2luID0ge3RvcDogMzAsIHJpZ2h0OiAxMCwgYm90dG9tOiA1MCwgbGVmdDogNjB9LAogICAgICBjaGFydCA9IGQzTGluZVdpdGhMZWdlbmQoKQogICAgICAgICAgICAgICAgLnhBeGlzLmxhYmVsKHRoaXMueEtleSkKICAgICAgICAgICAgICAgIC53aWR0aCh3aWR0aChtYXJnaW4pKQogICAgICAgICAgICAgICAgLmhlaWdodChoZWlnaHQobWFyZ2luKSkKICAgICAgICAgICAgICAgIC55QXhpcy5sYWJlbCh0aGlzLnlLZXkpOwoKCiAgdmFyIHN2ZyA9IGQzLnNlbGVjdCgnI3Rlc3QxIHN2ZycpCiAgICAgIC5kYXR1bShnZW5lcmF0ZURhdGEoKSkKCiAgc3ZnLnRyYW5zaXRpb24oKS5kdXJhdGlvbigwKQogICAgICAuYXR0cignd2lkdGgnLCB3aWR0aChtYXJnaW4pKQogICAgICAuYXR0cignaGVpZ2h0JywgaGVpZ2h0KG1hcmdpbikpCiAgICAgIC5jYWxsKGNoYXJ0KTsKCgogIGNoYXJ0LmRpc3BhdGNoLm9uKCdzaG93VG9vbHRpcCcsIGZ1bmN0aW9uKGUpIHsKICB2YXIgb2Zmc2V0ID0gJCgnI3Rlc3QxJykub2Zmc2V0KCksIC8vIHsgbGVmdDogMCwgdG9wOiAwIH0KICAgICAgICBsZWZ0ID0gZS5wb3NbMF0gKyBvZmZzZXQubGVmdCwKICAgICAgICB0b3AgPSBlLnBvc1sxXSArIG9mZnNldC50b3AsCiAgICAgICAgLy8gZm9ybWF0dGVyID0gZDMudGltZS5mb3JtYXQoIiVtLyVkLyVZIikKICAgICAgICBmb3JtYXR0ZXIgPSBkMy50aW1lLmZvcm1hdCgiJWEsJWIvJWQvJXkiKQogICAgICAgIC8vIGNvbnNvbGUubG9nKGUpOwogICAgLy8gVE9ETyA6ICAKICAgIHZhciBjb250ZW50ID0gJzxoMz4nICsgZS5zZXJpZXMubGFiZWwgKyAnPC9oMz4nICsKICAgICAgICAgICAgICAgICAgJzxwPicgKwogICAgICAgICAgICAgICAgICAnPHNwYW4gY2xhc3M9InZhbHVlIj5bJyArIGUucG9pbnQuc2FsZXMudG9GaXhlZCgyKSArICcsICcgKyBmb3JtYXR0ZXIoZS5wb2ludC5kYXRlKSArICddPC9zcGFuPicgKwogICAgICAgICAgICAgICAgICAnPC9wPic7CiAgICAgICAgICAgICAgCgogICAgbnZ0b29sdGlwLnNob3coW2xlZnQsIHRvcF0sIGNvbnRlbnQpOwogIH0pOwoKICBjaGFydC5kaXNwYXRjaC5vbignaGlkZVRvb2x0aXAnLCBmdW5jdGlvbihlKSB7CiAgICBudnRvb2x0aXAuY2xlYW51cCgpOwogIH0pOwoKCgoKICAkKHdpbmRvdykucmVzaXplKGZ1bmN0aW9uKCkgewogICAgcmVzaXplX29mX3BhZ2UoKTsKCiAgICB9KTsKCiAgICBmdW5jdGlvbiByZXNpemVfb2ZfcGFnZSgpewogICAgICAgICAgdmFyIG1hcmdpbiA9IGNoYXJ0Lm1hcmdpbigpOwogICAgY2hhcnQKICAgICAgLndpZHRoKHdpZHRoKG1hcmdpbikpCiAgICAgIC5oZWlnaHQoaGVpZ2h0KG1hcmdpbikpOwoKICAgIGQzLnNlbGVjdCgnI3Rlc3QxIHN2ZycpCiAgICAgIC5hdHRyKCd3aWR0aCcsIHdpZHRoKG1hcmdpbikpCiAgICAgIC5hdHRyKCdoZWlnaHQnLCBoZWlnaHQobWFyZ2luKSkKICAgICAgLmNhbGwoY2hhcnQpOwogICAgfQoKCiAgZnVuY3Rpb24gd2lkdGgobWFyZ2luKSB7CiAgICB2YXIgdyA9ICQoIi5jYXJkLWJvZHkiKS53aWR0aCgpIC0gNDA7CgogICAgLy8gcmV0dXJuIDUwMDsKICAgIHJldHVybiAoICh3IC0gbWFyZ2luLmxlZnQgLSBtYXJnaW4ucmlnaHQgLSAyMCkgPCAwICkgPyBtYXJnaW4ubGVmdCArIG1hcmdpbi5yaWdodCArIDIgOiB3OwogIH0KCiAgZnVuY3Rpb24gaGVpZ2h0KG1hcmdpbikgewogICAgLy8gdmFyIGggPSAkKCIuY2FyZC1ib2R5IikuaGVpZ2h0KCkgLSAyMDsKICAgIC8vIHZhciBoID0gJCgiLmNhcmQtYm9keSIpLmhlaWdodCgpIC0gMjA7CiAgICB2YXIgaCA9IDcwMCAtIDEwMDsKCiAgICByZXR1cm4gKCBoIC0gbWFyZ2luLnRvcCAtIG1hcmdpbi5ib3R0b20gLSAyMCA8IDAgKSA/IAogICAgICAgICAgICAgIG1hcmdpbi50b3AgKyBtYXJnaW4uYm90dG9tICsgMiA6IGg7CgogICAgLy8gcmV0dXJuIDcwMAogIH0KCgogIC8vZGF0YQogIGZ1bmN0aW9uIGdlbmVyYXRlRGF0YSgpIHsKICAgIHZhciBzaW4gPSBbXSwKICAgICAgICBzaW4yID0gW10sCiAgICAgICAgY29zID0gW10sCiAgICAgICAgY29zMiA9IFtdLAogICAgICAgIHNpbjMgID0gW10sCiAgICAgICAgc2luNCA9IFtdLAogICAgICAgIHNpbjUgPSBbXSwKICAgICAgICBzaW42ID0gW10sCiAgICAgICAgY29zMiA9IFtdLAogICAgICAgIHIxID0gTWF0aC5yYW5kb20oKSwKICAgICAgICByMiA9IE1hdGgucmFuZG9tKCksCiAgICAgICAgcjMgPSBNYXRoLnJhbmRvbSgpLAogICAgICAgIHI0ID0gTWF0aC5yYW5kb20oKSwKICAgICAgICByNSA9IE1hdGgucmFuZG9tKCksCiAgICAgICAgcjYgPSBNYXRoLnJhbmRvbSgpLAogICAgICAgIHI3ID0gTWF0aC5yYW5kb20oKQogICAgICAgIC8vIHI0ID0gTWF0aC5yYW5kb20oKTsKCiAgICBmb3IgKHZhciBpID0gMDsgaSA8IDEwMDsgaSsrKSB7CiAgICAgIHNpbi5wdXNoKFsgaSwgcjEgKiBNYXRoLnNpbiggcjIgKyAgaSAvICgxMCAqIChyNCArIC41KSApKV0pOwogICAgICBjb3MucHVzaChbIGksIHIyICogTWF0aC5jb3MoIHIzICsgaSAvICgxMCAqIChyMyArIC41KSApKV0pOwogICAgICBzaW4yLnB1c2goWyBpLCByMyAqIE1hdGguc2luKCByMyArIGkgLyAoMTAgKiAocjIgKyAuNSkgKSldKTsKICAgICAgc2luMy5wdXNoKFsgaSwgcjQgKiBNYXRoLnNpbiggcjQgKyBpIC8gKDEwICogKHIyICsgLjUpICkpXSk7CiAgICAgIHNpbjQucHVzaChbIGksIHI1ICogTWF0aC5zaW4oIHI1ICsgaSAvICgxMCAqIChyMiArIC41KSApKV0pOwogICAgICBzaW41LnB1c2goWyBpLCByNiAqIE1hdGguc2luKCByNiArIGkgLyAoMTAgKiAocjIgKyAuNSkgKSldKTsKICAgICAgc2luNi5wdXNoKFsgaSwgcjcgKiBNYXRoLnNpbiggcjcgKyBpIC8gKDEwICogKHIyICsgLjUpICkpXSk7CiAgICAgIGNvczIucHVzaChbIGksIHI0ICogTWF0aC5jb3MoIHI0ICsgaSAvICgxMCAqIChyMSArIC41KSApKV0pOwogICAgfQogICAgICAvLyBjb25zb2xlLmxvZyhjb3MpOwoKICAgIHJldHVybiBkYXRhOwoKICAgIC8vIHJldHVybiBbCiAgICAvLyAgIHsKICAgIC8vICAgICBkYXRhOiBzaW4sCiAgICAvLyAgICAgbGFiZWw6ICJTaW5lIFdhdmUiCiAgICAvLyAgIH0sCiAgICAvLyAgIHsKICAgIC8vICAgICBkYXRhOiBjb3MsCiAgICAvLyAgICAgbGFiZWw6ICJDb3NpbmUgV2F2ZSIKICAgIC8vICAgfSwKICAgIC8vICAgewogICAgLy8gICAgIGRhdGE6IHNpbjIsCiAgICAvLyAgICAgbGFiZWw6ICJTaW5lMiBXYXZlIgogICAgLy8gICB9LAogICAgLy8gICB7CiAgICAvLyAgICAgZGF0YTogY29zMiwKICAgIC8vICAgICBsYWJlbDogIkNvc2luZTIgV2F2ZSIKICAgIC8vICAgfSwKICAgIC8vICAgewogICAgLy8gICAgIGRhdGE6IHNpbjMsCiAgICAvLyAgICAgbGFiZWw6ICJTaW5lMyBXYXZlIgogICAgLy8gICB9LAogICAgLy8gICB7CiAgICAvLyAgICAgZGF0YTogc2luNCwKICAgIC8vICAgICBsYWJlbDogIlNpbmU0IFdhdmUiCiAgICAvLyAgIH0sCiAgICAvLyAgIHsKICAgIC8vICAgICBkYXRhOiBzaW41LAogICAgLy8gICAgIGxhYmVsOiAiU2luZTUgV2F2ZSIKICAgIC8vICAgfSwKICAgIC8vICAgewogICAgLy8gICAgIGRhdGE6IHNpbjYsCiAgICAvLyAgICAgbGFiZWw6ICJTaW5lNiBXYXZlIgogICAgLy8gICB9LAoKICAgIC8vIF07CiAgICAvLyBjb25zb2xlLmxvZyhkYXRhKQogIH0KCiAgZnVuY3Rpb24gZDNMZWdlbmQoKSB7CiAgICAgIHZhciBtYXJnaW4gPSB7dG9wOiA1LCByaWdodDogMCwgYm90dG9tOiA1LCBsZWZ0OiAxMH0sCiAgICAgICAgICB3aWR0aCA9IDQwMCwKICAgICAgICAgIGhlaWdodCA9IDIwLAogICAgICAgICAgY29sb3IgPSBkMy5zY2FsZS5jYXRlZ29yeTIwKCkucmFuZ2UoKSwKICAgICAgICAgIGRpc3BhdGNoID0gZDMuZGlzcGF0Y2goJ2xlZ2VuZENsaWNrJywgJ2xlZ2VuZE1vdXNlb3ZlcicsICdsZWdlbmRNb3VzZW91dCcpOwoKCiAgICAgIGZ1bmN0aW9uIGNoYXJ0KHNlbGVjdGlvbikgewogICAgICAgIHNlbGVjdGlvbi5lYWNoKGZ1bmN0aW9uKGRhdGEpIHsKICAgICAgICAgIC8vIGNvbnNvbGUubG9nKCJGdW5jdGlvbi1jaGFydCIsZGF0YSk7CiAgICAgICAgICAvKioKICAgICAgICAgICogICAgTGVnZW5kIGN1cmVudGx5IGlzIHNldHVwIHRvIGF1dG9tYXRpY2FseSBleHBhbmQgdmVydGljYWxseSBiYXNlZCBvbiBhIG1heCB3aWR0aC4KICAgICAgICAgICogICAgU2hvdWxkIGltcGxlbWVudCBsZWdlbmQgd2hlcmUgRUlUSEVSIGEgbWF4V2lkdGggb3IgYSBtYXhIZWlnaHQgaXMgZGVmaW5lZCwgdGhlbgogICAgICAgICAgKiAgICB0aGUgb3RoZXIgZGltZW5zaW9uIHdpbGwgYXV0b21hdGljYWxseSBleHBhbmQgdG8gZml0LCBhbmQgYW55dGhpbmcgdGhhdCBleGNlZWRzCiAgICAgICAgICAqICAgIHRoYXQgd2lsbCBhdXRvbWF0aWNhbGx5IGJlIGNsaXBwZWQuCiAgICAgICAgICAqKi8KCiAgICAgICAgICB2YXIgd3JhcCA9IGQzLnNlbGVjdCh0aGlzKS5zZWxlY3RBbGwoJ2cubGVnZW5kJykuZGF0YShbZGF0YV0pOwogICAgICAgICAgdmFyIGdFbnRlciA9IHdyYXAuZW50ZXIoKS5hcHBlbmQoJ2cnKS5hdHRyKCdjbGFzcycsICdsZWdlbmQnKS5hcHBlbmQoJ2cnKTsKCgogICAgICAgICAgdmFyIGcgPSB3cmFwLnNlbGVjdCgnZycpCiAgICAgICAgICAgICAgLmF0dHIoJ3RyYW5zZm9ybScsICd0cmFuc2xhdGUoJyArIG1hcmdpbi5sZWZ0ICsgJywnICsgbWFyZ2luLnRvcCArICcpJyk7CgoKICAgICAgICAgIHZhciBzZXJpZXMgPSBnLnNlbGVjdEFsbCgnLnNlcmllcycpCiAgICAgICAgICAgICAgLmRhdGEoZnVuY3Rpb24oZCkgeyByZXR1cm4gZCB9KTsKICAgICAgICAgIHZhciBzZXJpZXNFbnRlciA9IHNlcmllcy5lbnRlcigpLmFwcGVuZCgnZycpLmF0dHIoJ2NsYXNzJywgJ3NlcmllcycpCiAgICAgICAgICAgICAgLm9uKCdjbGljaycsIGZ1bmN0aW9uKGQsIGkpIHsKICAgICAgICAgICAgICAgIC8vIGRpc3BhdGNoLmxlZ2VuZENsaWNrKGQsIGkpOwogICAgICAgICAgICAgIH0pCiAgICAgICAgICAgICAgLm9uKCdtb3VzZW92ZXInLCBmdW5jdGlvbihkLCBpKSB7CiAgICAgICAgICAgICAgICBkaXNwYXRjaC5sZWdlbmRNb3VzZW92ZXIoZCwgaSk7CiAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICAub24oJ21vdXNlb3V0JywgZnVuY3Rpb24oZCwgaSkgewogICAgICAgICAgICAgICAgZGlzcGF0Y2gubGVnZW5kTW91c2VvdXQoZCwgaSk7CiAgICAgICAgICAgICAgfSk7CiAgICAgICAgICBzZXJpZXNFbnRlci5hcHBlbmQoJ2NpcmNsZScpCiAgICAgICAgICAgICAgLnN0eWxlKCdmaWxsJywgZnVuY3Rpb24oZCwgaSl7IHJldHVybiBkLmNvbG9yIHx8IGNvbG9yW2kgJSAxMF0gfSkKICAgICAgICAgICAgICAuc3R5bGUoJ3N0cm9rZScsIGZ1bmN0aW9uKGQsIGkpeyByZXR1cm4gZC5jb2xvciB8fCBjb2xvcltpICUgMTBdIH0pCiAgICAgICAgICAgICAgLmF0dHIoJ3InLCA1KTsKICAgICAgICAgIHNlcmllc0VudGVyLmFwcGVuZCgndGV4dCcpCiAgICAgICAgICAgICAgLnRleHQoZnVuY3Rpb24oZCkgeyByZXR1cm4gZC5sYWJlbCB9KQogICAgICAgICAgICAgIC5hdHRyKCd0ZXh0LWFuY2hvcicsICdzdGFydCcpCiAgICAgICAgICAgICAgLmF0dHIoJ2R5JywgJy4zMmVtJykKICAgICAgICAgICAgICAuYXR0cignZHgnLCAnOCcpOwogICAgICAgICAgc2VyaWVzLmNsYXNzZWQoJ2Rpc2FibGVkJywgZnVuY3Rpb24oZCkgeyByZXR1cm4gZC5kaXNhYmxlZCB9KTsKICAgICAgICAgIHNlcmllcy5leGl0KCkucmVtb3ZlKCk7CgoKICAgICAgICAgIHZhciB5cG9zID0gNSwKICAgICAgICAgICAgICBuZXd4cG9zID0gNSwKICAgICAgICAgICAgICBtYXh3aWR0aCA9IDAsCiAgICAgICAgICAgICAgeHBvczsKICAgICAgICAgIHNlcmllcwogICAgICAgICAgICAgIC5hdHRyKCd0cmFuc2Zvcm0nLCBmdW5jdGlvbihkLCBpKSB7CiAgICAgICAgICAgICAgICB2YXIgbGVuZ3RoID0gZDMuc2VsZWN0KHRoaXMpLnNlbGVjdCgndGV4dCcpLm5vZGUoKS5nZXRDb21wdXRlZFRleHRMZW5ndGgoKSArIDI4OwogICAgICAgICAgICAgICAgeHBvcyA9IG5ld3hwb3M7CgogICAgICAgICAgICAgICAgLy9UT0RPOiAxKSBNYWtlIHN1cmUgZG90ICsgdGV4dCBvZiBldmVyeSBzZXJpZXMgZml0cyBob3Jpem9udGFsbHksIG9yIGNsaXAgdGV4dCB0byBmaXgKICAgICAgICAgICAgICAgIC8vICAgICAgMikgQ29uc2lkZXIgbWFraW5nIGNvbHVtbnMgaW4gbGluZSBzbyBkb3RzIGxpbmUgdXAKICAgICAgICAgICAgICAgIC8vICAgICAgICAgLS1hbGwgbGFiZWxzIHNhbWUgd2lkdGg/IG9yIGp1c3QgYWxsIGluIHRoZSBzYW1lIGNvbHVtbj8KICAgICAgICAgICAgICAgIC8vICAgICAgICAgLS1vcHRpb25hbCwgb3IgZm9yY2VkIGFsd2F5cz8KICAgICAgICAgICAgICAgIGlmICh3aWR0aCA8IG1hcmdpbi5sZWZ0ICsgbWFyZ2luLnJpZ2h0ICsgeHBvcyArIGxlbmd0aCkgewogICAgICAgICAgICAgICAgICBuZXd4cG9zID0geHBvcyA9IDU7CiAgICAgICAgICAgICAgICAgIHlwb3MgKz0gMjA7CiAgICAgICAgICAgICAgICB9CgogICAgICAgICAgICAgICAgbmV3eHBvcyArPSBsZW5ndGg7CiAgICAgICAgICAgICAgICBpZiAobmV3eHBvcyA+IG1heHdpZHRoKSBtYXh3aWR0aCA9IG5ld3hwb3M7CgogICAgICAgICAgICAgICAgcmV0dXJuICd0cmFuc2xhdGUoJyArIHhwb3MgKyAnLCcgKyB5cG9zICsgJyknOwogICAgICAgICAgICAgIH0pOwoKICAgICAgICAgIC8vcG9zaXRpb24gbGVnZW5kIGFzIGZhciByaWdodCBhcyBwb3NzaWJsZSB3aXRoaW4gdGhlIHRvdGFsIHdpZHRoCiAgICAgICAgICBnLmF0dHIoJ3RyYW5zZm9ybScsICd0cmFuc2xhdGUoJyArICh3aWR0aCAtIG1hcmdpbi5yaWdodCAtIG1heHdpZHRoKSArICcsJyArIG1hcmdpbi50b3AgKyAnKScpOwoKICAgICAgICAgIGhlaWdodCA9IG1hcmdpbi50b3AgKyBtYXJnaW4uYm90dG9tICsgeXBvcyArIDE1OwogICAgICAgIH0pOwoKICAgICAgICByZXR1cm4gY2hhcnQ7CiAgICAgIH0KCiAgICAgIGNoYXJ0LmRpc3BhdGNoID0gZGlzcGF0Y2g7CgogICAgICBjaGFydC5tYXJnaW4gPSBmdW5jdGlvbihfKSB7CiAgICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gbWFyZ2luOwogICAgICAgIG1hcmdpbiA9IF87CiAgICAgICAgcmV0dXJuIGNoYXJ0OwogICAgICB9OwoKICAgICAgY2hhcnQud2lkdGggPSBmdW5jdGlvbihfKSB7CiAgICAgICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gd2lkdGg7CiAgICAgICAgd2lkdGggPSBfOwogICAgICAgIHJldHVybiBjaGFydDsKICAgICAgfTsKCiAgICAgIGNoYXJ0LmhlaWdodCA9IGZ1bmN0aW9uKF8pIHsKICAgICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBoZWlnaHQ7CiAgICAgICAgaGVpZ2h0ID0gXzsKICAgICAgICByZXR1cm4gY2hhcnQ7CiAgICAgIH07CgogICAgICBjaGFydC5jb2xvciA9IGZ1bmN0aW9uKF8pIHsKICAgICAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBjb2xvcjsKICAgICAgICBjb2xvciA9IF87CiAgICAgICAgcmV0dXJuIGNoYXJ0OwogICAgICB9OwoKICAgICAgcmV0dXJuIGNoYXJ0OwogIH0KCgogIGZ1bmN0aW9uIGQzTGluZSgpIHsKICB2YXIgbWFyZ2luID0ge3RvcDogMCwgcmlnaHQ6IDAsIGJvdHRvbTogMCwgbGVmdDogMH0sCiAgICAgIHdpZHRoID0gOTYwLAogICAgICBoZWlnaHQgPSA1MDAsCiAgICAgIGRvdFJhZGl1cyA9IGZ1bmN0aW9uKCkgeyByZXR1cm4gMi41IH0sCiAgICAgIGNvbG9yID0gZDMuc2NhbGUuY2F0ZWdvcnkyMCgpLnJhbmdlKCksCiAgICAgIGlkID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogMTAwMDApLCAvL0NyZWF0ZSBzZW1pLXVuaXF1ZSBJRCBpbmNhc2UgdXNlciBkb2Vzbid0IHNlbGVjdCBvbmUKICAgICAgLy8geCA9IGQzLnNjYWxlLmxpbmVhcigpLAogICAgICB4ID0gZDMudGltZS5zY2FsZSgpLAogICAgICB5ID0gZDMuc2NhbGUubGluZWFyKCksCiAgICAgIGRpc3BhdGNoID0gZDMuZGlzcGF0Y2goInBvaW50TW91c2VvdmVyIiwgInBvaW50TW91c2VvdXQiKSwKICAgICAgeDAsIHkwOwoKCiAgZnVuY3Rpb24gY2hhcnQoc2VsZWN0aW9uKSB7CiAgICBzZWxlY3Rpb24uZWFjaChmdW5jdGlvbihkYXRhKSB7CiAgICAgIHZhciBzZXJpZXNEYXRhID0gZGF0YS5tYXAoZnVuY3Rpb24oZCkgeyByZXR1cm4gZC5kYXRhIH0pOwogICAgICAvLyBjb25zb2xlLmxvZyhkYXRhKTsKICAgICAgLy8gY29uc29sZS5sb2coc2VyaWVzRGF0YSk7CiAgICAgIC8vIGNvbnNvbGUubG9nKGRvbWFpbihkMy5leHRlbnQoZDMubWVyZ2Uoc2VyaWVzRGF0YSksIGZ1bmN0aW9uKGQpIHsgIHJldHVybiBkLmRhdGUgfSApKSk7CiAgICAgIHgwID0geDAgfHwgeDsKICAgICAgeTAgPSB5MCB8fCB5OwoKICAgICAgLy9UT0RPOiByZWNvbnNpZGVyIHBvaW50cyB7eDogIywgeTogI30gaW5zdGVhZCBvZiBbeCx5XQogICAgICAvL1RPRE86IGRhdGEgYWNjZXNzb3JzIHNvIGFib3ZlIHdvbid0IHJlYWxseSBtYXR0ZXIsIGJ1dCBuZWVkIHRvIGRlY2lkZSBmb3IgaW50ZXJuYWwgdXNlCgogICAgICAvL2FkZCBzZXJpZXMgZGF0YSB0byBlYWNoIHBvaW50IGZvciBmdXR1cmUgZWFzZSBvZiB1c2UKICAgICAgZGF0YSA9IGRhdGEubWFwKGZ1bmN0aW9uKHNlcmllcywgaSkgewogICAgICAgIHNlcmllcy5kYXRhID0gc2VyaWVzLmRhdGEubWFwKGZ1bmN0aW9uKHBvaW50KSB7CiAgICAgICAgICBwb2ludC5zZXJpZXMgPSBpOwogICAgICAgICAgcmV0dXJuIHBvaW50OwogICAgICAgIH0pOwogICAgICAgIHJldHVybiBzZXJpZXM7CiAgICAgIH0pOwoKCiAgICAgIC8vIHggICAuZG9tYWluKGQzLmV4dGVudChkMy5tZXJnZShzZXJpZXNEYXRhKSwgZnVuY3Rpb24oZCkgeyByZXR1cm4gZFswXSB9ICkpCiAgICAgIHguZG9tYWluKGQzLmV4dGVudChkMy5tZXJnZShzZXJpZXNEYXRhKSwgZnVuY3Rpb24oZCkgeyAgcmV0dXJuIGQuZGF0ZSB9ICkpCiAgICAgIC8vIHggICAuZG9tYWluKGQzLmV4dGVudChhcGlfZGF0YSwgZnVuY3Rpb24oZCkgeyByZXR1cm4gZC5EQVRFTkVXOyB9KSkKICAgICAgICAvLyB4LmRvbWFpbihhcGlfZGF0YS5tYXAoKGQpPT57CiAgICAgICAgLy8gcmV0dXJuIGQuREFURU5FVwogICAgICAgIC8vIH0pKQogICAgICAgICAgLnJhbmdlKFswLCB3aWR0aCAtIG1hcmdpbi5sZWZ0IC0gbWFyZ2luLnJpZ2h0XSk7CgogICAgICAvLyB5ICAgLmRvbWFpbihkMy5leHRlbnQoZDMubWVyZ2Uoc2VyaWVzRGF0YSksIGZ1bmN0aW9uKGQpIHsgcmV0dXJuIGRbMV0gfSApKQogICAgICB5LmRvbWFpbihkMy5leHRlbnQoZDMubWVyZ2Uoc2VyaWVzRGF0YSksIGZ1bmN0aW9uKGQpIHsgcmV0dXJuIGQuc2FsZXMgfSApKQogICAgICAgICAgLnJhbmdlKFtoZWlnaHQgLSBtYXJnaW4udG9wIC0gbWFyZ2luLmJvdHRvbSwgMF0pOwoKICAgICAgLy8gdmFyIHZlcnRpY2VzID0gIiI7CgogICAgICB2YXIgdmVydGljZXMgPSBkMy5tZXJnZShkYXRhLm1hcChmdW5jdGlvbihsaW5lLCBsaW5lSW5kZXgpIHsKICAgICAgICAgICAgcmV0dXJuIGxpbmUuZGF0YS5tYXAoZnVuY3Rpb24ocG9pbnQsIHBvaW50SW5kZXgpIHsKICAgICAgICAgICAgICB2YXIgcG9pbnRLZXkgPSBsaW5lLmxhYmVsICsgJy0nICsgcG9pbnRbMF07CiAgICAgICAgICAgICAgLy8gY29uc29sZS5sb2cocG9pbnQpCiAgICAgICAgICAgICAgLy8gcmV0dXJuIFt4KHBvaW50WzBdKSwgeShwb2ludFsxXSksIGxpbmVJbmRleCwgcG9pbnRJbmRleF07IC8vYWRkaW5nIHNlcmllcyBpbmRleCB0byBwb2ludCBiZWNhdXNlIGRhdGEgaXMgYmVpbmcgZmxhdHRlbmVkCiAgICAgICAgICAgICAgcmV0dXJuIFt4KHBvaW50LmRhdGUpLCB5KHBvaW50LnNhbGVzKSwgbGluZUluZGV4LCBwb2ludEluZGV4XTsgLy9hZGRpbmcgc2VyaWVzIGluZGV4IHRvIHBvaW50IGJlY2F1c2UgZGF0YSBpcyBiZWluZyBmbGF0dGVuZWQKICAgICAgICAgICAgfSkKICAgICAgICAgIH0pCiAgICAgICk7CiAgICAgIC8vIGNvbnNvbGUubG9nKCJ2ZXJ0aSIsdmVydGljZXMpOwoKCiAgICAgIHZhciB3cmFwID0gZDMuc2VsZWN0KHRoaXMpLnNlbGVjdEFsbCgnZy5kM2xpbmUnKS5kYXRhKFtkYXRhXSk7CiAgICAgIHZhciBnRW50ZXIgPSB3cmFwLmVudGVyKCkuYXBwZW5kKCdnJykuYXR0cignY2xhc3MnLCAnZDNsaW5lJykuYXBwZW5kKCdnJyk7CgogICAgICBnRW50ZXIuYXBwZW5kKCdnJykuYXR0cignY2xhc3MnLCAnbGluZXMnKTsKICAgICAgZ0VudGVyLmFwcGVuZCgnZycpLmF0dHIoJ2NsYXNzJywgJ3BvaW50LWNsaXBzJyk7CiAgICAgIGdFbnRlci5hcHBlbmQoJ2cnKS5hdHRyKCdjbGFzcycsICdwb2ludC1wYXRocycpOwoKCiAgICAgIHZhciBnID0gd3JhcC5zZWxlY3QoJ2cnKQogICAgICAgICAgLmF0dHIoJ3RyYW5zZm9ybScsICd0cmFuc2xhdGUoJyArIG1hcmdpbi5sZWZ0ICsgJywnICsgbWFyZ2luLnRvcCArICcpJyk7CgoKCiAgICAgIHZhciB2b3Jvbm9pQ2xpcCA9ICBnRW50ZXIuYXBwZW5kKCdnJykuYXR0cignY2xhc3MnLCAndm9yb25vaS1jbGlwJykKICAgICAgICAuYXBwZW5kKCdjbGlwUGF0aCcpCiAgICAgICAgICAuYXR0cignaWQnLCAndm9yb25vaS1jbGlwLXBhdGgtJyArIGlkKSAvL3RoaXMgaWQgc2hvdWxkIHByb2JhYmx5IGJlIHNldCBvbiB1cGRhdGUsIHVubGVzcyBJRCBpcyBhbHdheXMgc2V0IGJlZm9yZSByZW5kZXIKICAgICAgICAuYXBwZW5kKCdyZWN0Jyk7CiAgICAgIHdyYXAuc2VsZWN0KCcudm9yb25vaS1jbGlwIHJlY3QnKQogICAgICAgICAgLmF0dHIoJ3gnLCAtMTApCiAgICAgICAgICAuYXR0cigneScsIC0xMCkKICAgICAgICAgIC5hdHRyKCd3aWR0aCcsIHdpZHRoIC0gbWFyZ2luLmxlZnQgLSBtYXJnaW4ucmlnaHQgKyAyMCkKICAgICAgICAgIC5hdHRyKCdoZWlnaHQnLCBoZWlnaHQgLSBtYXJnaW4udG9wIC0gbWFyZ2luLmJvdHRvbSArIDIwKTsKICAgICAgd3JhcC5zZWxlY3QoJy5wb2ludC1wYXRocycpCiAgICAgICAgICAuYXR0cignY2xpcC1wYXRoJywgJ3VybCgjdm9yb25vaS1jbGlwLXBhdGgtJyArIGlkICsgJyknKTsKCgogICAgICAvL3ZhciBwb2ludENsaXBzID0gd3JhcC5zZWxlY3QoJy5wb2ludC1jbGlwcycpLnNlbGVjdEFsbCgnY2xpcFBhdGgnKSAvLyAqKkJST1dTRVIgQlVHKiogY2FuJ3QgcmVzZWxlY3QgY2FtZWwgY2FzZWQgZWxlbWVudHMKICAgICAgdmFyIHBvaW50Q2xpcHMgPSB3cmFwLnNlbGVjdCgnLnBvaW50LWNsaXBzJykuc2VsZWN0QWxsKCcuY2xpcC1wYXRoJykKICAgICAgICAgIC5kYXRhKHZlcnRpY2VzKTsKICAgICAgcG9pbnRDbGlwcy5lbnRlcigpLmFwcGVuZCgnY2xpcFBhdGgnKS5hdHRyKCdjbGFzcycsICdjbGlwLXBhdGgnKQogICAgICAgIC5hcHBlbmQoJ2NpcmNsZScpCiAgICAgICAgICAuYXR0cigncicsIDI1KTsKICAgICAgcG9pbnRDbGlwcy5leGl0KCkucmVtb3ZlKCk7CiAgICAgIHBvaW50Q2xpcHMKICAgICAgICAgIC5hdHRyKCdpZCcsIGZ1bmN0aW9uKGQsIGkpIHsgcmV0dXJuICdjbGlwLScgKyBpZCArICctJyArIGRbMl0gKyAnLScgKyBkWzNdIH0pCiAgICAgICAgICAuYXR0cigndHJhbnNmb3JtJywgZnVuY3Rpb24oZCkgeyByZXR1cm4gJ3RyYW5zbGF0ZSgnICsgZFswXSArICcsJyArIGRbMV0gKyAnKScgfSk7CgoKICAgICAgdmFyIHZvcm9ub2kgPSBkMy5nZW9tLnZvcm9ub2kodmVydGljZXMpLm1hcChmdW5jdGlvbihkLGkpIHsKICAgICAgICAgIHJldHVybiB7ICdkYXRhJzogZCwgJ3Nlcmllcyc6IHZlcnRpY2VzW2ldWzJdLCAncG9pbnQnOiB2ZXJ0aWNlc1tpXVszXSB9CiAgICAgIH0pOwogICAgICAvLyBjb25zb2xlLmxvZygidm9ybyIsdm9yb25vaSk7CgogICAgICAvL1RPRE86IEFkZCB2ZXJ5IHNtYWxsIGFtb3VudCBvZiBub2lzZSB0byBwcmV2ZW50IGR1cGxpY2F0ZXMKICAgICAgdmFyIHBvaW50UGF0aHMgPSB3cmFwLnNlbGVjdCgnLnBvaW50LXBhdGhzJykuc2VsZWN0QWxsKCdwYXRoJykKICAgICAgICAgIC5kYXRhKHZvcm9ub2kpOwogICAgICBwb2ludFBhdGhzLmVudGVyKCkuYXBwZW5kKCdwYXRoJykKICAgICAgICAgIC5hdHRyKCdjbGFzcycsIGZ1bmN0aW9uKGQsaSkgeyByZXR1cm4gJ3BhdGgtJyArIGk7IH0pOwogICAgICBwb2ludFBhdGhzLmV4aXQoKS5yZW1vdmUoKTsKICAgICAgcG9pbnRQYXRocwogICAgICAgICAgLmF0dHIoJ2NsaXAtcGF0aCcsIGZ1bmN0aW9uKGQpIHsgcmV0dXJuICd1cmwoI2NsaXAtJyArIGlkICsgJy0nICsgZC5zZXJpZXMgKyAnLScgKyBkLnBvaW50ICsgJyknOyB9KQogICAgICAgICAgLmF0dHIoJ2QnLCBmdW5jdGlvbihkKSB7IHJldHVybiAnTScgKyBkLmRhdGEuam9pbignLCcpICsgJ1onOyB9KQogICAgICAgICAgLm9uKCdtb3VzZW92ZXInLCBmdW5jdGlvbihkKSB7CiAgICAgICAgICAgIGRpc3BhdGNoLnBvaW50TW91c2VvdmVyKHsKICAgICAgICAgICAgICBwb2ludDogZGF0YVtkLnNlcmllc10uZGF0YVtkLnBvaW50XSwKICAgICAgICAgICAgICBzZXJpZXM6IGRhdGFbZC5zZXJpZXNdLAogICAgICAgICAgICAgIC8vIHBvczogW3goZGF0YVtkLnNlcmllc10uZGF0YVtkLnBvaW50XVswXSkgKyBtYXJnaW4ubGVmdCwgeShkYXRhW2Quc2VyaWVzXS5kYXRhW2QucG9pbnRdWzFdKSArIG1hcmdpbi50b3BdLAogICAgICAgICAgICAgIHBvczogW3goZGF0YVtkLnNlcmllc10uZGF0YVtkLnBvaW50XS5kYXRlKSArIG1hcmdpbi5sZWZ0LCB5KGRhdGFbZC5zZXJpZXNdLmRhdGFbZC5wb2ludF0uc2FsZXMpICsgbWFyZ2luLnRvcF0sCiAgICAgICAgICAgICAgcG9pbnRJbmRleDogZC5wb2ludCwKICAgICAgICAgICAgICBzZXJpZXNJbmRleDogZC5zZXJpZXMKICAgICAgICAgICAgfSk7CiAgICAgICAgICB9KQogICAgICAgICAgLm9uKCdtb3VzZW91dCcsIGZ1bmN0aW9uKGQpIHsKICAgICAgICAgICAgZGlzcGF0Y2gucG9pbnRNb3VzZW91dCh7CiAgICAgICAgICAgICAgcG9pbnQ6IGQsCiAgICAgICAgICAgICAgc2VyaWVzOiBkYXRhW2Quc2VyaWVzXSwKICAgICAgICAgICAgICBwb2ludEluZGV4OiBkLnBvaW50LAogICAgICAgICAgICAgIHNlcmllc0luZGV4OiBkLnNlcmllcwogICAgICAgICAgICB9KTsKICAgICAgICAgIH0pOwoKCiAgICAgIGRpc3BhdGNoLm9uKCdwb2ludE1vdXNlb3Zlci5wb2ludCcsIGZ1bmN0aW9uKGQpIHsgCiAgICAgICAgd3JhcC5zZWxlY3QoJy5saW5lLScgKyBkLnNlcmllc0luZGV4ICsgJyAucG9pbnQtJyArIGQucG9pbnRJbmRleCkKICAgICAgICAgIC5jbGFzc2VkKCdob3ZlcicsIHRydWUpOwogICAgICB9KTsKCiAgICAgIGRpc3BhdGNoLm9uKCdwb2ludE1vdXNlb3V0LnBvaW50JywgZnVuY3Rpb24oZCkgeyAKICAgICAgICB3cmFwLnNlbGVjdCgnLmxpbmUtJyArIGQuc2VyaWVzSW5kZXggKyAnIC5wb2ludC0nICsgZC5wb2ludEluZGV4KQogICAgICAgICAgLmNsYXNzZWQoJ2hvdmVyJywgZmFsc2UpOwogICAgICB9KTsKCgoKICAgICAgdmFyIGxpbmVzID0gd3JhcC5zZWxlY3QoJy5saW5lcycpLnNlbGVjdEFsbCgnLmxpbmUnKQogICAgICAgICAgLmRhdGEoZnVuY3Rpb24oZCkgeyByZXR1cm4gZCB9LCBmdW5jdGlvbihkKSB7IHJldHVybiBkLmxhYmVsIH0pOwogICAgICBsaW5lcy5lbnRlcigpLmFwcGVuZCgnZycpCiAgICAgICAgICAuc3R5bGUoJ3N0cm9rZS1vcGFjaXR5JywgMWUtNikKICAgICAgICAgIC5zdHlsZSgnZmlsbC1vcGFjaXR5JywgMWUtNik7CiAgICAgIGQzLnRyYW5zaXRpb24obGluZXMuZXhpdCgpKQogICAgICAgICAgLnN0eWxlKCdzdHJva2Utb3BhY2l0eScsIDFlLTYpCiAgICAgICAgICAuc3R5bGUoJ2ZpbGwtb3BhY2l0eScsIDFlLTYpCiAgICAgICAgICAucmVtb3ZlKCk7CiAgICAgIGxpbmVzLmF0dHIoJ2NsYXNzJywgZnVuY3Rpb24oZCxpKSB7IHJldHVybiAnbGluZSBsaW5lLScgKyBpIH0pCiAgICAgICAgICAuY2xhc3NlZCgnaG92ZXInLCBmdW5jdGlvbihkKSB7IHJldHVybiBkLmhvdmVyIH0pCiAgICAgICAgICAuc3R5bGUoJ2ZpbGwnLCBmdW5jdGlvbihkLGkpIHsgcmV0dXJuIGNvbG9yW2kgJSAxMF0gfSkKICAgICAgICAgIC5zdHlsZSgnc3Ryb2tlJywgZnVuY3Rpb24oZCxpKSB7IHJldHVybiBjb2xvcltpICUgMTBdIH0pCiAgICAgIGQzLnRyYW5zaXRpb24obGluZXMpCiAgICAgICAgICAuc3R5bGUoJ3N0cm9rZS1vcGFjaXR5JywgMSkKICAgICAgICAgIC5zdHlsZSgnZmlsbC1vcGFjaXR5JywgLjUpOwoKCiAgICAgIHZhciBwYXRocyA9IGxpbmVzLnNlbGVjdEFsbCgncGF0aCcpCiAgICAgICAgICAuZGF0YShmdW5jdGlvbihkLCBpKSB7IHJldHVybiBbZC5kYXRhXSB9KTsKICAgICAgcGF0aHMuZW50ZXIoKS5hcHBlbmQoJ3BhdGgnKQogICAgICAgICAgLmF0dHIoJ2QnLCBkMy5zdmcubGluZSgpCiAgICAgICAgICAgIC8vIC54KGZ1bmN0aW9uKGQpIHsgcmV0dXJuIHgwKGRbMF0pIH0pCiAgICAgICAgICAgIC8vIC55KGZ1bmN0aW9uKGQpIHsgcmV0dXJuIHkwKGRbMV0pIH0pCiAgICAgICAgICAgICAueChmdW5jdGlvbihkKSB7IHJldHVybiB4MChkLmRhdGUpIH0pCiAgICAgICAgICAgIC55KGZ1bmN0aW9uKGQpIHsgcmV0dXJuIHkwKGQuc2FsZXMpIH0pCiAgICAgICAgICApOwogICAgICBwYXRocy5leGl0KCkucmVtb3ZlKCk7CiAgICAgIGQzLnRyYW5zaXRpb24ocGF0aHMpCiAgICAgICAgICAuYXR0cignZCcsIGQzLnN2Zy5saW5lKCkKICAgICAgICAgICAgLy8gLngoZnVuY3Rpb24oZCkgeyByZXR1cm4geChkWzBdKSB9KQogICAgICAgICAgICAvLyAueShmdW5jdGlvbihkKSB7IHJldHVybiB5KGRbMV0pIH0pCiAgICAgICAgICAgICAueChmdW5jdGlvbihkKSB7IHJldHVybiB4KGQuZGF0ZSkgfSkKICAgICAgICAgICAgLnkoZnVuY3Rpb24oZCkgeyByZXR1cm4geShkLnNhbGVzKSB9KQogICAgICAgICAgKTsKCgogICAgICB2YXIgcG9pbnRzID0gbGluZXMuc2VsZWN0QWxsKCdjaXJjbGUucG9pbnQnKQogICAgICAgICAgLmRhdGEoZnVuY3Rpb24oZCkgeyByZXR1cm4gZC5kYXRhIH0pOwogICAgICBwb2ludHMuZW50ZXIoKS5hcHBlbmQoJ2NpcmNsZScpCiAgICAgICAgICAvLyAuYXR0cignY3gnLCBmdW5jdGlvbihkKSB7IHJldHVybiB4MChkWzBdKSB9KQogICAgICAgICAgLy8gLmF0dHIoJ2N5JywgZnVuY3Rpb24oZCkgeyByZXR1cm4geTAoZFsxXSkgfSk7CiAgICAgICAgICAuYXR0cignY3gnLCBmdW5jdGlvbihkKSB7IHJldHVybiB4MChkLmRhdGUpIH0pCiAgICAgICAgICAuYXR0cignY3knLCBmdW5jdGlvbihkKSB7IHJldHVybiB5MChkLnNhbGVzKSB9KTsKICAgICAgcG9pbnRzLmV4aXQoKS5yZW1vdmUoKTsKICAgICAgcG9pbnRzLmF0dHIoJ2NsYXNzJywgZnVuY3Rpb24oZCxpKSB7IHJldHVybiAncG9pbnQgcG9pbnQtJyArIGkgfSk7CiAgICAgIGQzLnRyYW5zaXRpb24ocG9pbnRzKQogICAgICAgICAgLy8gLmF0dHIoJ2N4JywgZnVuY3Rpb24oZCkgeyByZXR1cm4geChkWzBdKSB9KQogICAgICAgICAgLy8gLmF0dHIoJ2N5JywgZnVuY3Rpb24oZCkgeyByZXR1cm4geShkWzFdKSB9KQogICAgICAgICAgLmF0dHIoJ2N4JywgZnVuY3Rpb24oZCkgeyByZXR1cm4geChkLmRhdGUpIH0pCiAgICAgICAgICAuYXR0cignY3knLCBmdW5jdGlvbihkKSB7IHJldHVybiB5KGQuc2FsZXMpIH0pCiAgICAgICAgICAuYXR0cigncicsIGRvdFJhZGl1cygpKTsKCiAgICB9KTsKCiAgICB4MCA9IHg7CiAgICB5MCA9IHk7CgogICAgcmV0dXJuIGNoYXJ0OwogIH0KCgoKICBjaGFydC5kaXNwYXRjaCA9IGRpc3BhdGNoOwoKICBjaGFydC5tYXJnaW4gPSBmdW5jdGlvbihfKSB7CiAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBtYXJnaW47CiAgICBtYXJnaW4gPSBfOwogICAgcmV0dXJuIGNoYXJ0OwogIH07CgogIGNoYXJ0LndpZHRoID0gZnVuY3Rpb24oXykgewogICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gd2lkdGg7CiAgICB3aWR0aCA9IF87CiAgICByZXR1cm4gY2hhcnQ7CiAgfTsKCiAgY2hhcnQuaGVpZ2h0ID0gZnVuY3Rpb24oXykgewogICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gaGVpZ2h0OwogICAgaGVpZ2h0ID0gXzsKICAgIHJldHVybiBjaGFydDsKICB9OwoKICBjaGFydC5kb3RSYWRpdXMgPSBmdW5jdGlvbihfKSB7CiAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBkb3RSYWRpdXM7CiAgICBkb3RSYWRpdXMgPSBkMy5mdW5jdG9yKF8pOwogICAgcmV0dXJuIGNoYXJ0OwogIH07CgogIGNoYXJ0LmNvbG9yID0gZnVuY3Rpb24oXykgewogICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gY29sb3I7CiAgICBjb2xvciA9IF87CiAgICByZXR1cm4gY2hhcnQ7CiAgfTsKCiAgY2hhcnQuaWQgPSBmdW5jdGlvbihfKSB7CiAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBpZDsKICAgIGlkID0gXzsKICAgIHJldHVybiBjaGFydDsKICB9OwoKCiAgcmV0dXJuIGNoYXJ0Owp9CgpmdW5jdGlvbiBkM0xpbmVXaXRoTGVnZW5kKCkgewogIHZhciBtYXJnaW4gPSB7dG9wOiAzMCwgcmlnaHQ6IDQwLCBib3R0b206IDQwLCBsZWZ0OiA2MH0sCiAgICAgIHdpZHRoID0gOTYwLAogICAgICBoZWlnaHQgPSA1MDAsCiAgICAgIGRvdFJhZGl1cyA9IGZ1bmN0aW9uKCkgeyByZXR1cm4gMi41IH0sCiAgICAgIHhBeGlzTGFiZWxUZXh0ID0gZmFsc2UsCiAgICAgIHlBeGlzTGFiZWxUZXh0ID0gZmFsc2UsCiAgICAgIGNvbG9yID0gZDMuc2NhbGUuY2F0ZWdvcnkyMCgpLnJhbmdlKCksCiAgICAgIGRpc3BhdGNoID0gZDMuZGlzcGF0Y2goJ3Nob3dUb29sdGlwJywgJ2hpZGVUb29sdGlwJyk7CgogIHZhciAKICAgICAgeCA9IGQzLnRpbWUuc2NhbGUoKSwKICAvLyB4ID0gZDMuc2NhbGUubGluZWFyKCksCiAgICAgIHkgPSBkMy5zY2FsZS5saW5lYXIoKSwKICAgICAgeEF4aXMgPSBkMy5zdmcuYXhpcygpLnNjYWxlKHgpLm9yaWVudCgnYm90dG9tJyksCiAgICAgIHlBeGlzID0gZDMuc3ZnLmF4aXMoKS5zY2FsZSh5KS5vcmllbnQoJ2xlZnQnKSwKICAgICAgbGVnZW5kID0gZDNMZWdlbmQoKS5oZWlnaHQoMzApLmNvbG9yKGNvbG9yKSwKICAgICAgbGluZXMgPSBkM0xpbmUoKTsKCgogIGZ1bmN0aW9uIGNoYXJ0KHNlbGVjdGlvbikgewogICAgc2VsZWN0aW9uLmVhY2goZnVuY3Rpb24oZGF0YSkgewogICAgICB2YXIgc2VyaWVzID0gZGF0YS5maWx0ZXIoZnVuY3Rpb24oZCkgeyByZXR1cm4gIWQuZGlzYWJsZWQgfSkKICAgICAgICAgICAgLm1hcChmdW5jdGlvbihkKSB7IHJldHVybiBkLmRhdGEgfSk7CgogICAgICB4ICAgLmRvbWFpbihkMy5leHRlbnQoZDMubWVyZ2Uoc2VyaWVzKSwgZnVuY3Rpb24oZCkgeyByZXR1cm4gZC5kYXRlIH0gKSkKICAgICAgICAgIC5yYW5nZShbMCwgd2lkdGggLSBtYXJnaW4ubGVmdCAtIG1hcmdpbi5yaWdodF0pOwoKICAgICAgeSAgIC5kb21haW4oZDMuZXh0ZW50KGQzLm1lcmdlKHNlcmllcyksIGZ1bmN0aW9uKGQpIHsgcmV0dXJuIGQuc2FsZXMgfSApKQogICAgICAgICAgLnJhbmdlKFtoZWlnaHQgLSBtYXJnaW4udG9wIC0gbWFyZ2luLmJvdHRvbSwgMF0pOwoKICAgICAgbGluZXMKICAgICAgICAud2lkdGgod2lkdGggLSBtYXJnaW4ubGVmdCAtIG1hcmdpbi5yaWdodCkKICAgICAgICAuaGVpZ2h0KGhlaWdodCAtIG1hcmdpbi50b3AgLSBtYXJnaW4uYm90dG9tKQogICAgICAgIC5jb2xvcihkYXRhLm1hcChmdW5jdGlvbihkLGkpIHsKICAgICAgICAgIHJldHVybiBkLmNvbG9yIHx8IGNvbG9yW2kgJSAxMF07CiAgICAgICAgfSkuZmlsdGVyKGZ1bmN0aW9uKGQsaSkgeyByZXR1cm4gIWRhdGFbaV0uZGlzYWJsZWQgfSkpCgogICAgICB4QXhpcwogICAgICAgIC50aWNrcyggd2lkdGggLyAxMDAgKQogICAgICAgIC50aWNrU2l6ZSgtKGhlaWdodCAtIG1hcmdpbi50b3AgLSBtYXJnaW4uYm90dG9tKSwgMCk7CiAgICAgIHlBeGlzCiAgICAgICAgLnRpY2tzKCBoZWlnaHQgLyAzNiApCiAgICAgICAgLnRpY2tTaXplKC0od2lkdGggLSBtYXJnaW4ucmlnaHQgLSBtYXJnaW4ubGVmdCksIDApCiAgICAgICAgIC50aWNrRm9ybWF0KGQzLmZvcm1hdCgicyIpKQoKICAgICAgdmFyIHdyYXAgPSBkMy5zZWxlY3QodGhpcykuc2VsZWN0QWxsKCdnLndyYXAnKS5kYXRhKFtkYXRhXSk7CiAgICAgIHZhciBnRW50ZXIgPSB3cmFwLmVudGVyKCkuYXBwZW5kKCdnJykuYXR0cignY2xhc3MnLCAnd3JhcCBkM2xpbmVXaXRoTGVnZW5kJykuYXBwZW5kKCdnJyk7CgogICAgICBnRW50ZXIuYXBwZW5kKCdnJykuYXR0cignY2xhc3MnLCAnbGVnZW5kV3JhcCcpOwogICAgICBnRW50ZXIuYXBwZW5kKCdnJykuYXR0cignY2xhc3MnLCAneCBheGlzJyk7CiAgICAgIGdFbnRlci5hcHBlbmQoJ2cnKS5hdHRyKCdjbGFzcycsICd5IGF4aXMnKTsKICAgICAgZ0VudGVyLmFwcGVuZCgnZycpLmF0dHIoJ2NsYXNzJywgJ2xpbmVzV3JhcCcpOwoKCiAgICAgIGxlZ2VuZC5kaXNwYXRjaC5vbignbGVnZW5kQ2xpY2snLCBmdW5jdGlvbihkLCBpKSB7IAogICAgICAgIGQuZGlzYWJsZWQgPSAhZC5kaXNhYmxlZDsKCiAgICAgICAgaWYgKCFkYXRhLmZpbHRlcihmdW5jdGlvbihkKSB7IHJldHVybiAhZC5kaXNhYmxlZCB9KS5sZW5ndGgpIHsKICAgICAgICAgIGRhdGEuZm9yRWFjaChmdW5jdGlvbihkKSB7CiAgICAgICAgICAgIGQuZGlzYWJsZWQgPSBmYWxzZTsKICAgICAgICAgIH0pOwogICAgICAgIH0KICAgICAgICAvLyBjb25zb2xlLmxvZyhzZWxlY3Rpb24pOwogICAgICAgIC8vIHNlbGVjdGlvbi50cmFuc2l0aW9uKCkuY2FsbChjaGFydCkKICAgICAgICAvLyBzZWxlY3Rpb24udHJhbnNpdGlvbigpCiAgICAgIH0pOwoKCiAgICAgIGxlZ2VuZC5kaXNwYXRjaC5vbignbGVnZW5kTW91c2VvdmVyJywgZnVuY3Rpb24oZCwgaSkgewogICAgICAgIGQuaG92ZXIgPSB0cnVlOwogICAgICAgIHNlbGVjdGlvbi50cmFuc2l0aW9uKCkuY2FsbChjaGFydCkKICAgICAgfSk7CgogICAgICBsZWdlbmQuZGlzcGF0Y2gub24oJ2xlZ2VuZE1vdXNlb3V0JywgZnVuY3Rpb24oZCwgaSkgewogICAgICAgIGQuaG92ZXIgPSBmYWxzZTsKICAgICAgICBzZWxlY3Rpb24udHJhbnNpdGlvbigpLmNhbGwoY2hhcnQpCiAgICAgICAgLy8gc2VsZWN0aW9uLnRyYW5zaXRpb24oKS5kdXJhdGlvbigyMDAwKS5jYWxsKGNoYXJ0KQogICAgICB9KTsKCgogICAgICBsaW5lcy5kaXNwYXRjaC5vbigncG9pbnRNb3VzZW92ZXIudG9vbHRpcCcsIGZ1bmN0aW9uKGUpIHsKICAgICAgICBkaXNwYXRjaC5zaG93VG9vbHRpcCh7CiAgICAgICAgICBwb2ludDogZS5wb2ludCwKICAgICAgICAgIHNlcmllczogZS5zZXJpZXMsCiAgICAgICAgICBwb3M6IFtlLnBvc1swXSArIG1hcmdpbi5sZWZ0LCBlLnBvc1sxXSArIG1hcmdpbi50b3BdLAogICAgICAgICAgc2VyaWVzSW5kZXg6IGUuc2VyaWVzSW5kZXgsCiAgICAgICAgICBwb2ludEluZGV4OiBlLnBvaW50SW5kZXgKICAgICAgICB9KTsKICAgICAgfSk7CgogICAgICBsaW5lcy5kaXNwYXRjaC5vbigncG9pbnRNb3VzZW91dC50b29sdGlwJywgZnVuY3Rpb24oZSkgewogICAgICAgIGRpc3BhdGNoLmhpZGVUb29sdGlwKGUpOwogICAgICB9KTsKCgoKCiAgICAgIGxlZ2VuZAogICAgICAgICAgLmNvbG9yKGNvbG9yKQogICAgICAgICAgLndpZHRoKHdpZHRoIC8gMiAtIG1hcmdpbi5yaWdodCk7CgogICAgICB3cmFwLnNlbGVjdCgnLmxlZ2VuZFdyYXAnKQogICAgICAgICAgLmRhdHVtKGRhdGEpCiAgICAgICAgICAuYXR0cigndHJhbnNmb3JtJywgJ3RyYW5zbGF0ZSgnICsgKHdpZHRoLzIgLSBtYXJnaW4ubGVmdCkgKyAnLCcgKyAoLWxlZ2VuZC5oZWlnaHQoKSkgKycpJykKICAgICAgICAgIC5jYWxsKGxlZ2VuZCk7CgoKICAgICAgLy9UT0RPOiBtYXliZSBtYXJnaW5zIHNob3VsZCBiZSBhZGp1c3RlZCBiYXNlZCBvbiB3aGF0IGNvbXBvbmVudHMgYXJlIHVzZWQ6IGF4ZXMsIGF4aXMgbGFiZWxzLCBsZWdlbmQKICAgICAgLy8gbWFyZ2luLnRvcCA9IGxlZ2VuZC5oZWlnaHQoKTsgIC8vbmVlZCB0byByZS1yZW5kZXIgdG8gc2VlIHVwZGF0ZQogICAgICBtYXJnaW4udG9wID0gbGVnZW5kLmhlaWdodCgpOyAgLy9uZWVkIHRvIHJlLXJlbmRlciB0byBzZWUgdXBkYXRlCgogICAgICB2YXIgZyA9IHdyYXAuc2VsZWN0KCdnJykKICAgICAgICAgIC5hdHRyKCd0cmFuc2Zvcm0nLCAndHJhbnNsYXRlKCcgKyBtYXJnaW4ubGVmdCArICcsJyArIG1hcmdpbi50b3AgKyAnKScpOwoKCgogICAgICB2YXIgbGluZXNXcmFwID0gd3JhcC5zZWxlY3QoJy5saW5lc1dyYXAnKQogICAgICAgICAgLmRhdHVtKGRhdGEuZmlsdGVyKGZ1bmN0aW9uKGQpIHsgcmV0dXJuICFkLmRpc2FibGVkIH0pKTsKCiAgICAgIGQzLnRyYW5zaXRpb24obGluZXNXcmFwKS5jYWxsKGxpbmVzKTsKCgoKICAgICAgdmFyIHhBeGlzTGFiZWwgPSBnLnNlbGVjdCgnLnguYXhpcycpLnNlbGVjdEFsbCgndGV4dC5heGlzbGFiZWwnKQogICAgICAgICAgLmRhdGEoW3hBeGlzTGFiZWxUZXh0IHx8IG51bGxdKTsKICAgICAgeEF4aXNMYWJlbC5lbnRlcigpLmFwcGVuZCgndGV4dCcpLmF0dHIoJ2NsYXNzJywgJ2F4aXNsYWJlbCcpCiAgICAgICAgICAuYXR0cigndGV4dC1hbmNob3InLCAnbWlkZGxlJykKICAgICAgICAgIC5hdHRyKCd4JywgeC5yYW5nZSgpWzFdIC8gMikKICAgICAgICAgIC5hdHRyKCd5JywgbWFyZ2luLmJvdHRvbSAtIDUpOwogICAgICB4QXhpc0xhYmVsLmV4aXQoKS5yZW1vdmUoKTsKICAgICAgeEF4aXNMYWJlbC50ZXh0KGZ1bmN0aW9uKGQpIHsgcmV0dXJuIGQgfSk7CgogICAgICBnLnNlbGVjdCgnLnguYXhpcycpCiAgICAgICAgICAuYXR0cigndHJhbnNmb3JtJywgJ3RyYW5zbGF0ZSgwLCcgKyB5LnJhbmdlKClbMF0gKyAnKScpCiAgICAgICAgICAuY2FsbCh4QXhpcykKICAgICAgICAuc2VsZWN0QWxsKCdsaW5lLnRpY2snKQogICAgICAgIC5maWx0ZXIoZnVuY3Rpb24oZCkgeyByZXR1cm4gIWQgfSkKICAgICAgICAgIC5jbGFzc2VkKCd6ZXJvJywgdHJ1ZSk7CgoKICAgICAgdmFyIHlBeGlzTGFiZWwgPSBnLnNlbGVjdCgnLnkuYXhpcycpLnNlbGVjdEFsbCgndGV4dC5heGlzbGFiZWwnKQogICAgICAgICAgLmRhdGEoW3lBeGlzTGFiZWxUZXh0IHx8IG51bGxdKTsKICAgICAgeUF4aXNMYWJlbC5lbnRlcigpLmFwcGVuZCgndGV4dCcpLmF0dHIoJ2NsYXNzJywgJ2F4aXNsYWJlbCcpCiAgICAgICAgICAuYXR0cigndHJhbnNmb3JtJywgJ3JvdGF0ZSgtOTApJykKICAgICAgICAgIC5hdHRyKCd0ZXh0LWFuY2hvcicsICdtaWRkbGUnKQogICAgICAgICAgLmF0dHIoJ3knLCAyMCAtIG1hcmdpbi5sZWZ0KTsKICAgICAgeUF4aXNMYWJlbC5leGl0KCkucmVtb3ZlKCk7CiAgICAgIHlBeGlzTGFiZWwKICAgICAgICAgIC5hdHRyKCd4JywgLXkucmFuZ2UoKVswXSAvIDIpCiAgICAgICAgICAudGV4dChmdW5jdGlvbihkKSB7IHJldHVybiBkIH0pOwoKICAgICAgZy5zZWxlY3QoJy55LmF4aXMnKQogICAgICAgICAgLmNhbGwoeUF4aXMpCiAgICAgICAgLnNlbGVjdEFsbCgnbGluZS50aWNrJykKICAgICAgICAuZmlsdGVyKGZ1bmN0aW9uKGQpIHsgcmV0dXJuICFkIH0pCiAgICAgICAgICAuY2xhc3NlZCgnemVybycsIHRydWUpOwogICAgfSk7CgogICAgcmV0dXJuIGNoYXJ0OwogIH0KCiAgY2hhcnQuZGlzcGF0Y2ggPSBkaXNwYXRjaDsKCiAgY2hhcnQubWFyZ2luID0gZnVuY3Rpb24oXykgewogICAgaWYgKCFhcmd1bWVudHMubGVuZ3RoKSByZXR1cm4gbWFyZ2luOwogICAgbWFyZ2luID0gXzsKICAgIHJldHVybiBjaGFydDsKICB9OwoKICBjaGFydC53aWR0aCA9IGZ1bmN0aW9uKF8pIHsKICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIHdpZHRoOwogICAgd2lkdGggPSBfOwogICAgcmV0dXJuIGNoYXJ0OwogIH07CgogIGNoYXJ0LmhlaWdodCA9IGZ1bmN0aW9uKF8pIHsKICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIGhlaWdodDsKICAgIGhlaWdodCA9IF87CiAgICByZXR1cm4gY2hhcnQ7CiAgfTsKCiAgY2hhcnQuY29sb3IgPSBmdW5jdGlvbihfKSB7CiAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBjb2xvcjsKICAgIGNvbG9yID0gXzsKICAgIHJldHVybiBjaGFydDsKICB9OwoKICBjaGFydC5kb3RSYWRpdXMgPSBmdW5jdGlvbihfKSB7CiAgICBpZiAoIWFyZ3VtZW50cy5sZW5ndGgpIHJldHVybiBkb3RSYWRpdXM7CiAgICBkb3RSYWRpdXMgPSBkMy5mdW5jdG9yKF8pOwogICAgbGluZXMuZG90UmFkaXVzID0gZDMuZnVuY3RvcihfKTsKICAgIHJldHVybiBjaGFydDsKICB9OwoKICAvL1RPRE86IGNvbnNpZGVyIGRpcmVjdGx5IGV4cG9zaW5nIGJvdGggYXhlcwogIC8vY2hhcnQueEF4aXMgPSB4QXhpczsKCiAgLy9FeHBvc2UgdGhlIHgtYXhpcycgdGlja0Zvcm1hdCBtZXRob2QuCiAgY2hhcnQueEF4aXMgPSB7fTsKICBkMy5yZWJpbmQoY2hhcnQueEF4aXMsIHhBeGlzLCAndGlja0Zvcm1hdCcpOwoKICBjaGFydC54QXhpcy5sYWJlbCA9IGZ1bmN0aW9uKF8pIHsKICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIHhBeGlzTGFiZWxUZXh0OwogICAgeEF4aXNMYWJlbFRleHQgPSBfOwogICAgcmV0dXJuIGNoYXJ0OwogIH0KCiAgLy8gRXhwb3NlIHRoZSB5LWF4aXMnIHRpY2tGb3JtYXQgbWV0aG9kLgogIC8vY2hhcnQueUF4aXMgPSB5QXhpczsKCiAgY2hhcnQueUF4aXMgPSB7fTsKICBkMy5yZWJpbmQoY2hhcnQueUF4aXMsIHlBeGlzLCAndGlja0Zvcm1hdCcpOwoKICBjaGFydC55QXhpcy5sYWJlbCA9IGZ1bmN0aW9uKF8pIHsKICAgIGlmICghYXJndW1lbnRzLmxlbmd0aCkgcmV0dXJuIHlBeGlzTGFiZWxUZXh0OwogICAgeUF4aXNMYWJlbFRleHQgPSBfOwogICAgcmV0dXJuIGNoYXJ0OwogIH0KCiAgcmV0dXJuIGNoYXJ0Owp9CihmdW5jdGlvbigkKSB7CgogIHZhciBudnRvb2x0aXAgPSB3aW5kb3cubnZ0b29sdGlwID0ge307CgogIG52dG9vbHRpcC5zaG93ID0gZnVuY3Rpb24ocG9zLCBjb250ZW50LCBncmF2aXR5LCBkaXN0KSB7CiAgICB2YXIgY29udGFpbmVyID0gJCgnPGRpdiBjbGFzcz0ibnZ0b29sdGlwIj4nKTsKCiAgICBncmF2aXR5ID0gZ3Jhdml0eSB8fCAncyc7CiAgICBkaXN0ID0gZGlzdCB8fCAyMDsKCiAgICBjb250YWluZXIKICAgICAgLmh0bWwoY29udGVudCkKICAgICAgLmNzcyh7bGVmdDogLTEwMDAsIHRvcDogLTEwMDAsIG9wYWNpdHk6IDB9KQogICAgICAuYXBwZW5kVG8oJ2JvZHknKTsKCiAgICB2YXIgaGVpZ2h0ID0gY29udGFpbmVyLmhlaWdodCgpICsgcGFyc2VJbnQoY29udGFpbmVyLmNzcygncGFkZGluZy10b3AnKSkgICsgcGFyc2VJbnQoY29udGFpbmVyLmNzcygncGFkZGluZy1ib3R0b20nKSksCiAgICAgICAgd2lkdGggPSBjb250YWluZXIud2lkdGgoKSArIHBhcnNlSW50KGNvbnRhaW5lci5jc3MoJ3BhZGRpbmctbGVmdCcpKSAgKyBwYXJzZUludChjb250YWluZXIuY3NzKCdwYWRkaW5nLXJpZ2h0JykpLAogICAgICAgIC8vIHdpbmRvd1dpZHRoID0gJCgiLmNhcmQtYm9keSIpLndpZHRoKCksCiAgICAgICAgLy8gd2luZG93SGVpZ2h0ID0gJCgiLmNhcmQtYm9keSIpLmhlaWdodCgpLAogICAgICAgICB3aW5kb3dXaWR0aCA9ICQod2luZG93KS53aWR0aCgpLAogICAgICAgIHdpbmRvd0hlaWdodCA9ICQod2luZG93KS5oZWlnaHQoKSwKICAgICAgICBzY3JvbGxUb3AgPSAkKCdib2R5Jykuc2Nyb2xsVG9wKCksICAvL1RPRE86IGFsc28gYWRqdXN0IGhvcml6b250YWwgc2Nyb2xsCiAgICAgICAgbGVmdCwgdG9wOwoKCiAgICAvL1RPRE86IGltcGxlbWVudCBvdGhlciBncmF2aXRpZXMKICAgIHN3aXRjaCAoZ3Jhdml0eSkgewogICAgICBjYXNlICdlJzoKICAgICAgY2FzZSAndyc6CiAgICAgIGNhc2UgJ24nOgogICAgICAgIGxlZnQgPSBwb3NbMF0gLSAod2lkdGggLyAyKTsKICAgICAgICB0b3AgPSBwb3NbMV0gKyBkaXN0OwogICAgICAgIGlmIChsZWZ0IDwgMCkgbGVmdCA9IDU7CiAgICAgICAgaWYgKGxlZnQgKyB3aWR0aCA+IHdpbmRvd1dpZHRoKSBsZWZ0ID0gd2luZG93V2lkdGggLSB3aWR0aCAtIDU7CiAgICAgICAgaWYgKHNjcm9sbFRvcCArIHdpbmRvd0hlaWdodCA8IHRvcCArIGhlaWdodCkgdG9wID0gcG9zWzFdIC0gaGVpZ2h0IC0gZGlzdDsKICAgICAgICBicmVhazsKICAgICAgY2FzZSAncyc6CiAgICAgICAgbGVmdCA9IHBvc1swXSAtICh3aWR0aCAvIDIpOwogICAgICAgIHRvcCA9IHBvc1sxXSAtIGhlaWdodCAtIGRpc3Q7CiAgICAgICAgaWYgKGxlZnQgPCAwKSBsZWZ0ID0gNTsKICAgICAgICBpZiAobGVmdCArIHdpZHRoID4gd2luZG93V2lkdGgpIGxlZnQgPSB3aW5kb3dXaWR0aCAtIHdpZHRoIC0gNTsKICAgICAgICBpZiAoc2Nyb2xsVG9wID4gdG9wKSB0b3AgPSBwb3NbMV0gKyBkaXN0OwogICAgICAgIGJyZWFrOwogICAgfQoKICAgIGNvbnRhaW5lcgogICAgICAgIC5jc3MoewogICAgICAgICAgbGVmdDogbGVmdCwKICAgICAgICAgIHRvcDogdG9wLAogICAgICAgICAgb3BhY2l0eTogMQogICAgICAgIH0pOwogIH07CgogIG52dG9vbHRpcC5jbGVhbnVwID0gZnVuY3Rpb24oKSB7CiAgICB2YXIgdG9vbHRpcHMgPSAkKCcubnZ0b29sdGlwJyk7CgogICAgLy8gcmVtb3ZlIHJpZ2h0IGF3YXksIGJ1dCBkZWxheSB0aGUgc2hvdyB3aXRoIGNzcwogICAgdG9vbHRpcHMuY3NzKHsKICAgICAgICAndHJhbnNpdGlvbi1kZWxheSc6ICcwICFpbXBvcnRhbnQnLAogICAgICAgICctbW96LXRyYW5zaXRpb24tZGVsYXknOiAnMCAhaW1wb3J0YW50JywKICAgICAgICAnLXdlYmtpdC10cmFuc2l0aW9uLWRlbGF5JzogJzAgIWltcG9ydGFudCcKICAgIH0pOwoKICAgIHRvb2x0aXBzLmNzcygnb3BhY2l0eScsMCk7CgogICAgc2V0VGltZW91dChmdW5jdGlvbigpIHsKICAgICAgdG9vbHRpcHMucmVtb3ZlKCkKICAgIH0sIDUwMCk7CiAgfTsKCn0pKGpRdWVyeSk7CgogIH0KfTsK"},null]}