{"remainingRequest":"/home/vimalesh/CENSE/chatbot-portal/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/vimalesh/CENSE/chatbot-portal/src/portal/Chatbot/Dashboard/ActionForm.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/vimalesh/CENSE/chatbot-portal/src/portal/Chatbot/Dashboard/ActionForm.vue","mtime":1643027096144},{"path":"/home/vimalesh/CENSE/chatbot-portal/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vimalesh/CENSE/chatbot-portal/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/vimalesh/CENSE/chatbot-portal/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vimalesh/CENSE/chatbot-portal/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBTaW1wbGVGbG93Y2hhcnQgZnJvbSAidnVlLXNpbXBsZS1mbG93Y2hhcnQiOwppbXBvcnQgInZ1ZS1zaW1wbGUtZmxvd2NoYXJ0L2Rpc3QvdnVlLWZsb3djaGFydC5jc3MiOwppbXBvcnQgYXhpb3MgZnJvbSAiYXhpb3MiOwppbXBvcnQgYXBpX2NhbGxzIGZyb20gIkAvcG9ydGFsL2FwaV9jYWxscyI7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiYXBwIiwKICBjb21wb25lbnRzOiB7CiAgICBTaW1wbGVGbG93Y2hhcnQKICB9LAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBkYXRhX3NldDogW10sCiAgICAgIHNjZW5lOiB7CiAgICAgICAgY2VudGVyWDogMTAyNCwKICAgICAgICBjZW50ZXJZOiAxNDAsCiAgICAgICAgc2NhbGU6IDEsCiAgICAgICAgbm9kZXM6IFtdLAogICAgICAgIGxpbmtzOiBbXQogICAgICB9LAogICAgICBsZXZlbF9jb3VudDogMCwKICAgICAgbmV3Tm9kZVR5cGU6IDAsCiAgICAgIG5ld05vZGVWYWx1ZTogIiIsCiAgICAgIG5vZGVDYXRlZ29yeTogWyJQcm9tcHQiLCAiQnV0dG9uIiwgIkh5cGVybGluayIsICJWaWRlbyIsICJUZXh0IiwgIlVzZXIgUmVwbHkiXQogICAgfTsKICB9LAogIG1ldGhvZHM6IHsKICAgIGRhdGFfbWFuYWdlbWVudChub2RlLCBwYXJlbnRfbGFiZWwsIHBhcmVudF90eXBlKSB7CiAgICAgIHZhciBsZXZlbF9jb3VudCA9IHRoaXMubm9kZXNfbGV2ZWxfY291bnQobm9kZVswXS5pZCk7CiAgICAgIGlmICh0aGlzLmRhdGFfc2V0Lmxlbmd0aCA8PSBsZXZlbF9jb3VudCkgewogICAgICAgIHRoaXMuZGF0YV9zZXQucHVzaChbXSk7CiAgICAgIH0KICAgICAgdmFyIGlzRXhpc3RzID0gdGhpcy5kYXRhX3NldFtsZXZlbF9jb3VudF0uZmlsdGVyKHJlcXVpcmVkX25vZGUgPT4gewogICAgICAgIHJldHVybiByZXF1aXJlZF9ub2RlLmxhYmVsID09IG5vZGVbMF0ubGFiZWw7CiAgICAgIH0pOwogICAgICBpZiAoaXNFeGlzdHMubGVuZ3RoID09IDApIHsKICAgICAgICB0aGlzLmRhdGFfc2V0W2xldmVsX2NvdW50XS5wdXNoKHsKICAgICAgICAgIGxhYmVsOiBub2RlWzBdLmxhYmVsLAogICAgICAgICAgdHlwZTogbm9kZVswXS50eXBlLAogICAgICAgICAgcGFyZW50X2xhYmVsOiBwYXJlbnRfbGFiZWwsCiAgICAgICAgICBwYXJlbnRfdHlwZTogcGFyZW50X3R5cGUKICAgICAgICB9KTsKICAgICAgfQogICAgfSwKICAgIGRhdGFfZmlsdGVyKHN0YXJ0X2luZGV4LCBsYWJlbCwgdHlwZSkge30sCiAgICBub2Rlc19sZXZlbF9jb3VudCh0bykgewogICAgICB2YXIgbG9jYWxfdG8gPSB0bzsKICAgICAgdmFyIGJyYW5jaDsKICAgICAgdmFyIGxldmVsX2NvdW50ID0gMDsKICAgICAgZm9yICh2YXIgaSBpbiB0aGlzLnNjZW5lLmxpbmtzKSB7CiAgICAgICAgYnJhbmNoID0gdGhpcy5zY2VuZS5saW5rcy5maWx0ZXIobGluayA9PiB7CiAgICAgICAgICByZXR1cm4gbGluay50byA9PSBsb2NhbF90bzsKICAgICAgICB9KTsKICAgICAgICBpZiAoYnJhbmNoLmxlbmd0aCA+PSAxKSB7CiAgICAgICAgICBsZXZlbF9jb3VudCArPSAxOwogICAgICAgICAgbG9jYWxfdG8gPSBicmFuY2hbMF0uZnJvbTsKICAgICAgICB9IGVsc2UgewogICAgICAgIH0KICAgICAgfQogICAgICByZXR1cm4gbGV2ZWxfY291bnQ7CiAgICB9LAogICAgY2FudmFzQ2xpY2soZSkgewogICAgICAvLyBjb25zb2xlLmxvZygiY2FudmFzIENsaWNrLCBldmVudDoiLCBlKTsKICAgIH0sCiAgICBhZGROb2RlKCkgewogICAgICBpZiAodGhpcy5uZXdOb2RlVmFsdWUgPT0gIiIpIHsKICAgICAgICB0b2FzdHIuZXJyb3IoIlBsZWFzZSBlbnRlciBhIHZhbHVlLiIpOwogICAgICB9IGVsc2UgewogICAgICAgIGxldCBtYXhJRCA9IE1hdGgubWF4KAogICAgICAgICAgMCwKICAgICAgICAgIC4uLnRoaXMuc2NlbmUubm9kZXMubWFwKGxpbmsgPT4gewogICAgICAgICAgICByZXR1cm4gbGluay5pZDsKICAgICAgICAgIH0pCiAgICAgICAgKTsKICAgICAgICB0aGlzLnNjZW5lLm5vZGVzLnB1c2goewogICAgICAgICAgaWQ6IG1heElEICsgMSwKICAgICAgICAgIHg6IC00MDAsCiAgICAgICAgICB5OiA1MCwKICAgICAgICAgIHR5cGU6IHRoaXMubm9kZUNhdGVnb3J5W3RoaXMubmV3Tm9kZVR5cGVdLAogICAgICAgICAgbGFiZWw6IHRoaXMubmV3Tm9kZVZhbHVlID8gdGhpcy5uZXdOb2RlVmFsdWUgOiBgdGVzdCR7bWF4SUQgKyAxfWAKICAgICAgICB9KTsKICAgICAgICB0aGlzLm5ld05vZGVWYWx1ZSA9ICIiOwogICAgICB9CiAgICB9LAogICAgbm9kZUNsaWNrKGlkKSB7CiAgICAgIC8vIGNvbnNvbGUubG9nKCJub2RlIGNsaWNrIiwgaWQpOwogICAgfSwKICAgIG5vZGVEZWxldGUoaWQpIHsKICAgICAgLy8gY29uc29sZS5sb2coIm5vZGUgZGVsZXRlIiwgaWQpOwogICAgfSwKICAgIHN1Ym1pdF90ZW1wbGF0ZSgpIHsKICAgICAgaWYgKHRoaXMuZGF0YV9zZXQubGVuZ3RoID09IDApIHsKICAgICAgICB0b2FzdHIuZXJyb3IoIlBsZWFzZSBjcmVhdGUgYSB2YWxpZCB0cmVlLiIpOwogICAgICB9IGVsc2UgewogICAgICAgIGF4aW9zCiAgICAgICAgICAucG9zdChhcGlfY2FsbHMuc3VibWl0X2Nsb3NlZF9mb3JtX3VybCgpLCB7CiAgICAgICAgICAgIGNvbXBhbnlpZDogdGhpcy4kc2Vzc2lvbi5nZXQoIlVzZXJJbmZvcm1hdGlvbiIpLmNvbXBhbnlfaWQsCiAgICAgICAgICAgIGNvbXBhbnluYW1lOiB0aGlzLiRzZXNzaW9uLmdldCgiVXNlckluZm9ybWF0aW9uIikuY29tcGFueV9uYW1lLAogICAgICAgICAgICBlbWFpbDogdGhpcy4kc2Vzc2lvbi5nZXQoIlVzZXJJbmZvcm1hdGlvbiIpLmVtYWlsLAogICAgICAgICAgICB0b2tlbjogdGhpcy4kc2Vzc2lvbi5nZXQoIlVzZXJJbmZvcm1hdGlvbiIpLnRva2VucywKICAgICAgICAgICAgbGljZW5zZV9rZXk6IHRoaXMuJHNlc3Npb24uZ2V0KCJVc2VySW5mb3JtYXRpb24iKS5saWNlbnNlX2tleSwKICAgICAgICAgICAgdHJlZTogdGhpcy5kYXRhX3NldAogICAgICAgICAgfSkKICAgICAgICAgIC50aGVuKHJlc3BvbnNlID0+IHsKICAgICAgICAgICAgdGhpcy5kYXRhX3NldCA9IFtdOwogICAgICAgICAgICBpZiAocmVzcG9uc2UuZGF0YSA9PSAiUXVlcnkgRXhlY3V0ZWQgU3VjY2Vzc2Z1bGx5IikgewogICAgICAgICAgICB9CiAgICAgICAgICB9KTsKICAgICAgfQogICAgfSwKICAgIGxpbmtCcmVhayhpZCkgewogICAgICB2YXIgY2hpbGRfbm9kZSA9IHRoaXMuc2NlbmUubm9kZXMuZmlsdGVyKG5vZGUgPT4gewogICAgICAgIHJldHVybiBub2RlLmlkID09IGlkLnRvOwogICAgICB9KTsKICAgICAgdmFyIGNoaWxkcmVuX2NvdW50ID0gdGhpcy5zY2VuZS5saW5rcy5maWx0ZXIobGluayA9PiB7CiAgICAgICAgcmV0dXJuIGxpbmsuZnJvbSA9PSBpZC50bzsKICAgICAgfSk7CiAgICAgIHZhciBsZXZlbF9jb3VudCA9IHRoaXMubm9kZXNfbGV2ZWxfY291bnQoaWQudG8pOwogICAgICBpZiAoCiAgICAgICAgY2hpbGRfbm9kZVswXS50eXBlICE9PSAiUHJvbXB0IiAmJgogICAgICAgIGxldmVsX2NvdW50ID09IDAgJiYKICAgICAgICBjaGlsZHJlbl9jb3VudC5sZW5ndGggPiAwCiAgICAgICkgewogICAgICAgIHRvYXN0ci5lcnJvcigiT25seSBwcm9tcHRzIGNhbiBiZSByb290IG5vZGVzLiIpOwogICAgICAgIHRoaXMuc2NlbmUubGlua3MucHVzaChpZCk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgdGhpcy5kYXRhX2ZpbHRlcihsZXZlbF9jb3VudCwgY2hpbGRfbm9kZVswXS5sYWJlbCwgY2hpbGRfbm9kZVswXS50eXBlKTsKICAgICAgfQogICAgfSwKICAgIGxpbmtBZGRlZChsaW5rKSB7CiAgICAgIHZhciBub2RlID0gdGhpcy5zY2VuZS5ub2Rlcy5maWx0ZXIobm9kZSA9PiB7CiAgICAgICAgcmV0dXJuIG5vZGUuaWQgPT0gbGluay5mcm9tOwogICAgICB9KTsKICAgICAgdmFyIG5vZGVfbGluayA9IHRoaXMuc2NlbmUubGlua3MuZmlsdGVyKHRlbXBfbGluayA9PiB7CiAgICAgICAgcmV0dXJuIHRlbXBfbGluay50byA9PSBub2RlWzBdLmlkOwogICAgICB9KTsKICAgICAgaWYgKG5vZGVbMF0udHlwZSAhPSAiUHJvbXB0IiAmJiBub2RlX2xpbmsubGVuZ3RoID09IDApIHsKICAgICAgICB0b2FzdHIuZXJyb3IoIk9ubHkgcHJvbXB0cyBjYW4gYmUgcm9vdCBub2Rlcy4iKTsKICAgICAgICB0aGlzLnNjZW5lLmxpbmtzID0gdGhpcy5zY2VuZS5saW5rcy5maWx0ZXIodGVtcF9saW5rID0+IHsKICAgICAgICAgIHJldHVybiB0ZW1wX2xpbmsuZnJvbSAhPSBsaW5rLmZyb207CiAgICAgICAgfSk7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgdmFyIHBhcmVudF9ub2RlID0gdGhpcy5zY2VuZS5ub2Rlcy5maWx0ZXIobm9kZSA9PiB7CiAgICAgICAgICByZXR1cm4gbm9kZS5pZCA9PSBsaW5rLmZyb207CiAgICAgICAgfSk7CiAgICAgICAgdmFyIGNoaWxkX25vZGUgPSB0aGlzLnNjZW5lLm5vZGVzLmZpbHRlcihub2RlID0+IHsKICAgICAgICAgIHJldHVybiBub2RlLmlkID09IGxpbmsudG87CiAgICAgICAgfSk7CiAgICAgICAgdGhpcy5kYXRhX21hbmFnZW1lbnQocGFyZW50X25vZGUsICJSb290IiwgIlJvb3QiKTsKICAgICAgICB0aGlzLmRhdGFfbWFuYWdlbWVudCgKICAgICAgICAgIGNoaWxkX25vZGUsCiAgICAgICAgICBwYXJlbnRfbm9kZVswXS5sYWJlbCwKICAgICAgICAgIHBhcmVudF9ub2RlWzBdLnR5cGUKICAgICAgICApOwogICAgICB9CiAgICB9CiAgfQp9Owo="},{"version":3,"sources":["ActionForm.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgfile":"ActionForm.vue","sourceRoot":"src/portal/Chatbot/Dashboard","sourcesContent":["<template>\n  <div>\n    <div class=\"dash-cont\">\n      <div class=\"container-fluid\" id=\"dashboard-chart\">\n        <div class=\"card dash-card\">\n          <div class=\"card-header d-flex flex-wrap justify-content-between\">\n            <h4 class=\"mab-3 mb-md-0\">Action Form Creator</h4>\n            <div class=\"card-act d-flex flex-wrap\">\n              <div class=\"form-group mb-0\">\n                <select v-model=\"newNodeType\" class=\"form-control\">\n                  <option v-for=\"(item, index) in nodeCategory\" :key=\"index\" :value=\"index\">{{item}}</option>\n                </select>\n              </div>\n              <div class=\"form-group mb-0\">\n                <input\n                  class=\"form-control\"\n                  type=\"text\"\n                  v-model=\"newNodeValue\"\n                  placeholder=\"Enter node value\"\n                >\n              </div>\n              <button type=\"submit\" @click=\"addNode\" class=\"darkblue-btn\">Add</button>\n              <button type=\"submit\" @click=\"submit_template\" class=\"darkblue-btn\">Submit</button>\n            </div>\n          </div>\n          <div class=\"card-body\">\n            <simple-flowchart\n              :scene.sync=\"scene\"\n              @nodeClick=\"nodeClick\"\n              @nodeDelete=\"nodeDelete\"\n              @linkBreak=\"linkBreak\"\n              @linkAdded=\"linkAdded\"\n              @canvasClick=\"canvasClick\"\n              :height=\"800\"\n            />\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <!-- <div id=\"app\">\n    <h1>simple flowchart</h1>\n    <div class=\"tool-wrapper\">\n    </div>\n  </div>-->\n</template>\n\n<script>\nimport SimpleFlowchart from \"vue-simple-flowchart\";\nimport \"vue-simple-flowchart/dist/vue-flowchart.css\";\nimport axios from \"axios\";\nimport api_calls from \"@/portal/api_calls\";\nexport default {\n  name: \"app\",\n  components: {\n    SimpleFlowchart\n  },\n  data() {\n    return {\n      data_set: [],\n      scene: {\n        centerX: 1024,\n        centerY: 140,\n        scale: 1,\n        nodes: [],\n        links: []\n      },\n      level_count: 0,\n      newNodeType: 0,\n      newNodeValue: \"\",\n      nodeCategory: [\"Prompt\", \"Button\", \"Hyperlink\", \"Video\", \"Text\", \"User Reply\"]\n    };\n  },\n  methods: {\n    data_management(node, parent_label, parent_type) {\n      var level_count = this.nodes_level_count(node[0].id);\n      if (this.data_set.length <= level_count) {\n        this.data_set.push([]);\n      }\n      var isExists = this.data_set[level_count].filter(required_node => {\n        return required_node.label == node[0].label;\n      });\n      if (isExists.length == 0) {\n        this.data_set[level_count].push({\n          label: node[0].label,\n          type: node[0].type,\n          parent_label: parent_label,\n          parent_type: parent_type\n        });\n      }\n    },\n    data_filter(start_index, label, type) {},\n    nodes_level_count(to) {\n      var local_to = to;\n      var branch;\n      var level_count = 0;\n      for (var i in this.scene.links) {\n        branch = this.scene.links.filter(link => {\n          return link.to == local_to;\n        });\n        if (branch.length >= 1) {\n          level_count += 1;\n          local_to = branch[0].from;\n        } else {\n        }\n      }\n      return level_count;\n    },\n    canvasClick(e) {\n      // console.log(\"canvas Click, event:\", e);\n    },\n    addNode() {\n      if (this.newNodeValue == \"\") {\n        toastr.error(\"Please enter a value.\");\n      } else {\n        let maxID = Math.max(\n          0,\n          ...this.scene.nodes.map(link => {\n            return link.id;\n          })\n        );\n        this.scene.nodes.push({\n          id: maxID + 1,\n          x: -400,\n          y: 50,\n          type: this.nodeCategory[this.newNodeType],\n          label: this.newNodeValue ? this.newNodeValue : `test${maxID + 1}`\n        });\n        this.newNodeValue = \"\";\n      }\n    },\n    nodeClick(id) {\n      // console.log(\"node click\", id);\n    },\n    nodeDelete(id) {\n      // console.log(\"node delete\", id);\n    },\n    submit_template() {\n      if (this.data_set.length == 0) {\n        toastr.error(\"Please create a valid tree.\");\n      } else {\n        axios\n          .post(api_calls.submit_closed_form_url(), {\n            companyid: this.$session.get(\"UserInformation\").company_id,\n            companyname: this.$session.get(\"UserInformation\").company_name,\n            email: this.$session.get(\"UserInformation\").email,\n            token: this.$session.get(\"UserInformation\").tokens,\n            license_key: this.$session.get(\"UserInformation\").license_key,\n            tree: this.data_set\n          })\n          .then(response => {\n            this.data_set = [];\n            if (response.data == \"Query Executed Successfully\") {\n            }\n          });\n      }\n    },\n    linkBreak(id) {\n      var child_node = this.scene.nodes.filter(node => {\n        return node.id == id.to;\n      });\n      var children_count = this.scene.links.filter(link => {\n        return link.from == id.to;\n      });\n      var level_count = this.nodes_level_count(id.to);\n      if (\n        child_node[0].type !== \"Prompt\" &&\n        level_count == 0 &&\n        children_count.length > 0\n      ) {\n        toastr.error(\"Only prompts can be root nodes.\");\n        this.scene.links.push(id);\n      } else {\n        this.data_filter(level_count, child_node[0].label, child_node[0].type);\n      }\n    },\n    linkAdded(link) {\n      var node = this.scene.nodes.filter(node => {\n        return node.id == link.from;\n      });\n      var node_link = this.scene.links.filter(temp_link => {\n        return temp_link.to == node[0].id;\n      });\n      if (node[0].type != \"Prompt\" && node_link.length == 0) {\n        toastr.error(\"Only prompts can be root nodes.\");\n        this.scene.links = this.scene.links.filter(temp_link => {\n          return temp_link.from != link.from;\n        });\n      } else {\n        var parent_node = this.scene.nodes.filter(node => {\n          return node.id == link.from;\n        });\n        var child_node = this.scene.nodes.filter(node => {\n          return node.id == link.to;\n        });\n        this.data_management(parent_node, \"Root\", \"Root\");\n        this.data_management(\n          child_node,\n          parent_node[0].label,\n          parent_node[0].type\n        );\n      }\n    }\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n#app {\n  font-family: \"Avenir\", Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin: 0;\n  overflow: hidden;\n  height: 800px;\n  .tool-wrapper {\n    position: relative;\n  }\n}\n.node-main > .node-type {\n  background: #293978 !important;\n}\n</style>\n"]}]}