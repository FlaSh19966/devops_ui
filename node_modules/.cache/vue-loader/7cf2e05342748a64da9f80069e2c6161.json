{"remainingRequest":"/home/vimalesh/Learning/devops_ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/vimalesh/Learning/devops_ui/src/portal/Chatbot/Dashboard/Settings/Feedback.vue?vue&type=style&index=0&id=47998d68&scoped=true&lang=css&","dependencies":[{"path":"/home/vimalesh/Learning/devops_ui/src/portal/Chatbot/Dashboard/Settings/Feedback.vue","mtime":1660042032579},{"path":"/home/vimalesh/Learning/devops_ui/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vimalesh/Learning/devops_ui/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/vimalesh/Learning/devops_ui/node_modules/@vue/cli-service/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/vimalesh/Learning/devops_ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vimalesh/Learning/devops_ui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKLmJ0bi1jYW5jZWx7CiAgICBtYXJnaW4tdG9wOiAycHggIWltcG9ydGFudDsKICAgIC8qIGJvcmRlcjogMXB4IHNvbGlkOyAqLwogICAgcGFkZGluZy1ib3R0b206IDNweDsKICAgIHBhZGRpbmctdG9wOiA1cHg7CiAgICBtYXJnaW4tYm90dG9tOiA0cHg7Cn0KLyogdHIgdGQgewogIGhlaWdodDogNTBweDsKfQouZWRpdC1jb2x1bW4gewogIGhlaWdodDogMjlweCAhaW1wb3J0YW50Owp9ICovCg=="},{"version":3,"sources":["Feedback.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4PA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Feedback.vue","sourceRoot":"src/portal/Chatbot/Dashboard/Settings","sourcesContent":["<template>\n  <div>\n      <div class=\"spinner\" id=\"spinner\" v-show=\"spinnerOn\"></div>\n      <div class=\"dash-modal container-fluid py-0 px-0 mx-0 my-0\">\n        <div class=\"modal-content py-0 px-0 mx-0 my-0\">\n          <div class=\"modal-head text-center  py-0 px-0 mx-0 my-0\">\n              <h5 class=\"py-1 px-0 mx-0 my-0\">{{tlt('valuable_suggestion_header')}}</h5>\n              <hr class=\"py-0 px-0 mx-0 my-0\">\n          </div>\n          <div class=\"modal-body my-0 mx-0 pt-2 pb-0 px-2\">\n            <form @submit.prevent=\"add_feedbacks\">\n                <div\n                  class=\"form-group mx-0 my-0 px-0 py-0\"\n                >\n                  <textarea\n                    type=\"text\"\n                    rows=\"19\"\n                    v-model.trim=\"add_feedbacks_text\"\n                    class=\"form-control mx-0 my-0 px-2 py-2\"\n                    :placeholder=\"tlt('enter_suggestion')\"\n                    :id=\"`enter_feedback_id`\"\n                  />\n                </div>\n                <!-- <hr class=\"mx-0 my-2 px-0 py-0\"> -->\n                <div class=\"form-group d-flex mb-1\">\n                  <label class=\"mb-2 ml-2 mt-2 font-weight-bold col-2 text-center pt-1\">{{tlt('upload_attachment_label')}}</label>\n                  <input type=\"file\" id=\"upload_file\" multiple class=\"form-control\" @change=\"Upload_files\">\n                </div>\n              <div class=\"btn-wrap text-right mx-0 mt-2 mb-0 px-0 py-0\">\n                <button\n                  type=\"button\"\n                  class=\"btn btn-link btn-cancel mt-2\"\n                  @click=\"clear_fields\"\n                >\n                  {{tlt('feedback_page_cancel_btn')}}\n                </button>\n                <button type=\"submit\" class=\"darkblue-btn mt-2\" id=\"save_feedback\">\n                  {{tlt('feedback_page_submit_btn')}}\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n  </div>\n</template>\n<script>\nimport axios from \"axios\";\nimport Swal from \"sweetalert2\";\nimport api_calls from \"@/portal/api_calls\";\nimport { setTimeout } from \"timers\";\nexport default {\n  name: \"Feedback\",\n  data() {\n    return {\n      spinnerOn: false,\n      checked_list: [],\n      total_pages: null,\n      page_no: 1,\n      per_page: 20,\n      new_feedback_list: [],\n      new_feedbacks_text: \"\",\n      feedbacklist: [],\n      companyname: \"\",\n      companyid: \"\",\n      number_of_rows: null,\n      edit: \"False\",\n      old_feedback_data: \"\",\n      new_feedback_data: \"\",\n      search_name: \"\",\n      page_array: [],\n      add_feedbacks_text: \"\",\n      isGlobalEdit: false,\n      global_feedbacks_edit_list: [],\n      show_no_feedbacks_message: false,\n      isInsert: false,\n      isShow: false,\n      feedback: \"\",\n      new_feedback: \"\",\n      old_feedback: \"\",\n      isEdit: false,\n      feedback_list: \"\",\n      isDelete: \"\",\n      searchstring: \"\",\n      attachment_files: null,\n      new_attachment_files:[],\n      list_attachments_name:[],\n    };\n  },\n  created() {\n    if (this.$session.get(\"UserInformation\").role == \"SuperAdmin\") {\n      if (this.$session.has(\"CompanyId\")) {\n        this.companyid = this.$session.get(\"CompanyId\");\n        this.companyname = this.$session.get(\"CompanyName\");\n      } else {\n        this.companyid = this.$session.get(\"UserInformation\").company_id;\n        this.companyname = this.$session.get(\"UserInformation\").company_name;\n        toastr.warning(this.tlt('feedback_select_company_name_msg'));\n      }\n    } else {\n      this.companyid = this.$session.get(\"UserInformation\").company_id;\n      this.companyname = this.$session.get(\"UserInformation\").company_name;\n    }\n  },\n  mounted() {\n    this.clear_fields();\n  },\n  methods: {\n    clear_fields(){\n      this.add_feedbacks_text=\"\";\n      this.attachment_files = '';\n      this.new_attachment_files = [];\n      this.list_attachments_name = []\n    },\n    add_feedbacks() {\n        if (this.add_feedbacks_text === \"\"){\n            toastr.error(this.tlt('feedback_enter_feedback_msg'));\n        }\n        else{\n            event.preventDefault();\n            var user_details ={\n              company_name: this.companyname,\n              company_id: this.companyid,\n              email: this.$session.get(\"UserInformation\").email,\n              license_key: this.$session.get(\"UserInformation\").license_key,\n              token: this.$session.get(\"UserInformation\").tokens,\n              subscription: this.$session.get(\"UserInformation\").subscription,\n              feedback: this.add_feedbacks_text,\n              // feedback: \"\",\n              isInsert: true,\n              // page_no: this.page_no,\n              // per_page: this.per_page,\n              // showfeedback: \"False\",\n              files_list: this.list_attachments_name,\n            };\n            var json = JSON.stringify(user_details);\n            var blob = new Blob([json], {\n              type: \"application/json\",\n            });\n            const fd = new FormData();\n            for (let j=0 ;j<this.new_attachment_files.length;j++){\n                fd.append(\n                  this.list_attachments_name[j],\n                  this.new_attachment_files[j]\n                  );                \n            }\n            fd.append(\"json\", blob);\n            this.spinnerOn = true;\n            axios\n              .post(\n                api_calls.feedback_url(),fd,\n                {\n                  headers: {\n                    Authorization: `Bearer ${this.$session.get(\"at\")}`,\n                  },\n                }\n              )\n              .then((response) => {\n                this.spinnerOn = false;\n                let input_field = document.getElementById(\"upload_file\");\n                input_field.value = \"\";\n                if (response.data.message.MSG_CODE === this.api_status_code.FEEDBACK_ADDED_SUCCESSFULLY_1080.MSG_CODE) {\n                  Swal({\n                    type: \"success\",\n                    text: this.tlt('feedback_sent_successful_msg'),\n                    allowOutsideClick: false,\n                    allowEscapeKey: false,\n                    timer:2000,\n                  })\n                  this.clear_fields();\n                }\n                else if(response.data.message.MSG_CODE === this.api_status_code.FEEDBACK_ALREADY_EXISTS.MSG_CODE){\n                  this.clear_fields();\n                  Swal({\n                    type:\"error\",\n                    text:this.tlt('feedback_already_exists_msg'),\n                    timer:2000,\n                  })\n                }else if(response.data.message.MSG_CODE === this.api_status_code.IMG_DUPLICATE.MSG_CODE){\n                  this.clear_fields();\n                  Swal({\n                    type:\"warning\",\n                    text:this.tlt('feedback_img_uploaded_msg'),\n                    timer:3000,\n                  })\n                }\n                else {\n                  Swal({\n                    // title: this.tlt('billing_error_occurred_msg9'),\n                    title: response.data.message.MSG_CODE,\n                    text: response.data.message.MSG,\n                    showCancelButton: false,\n                    showConfirmButton: false,\n                    timer: 2500,\n                    type: \"error\"\n                  });\n                }\n              })\n              .catch((e) => {\n                if (\n                  e.response.status === 410 ||\n                  e.response.status === 440 ||\n                  e.response.status === 409\n                ) {\n                  this.$root.$emit(\"Session_Expired\", e.response.data);\n                }\n              });\n            // this.spinnerOn = false;\n          }\n    },\n    Upload_files(e) {\n      this.list_attachments_name = [];\n      this.new_attachment_files = [];\n      let selectedFiles = e.target.files;\n      if(selectedFiles.length>5){\n        Swal({\n          text: this.tlt('feedback_file_attachment_msg'),\n          toast: true,\n          position: \"top-end\",\n          type: \"error\",\n          showConfirmButton: false,\n          timer: 3000\n        });\n        let input_field = document.getElementById(\"upload_file\");\n        input_field.value = \"\";\n        this.clear_fields()\n        return false\n        \n      }\n      for (let i=0 ;i<selectedFiles.length;i++){\n        this.new_attachment_files.push(selectedFiles[i]);\n      }\n      for (let j=0 ;j<this.new_attachment_files.length;j++){\n        if (this.new_attachment_files[j].size > 2097152) {\n          Swal({\n            text: this.tlt('feedback_img_size_msg'),\n            toast: true,\n            position: \"top-end\",\n            type: \"error\",\n            showConfirmButton: false,\n            timer: 2000\n          });\n          let input_field = document.getElementById(\"upload_file\");\n          input_field.value = \"\";\n        }\n        this.list_attachments_name.push(this.new_attachment_files[j].name)\n      }\n    },\n  },\n};\n</script>\n<style scoped>\n.btn-cancel{\n    margin-top: 2px !important;\n    /* border: 1px solid; */\n    padding-bottom: 3px;\n    padding-top: 5px;\n    margin-bottom: 4px;\n}\n/* tr td {\n  height: 50px;\n}\n.edit-column {\n  height: 29px !important;\n} */\n</style>\n"]}]}