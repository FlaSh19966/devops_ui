{"remainingRequest":"/home/vimalesh/CENSE/chatbot-portal/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/vimalesh/CENSE/chatbot-portal/src/portal/Chatbot/Dashboard/Settings/Feedback.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/vimalesh/CENSE/chatbot-portal/src/portal/Chatbot/Dashboard/Settings/Feedback.vue","mtime":1647493919881},{"path":"/home/vimalesh/CENSE/chatbot-portal/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vimalesh/CENSE/chatbot-portal/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/vimalesh/CENSE/chatbot-portal/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vimalesh/CENSE/chatbot-portal/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBheGlvcyBmcm9tICJheGlvcyI7CmltcG9ydCBTd2FsIGZyb20gInN3ZWV0YWxlcnQyIjsKaW1wb3J0IGFwaV9jYWxscyBmcm9tICJAL3BvcnRhbC9hcGlfY2FsbHMiOwppbXBvcnQgeyBzZXRUaW1lb3V0IH0gZnJvbSAidGltZXJzIjsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJGZWVkYmFjayIsCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHNwaW5uZXJPbjogZmFsc2UsCiAgICAgIGNoZWNrZWRfbGlzdDogW10sCiAgICAgIHRvdGFsX3BhZ2VzOiBudWxsLAogICAgICBwYWdlX25vOiAxLAogICAgICBwZXJfcGFnZTogMjAsCiAgICAgIG5ld19mZWVkYmFja19saXN0OiBbXSwKICAgICAgbmV3X2ZlZWRiYWNrc190ZXh0OiAiIiwKICAgICAgZmVlZGJhY2tsaXN0OiBbXSwKICAgICAgY29tcGFueW5hbWU6ICIiLAogICAgICBjb21wYW55aWQ6ICIiLAogICAgICBudW1iZXJfb2Zfcm93czogbnVsbCwKICAgICAgZWRpdDogIkZhbHNlIiwKICAgICAgb2xkX2ZlZWRiYWNrX2RhdGE6ICIiLAogICAgICBuZXdfZmVlZGJhY2tfZGF0YTogIiIsCiAgICAgIHNlYXJjaF9uYW1lOiAiIiwKICAgICAgcGFnZV9hcnJheTogW10sCiAgICAgIGFkZF9mZWVkYmFja3NfdGV4dDogIiIsCiAgICAgIGlzR2xvYmFsRWRpdDogZmFsc2UsCiAgICAgIGdsb2JhbF9mZWVkYmFja3NfZWRpdF9saXN0OiBbXSwKICAgICAgc2hvd19ub19mZWVkYmFja3NfbWVzc2FnZTogZmFsc2UsCiAgICAgIGlzSW5zZXJ0OiBmYWxzZSwKICAgICAgaXNTaG93OiBmYWxzZSwKICAgICAgZmVlZGJhY2s6ICIiLAogICAgICBuZXdfZmVlZGJhY2s6ICIiLAogICAgICBvbGRfZmVlZGJhY2s6ICIiLAogICAgICBpc0VkaXQ6IGZhbHNlLAogICAgICBmZWVkYmFja19saXN0OiAiIiwKICAgICAgaXNEZWxldGU6ICIiLAogICAgICBzZWFyY2hzdHJpbmc6ICIiLAogICAgICBhdHRhY2htZW50X2ZpbGVzOiBudWxsLAogICAgICBuZXdfYXR0YWNobWVudF9maWxlczpbXSwKICAgICAgbGlzdF9hdHRhY2htZW50c19uYW1lOltdLAogICAgfTsKICB9LAogIGNyZWF0ZWQoKSB7CiAgICBpZiAodGhpcy4kc2Vzc2lvbi5nZXQoIlVzZXJJbmZvcm1hdGlvbiIpLnJvbGUgPT0gIlN1cGVyQWRtaW4iKSB7CiAgICAgIGlmICh0aGlzLiRzZXNzaW9uLmhhcygiQ29tcGFueUlkIikpIHsKICAgICAgICB0aGlzLmNvbXBhbnlpZCA9IHRoaXMuJHNlc3Npb24uZ2V0KCJDb21wYW55SWQiKTsKICAgICAgICB0aGlzLmNvbXBhbnluYW1lID0gdGhpcy4kc2Vzc2lvbi5nZXQoIkNvbXBhbnlOYW1lIik7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgdGhpcy5jb21wYW55aWQgPSB0aGlzLiRzZXNzaW9uLmdldCgiVXNlckluZm9ybWF0aW9uIikuY29tcGFueV9pZDsKICAgICAgICB0aGlzLmNvbXBhbnluYW1lID0gdGhpcy4kc2Vzc2lvbi5nZXQoIlVzZXJJbmZvcm1hdGlvbiIpLmNvbXBhbnlfbmFtZTsKICAgICAgICB0b2FzdHIud2FybmluZygiUGxlYXNlIHNlbGVjdCBhIGNvbXBhbnkgbmFtZSBmcm9tIHRoZSBkcm9wZG93biIpOwogICAgICB9CiAgICB9IGVsc2UgewogICAgICB0aGlzLmNvbXBhbnlpZCA9IHRoaXMuJHNlc3Npb24uZ2V0KCJVc2VySW5mb3JtYXRpb24iKS5jb21wYW55X2lkOwogICAgICB0aGlzLmNvbXBhbnluYW1lID0gdGhpcy4kc2Vzc2lvbi5nZXQoIlVzZXJJbmZvcm1hdGlvbiIpLmNvbXBhbnlfbmFtZTsKICAgIH0KICB9LAogIG1vdW50ZWQoKSB7CiAgICB0aGlzLmNsZWFyX2ZpZWxkcygpOwogIH0sCiAgbWV0aG9kczogewogICAgY2xlYXJfZmllbGRzKCl7CiAgICAgIHRoaXMuYWRkX2ZlZWRiYWNrc190ZXh0PSIiOwogICAgICB0aGlzLmF0dGFjaG1lbnRfZmlsZXMgPSAnJzsKICAgICAgdGhpcy5uZXdfYXR0YWNobWVudF9maWxlcyA9IFtdOwogICAgICB0aGlzLmxpc3RfYXR0YWNobWVudHNfbmFtZSA9IFtdCiAgICB9LAogICAgYWRkX2ZlZWRiYWNrcygpIHsKICAgICAgICBpZiAodGhpcy5hZGRfZmVlZGJhY2tzX3RleHQgPT09ICIiKXsKICAgICAgICAgICAgdG9hc3RyLmVycm9yKCJQbGVhc2UgRW50ZXIgdGhlIEZlZWRiYWNrIik7CiAgICAgICAgfQogICAgICAgIGVsc2V7CiAgICAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7CiAgICAgICAgICAgIHZhciB1c2VyX2RldGFpbHMgPXsKICAgICAgICAgICAgICBjb21wYW55bmFtZTogdGhpcy5jb21wYW55bmFtZSwKICAgICAgICAgICAgICBjb21wYW55aWQ6IHRoaXMuY29tcGFueWlkLAogICAgICAgICAgICAgIGVtYWlsOiB0aGlzLiRzZXNzaW9uLmdldCgiVXNlckluZm9ybWF0aW9uIikuZW1haWwsCiAgICAgICAgICAgICAgbGljZW5zZV9rZXk6IHRoaXMuJHNlc3Npb24uZ2V0KCJVc2VySW5mb3JtYXRpb24iKS5saWNlbnNlX2tleSwKICAgICAgICAgICAgICB0b2tlbjogdGhpcy4kc2Vzc2lvbi5nZXQoIlVzZXJJbmZvcm1hdGlvbiIpLnRva2VucywKICAgICAgICAgICAgICBzdWJzY3JpcHRpb246IHRoaXMuJHNlc3Npb24uZ2V0KCJVc2VySW5mb3JtYXRpb24iKS5zdWJzY3JpcHRpb24sCiAgICAgICAgICAgICAgZmVlZGJhY2s6IHRoaXMuYWRkX2ZlZWRiYWNrc190ZXh0LAogICAgICAgICAgICAgIC8vIGZlZWRiYWNrOiAiIiwKICAgICAgICAgICAgICBpc0luc2VydDogdHJ1ZSwKICAgICAgICAgICAgICAvLyBwYWdlX25vOiB0aGlzLnBhZ2Vfbm8sCiAgICAgICAgICAgICAgLy8gcGVyX3BhZ2U6IHRoaXMucGVyX3BhZ2UsCiAgICAgICAgICAgICAgLy8gc2hvd2ZlZWRiYWNrOiAiRmFsc2UiLAogICAgICAgICAgICAgIGZpbGVzX2xpc3Q6IHRoaXMubGlzdF9hdHRhY2htZW50c19uYW1lLAogICAgICAgICAgICB9OwogICAgICAgICAgICB2YXIganNvbiA9IEpTT04uc3RyaW5naWZ5KHVzZXJfZGV0YWlscyk7CiAgICAgICAgICAgIHZhciBibG9iID0gbmV3IEJsb2IoW2pzb25dLCB7CiAgICAgICAgICAgICAgdHlwZTogImFwcGxpY2F0aW9uL2pzb24iLAogICAgICAgICAgICB9KTsKICAgICAgICAgICAgY29uc3QgZmQgPSBuZXcgRm9ybURhdGEoKTsKICAgICAgICAgICAgZm9yIChsZXQgaj0wIDtqPHRoaXMubmV3X2F0dGFjaG1lbnRfZmlsZXMubGVuZ3RoO2orKyl7CiAgICAgICAgICAgICAgICBmZC5hcHBlbmQoCiAgICAgICAgICAgICAgICAgIHRoaXMubGlzdF9hdHRhY2htZW50c19uYW1lW2pdLAogICAgICAgICAgICAgICAgICB0aGlzLm5ld19hdHRhY2htZW50X2ZpbGVzW2pdCiAgICAgICAgICAgICAgICAgICk7ICAgICAgICAgICAgICAgIAogICAgICAgICAgICB9CiAgICAgICAgICAgIGZkLmFwcGVuZCgianNvbiIsIGJsb2IpOwogICAgICAgICAgICB0aGlzLnNwaW5uZXJPbiA9IHRydWU7CiAgICAgICAgICAgIGF4aW9zCiAgICAgICAgICAgICAgLnBvc3QoCiAgICAgICAgICAgICAgICBhcGlfY2FsbHMuZmVlZGJhY2tfdXJsKCksZmQsCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgIGhlYWRlcnM6IHsKICAgICAgICAgICAgICAgICAgICBBdXRob3JpemF0aW9uOiBgQmVhcmVyICR7dGhpcy4kc2Vzc2lvbi5nZXQoImF0Iil9YCwKICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgLnRoZW4oKHJlc3BvbnNlKSA9PiB7CiAgICAgICAgICAgICAgICB0aGlzLnNwaW5uZXJPbiA9IGZhbHNlOwogICAgICAgICAgICAgICAgbGV0IGlucHV0X2ZpZWxkID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoInVwbG9hZF9maWxlIik7CiAgICAgICAgICAgICAgICBpbnB1dF9maWVsZC52YWx1ZSA9ICIiOwogICAgICAgICAgICAgICAgaWYgKHJlc3BvbnNlLmRhdGEgPT09ICJGZWVkYmFjayBzZW50IFN1Y2Nlc3NmdWxseSIpIHsKICAgICAgICAgICAgICAgICAgU3dhbCh7CiAgICAgICAgICAgICAgICAgICAgdHlwZTogInN1Y2Nlc3MiLAogICAgICAgICAgICAgICAgICAgIHRleHQ6ICJGZWVkYmFjayBzZW50IFN1Y2Nlc3NmdWxseSIsCiAgICAgICAgICAgICAgICAgICAgYWxsb3dPdXRzaWRlQ2xpY2s6IGZhbHNlLAogICAgICAgICAgICAgICAgICAgIGFsbG93RXNjYXBlS2V5OiBmYWxzZSwKICAgICAgICAgICAgICAgICAgICB0aW1lcjoyMDAwLAogICAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICAgICAgICB0aGlzLmNsZWFyX2ZpZWxkcygpOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgZWxzZSBpZihyZXNwb25zZS5kYXRhID09PSAiRmVlZGJhY2sgYWxyZWFkeSBFeGlzdHMiKXsKICAgICAgICAgICAgICAgICAgdGhpcy5jbGVhcl9maWVsZHMoKTsKICAgICAgICAgICAgICAgICAgU3dhbCh7CiAgICAgICAgICAgICAgICAgICAgdHlwZToiZXJyb3IiLAogICAgICAgICAgICAgICAgICAgIHRleHQ6IkZlZWRiYWNrIGFscmVhZHkgRXhpc3RzIiwKICAgICAgICAgICAgICAgICAgICB0aW1lcjoyMDAwLAogICAgICAgICAgICAgICAgICB9KQogICAgICAgICAgICAgICAgfWVsc2UgaWYocmVzcG9uc2UuZGF0YSA9PT0gIkR1cGxpY2F0ZSBGaWxlIil7CiAgICAgICAgICAgICAgICAgIHRoaXMuY2xlYXJfZmllbGRzKCk7CiAgICAgICAgICAgICAgICAgIFN3YWwoewogICAgICAgICAgICAgICAgICAgIHR5cGU6Indhcm5pbmciLAogICAgICAgICAgICAgICAgICAgIHRleHQ6IkZpbGUgYWxyZWFkeSB1cGxvYWRlZCIsCiAgICAgICAgICAgICAgICAgICAgdGltZXI6MzAwMCwKICAgICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICAgIH1lbHNlIGlmKHJlc3BvbnNlLmRhdGEgPT09ICJEdXBsaWNhdGUgaW1hZ2UiKXsKICAgICAgICAgICAgICAgICAgdGhpcy5jbGVhcl9maWVsZHMoKTsKICAgICAgICAgICAgICAgICAgU3dhbCh7CiAgICAgICAgICAgICAgICAgICAgdHlwZToid2FybmluZyIsCiAgICAgICAgICAgICAgICAgICAgdGV4dDoiSW1hZ2UgYWxyZWFkeSB1cGxvYWRlZCIsCiAgICAgICAgICAgICAgICAgICAgdGltZXI6MzAwMCwKICAgICAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIGVsc2UgewogICAgICAgICAgICAgICAgICBTd2FsKHsKICAgICAgICAgICAgICAgICAgICB0eXBlOiAiZXJyb3IiLAogICAgICAgICAgICAgICAgICAgIHRleHQ6ICJUaGVyZSB3YXMgYW4gaW50ZXJuYWwgc2VydmVyIGVycm9yLiBQbGVhc2UgdHJ5IGFnYWluLiIsCiAgICAgICAgICAgICAgICAgICAgdGltZXI6MjUwMCwKICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfSkKICAgICAgICAgICAgICAuY2F0Y2goKGUpID0+IHsKICAgICAgICAgICAgICAgIGlmICgKICAgICAgICAgICAgICAgICAgZS5yZXNwb25zZS5zdGF0dXMgPT09IDQxMCB8fAogICAgICAgICAgICAgICAgICBlLnJlc3BvbnNlLnN0YXR1cyA9PT0gNDQwIHx8CiAgICAgICAgICAgICAgICAgIGUucmVzcG9uc2Uuc3RhdHVzID09PSA0MDkKICAgICAgICAgICAgICAgICkgewogICAgICAgICAgICAgICAgICB0aGlzLiRyb290LiRlbWl0KCJTZXNzaW9uX0V4cGlyZWQiLCBlLnJlc3BvbnNlLmRhdGEpOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0pOwogICAgICAgICAgICAvLyB0aGlzLnNwaW5uZXJPbiA9IGZhbHNlOwogICAgICAgICAgfQogICAgfSwKICAgIFVwbG9hZF9maWxlcyhlKSB7CiAgICAgIHRoaXMubGlzdF9hdHRhY2htZW50c19uYW1lID0gW107CiAgICAgIHRoaXMubmV3X2F0dGFjaG1lbnRfZmlsZXMgPSBbXTsKICAgICAgbGV0IHNlbGVjdGVkRmlsZXMgPSBlLnRhcmdldC5maWxlczsKICAgICAgaWYoc2VsZWN0ZWRGaWxlcy5sZW5ndGg+NSl7CiAgICAgICAgU3dhbCh7CiAgICAgICAgICB0ZXh0OiAiTnVtYmVyIG9mIGF0dGFjaG1lbnQgc2hvdWxkIGJlIGxlc3MgdGhhbiA1IiwKICAgICAgICAgIHRvYXN0OiB0cnVlLAogICAgICAgICAgcG9zaXRpb246ICJ0b3AtZW5kIiwKICAgICAgICAgIHR5cGU6ICJlcnJvciIsCiAgICAgICAgICBzaG93Q29uZmlybUJ1dHRvbjogZmFsc2UsCiAgICAgICAgICB0aW1lcjogMzAwMAogICAgICAgIH0pOwogICAgICAgIGxldCBpbnB1dF9maWVsZCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJ1cGxvYWRfZmlsZSIpOwogICAgICAgIGlucHV0X2ZpZWxkLnZhbHVlID0gIiI7CiAgICAgICAgdGhpcy5jbGVhcl9maWVsZHMoKQogICAgICAgIHJldHVybiBmYWxzZQogICAgICAgIAogICAgICB9CiAgICAgIGZvciAobGV0IGk9MCA7aTxzZWxlY3RlZEZpbGVzLmxlbmd0aDtpKyspewogICAgICAgIHRoaXMubmV3X2F0dGFjaG1lbnRfZmlsZXMucHVzaChzZWxlY3RlZEZpbGVzW2ldKTsKICAgICAgfQogICAgICBmb3IgKGxldCBqPTAgO2o8dGhpcy5uZXdfYXR0YWNobWVudF9maWxlcy5sZW5ndGg7aisrKXsKICAgICAgICBpZiAodGhpcy5uZXdfYXR0YWNobWVudF9maWxlc1tqXS5zaXplID4gMjA5NzE1MikgewogICAgICAgICAgU3dhbCh7CiAgICAgICAgICAgIHRleHQ6ICJVcGxvYWQgaW1hZ2Ugd2l0aCBzaXplIHNob3VsZCBiZSBsZXNzIHRoYW4gMk1CIiwKICAgICAgICAgICAgdG9hc3Q6IHRydWUsCiAgICAgICAgICAgIHBvc2l0aW9uOiAidG9wLWVuZCIsCiAgICAgICAgICAgIHR5cGU6ICJlcnJvciIsCiAgICAgICAgICAgIHNob3dDb25maXJtQnV0dG9uOiBmYWxzZSwKICAgICAgICAgICAgdGltZXI6IDIwMDAKICAgICAgICAgIH0pOwogICAgICAgICAgbGV0IGlucHV0X2ZpZWxkID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoInVwbG9hZF9maWxlIik7CiAgICAgICAgICBpbnB1dF9maWVsZC52YWx1ZSA9ICIiOwogICAgICAgIH0KICAgICAgICB0aGlzLmxpc3RfYXR0YWNobWVudHNfbmFtZS5wdXNoKHRoaXMubmV3X2F0dGFjaG1lbnRfZmlsZXNbal0ubmFtZSkKICAgICAgfQogICAgfSwKICB9LAp9Owo="},{"version":3,"sources":["Feedback.vue"],"names":[],"mappingsfile":"Feedback.vue","sourceRoot":"src/portal/Chatbot/Dashboard/Settings","sourcesContent":["<template>\n  <div>\n      <div class=\"spinner\" id=\"spinner\" v-show=\"spinnerOn\"></div>\n      <div class=\"dash-modal container-fluid py-0 px-0 mx-0 my-0\">\n        <div class=\"modal-content py-0 px-0 mx-0 my-0\">\n          <div class=\"modal-head text-center  py-0 px-0 mx-0 my-0\">\n              <h5 class=\"py-1 px-0 mx-0 my-0\">Enter Your Valuable Suggestions</h5>\n              <hr class=\"py-0 px-0 mx-0 my-0\">\n          </div>\n          <div class=\"modal-body my-0 mx-0 pt-2 pb-0 px-2\">\n            <form @submit.prevent=\"add_feedbacks\">\n                <div\n                  class=\"form-group mx-0 my-0 px-0 py-0\"\n                >\n                  <textarea\n                    type=\"text\"\n                    rows=\"19\"\n                    v-model.trim=\"add_feedbacks_text\"\n                    class=\"form-control mx-0 my-0 px-2 py-2\"\n                    placeholder=\"Enter your suggestions here …\"\n                    :id=\"`enter_feedback_id`\"\n                  />\n                </div>\n                <!-- <hr class=\"mx-0 my-2 px-0 py-0\"> -->\n                <div class=\"form-group d-flex mb-1\">\n                  <label class=\"mb-2 ml-2 mt-2 font-weight-bold col-2 text-center pt-1\">Upload Attachments</label>\n                  <input type=\"file\" id=\"upload_file\" multiple class=\"form-control\" @change=\"Upload_files\">\n                </div>\n              <div class=\"btn-wrap text-right mx-0 mt-2 mb-0 px-0 py-0\">\n                <button\n                  type=\"button\"\n                  class=\"btn btn-link btn-cancel mt-2\"\n                  @click=\"clear_fields\"\n                >\n                  Cancel\n                </button>\n                <button type=\"submit\" class=\"darkblue-btn mt-2\" id=\"save_feedback\">\n                  Submit\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n  </div>\n</template>\n<script>\nimport axios from \"axios\";\nimport Swal from \"sweetalert2\";\nimport api_calls from \"@/portal/api_calls\";\nimport { setTimeout } from \"timers\";\nexport default {\n  name: \"Feedback\",\n  data() {\n    return {\n      spinnerOn: false,\n      checked_list: [],\n      total_pages: null,\n      page_no: 1,\n      per_page: 20,\n      new_feedback_list: [],\n      new_feedbacks_text: \"\",\n      feedbacklist: [],\n      companyname: \"\",\n      companyid: \"\",\n      number_of_rows: null,\n      edit: \"False\",\n      old_feedback_data: \"\",\n      new_feedback_data: \"\",\n      search_name: \"\",\n      page_array: [],\n      add_feedbacks_text: \"\",\n      isGlobalEdit: false,\n      global_feedbacks_edit_list: [],\n      show_no_feedbacks_message: false,\n      isInsert: false,\n      isShow: false,\n      feedback: \"\",\n      new_feedback: \"\",\n      old_feedback: \"\",\n      isEdit: false,\n      feedback_list: \"\",\n      isDelete: \"\",\n      searchstring: \"\",\n      attachment_files: null,\n      new_attachment_files:[],\n      list_attachments_name:[],\n    };\n  },\n  created() {\n    if (this.$session.get(\"UserInformation\").role == \"SuperAdmin\") {\n      if (this.$session.has(\"CompanyId\")) {\n        this.companyid = this.$session.get(\"CompanyId\");\n        this.companyname = this.$session.get(\"CompanyName\");\n      } else {\n        this.companyid = this.$session.get(\"UserInformation\").company_id;\n        this.companyname = this.$session.get(\"UserInformation\").company_name;\n        toastr.warning(\"Please select a company name from the dropdown\");\n      }\n    } else {\n      this.companyid = this.$session.get(\"UserInformation\").company_id;\n      this.companyname = this.$session.get(\"UserInformation\").company_name;\n    }\n  },\n  mounted() {\n    this.clear_fields();\n  },\n  methods: {\n    clear_fields(){\n      this.add_feedbacks_text=\"\";\n      this.attachment_files = '';\n      this.new_attachment_files = [];\n      this.list_attachments_name = []\n    },\n    add_feedbacks() {\n        if (this.add_feedbacks_text === \"\"){\n            toastr.error(\"Please Enter the Feedback\");\n        }\n        else{\n            event.preventDefault();\n            var user_details ={\n              companyname: this.companyname,\n              companyid: this.companyid,\n              email: this.$session.get(\"UserInformation\").email,\n              license_key: this.$session.get(\"UserInformation\").license_key,\n              token: this.$session.get(\"UserInformation\").tokens,\n              subscription: this.$session.get(\"UserInformation\").subscription,\n              feedback: this.add_feedbacks_text,\n              // feedback: \"\",\n              isInsert: true,\n              // page_no: this.page_no,\n              // per_page: this.per_page,\n              // showfeedback: \"False\",\n              files_list: this.list_attachments_name,\n            };\n            var json = JSON.stringify(user_details);\n            var blob = new Blob([json], {\n              type: \"application/json\",\n            });\n            const fd = new FormData();\n            for (let j=0 ;j<this.new_attachment_files.length;j++){\n                fd.append(\n                  this.list_attachments_name[j],\n                  this.new_attachment_files[j]\n                  );                \n            }\n            fd.append(\"json\", blob);\n            this.spinnerOn = true;\n            axios\n              .post(\n                api_calls.feedback_url(),fd,\n                {\n                  headers: {\n                    Authorization: `Bearer ${this.$session.get(\"at\")}`,\n                  },\n                }\n              )\n              .then((response) => {\n                this.spinnerOn = false;\n                let input_field = document.getElementById(\"upload_file\");\n                input_field.value = \"\";\n                if (response.data === \"Feedback sent Successfully\") {\n                  Swal({\n                    type: \"success\",\n                    text: \"Feedback sent Successfully\",\n                    allowOutsideClick: false,\n                    allowEscapeKey: false,\n                    timer:2000,\n                  })\n                  this.clear_fields();\n                }\n                else if(response.data === \"Feedback already Exists\"){\n                  this.clear_fields();\n                  Swal({\n                    type:\"error\",\n                    text:\"Feedback already Exists\",\n                    timer:2000,\n                  })\n                }else if(response.data === \"Duplicate File\"){\n                  this.clear_fields();\n                  Swal({\n                    type:\"warning\",\n                    text:\"File already uploaded\",\n                    timer:3000,\n                  })\n                }else if(response.data === \"Duplicate image\"){\n                  this.clear_fields();\n                  Swal({\n                    type:\"warning\",\n                    text:\"Image already uploaded\",\n                    timer:3000,\n                  })\n                }\n                else {\n                  Swal({\n                    type: \"error\",\n                    text: \"There was an internal server error. Please try again.\",\n                    timer:2500,\n                  });\n                }\n              })\n              .catch((e) => {\n                if (\n                  e.response.status === 410 ||\n                  e.response.status === 440 ||\n                  e.response.status === 409\n                ) {\n                  this.$root.$emit(\"Session_Expired\", e.response.data);\n                }\n              });\n            // this.spinnerOn = false;\n          }\n    },\n    Upload_files(e) {\n      this.list_attachments_name = [];\n      this.new_attachment_files = [];\n      let selectedFiles = e.target.files;\n      if(selectedFiles.length>5){\n        Swal({\n          text: \"Number of attachment should be less than 5\",\n          toast: true,\n          position: \"top-end\",\n          type: \"error\",\n          showConfirmButton: false,\n          timer: 3000\n        });\n        let input_field = document.getElementById(\"upload_file\");\n        input_field.value = \"\";\n        this.clear_fields()\n        return false\n        \n      }\n      for (let i=0 ;i<selectedFiles.length;i++){\n        this.new_attachment_files.push(selectedFiles[i]);\n      }\n      for (let j=0 ;j<this.new_attachment_files.length;j++){\n        if (this.new_attachment_files[j].size > 2097152) {\n          Swal({\n            text: \"Upload image with size should be less than 2MB\",\n            toast: true,\n            position: \"top-end\",\n            type: \"error\",\n            showConfirmButton: false,\n            timer: 2000\n          });\n          let input_field = document.getElementById(\"upload_file\");\n          input_field.value = \"\";\n        }\n        this.list_attachments_name.push(this.new_attachment_files[j].name)\n      }\n    },\n  },\n};\n</script>\n<style scoped>\n.btn-cancel{\n    margin-top: 2px !important;\n    /* border: 1px solid; */\n    padding-bottom: 3px;\n    padding-top: 5px;\n    margin-bottom: 4px;\n}\n/* tr td {\n  height: 50px;\n}\n.edit-column {\n  height: 29px !important;\n} */\n</style>\n"]}]}