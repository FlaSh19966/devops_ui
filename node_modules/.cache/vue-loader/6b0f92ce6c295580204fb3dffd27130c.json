{"remainingRequest":"/home/vimalesh/Elixir/chatbot-portal/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/vimalesh/Elixir/chatbot-portal/src/portal/Chatbot/Dashboard/Customer Support/LiveChat.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/vimalesh/Elixir/chatbot-portal/src/portal/Chatbot/Dashboard/Customer Support/LiveChat.vue","mtime":1643101391851},{"path":"/home/vimalesh/Elixir/chatbot-portal/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vimalesh/Elixir/chatbot-portal/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/vimalesh/Elixir/chatbot-portal/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vimalesh/Elixir/chatbot-portal/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBheGlvcyBmcm9tICJheGlvcyI7CmltcG9ydCBzd2FsIGZyb20gInN3ZWV0YWxlcnQyIjsKaW1wb3J0IHsgU29ja2V0IH0gZnJvbSAicGhvZW5peC1zb2NrZXQiOwppbXBvcnQgeyBzZXRJbnRlcnZhbCB9IGZyb20gInRpbWVycyI7CmltcG9ydCBkZWJvdW5jZSBmcm9tICJ2dWUtZGVib3VuY2UvZGlzdC9kZWJvdW5jZS5taW4uanMiOwppbXBvcnQgeyBnZW5lcmF0ZV90aW1lIH0gZnJvbSAiQC9wb3J0YWwvbWl4aW5zIjsKCmV4cG9ydCBkZWZhdWx0IHsKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgdXNlcl9saXN0OiBbXSwKICAgICAgY3VycmVudF91c2VyOiAiRmlyc3QiLAogICAgICBjdXJyZW50X2NoYW5uZWw6ICIiLAogICAgICBmaXJzdF9uYW1lOiB0aGlzLiRzZXNzaW9uLmhhcygiVXNlckZpcnN0TmFtZSIpCiAgICAgICAgPyB0aGlzLiRzZXNzaW9uLmdldCgiVXNlckZpcnN0TmFtZSIpCiAgICAgICAgOiB0aGlzLiRzZXNzaW9uLmdldCgiVXNlckluZm9ybWF0aW9uIikuZmlyc3RfbmFtZSwKICAgICAgbGFzdF9uYW1lOiB0aGlzLiRzZXNzaW9uLmhhcygiVXNlckxhc3ROYW1lIikKICAgICAgICA/IHRoaXMuJHNlc3Npb24uZ2V0KCJVc2VyTGFzdE5hbWUiKQogICAgICAgIDogdGhpcy4kc2Vzc2lvbi5nZXQoIlVzZXJJbmZvcm1hdGlvbiIpLmxhc3RfbmFtZSwKICAgICAgY2hhdF9saXN0OiBbXSwKICAgICAgdG9fc2VuZDogIiIsCiAgICAgIGNoOiBudWxsLAogICAgICBtZXNzYWdlOiBudWxsLAogICAgICB1c2VyX2NoYW5uZWxzOiB7fSwKICAgICAgc29ja2V0OiBudWxsLAogICAgICBtc2dfc2VuZGVyOiAiIiwKICAgICAgZGVsYXk6IDEwMDAwLAogICAgICBpc190eXBpbmdfaW5kaWNhdG9yX29uOiBmYWxzZSwKICAgIH07CiAgfSwKICB3YXRjaDogewogICAgdG9fc2VuZChuZXdWYWwpIHsKICAgICAgdGhpcy5idXR0b25fZmlsbCgpOwogICAgfSwKICB9LAogIG1peGluczogW2dlbmVyYXRlX3RpbWVdLAogIG1vdW50ZWQoKSB7CiAgICB0aGlzLmN1cnJlbnRfdXNlciA9IHRoaXMuZmlyc3RfbmFtZTsKICAgIHRoaXMuc29ja2V0ID0gbmV3IFNvY2tldChwcm9jZXNzLmVudi5WVUVfQVBQX0xJVkVfQ0hBVF9XRUJTT0NLRVRfRU5EUE9JTlQsIHsKICAgICAgcGFyYW1zOiB7CiAgICAgICAgdXNlcm5hbWU6IHRoaXMuJHNlc3Npb24uZ2V0KCJVc2VySW5mb3JtYXRpb24iKS5lbWFpbCwKICAgICAgICB0b2tlbjogdGhpcy4kc2Vzc2lvbi5nZXQoIlVzZXJJbmZvcm1hdGlvbiIpLnRva2VucywKICAgICAgICByb2xlOiB0aGlzLiRzZXNzaW9uLmdldCgiVXNlckluZm9ybWF0aW9uIikucm9sZSwKICAgICAgfSwKICAgIH0pOwogICAgdGhpcy5zb2NrZXQuY29ubmVjdCgpOwogICAgdGhpcy5jaCA9IHRoaXMuc29ja2V0LmNoYW5uZWwoCiAgICAgICJjb21wYW5pZXM6IiArIHRoaXMuJHNlc3Npb24uZ2V0KCJVc2VySW5mb3JtYXRpb24iKS5jb21wYW55X25hbWUKICAgICk7CiAgICB0aGlzLmNoLmpvaW4oKTsKICAgIHRoaXMuY2gub24oImN1c3RvbWVyX25lZWRzX3N1cHBvcnRfYWdlbnQiLCAocmVzKSA9PiB7CiAgICAgIHRoaXMudXNlcl9saXN0LnB1c2goewogICAgICAgIGNoYW5uZWxfbmFtZTogcmVzLmN1c3RvbWVyX2NoYXRfZ3JvdXAsCiAgICAgICAgdXNlcm5hbWU6ICIiLAogICAgICB9KTsKICAgICAgdGhpcy5jdXJyZW50X3VzZXIgPSByZXMuY3VzdG9tZXJfY2hhdF9ncm91cDsKICAgICAgdGhpcy5jdXJyZW50X2NoYW5uZWwgPSByZXMuY3VzdG9tZXJfY2hhdF9ncm91cDsKICAgICAgdGhpcy51c2VyX2NoYW5uZWxzW3Jlcy5jdXN0b21lcl9jaGF0X2dyb3VwXSA9IHRoaXMuc29ja2V0LmNoYW5uZWwoCiAgICAgICAgcmVzLmN1c3RvbWVyX2NoYXRfZ3JvdXAKICAgICAgKTsKICAgICAgdGhpcy5tZXNzYWdlID0gdGhpcy5zb2NrZXQuY2hhbm5lbChyZXMuY3VzdG9tZXJfY2hhdF9ncm91cCk7CiAgICAgIHRoaXMudXNlcl9jaGFubmVsc1tyZXMuY3VzdG9tZXJfY2hhdF9ncm91cF0ub24oCiAgICAgICAgInN0YXJ0ZWRfdHlwaW5nIiwKICAgICAgICAodHlwaW5nX3Jlc3BvbnNlKSA9PiB7CiAgICAgICAgICBpZiAocmVzLmN1c3RvbWVyX2NoYXRfZ3JvdXAgPT0gdGhpcy5jdXJyZW50X2NoYW5uZWwpIHsKICAgICAgICAgICAgaWYgKHR5cGluZ19yZXNwb25zZS5zZW5kZXIgIT0gInN1cHBvcnRfYWdlbnQiKSB7CiAgICAgICAgICAgICAgdmFyIG5hbWUgPSB0aGlzLnVzZXJfbGlzdC5maWx0ZXIoKHVzZXIpID0+IHsKICAgICAgICAgICAgICAgIHJldHVybiB1c2VyLmNoYW5uZWxfbmFtZSA9PSByZXMuY3VzdG9tZXJfY2hhdF9ncm91cDsKICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICBpZiAobmFtZVswXS51c2VybmFtZSA9PSAiIikgewogICAgICAgICAgICAgICAgdGhpcy5tc2dfc2VuZGVyID0gdHlwaW5nX3Jlc3BvbnNlLnNlbmRlcjsKICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgdGhpcy5tc2dfc2VuZGVyID0gbmFtZVswXS51c2VybmFtZTsKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgICAgdGhpcy5pc190eXBpbmdfaW5kaWNhdG9yX29uID0gdHJ1ZTsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgICk7CiAgICAgIHRoaXMudXNlcl9jaGFubmVsc1tyZXMuY3VzdG9tZXJfY2hhdF9ncm91cF0ub24oInN0b3BwZWRfdHlwaW5nIiwgKCkgPT4gewogICAgICAgIHRoaXMuaXNfdHlwaW5nX2luZGljYXRvcl9vbiA9IGZhbHNlOwogICAgICB9KTsKICAgICAgdGhpcy51c2VyX2NoYW5uZWxzW3Jlcy5jdXN0b21lcl9jaGF0X2dyb3VwXS5vbigKICAgICAgICAibmV3X2NoYXRfbWVzc2FnZSIsCiAgICAgICAgKHJlc3BvbnNlKSA9PiB7CiAgICAgICAgICBpZiAocmVzcG9uc2Uuc2VuZGVyID09ICJjdXN0b21lciIpIHsKICAgICAgICAgICAgdGhpcy5jaGF0X2xpc3QucHVzaCh7CiAgICAgICAgICAgICAgcmVjZWl2ZWQ6IHRydWUsCiAgICAgICAgICAgICAgdGV4dDogcmVzcG9uc2UubWVzc2FnZSwKICAgICAgICAgICAgICBjdXJyZW50X2NoYW5uZWw6IHJlcy5jdXN0b21lcl9jaGF0X2dyb3VwLAogICAgICAgICAgICAgIHRpbWU6IHRoaXMuZ2VuZXJhdGVfdGltZSgpLAogICAgICAgICAgICB9KTsKICAgICAgICAgICAgdGhpcy51cGRhdGVfc2Nyb2xsYmFyKCk7CiAgICAgICAgICAgIHRoaXMubm9fcmVzcG9uc2UodGhpcyk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICApOwogICAgICB0aGlzLnVzZXJfY2hhbm5lbHNbcmVzLmN1c3RvbWVyX2NoYXRfZ3JvdXBdLm9uKCJuZXdfbmFtZSIsIChyZXNwKSA9PiB7CiAgICAgICAgZm9yIChsZXQgaSA9IDAsIG4gPSB0aGlzLnVzZXJfbGlzdC5sZW5ndGg7IGkgPCBuOyBpKyspIHsKICAgICAgICAgIGlmICh0aGlzLnVzZXJfbGlzdFtpXS5jaGFubmVsX25hbWUgPT0gcmVzLmN1c3RvbWVyX2NoYXRfZ3JvdXApIHsKICAgICAgICAgICAgdGhpcy51c2VyX2xpc3RbaV0udXNlcm5hbWUgPSByZXNwLm5hbWU7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICAgIHRoaXMuY3VycmVudF91c2VyID0gcmVzcC5uYW1lOwogICAgICAgIHRoaXMubm9fcmVzcG9uc2UodGhpcyk7CiAgICAgIH0pOwogICAgICB0aGlzLnVzZXJfY2hhbm5lbHNbcmVzLmN1c3RvbWVyX2NoYXRfZ3JvdXBdLm9uKCJzdG9wcGVkX2NoYXQiLCAocmVzcCkgPT4gewogICAgICAgIHRvYXN0ci5pbmZvKHJlc3AubmFtZSArICIgIiArIHJlc3AubWVzc2FnZSk7CiAgICAgICAgdGhpcy51c2VyX2xpc3QgPSB0aGlzLnVzZXJfbGlzdC5maWx0ZXIoKHVzZXIpID0+IHsKICAgICAgICAgIHJldHVybiB1c2VyLnVzZXJuYW1lICE9IHJlc3AubmFtZTsKICAgICAgICB9KTsKICAgICAgICB0aGlzLmNoYXRfbGlzdCA9IHRoaXMuY2hhdF9saXN0LmZpbHRlcigoY2hhdCkgPT4gewogICAgICAgICAgcmV0dXJuIGNoYXQuY3VycmVudF9jaGFubmVsICE9IHRoaXMuY3VycmVudF9jaGFubmVsOwogICAgICAgIH0pOwogICAgICAgIHRoaXMuY3VycmVudF91c2VyID0gdGhpcy5maXJzdF9uYW1lOwogICAgICB9KTsKICAgICAgdGhpcy51c2VyX2NoYW5uZWxzW3Jlcy5jdXN0b21lcl9jaGF0X2dyb3VwXS5qb2luKCk7CiAgICB9KTsKICB9LAogIGJlZm9yZURlc3Ryb3koKXsgCiAgICB0aGlzLmNoLmxlYXZlKCk7CiAgICAvL2Rpc2Nvbm5lY3QgYWxsIGN1c3RvbWVyIHdoZW4gU0EgbmF2aWdhdGVzIHRvIG90aGVyIHBhZ2UKICAgICAgZm9yIChjb25zdCBwcm9wZXJ0eSBpbiB0aGlzLnVzZXJfY2hhbm5lbHMpIHsKICAgICAgdGhpcy51c2VyX2NoYW5uZWxzW3Byb3BlcnR5XS5wdXNoKCJzdG9wcGVkX2NoYXQiLCB7CiAgICAgICAgICBuYW1lOiAiU3VwcG9ydCBBZ2VudCIsCiAgICAgICAgICBtZXNzYWdlOiAiaGFzIGVuZGVkIHRoaXMgY29udmVyc2F0aW9uLiIsCiAgICAgICAgICB9KTsKICAgICAgICAgICAgdGhpcy51c2VyX2NoYW5uZWxzW3Byb3BlcnR5XS5sZWF2ZSgpOwogICAgICB9CiAgICB0aGlzLnNvY2tldC5kaXNjb25uZWN0KCk7IAogIH0sCiAgbWV0aG9kczogewogICAgYnV0dG9uX2ZpbGwoKSB7CiAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoInN2ZyIpLnN0eWxlLmZpbGwgPSAiIzI3MzY3OSI7CiAgICAgIGlmICh0aGlzLnRvX3NlbmQgPT0gIiIpIHsKICAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCJzdmciKS5zdHlsZS5maWxsID0gIiM4YThhOGE2MyI7CiAgICAgIH0gZWxzZSBpZiAodGhpcy50b19zZW5kICE9ICIiKSB7CiAgICAgICAgdGhpcy51c2VyX2NoYW5uZWxzW3RoaXMuY3VycmVudF9jaGFubmVsXS5wdXNoKCJzdGFydGVkX3R5cGluZyIpOwogICAgICB9CiAgICAgIHRoaXMuc3RvcF90eXBpbmcodGhpcyk7CiAgICB9LAogICAgc3RvcF90eXBpbmc6IGRlYm91bmNlKGZ1bmN0aW9uICh2bSkgewogICAgICB2bS51c2VyX2NoYW5uZWxzW3ZtLmN1cnJlbnRfY2hhbm5lbF0ucHVzaCgic3RvcHBlZF90eXBpbmciKTsKICAgIH0sIDUwMDApLAogICAgbm9fcmVzcG9uc2U6IGRlYm91bmNlKGZ1bmN0aW9uICh2bSkgewogICAgICB2bS51c2VyX2NoYW5uZWxzW3ZtLmN1cnJlbnRfY2hhbm5lbF0ucHVzaCgibm9fcmVzcG9uc2UiLCB7CiAgICAgICAgc2VuZGVyOiAic2VuZGVyIiwKICAgICAgfSk7CiAgICB9LCAxMDAwMCksCiAgICBzZW5kX21lc3NhZ2UoKSB7CiAgICAgIGlmICh0aGlzLnRvX3NlbmQgIT0gIiIgJiYgdGhpcy51c2VyX2xpc3QubGVuZ3RoID4gMCkgewogICAgICAgIHRoaXMuY2hhdF9saXN0LnB1c2goewogICAgICAgICAgc2VudDogdHJ1ZSwKICAgICAgICAgIHRleHQ6IHRoaXMudG9fc2VuZCwKICAgICAgICAgIHRpbWU6IHRoaXMuZ2VuZXJhdGVfdGltZSgpLAogICAgICAgICAgY3VycmVudF9jaGFubmVsOiB0aGlzLmN1cnJlbnRfY2hhbm5lbCwKICAgICAgICB9KTsKICAgICAgICB0aGlzLnVzZXJfY2hhbm5lbHNbdGhpcy5jdXJyZW50X2NoYW5uZWxdLnB1c2goIm5ld19jaGF0X21lc3NhZ2UiLCB7CiAgICAgICAgICBtZXNzYWdlOiB0aGlzLnRvX3NlbmQsCiAgICAgICAgfSk7CiAgICAgICAgdGhpcy50b19zZW5kID0gIiI7CiAgICAgICAgdGhpcy5ub19yZXNwb25zZSh0aGlzKTsKICAgICAgICB0aGlzLnVwZGF0ZV9zY3JvbGxiYXIoKTsKICAgICAgfQogICAgfSwKICAgIGRpc2Nvbm5lY3Rfc3VwcG9ydF9jaGF0KCkgewogICAgICB2YXIgdXNlcl9uYW1lID0gdGhpcy5jdXJyZW50X3VzZXI7CiAgICAgIHRoaXMudXNlcl9jaGFubmVsc1t0aGlzLmN1cnJlbnRfY2hhbm5lbF0ucHVzaCgic3RvcHBlZF9jaGF0IiwgewogICAgICAgIG5hbWU6ICJTdXBwb3J0IEFnZW50IiwKICAgICAgICBtZXNzYWdlOiAiaGFzIGVuZGVkIHRoaXMgY29udmVyc2F0aW9uLiIsCiAgICAgIH0pOwogICAgICB0aGlzLnVzZXJfY2hhbm5lbHNbdGhpcy5jdXJyZW50X2NoYW5uZWxdLmxlYXZlKCk7CiAgICAgIHRoaXMudXNlcl9saXN0ID0gdGhpcy51c2VyX2xpc3QuZmlsdGVyKCh1c2VyKSA9PiB7CiAgICAgICAgcmV0dXJuIHVzZXIudXNlcm5hbWUgIT0gdXNlcl9uYW1lOwogICAgICB9KTsKICAgICAgdGhpcy5jdXJyZW50X3VzZXIgPSB0aGlzLmZpcnN0X25hbWU7CiAgICB9LAogICAgdXBkYXRlX3Njcm9sbGJhcigpIHsKICAgICAgc2V0VGltZW91dCgoKSA9PiB7CiAgICAgICAgdGhpcy5pc190eXBpbmdfaW5kaWNhdG9yX29uID0gZmFsc2U7CiAgICAgIH0sIDE1MDApOwogICAgICBzZXRUaW1lb3V0KCgpID0+IHsKICAgICAgICBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCIuY2hhdC1ib2R5Iikuc2Nyb2xsVG9wID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcigKICAgICAgICAgICIuY2hhdC1ib2R5IgogICAgICAgICkuc2Nyb2xsSGVpZ2h0OwogICAgICB9LCAyMDApOwogICAgfSwKICAgIHVzZXJfbGlzdF9jbGFzcyhjaGFubmVsbmFtZSkgewogICAgICBpZiAoY2hhbm5lbG5hbWUgPT0gdGhpcy5jdXJyZW50X2NoYW5uZWwpIHsKICAgICAgICByZXR1cm4gIm5hdi1saW5rIGFjdGl2ZSI7CiAgICAgIH0gZWxzZSB7CiAgICAgICAgcmV0dXJuICJuYXYtbGluayBpbmFjdGl2ZSI7CiAgICAgIH0KICAgIH0sCiAgICBzZWxlY3RfdXNlcih1c2VyKSB7CiAgICAgIHRoaXMuY3VycmVudF91c2VyID0gdXNlci51c2VybmFtZTsKICAgICAgdGhpcy5jdXJyZW50X2NoYW5uZWwgPSB1c2VyLmNoYW5uZWxfbmFtZTsKICAgICAgdGhpcy51cGRhdGVfc2Nyb2xsYmFyKCk7CiAgICB9LAogIH0sCn07Cg=="},{"version":3,"sources":["LiveChat.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAofile":"LiveChat.vue","sourceRoot":"src/portal/Chatbot/Dashboard/Customer Support","sourcesContent":["<template>\n  <div class=\"dash-cont\">\n    <div class=\"container-fluid\">\n      <div class=\"card dash-card\">\n        <div class=\"card-body\" style=\"padding: 5px 15px 20px\">\n          <div class=\"row\" style=\"border-bottom: 1px solid #dbe2e8\">\n            <div class=\"col-md-3\" style=\"border-right: 1px solid #dbe2e8\">\n              <div style=\"display: flex\">\n                <span\n                  class=\"user-img text-center\"\n                  style=\"font-size: x-large; margin-bottom: 5px\"\n                  >{{ first_name[0] }}{{ last_name[0] }}</span\n                >\n                <h4 style=\"margin-top: 3%; margin-left: 5%\">\n                  {{ first_name }}&nbsp;{{ last_name }}\n                </h4>\n              </div>\n            </div>\n            <div class=\"col-md-9\">\n              <div class=\"card-act d-flex flex-wrap\" style=\"margin-top: 1%\">\n                <h4 class=\"mb-sm-0\">{{ current_user }}</h4>\n                <a\n                  href=\"#\"\n                  class=\"red-btn ml-auto\"\n                  v-show=\"user_list.length\"\n                  @click=\"disconnect_support_chat\"\n                  >Stop Chat</a\n                >\n              </div>\n            </div>\n          </div>\n          <div class=\"row\">\n            <div class=\"col-md-3\" style=\"border-right: 1px solid #dbe2e8\">\n              <nav class=\"navbar navbar-expand-md\">\n                <div\n                  class=\"collapse navbar-collapse\"\n                  id=\"navbarSupportedContent\"\n                >\n                  <ul class=\"navbar-nav flex-column\" style=\"width: 100%\">\n                    <li\n                      class=\"nav-item\"\n                      v-for=\"(user, index) in user_list\"\n                      :key=\"index\"\n                    >\n                      <a\n                        :class=\"user_list_class(user.channel_name)\"\n                        href=\"#\"\n                        role=\"button\"\n                        @click=\"select_user(user)\"\n                      >\n                        <template v-if=\"user.username == ''\">{{\n                          user.channel_name\n                        }}</template>\n                        <template v-else-if=\"user.username != ''\">{{\n                          user.username\n                        }}</template>\n                      </a>\n                    </li>\n                  </ul>\n                </div>\n              </nav>\n            </div>\n            <div class=\"col-md-9\" id=\"chat\">\n              <div class=\"chat-master\">\n                <div class=\"chat-body\" style=\"height: 65vh; overflow-y: auto\">\n                  <div\n                    class=\"chat-inner\"\n                    v-for=\"(chat, item) in chat_list\"\n                    :key=\"item\"\n                    v-show=\"chat.current_channel == current_channel\"\n                  >\n                    <div class=\"chat-row sender\" v-if=\"chat.sent\">\n                      <div class=\"chat\" v-html=\"chat.text\"></div>\n                      <div class=\"chat-his justify-content-between\">\n                        <span class=\"time\" style=\"color: #000\">{{\n                          chat.time\n                        }}</span>\n                        <span class=\"del-note delivered\">Delivered</span>\n                      </div>\n                    </div>\n                    <div class=\"chat-row receiver\" v-if=\"chat.received\">\n                      <div class=\"chat\" v-html=\"chat.text\"></div>\n                      <div class=\"chat-his justify-content-between\">\n                        <span class=\"time\" style=\"color: #000\">{{\n                          chat.time\n                        }}</span>\n                        <span class=\"del-note delivered\">Delivered</span>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"chat-footer\" style=\"margin-bottom: 20px\">\n                  <div\n                    class=\"typing-indicator\"\n                    style=\"margin-left: 10px\"\n                    v-show=\"is_typing_indicator_on\"\n                  >\n                    <p style=\"font-size: 13px; font-weight: 300\">\n                      {{ msg_sender }} is typing\n                    </p>\n                    <span></span>\n                    <span></span>\n                    <span></span>\n                  </div>\n                </div>\n                <div\n                  class=\"chat-footer\"\n                  style=\"\n                    border-top: solid 1px #dbe2e8;\n                    border-radius: 0 0 0 0;\n                    overflow: hidden;\n                  \"\n                >\n                  <div class=\"chat-txt\">\n                    <div class=\"input-group mb-0\">\n                      <input\n                        type=\"text\"\n                        class=\"form-control\"\n                        placeholder=\"Type your message here ...\"\n                        v-model=\"to_send\"\n                        @keypress.enter=\"send_message\"\n                      />\n                      <div class=\"input-group-append\">\n                        <button class=\"btn\" type=\"button\" @click=\"send_message\">\n                          <svg\n                            xmlns=\"http://www.w3.org/2000/svg\"\n                            style=\"fill: #8a8a8a63\"\n                            width=\"40\"\n                            height=\"25\"\n                            viewBox=\"0 0 24 24\"\n                          >\n                            <path d=\"M2.01 21L23 12 2.01 3 2 10l15 2-15 2z\" />\n                            <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n                          </svg>\n                        </button>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n<script>\nimport axios from \"axios\";\nimport swal from \"sweetalert2\";\nimport { Socket } from \"phoenix-socket\";\nimport { setInterval } from \"timers\";\nimport debounce from \"vue-debounce/dist/debounce.min.js\";\nimport { generate_time } from \"@/portal/mixins\";\n\nexport default {\n  data() {\n    return {\n      user_list: [],\n      current_user: \"First\",\n      current_channel: \"\",\n      first_name: this.$session.has(\"UserFirstName\")\n        ? this.$session.get(\"UserFirstName\")\n        : this.$session.get(\"UserInformation\").first_name,\n      last_name: this.$session.has(\"UserLastName\")\n        ? this.$session.get(\"UserLastName\")\n        : this.$session.get(\"UserInformation\").last_name,\n      chat_list: [],\n      to_send: \"\",\n      ch: null,\n      message: null,\n      user_channels: {},\n      socket: null,\n      msg_sender: \"\",\n      delay: 10000,\n      is_typing_indicator_on: false,\n    };\n  },\n  watch: {\n    to_send(newVal) {\n      this.button_fill();\n    },\n  },\n  mixins: [generate_time],\n  mounted() {\n    this.current_user = this.first_name;\n    this.socket = new Socket(process.env.VUE_APP_LIVE_CHAT_WEBSOCKET_ENDPOINT, {\n      params: {\n        username: this.$session.get(\"UserInformation\").email,\n        token: this.$session.get(\"UserInformation\").tokens,\n        role: this.$session.get(\"UserInformation\").role,\n      },\n    });\n    this.socket.connect();\n    this.ch = this.socket.channel(\n      \"companies:\" + this.$session.get(\"UserInformation\").company_name\n    );\n    this.ch.join();\n    this.ch.on(\"customer_needs_support_agent\", (res) => {\n      this.user_list.push({\n        channel_name: res.customer_chat_group,\n        username: \"\",\n      });\n      this.current_user = res.customer_chat_group;\n      this.current_channel = res.customer_chat_group;\n      this.user_channels[res.customer_chat_group] = this.socket.channel(\n        res.customer_chat_group\n      );\n      this.message = this.socket.channel(res.customer_chat_group);\n      this.user_channels[res.customer_chat_group].on(\n        \"started_typing\",\n        (typing_response) => {\n          if (res.customer_chat_group == this.current_channel) {\n            if (typing_response.sender != \"support_agent\") {\n              var name = this.user_list.filter((user) => {\n                return user.channel_name == res.customer_chat_group;\n              });\n              if (name[0].username == \"\") {\n                this.msg_sender = typing_response.sender;\n              } else {\n                this.msg_sender = name[0].username;\n              }\n            }\n            this.is_typing_indicator_on = true;\n          }\n        }\n      );\n      this.user_channels[res.customer_chat_group].on(\"stopped_typing\", () => {\n        this.is_typing_indicator_on = false;\n      });\n      this.user_channels[res.customer_chat_group].on(\n        \"new_chat_message\",\n        (response) => {\n          if (response.sender == \"customer\") {\n            this.chat_list.push({\n              received: true,\n              text: response.message,\n              current_channel: res.customer_chat_group,\n              time: this.generate_time(),\n            });\n            this.update_scrollbar();\n            this.no_response(this);\n          }\n        }\n      );\n      this.user_channels[res.customer_chat_group].on(\"new_name\", (resp) => {\n        for (let i = 0, n = this.user_list.length; i < n; i++) {\n          if (this.user_list[i].channel_name == res.customer_chat_group) {\n            this.user_list[i].username = resp.name;\n          }\n        }\n        this.current_user = resp.name;\n        this.no_response(this);\n      });\n      this.user_channels[res.customer_chat_group].on(\"stopped_chat\", (resp) => {\n        toastr.info(resp.name + \" \" + resp.message);\n        this.user_list = this.user_list.filter((user) => {\n          return user.username != resp.name;\n        });\n        this.chat_list = this.chat_list.filter((chat) => {\n          return chat.current_channel != this.current_channel;\n        });\n        this.current_user = this.first_name;\n      });\n      this.user_channels[res.customer_chat_group].join();\n    });\n  },\n  beforeDestroy(){ \n    this.ch.leave();\n    //disconnect all customer when SA navigates to other page\n      for (const property in this.user_channels) {\n      this.user_channels[property].push(\"stopped_chat\", {\n          name: \"Support Agent\",\n          message: \"has ended this conversation.\",\n          });\n            this.user_channels[property].leave();\n      }\n    this.socket.disconnect(); \n  },\n  methods: {\n    button_fill() {\n      document.querySelector(\"svg\").style.fill = \"#273679\";\n      if (this.to_send == \"\") {\n        document.querySelector(\"svg\").style.fill = \"#8a8a8a63\";\n      } else if (this.to_send != \"\") {\n        this.user_channels[this.current_channel].push(\"started_typing\");\n      }\n      this.stop_typing(this);\n    },\n    stop_typing: debounce(function (vm) {\n      vm.user_channels[vm.current_channel].push(\"stopped_typing\");\n    }, 5000),\n    no_response: debounce(function (vm) {\n      vm.user_channels[vm.current_channel].push(\"no_response\", {\n        sender: \"sender\",\n      });\n    }, 10000),\n    send_message() {\n      if (this.to_send != \"\" && this.user_list.length > 0) {\n        this.chat_list.push({\n          sent: true,\n          text: this.to_send,\n          time: this.generate_time(),\n          current_channel: this.current_channel,\n        });\n        this.user_channels[this.current_channel].push(\"new_chat_message\", {\n          message: this.to_send,\n        });\n        this.to_send = \"\";\n        this.no_response(this);\n        this.update_scrollbar();\n      }\n    },\n    disconnect_support_chat() {\n      var user_name = this.current_user;\n      this.user_channels[this.current_channel].push(\"stopped_chat\", {\n        name: \"Support Agent\",\n        message: \"has ended this conversation.\",\n      });\n      this.user_channels[this.current_channel].leave();\n      this.user_list = this.user_list.filter((user) => {\n        return user.username != user_name;\n      });\n      this.current_user = this.first_name;\n    },\n    update_scrollbar() {\n      setTimeout(() => {\n        this.is_typing_indicator_on = false;\n      }, 1500);\n      setTimeout(() => {\n        document.querySelector(\".chat-body\").scrollTop = document.querySelector(\n          \".chat-body\"\n        ).scrollHeight;\n      }, 200);\n    },\n    user_list_class(channelname) {\n      if (channelname == this.current_channel) {\n        return \"nav-link active\";\n      } else {\n        return \"nav-link inactive\";\n      }\n    },\n    select_user(user) {\n      this.current_user = user.username;\n      this.current_channel = user.channel_name;\n      this.update_scrollbar();\n    },\n  },\n};\n</script>\n<style scoped>\n.nav-link.inactive {\n  text-align: center;\n  border: 1px solid #fff;\n}\n.nav-link.active {\n  border: 1px solid #293978;\n  text-align: center;\n}\n.nav-item :hover {\n  border: 1px solid #293978;\n}\n.user-img {\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  border: solid 1px #293978;\n  display: inline-block;\n  overflow: hidden;\n  vertical-align: middle;\n}\n.chat {\n  transform: scale(0);\n  transform-origin: 0 0;\n  animation: bounce 500ms linear both;\n  border-radius: 5px;\n  padding: 5px 8px;\n  width: fit-content;\n}\n.receiver .chat {\n  color: #000 !important;\n  text-align: left;\n  /* margin-top: 3%; */\n}\n.sender {\n  color: #fff;\n  margin-left: 50%;\n  text-align: right;\n  margin-top: 3%;\n}\n.sender .chat {\n  background: #293978;\n}\n.chat-row:not(:first-child) {\n  margin: 10px 0;\n}\n#chat,\n.chat-txt input {\n  background-image: url(/img/sdk-background.png);\n}\ndiv::-webkit-scrollbar {\n  max-height: 20px;\n  width: 6px;\n  border-radius: 10px;\n}\n\n/* Track */\ndiv::-webkit-scrollbar-track {\n  background: #f1f1f1;\n  border-radius: 10px;\n}\n\n/* Handle */\ndiv::-webkit-scrollbar-thumb {\n  background: #7d7d7d;\n  border-radius: 10px;\n}\n\n/* Handle on hover */\ndiv::-webkit-scrollbar-thumb:hover {\n  background: #555;\n  border-radius: 10px;\n}\n</style>\n"]}]}