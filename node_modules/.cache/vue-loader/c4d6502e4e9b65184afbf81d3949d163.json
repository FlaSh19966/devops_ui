{"remainingRequest":"/home/vimalesh/CENSE/chatbot-portal/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/vimalesh/CENSE/chatbot-portal/src/portal/Chatbot/Dashboard/WhatsappChat.vue?vue&type=template&id=4c28409f&scoped=true&","dependencies":[{"path":"/home/vimalesh/CENSE/chatbot-portal/src/portal/Chatbot/Dashboard/WhatsappChat.vue","mtime":1655466542532},{"path":"/home/vimalesh/CENSE/chatbot-portal/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vimalesh/CENSE/chatbot-portal/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/vimalesh/CENSE/chatbot-portal/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vimalesh/CENSE/chatbot-portal/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgPGRpdiBjbGFzcz0ibG9nLXdyYXAgZC1mbGV4IGFsaWduLWl0ZW1zLWNlbnRlciI+CiAgICA8ZGl2IGNsYXNzPSJzcGlubmVyIiB2LXNob3c9InNob3dfc3Bpbm5lciIgaWQ9InNwaW5uZXIiPjwvZGl2PgogICAgPGRpdiBjbGFzcz0iY29udGFpbmVyIj4KICAgICAgPCEtLSA8ZGl2IGNsYXNzPSJjb250YWluZXItZmx1aWQgZnJvbnQtY29udGFpbmVyIHAtMCBtLTAiPgogICAgICAgIDxkaXYgY2xhc3M9ImJhY2stdG9wIj48L2Rpdj4KICAgICAgICA8ZGl2IGNsYXNzPSJiYWNrLW1haW4iPjwvZGl2PgogICAgICA8L2Rpdj4gLS0+CiAgICAgIDxkaXYgY2xhc3M9ImNvbnRhaW5lci1mbHVpZCIgc3R5bGU9InBhZGRpbmc6IDUwcHg7Ij4KICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtc20tMTIgZC1mbGV4IHAtMCI+CiAgICAgICAgICA8YnV0dG9uCiAgICAgICAgICAgIHR5cGU9ImJ1dHRvbiIKICAgICAgICAgICAgY2xhc3M9ImNsb3NlIgogICAgICAgICAgICBhcmlhLWxhYmVsPSJDbG9zZSIKICAgICAgICAgICAgc3R5bGU9InBhZGRpbmctYm90dG9tOiAxMHB4OyIKICAgICAgICAgICAgQGNsaWNrPSIkcm91dGVyLnB1c2goJy9ib3QvZGFzaGJvYXJkJykiCiAgICAgICAgICA+CiAgICAgICAgICAgIDxzdmcgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB3aWR0aD0iMjQiIGhlaWdodD0iMjQiIGZpbGw9ImN1cnJlbnRDb2xvciIgY2xhc3M9ImJpIGJpLWJveC1hcnJvdy1pbi1sZWZ0IiB2aWV3Qm94PSIwIDAgMTYgMTYiPgogICAgICAgICAgICAgIDxwYXRoIGZpbGwtcnVsZT0iZXZlbm9kZCIgZD0iTTEwIDMuNWEuNS41IDAgMCAwLS41LS41aC04YS41LjUgMCAwIDAtLjUuNXY5YS41LjUgMCAwIDAgLjUuNWg4YS41LjUgMCAwIDAgLjUtLjV2LTJhLjUuNSAwIDAgMSAxIDB2MkExLjUgMS41IDAgMCAxIDkuNSAxNGgtOEExLjUgMS41IDAgMCAxIDAgMTIuNXYtOUExLjUgMS41IDAgMCAxIDEuNSAyaDhBMS41IDEuNSAwIDAgMSAxMSAzLjV2MmEuNS41IDAgMCAxLTEgMHYtMnoiLz4KICAgICAgICAgICAgICA8cGF0aCBmaWxsLXJ1bGU9ImV2ZW5vZGQiIGQ9Ik00LjE0NiA4LjM1NGEuNS41IDAgMCAxIDAtLjcwOGwzLTNhLjUuNSAwIDEgMSAuNzA4LjcwOEw1LjcwNyA3LjVIMTQuNWEuNS41IDAgMCAxIDAgMUg1LjcwN2wyLjE0NyAyLjE0NmEuNS41IDAgMCAxLS43MDguNzA4bC0zLTN6Ii8+CiAgICAgICAgICAgIDwvc3ZnPgogICAgICAgICAgICA8c3Bhbj4gR28gYmFjazwvc3Bhbj4KICAgICAgICAgIDwvYnV0dG9uPgogICAgICAgIDwvZGl2PgogICAgICAgIDxkaXYgY2xhc3M9ImNvbC1zbS0xMiByb3ciPgogICAgICAgICAgPGRpdiBjbGFzcz0iY29sLXNtLTQgY2hhdC10b3AgcC0wIiB2LXNob3c9IiFpc19wcm9maWxlX3NldHVwIiBzdHlsZT0iaGVpZ2h0OiA2MDBweDsiPgogICAgICAgICAgPGRpdiBjbGFzcz0iZC1mbGV4IHAtMiIKICAgICAgICAgICAgc3R5bGU9ImFsaWduLWl0ZW1zOiBjZW50ZXI7Ij4KICAgICAgICAgICAgPCEtLSB0b3AtYmFyIC0tPgogICAgICAgICAgICA8ZGl2PgogICAgICAgICAgICAgIDxpbWcgdi1pZj0id2hhdHNhcHBfcHJvZmlsZS5waG90byIgCiAgICAgICAgICAgICAgICA6c3JjPXdoYXRzYXBwX3Byb2ZpbGUucGhvdG8KICAgICAgICAgICAgICAgIGNsYXNzPSJyb3VuZGVkLWNpcmNsZSIgCiAgICAgICAgICAgICAgICBAY2xpY2s9InNob3dfcHJvZmlsZV9zZXR1cCIKICAgICAgICAgICAgICAgIGhlaWdodD0iNDBweCIgd2lkdGg9IjQwcHgiCiAgICAgICAgICAgICAgICBzdHlsZT0iY3Vyc29yOiBwb2ludGVyOyI+CiAgICAgICAgICAgICAgPGltZyB2LWVsc2Ugc3JjPSIvaW1nL3doYXRzYXBwLWRwLnBuZyIgCiAgICAgICAgICAgICAgICBjbGFzcz0icm91bmRlZC1jaXJjbGUiIAogICAgICAgICAgICAgICAgQGNsaWNrPSJzaG93X3Byb2ZpbGVfc2V0dXAiCiAgICAgICAgICAgICAgICBoZWlnaHQ9IjQwcHgiIHdpZHRoPSI0MHB4IgogICAgICAgICAgICAgICAgc3R5bGU9ImN1cnNvcjogcG9pbnRlcjsiPgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPHNwYW4gY2xhc3M9Im1sLWF1dG8gbXQtMSBkLWZsZXgiPgogICAgICAgICAgICAgIDxzdmcgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB3aWR0aD0iMTgiIGhlaWdodD0iMTgiIGZpbGw9ImN1cnJlbnRDb2xvciIKICAgICAgICAgICAgICAgIGNsYXNzPSJiaSBiaS1jaGF0LWxlZnQtdGV4dCBtci00IiB2aWV3Qm94PSIwIDAgMTYgMTYiIEBjbGljaz0ic2hvd19hbGxfY29udGFjdHMiIHN0eWxlPSJjdXJzb3I6cG9pbnRlcjsiPgogICAgICAgICAgICAgICAgPHBhdGgKICAgICAgICAgICAgICAgICAgZD0iTTE0IDFhMSAxIDAgMCAxIDEgMXY4YTEgMSAwIDAgMS0xIDFINC40MTRBMiAyIDAgMCAwIDMgMTEuNTg2bC0yIDJWMmExIDEgMCAwIDEgMS0xaDEyek0yIDBhMiAyIDAgMCAwLTIgMnYxMi43OTNhLjUuNSAwIDAgMCAuODU0LjM1M2wyLjg1My0yLjg1M0ExIDEgMCAwIDEgNC40MTQgMTJIMTRhMiAyIDAgMCAwIDItMlYyYTIgMiAwIDAgMC0yLTJIMnoiIC8+CiAgICAgICAgICAgICAgICA8cGF0aAogICAgICAgICAgICAgICAgICBkPSJNMyAzLjVhLjUuNSAwIDAgMSAuNS0uNWg5YS41LjUgMCAwIDEgMCAxaC05YS41LjUgMCAwIDEtLjUtLjV6TTMgNmEuNS41IDAgMCAxIC41LS41aDlhLjUuNSAwIDAgMSAwIDFoLTlBLjUuNSAwIDAgMSAzIDZ6bTAgMi41YS41LjUgMCAwIDEgLjUtLjVoNWEuNS41IDAgMCAxIDAgMWgtNWEuNS41IDAgMCAxLS41LS41eiIgLz4KICAgICAgICAgICAgICA8L3N2Zz4KICAgICAgICAgICAgICA8c3ZnIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgd2lkdGg9IjE2IiBoZWlnaHQ9IjE4IiBmaWxsPSJjdXJyZW50Q29sb3IiCiAgICAgICAgICAgICAgICBjbGFzcz0iYmkgYmktdGhyZWUtZG90cy12ZXJ0aWNhbCIgdmlld0JveD0iMCAwIDE2IDE2Ij4KICAgICAgICAgICAgICAgIDxwYXRoCiAgICAgICAgICAgICAgICAgIGQ9Ik05LjUgMTNhMS41IDEuNSAwIDEgMS0zIDAgMS41IDEuNSAwIDAgMSAzIDB6bTAtNWExLjUgMS41IDAgMSAxLTMgMCAxLjUgMS41IDAgMCAxIDMgMHptMC01YTEuNSAxLjUgMCAxIDEtMyAwIDEuNSAxLjUgMCAwIDEgMyAweiIgLz4KICAgICAgICAgICAgICA8L3N2Zz4KICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8ZGl2IGNsYXNzPSJjb250YWN0cyBwci0wIj4KICAgICAgICAgICAgPCEtLSBzZWFjaCB0YWIgLS0+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InNlYXJjaC1jaGF0Ij4KICAgICAgICAgICAgICA8ZGl2PgogICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9InRleHQiIHBsYWNlaG9sZGVyPSJTZWFyY2ggb3Igc3RhcnQgbmV3IGNoYXQiIHYtbW9kZWw9InNlYXJjaF92YWx1ZSI+CiAgICAgICAgICAgICAgICA8c3ZnIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgd2lkdGg9IjEyIiBoZWlnaHQ9IjEyIiBmaWxsPSJjdXJyZW50Q29sb3IiIGNsYXNzPSJiaSBiaS1zZWFyY2giCiAgICAgICAgICAgICAgICAgIHZpZXdCb3g9IjAgMCAxNiAxNiI+CiAgICAgICAgICAgICAgICAgIDxwYXRoCiAgICAgICAgICAgICAgICAgICAgZD0iTTExLjc0MiAxMC4zNDRhNi41IDYuNSAwIDEgMC0xLjM5NyAxLjM5OGgtLjAwMWMuMDMuMDQuMDYyLjA3OC4wOTguMTE1bDMuODUgMy44NWExIDEgMCAwIDAgMS40MTUtMS40MTRsLTMuODUtMy44NWExLjAwNyAxLjAwNyAwIDAgMC0uMTE1LS4xek0xMiA2LjVhNS41IDUuNSAwIDEgMS0xMSAwIDUuNSA1LjUgMCAwIDEgMTEgMHoiIC8+CiAgICAgICAgICAgICAgICA8L3N2Zz4KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbnRhY3QtdGFibGUtc2Nyb2xsIj4KICAgICAgICAgICAgICA8dGFibGUgY2xhc3M9InRhYmxlIHRhYmxlLWhvdmVyIiBzdHlsZT0ibWFyZ2luLWJvdHRvbTogMHJlbSAhaW1wb3J0YW50Ij4KICAgICAgICAgICAgICAgIDx0Ym9keSB2LWlmPSJjb250YWN0X2xpc3QubGVuZ3RoID4gMCI+CiAgICAgICAgICAgICAgICAgIDx0ciB2LWZvcj0iKGNvbnRhY3QsIGluZGV4KSBpbiBjb250YWN0X2xpc3QiIDprZXk9ImluZGV4IgogICAgICAgICAgICAgICAgICAgIEBjbGljaz0iZ2V0X2hpc3RvcnlfZGF0YShjb250YWN0LndoYXRzYXBwX3Bob25lX251bWJlciwgY29udGFjdC5wcm9maWxlX25hbWUsIGluZGV4KSIKICAgICAgICAgICAgICAgICAgICBzdHlsZT0iY3Vyc29yOnBvaW50ZXIiIDpzdHlsZT0iaXNfYWN0aXZlX2NoYXQoaW5kZXgpIj4KICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9IiIgc3R5bGU9IndpZHRoOiAyMiU7Ij48aW1nIHNyYz0iL2ltZy93aGF0c2FwcC1kcC5wbmciIGFsdD0iIgogICAgICAgICAgICAgICAgICAgICAgICBjbGFzcz0idXNlci1wcm9maWxlLXBpY3R1cmUgcm91bmRlZC1jaXJjbGUiPjwvdGQ+CiAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzPSJwbC0wIHBiLTEgcHItMyIgc3R5bGU9ImZvbnQtc2l6ZTogMTNweDsiPgogICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0idXNlci1uYW1lLWRhdGUgZC1mbGV4Ij4KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0idXNlci1uYW1lIj4KICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiB2LWlmPSJjb250YWN0LnByb2ZpbGVfbmFtZSI+e3sgY29udGFjdC5wcm9maWxlX25hbWUgfX08L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gdi1lbHNlPnt7IGNvbnRhY3Qud2hhdHNhcHBfcGhvbmVfbnVtYmVyIH19PC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZGF0ZSIgdi1pZj0iY29udGFjdC5sYXN0X2JvdF9yZXNwb25zZSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4+e3sgZm9ybWF0Q29udGFjdExhc3RNZXNzYWdlRGF0ZShjb250YWN0Lmxhc3RfYm90X3Jlc3BvbnNlLmRhdGUsIGNvbnRhY3QubGFzdF9ib3RfcmVzcG9uc2UudGltZSkgfX08L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICA8ZGl2PgogICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiB2LWlmPSJjb250YWN0Lmxhc3RfYm90X3Jlc3BvbnNlIiBjbGFzcz0idXNlci1tc2ctbGF0ZXN0LWNvbnYiPjxzcGFuCiAgICAgICAgICAgICAgICAgICAgICAgICAgICA6dGl0bGU9ImNvbnRhY3QubGFzdF9ib3RfcmVzcG9uc2UudGV4dCI+e3sgbGF0ZXN0X2JvdF90ZXh0KGNvbnRhY3QubGFzdF9ib3RfcmVzcG9uc2UudGV4dCkKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH19PC9zcGFuPjwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwhLS0gPHNwYW4gdi1pZj0iY29udGFjdC5pc19uZXdfbm90aWZpY2F0aW9uIHx8IGZhbHNlIiBzdHlsZT0iZmxvYXQ6IHJpZ2h0Ij57e2NvbnRhY3QubmV3X21lc3NhZ2VfY291bnQgfHwgMX19PC9zcGFuPiAtLT4KICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDwvdGQ+CiAgICAgICAgICAgICAgICAgIDwvdHI+CiAgICAgICAgICAgICAgICA8L3Rib2R5PgogICAgICAgICAgICAgICAgPHRib2R5IHYtZWxzZT4KICAgICAgICAgICAgICAgICAgPHRyPgogICAgICAgICAgICAgICAgICAgIDx0ZCBzdHlsZT0icG9zaXRpb246IHJlbGF0aXZlOyBwYWRkaW5nOjQ0cHg7IHRleHQtYWxpZ246IGNlbnRlcjsiPgogICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImNvbnRhY3QtbGlzdC1lbXB0eSI+Tm8gY2hhdHMsY29udGFjdHMgb3IgbWVzc2FnZXMgZm91bmQ8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgPC90ZD4KICAgICAgICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgICAgIDwvdGJvZHk+CiAgICAgICAgICAgICAgPC90YWJsZT4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPGRpdiBjbGFzcz0iY29sLXNtLTQgcC0wIiB2LXNob3c9ImlzX3Byb2ZpbGVfc2V0dXAgJiYgIWlzX2NvbnRhY3RfbGlzdCIgc3R5bGU9ImhlaWdodDogNjAwcHg7Ij4KICAgICAgICAgICAgPCEtLSBwcm9maWxlIC0tPgogICAgICAgICAgICA8ZGl2CiAgICAgICAgICAgICAgc3R5bGU9ImJvcmRlci1yaWdodDogMXB4IHNvbGlkIHJnYmEoMCwwLDAsMC4yKTthbGlnbi1pdGVtczogY2VudGVyOyBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47IGhlaWdodDogMTAwJTsiPgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtdG9wIGQtZmxleCI+CiAgICAgICAgICAgICAgICA8c3BhbiBzdHlsZT0ibWFyZ2luOjAgMCAxMHB4IDE3cHg7Y3Vyc29yOiBwb2ludGVyOyIgQGNsaWNrPSJzaG93X3Byb2ZpbGVfc2V0dXAiPjxzdmcKICAgICAgICAgICAgICAgICAgICB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIzOCIgaGVpZ2h0PSIyMiIgZmlsbD0iY3VycmVudENvbG9yIgogICAgICAgICAgICAgICAgICAgIGNsYXNzPSJiaSBiaS1hcnJvdy1sZWZ0IGxlZnQtYXJyb3ciIHZpZXdCb3g9IjAgMCAxNiAxNiI+CiAgICAgICAgICAgICAgICAgICAgPHBhdGggZmlsbC1ydWxlPSJldmVub2RkIgogICAgICAgICAgICAgICAgICAgICAgZD0iTTE1IDhhLjUuNSAwIDAgMC0uNS0uNUgyLjcwN2wzLjE0Ny0zLjE0NmEuNS41IDAgMSAwLS43MDgtLjcwOGwtNCA0YS41LjUgMCAwIDAgMCAuNzA4bDQgNGEuNS41IDAgMCAwIC43MDgtLjcwOEwyLjcwNyA4LjVIMTQuNUEuNS41IDAgMCAwIDE1IDh6IiAvPgogICAgICAgICAgICAgICAgICA8L3N2Zz4KICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgIDxzcGFuIHN0eWxlPSJvcGFjaXR5OjI7Zm9udC1zaXplOjEuMXJlbTttYXJnaW46MCAwIDhweCAxN3B4OyI+UHJvZmlsZTwvc3Bhbj4KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICA8IS0tIHByb2ZpbGUgcGljIC0tPgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtYm90dG9tIj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtcGljICI+CiAgICAgICAgICAgICAgICAgIDxkaXYgc3R5bGU9IndpZHRoOiAxMDAlO2hlaWdodDogMTAwJTtwb3NpdGlvbjogcmVsYXRpdmU7Ij4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJzZWNvbmQtY2lyY2xlIiB2LWlmPSJ3aGF0c2FwcF9wcm9maWxlLnBob3RvID09PSAnJyI+CiAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0iZmlsZSIgaWQ9ImltZ3VwbG9hZCIgQGNoYW5nZT0idXBkYXRlX3Byb2ZpbGVfaW1hZ2UiLz4gCiAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJpbWctY2lyY2xlLWdyeSI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJpbWctY2lyY2xlLXRpdGxlLWNhbSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4+QUREIFBST0ZJTEU8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4+UEhPVE88L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InNlY29uZC1jaXJjbGUtaW1hZ2UiIHYtZWxzZT4KICAgICAgICAgICAgICAgICAgICAgIDxkaXYgc3R5bGU9IndpZHRoOjMwMHB4Ij4KICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9ImZpbGUiIGlkPSJpbWd1cGxvYWQiIEBjaGFuZ2U9InVwZGF0ZV9wcm9maWxlX2ltYWdlIi8+CiAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgIDxpbWcgOnNyYz13aGF0c2FwcF9wcm9maWxlLnBob3RvICBhbHQ9IiI+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+ICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iaW1nLWNyaWNsZSI+CiAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InJlbW92ZS1wcm9maWxlLXBpYyIgdi1pZj0id2hhdHNhcHBfcHJvZmlsZS5waG90byAhPSAnJyI+CiAgICAgICAgICAgICAgICAgICAgPHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHN0eWxlPSJjdXJzb3I6IHBvaW50ZXI7IiBAY2xpY2s9InJlbW92ZV9wcm9maWxlX2ltYWdlKCkiIHdpZHRoPSIxNiIgaGVpZ2h0PSIxNiIgZmlsbD0iY3VycmVudENvbG9yIiBjbGFzcz0iYmkgYmktdHJhc2giIHZpZXdCb3g9IjAgMCAxNiAxNiI+CiAgICAgICAgICAgICAgICAgICAgICA8cGF0aCBkPSJNNS41IDUuNUEuNS41IDAgMCAxIDYgNnY2YS41LjUgMCAwIDEtMSAwVjZhLjUuNSAwIDAgMSAuNS0uNXptMi41IDBhLjUuNSAwIDAgMSAuNS41djZhLjUuNSAwIDAgMS0xIDBWNmEuNS41IDAgMCAxIC41LS41em0zIC41YS41LjUgMCAwIDAtMSAwdjZhLjUuNSAwIDAgMCAxIDBWNnoiLz4KICAgICAgICAgICAgICAgICAgICAgIDxwYXRoIGZpbGwtcnVsZT0iZXZlbm9kZCIgZD0iTTE0LjUgM2ExIDEgMCAwIDEtMSAxSDEzdjlhMiAyIDAgMCAxLTIgMkg1YTIgMiAwIDAgMS0yLTJWNGgtLjVhMSAxIDAgMCAxLTEtMVYyYTEgMSAwIDAgMSAxLTFINmExIDEgMCAwIDEgMS0xaDJhMSAxIDAgMCAxIDEgMWgzLjVhMSAxIDAgMCAxIDEgMXYxek00LjExOCA0IDQgNC4wNTlWMTNhMSAxIDAgMCAwIDEgMWg2YTEgMSAwIDAgMCAxLTFWNC4wNTlMMTEuODgyIDRINC4xMTh6TTIuNSAzVjJoMTF2MWgtMTF6Ii8+CiAgICAgICAgICAgICAgICAgICAgPC9zdmc+CiAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJuby1pbWFnZSI+CiAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8IS0tIHByb2ZpbGUtZGV0YWlscyAtLT4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InByb2ZpbGUtZGV0YWlscyI+CiAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImFsbC1iYXNpYy1pbmZvIj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ1c2VyLWVtYWlsLWRldGFpbHMiPgogICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0idXNlci1lbWFpbCIgdi1pZj0iIWVkaXRfZW1haWwiPgogICAgICAgICAgICAgICAgICAgICAgICA8c3ZnIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgd2lkdGg9IjE2IiBoZWlnaHQ9IjE2IiBmaWxsPSJjdXJyZW50Q29sb3IiIGNsYXNzPSJiaSBiaS1lbnZlbG9wZS1maWxsIiB2aWV3Qm94PSIwIDAgMTYgMTYiPgogICAgICAgICAgICAgICAgICAgICAgICAgIDxwYXRoIGQ9Ik0uMDUgMy41NTVBMiAyIDAgMCAxIDIgMmgxMmEyIDIgMCAwIDEgMS45NSAxLjU1NUw4IDguNDE0LjA1IDMuNTU1Wk0wIDQuNjk3djcuMTA0bDUuODAzLTMuNTU4TDAgNC42OTdaTTYuNzYxIDguODNsLTYuNTcgNC4wMjdBMiAyIDAgMCAwIDIgMTRoMTJhMiAyIDAgMCAwIDEuODA4LTEuMTQ0bC02LjU3LTQuMDI3TDggOS41ODZsLTEuMjM5LS43NTdabTMuNDM2LS41ODZMMTYgMTEuODAxVjQuNjk3bC01LjgwMyAzLjU0NloiLz4KICAgICAgICAgICAgICAgICAgICAgICAgPC9zdmc+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIHYtaWY9IndoYXRzYXBwX3Byb2ZpbGUuZW1haWwgPT0gJyciPiBFbWFpbCBBZGRyZXNzPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiB2LWVsc2U+e3t3aGF0c2FwcF9wcm9maWxlLmVtYWlsfX08L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzdmcgdi1pZj0iIWVkaXRfYWRkcmVzcyAmJiAhZWRpdF9kZXNjcmlwdGlvbiAmJiAhZWRpdF93ZWJzaXRlIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIxNiIgaGVpZ2h0PSIxNiIgZmlsbD0iY3VycmVudENvbG9yIiBjbGFzcz0iYmkgYmktcGVuY2lsLWZpbGwiIHZpZXdCb3g9IjAgMCAxNiAxNiIgQGNsaWNrPSJlZGl0X2VtYWlsID0gdHJ1ZSIgIHN0eWxlPSJjdXJzb3I6IHBvaW50ZXI7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICA8cGF0aCBkPSJNMTIuODU0LjE0NmEuNS41IDAgMCAwLS43MDcgMEwxMC41IDEuNzkzIDE0LjIwNyA1LjVsMS42NDctMS42NDZhLjUuNSAwIDAgMCAwLS43MDhsLTMtM3ptLjY0NiA2LjA2MUw5Ljc5MyAyLjUgMy4yOTMgOUgzLjVhLjUuNSAwIDAgMSAuNS41di41aC41YS41LjUgMCAwIDEgLjUuNXYuNWguNWEuNS41IDAgMCAxIC41LjV2LjVoLjVhLjUuNSAwIDAgMSAuNS41di4yMDdsNi41LTYuNXptLTcuNDY4IDcuNDY4QS41LjUgMCAwIDEgNiAxMy41VjEzaC0uNWEuNS41IDAgMCAxLS41LS41VjEyaC0uNWEuNS41IDAgMCAxLS41LS41VjExaC0uNWEuNS41IDAgMCAxLS41LS41VjEwaC0uNWEuNDk5LjQ5OSAwIDAgMS0uMTc1LS4wMzJsLS4xNzkuMTc4YS41LjUgMCAwIDAtLjExLjE2OGwtMiA1YS41LjUgMCAwIDAgLjY1LjY1bDUtMmEuNS41IDAgMCAwIC4xNjgtLjExbC4xNzgtLjE3OHoiLz4KICAgICAgICAgICAgICAgICAgICAgICAgPC9zdmc+CiAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImVkaXQtdXNlci1lbWFpbCIgdi1pZj0iZWRpdF9lbWFpbCI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzdmcgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB3aWR0aD0iMTYiIGhlaWdodD0iMTYiIGZpbGw9ImN1cnJlbnRDb2xvciIgY2xhc3M9ImJpIGJpLWVudmVsb3BlLWZpbGwiIHZpZXdCb3g9IjAgMCAxNiAxNiI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgPHBhdGggZD0iTS4wNSAzLjU1NUEyIDIgMCAwIDEgMiAyaDEyYTIgMiAwIDAgMSAxLjk1IDEuNTU1TDggOC40MTQuMDUgMy41NTVaTTAgNC42OTd2Ny4xMDRsNS44MDMtMy41NThMMCA0LjY5N1pNNi43NjEgOC44M2wtNi41NyA0LjAyN0EyIDIgMCAwIDAgMiAxNGgxMmEyIDIgMCAwIDAgMS44MDgtMS4xNDRsLTYuNTctNC4wMjdMOCA5LjU4NmwtMS4yMzktLjc1N1ptMy40MzYtLjU4NkwxNiAxMS44MDFWNC42OTdsLTUuODAzIDMuNTQ2WiIvPgogICAgICAgICAgICAgICAgICAgICAgICA8L3N2Zz4gICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgIDx0ZXh0YXJlYSAKICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzcz0iaW5wdXQgbWwtMSIgCiAgICAgICAgICAgICAgICAgICAgICAgICAgaWQ9InVzZXJfZW1haWxfYWRkcmVzcyIgCiAgICAgICAgICAgICAgICAgICAgICAgICAgdi1tb2RlbD0id2hhdHNhcHBfcHJvZmlsZS5lbWFpbCIgCiAgICAgICAgICAgICAgICAgICAgICAgICAgcGxhY2Vob2xkZXI9IkVtYWlsIEFkZHJlc3MiCiAgICAgICAgICAgICAgICAgICAgICAgICAgQGtleWRvd249ImV4cGFuZF90ZXh0Ym94KCcjdXNlcl9lbWFpbF9hZGRyZXNzJykiCiAgICAgICAgICAgICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgICAgICAgICA8L3RleHRhcmVhPgogICAgICAgICAgICAgICAgICAgICAgICA8c3ZnIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgd2lkdGg9IjE2IiBoZWlnaHQ9IjIyIiBmaWxsPSJjdXJyZW50Q29sb3IiIGNsYXNzPSJiaSBiaS1jaGVjazIiIHZpZXdCb3g9IjAgMCAxNiAxNiIgIEBjbGljaz0idXBkYXRlX3Byb2ZpbGVfZGV0YWlscygpIiBzdHlsZT0iY3Vyc29yOiBwb2ludGVyO3RvcDoxdmggIWltcG9ydGFudDtyaWdodDowICFpbXBvcnRhbnQ7CiAgICAgICAgICAgICAgICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlOyIKICAgICAgICAgICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgICAgICAgICAgIDxwYXRoIGQ9Ik0xMy44NTQgMy42NDZhLjUuNSAwIDAgMSAwIC43MDhsLTcgN2EuNS41IDAgMCAxLS43MDggMGwtMy41LTMuNWEuNS41IDAgMSAxIC43MDgtLjcwOEw2LjUgMTAuMjkzbDYuNjQ2LTYuNjQ3YS41LjUgMCAwIDEgLjcwOCAweiIvPgogICAgICAgICAgICAgICAgICAgICAgICA8L3N2Zz4KICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InVzZXItYWRkcmVzcy1kZXRhaWxzIj4KICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InVzZXItYWRkcmVzcyIgdi1pZj0iIWVkaXRfYWRkcmVzcyI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzdmcgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB3aWR0aD0iMTYiIGhlaWdodD0iMTYiIGZpbGw9ImN1cnJlbnRDb2xvciIgY2xhc3M9ImJpIGJpLWdlby1hbHQiIHZpZXdCb3g9IjAgMCAxNiAxNiI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgPHBhdGggZD0iTTEyLjE2NiA4Ljk0Yy0uNTI0IDEuMDYyLTEuMjM0IDIuMTItMS45NiAzLjA3QTMxLjQ5MyAzMS40OTMgMCAwIDEgOCAxNC41OGEzMS40ODEgMzEuNDgxIDAgMCAxLTIuMjA2LTIuNTdjLS43MjYtLjk1LTEuNDM2LTIuMDA4LTEuOTYtMy4wN0MzLjMwNCA3Ljg2NyAzIDYuODYyIDMgNmE1IDUgMCAwIDEgMTAgMGMwIC44NjItLjMwNSAxLjg2Ny0uODM0IDIuOTR6TTggMTZzNi01LjY4NiA2LTEwQTYgNiAwIDAgMCAyIDZjMCA0LjMxNCA2IDEwIDYgMTB6Ii8+CiAgICAgICAgICAgICAgICAgICAgICAgICAgPHBhdGggZD0iTTggOGEyIDIgMCAxIDEgMC00IDIgMiAwIDAgMSAwIDR6bTAgMWEzIDMgMCAxIDAgMC02IDMgMyAwIDAgMCAwIDZ6Ii8+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvc3ZnPgogICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiB2LWlmPSJ3aGF0c2FwcF9wcm9maWxlLmFkZHJlc3MgPT0gJyciPkJ1c2luZXNzIEFkZHJlc3M8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIHYtZWxzZT57e3doYXRzYXBwX3Byb2ZpbGUuYWRkcmVzc319PC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICA8c3ZnIHYtaWY9IiFlZGl0X2VtYWlsICYmICFlZGl0X2Rlc2NyaXB0aW9uICYmICFlZGl0X3dlYnNpdGUiIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgd2lkdGg9IjE2IiBoZWlnaHQ9IjE2IiBmaWxsPSJjdXJyZW50Q29sb3IiIGNsYXNzPSJiaSBiaS1wZW5jaWwtZmlsbCIgdmlld0JveD0iMCAwIDE2IDE2IiBAY2xpY2s9ImVkaXRfYWRkcmVzcyA9IHRydWUiICBzdHlsZT0iY3Vyc29yOiBwb2ludGVyOyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgPHBhdGggZD0iTTEyLjg1NC4xNDZhLjUuNSAwIDAgMC0uNzA3IDBMMTAuNSAxLjc5MyAxNC4yMDcgNS41bDEuNjQ3LTEuNjQ2YS41LjUgMCAwIDAgMC0uNzA4bC0zLTN6bS42NDYgNi4wNjFMOS43OTMgMi41IDMuMjkzIDlIMy41YS41LjUgMCAwIDEgLjUuNXYuNWguNWEuNS41IDAgMCAxIC41LjV2LjVoLjVhLjUuNSAwIDAgMSAuNS41di41aC41YS41LjUgMCAwIDEgLjUuNXYuMjA3bDYuNS02LjV6bS03LjQ2OCA3LjQ2OEEuNS41IDAgMCAxIDYgMTMuNVYxM2gtLjVhLjUuNSAwIDAgMS0uNS0uNVYxMmgtLjVhLjUuNSAwIDAgMS0uNS0uNVYxMWgtLjVhLjUuNSAwIDAgMS0uNS0uNVYxMGgtLjVhLjQ5OS40OTkgMCAwIDEtLjE3NS0uMDMybC0uMTc5LjE3OGEuNS41IDAgMCAwLS4xMS4xNjhsLTIgNWEuNS41IDAgMCAwIC42NS42NWw1LTJhLjUuNSAwIDAgMCAuMTY4LS4xMWwuMTc4LS4xNzh6Ii8+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvc3ZnPiAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImVkaXQtdXNlci1hZGRyZXNzIiB2LWlmPSJlZGl0X2FkZHJlc3MiPgogICAgICAgICAgICAgICAgICAgICAgICA8c3ZnIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgd2lkdGg9IjE2IiBoZWlnaHQ9IjE2IiBmaWxsPSJjdXJyZW50Q29sb3IiIGNsYXNzPSJiaSBiaS1nZW8tYWx0IiB2aWV3Qm94PSIwIDAgMTYgMTYiPgogICAgICAgICAgICAgICAgICAgICAgICAgIDxwYXRoIGQ9Ik0xMi4xNjYgOC45NGMtLjUyNCAxLjA2Mi0xLjIzNCAyLjEyLTEuOTYgMy4wN0EzMS40OTMgMzEuNDkzIDAgMCAxIDggMTQuNThhMzEuNDgxIDMxLjQ4MSAwIDAgMS0yLjIwNi0yLjU3Yy0uNzI2LS45NS0xLjQzNi0yLjAwOC0xLjk2LTMuMDdDMy4zMDQgNy44NjcgMyA2Ljg2MiAzIDZhNSA1IDAgMCAxIDEwIDBjMCAuODYyLS4zMDUgMS44NjctLjgzNCAyLjk0ek04IDE2czYtNS42ODYgNi0xMEE2IDYgMCAwIDAgMiA2YzAgNC4zMTQgNiAxMCA2IDEweiIvPgogICAgICAgICAgICAgICAgICAgICAgICAgIDxwYXRoIGQ9Ik04IDhhMiAyIDAgMSAxIDAtNCAyIDIgMCAwIDEgMCA0em0wIDFhMyAzIDAgMSAwIDAtNiAzIDMgMCAwIDAgMCA2eiIvPgogICAgICAgICAgICAgICAgICAgICAgICA8L3N2Zz4gICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgPHRleHRhcmVhIAogICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPSJpbnB1dCBtbC0xIgogICAgICAgICAgICAgICAgICAgICAgICAgIGlkPSJidXNpbmVzc19hZGRyZXNzIgogICAgICAgICAgICAgICAgICAgICAgICAgIHYtbW9kZWw9IndoYXRzYXBwX3Byb2ZpbGUuYWRkcmVzcyIKICAgICAgICAgICAgICAgICAgICAgICAgICBwbGFjZWhvbGRlcj0iQnVzaW5lc3MgQWRkcmVzcyIKICAgICAgICAgICAgICAgICAgICAgICAgICBAa2V5ZG93bj0iZXhwYW5kX3RleHRib3goJyNidXNpbmVzc19hZGRyZXNzJykiCiAgICAgICAgICAgICAgICAgICAgICAgICAgPjwvdGV4dGFyZWE+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzdmcgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB3aWR0aD0iMTYiIGhlaWdodD0iMjIiIGZpbGw9ImN1cnJlbnRDb2xvciIgY2xhc3M9ImJpIGJpLWNoZWNrMiIgdmlld0JveD0iMCAwIDE2IDE2IiAgQGNsaWNrPSJ1cGRhdGVfcHJvZmlsZV9kZXRhaWxzKCkiIHN0eWxlPSJjdXJzb3I6IHBvaW50ZXI7dG9wOjF2aCAhaW1wb3J0YW50O3JpZ2h0OjAgIWltcG9ydGFudDsKICAgICAgICAgICAgICAgICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7IgogICAgICAgICAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICAgICAgICAgICAgPHBhdGggZD0iTTEzLjg1NCAzLjY0NmEuNS41IDAgMCAxIDAgLjcwOGwtNyA3YS41LjUgMCAwIDEtLjcwOCAwbC0zLjUtMy41YS41LjUgMCAxIDEgLjcwOC0uNzA4TDYuNSAxMC4yOTNsNi42NDYtNi42NDdhLjUuNSAwIDAgMSAuNzA4IDB6Ii8+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvc3ZnPgogICAgICAgICAgICAgICAgICAgICAgPC9kaXY+ICAKICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJkZXNjcmlwdGlvbi1kZXRhaWxzIj4KICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImRlc2NyaXB0aW9uIiB2LWlmPSIhZWRpdF9kZXNjcmlwdGlvbiI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzdmcgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB3aWR0aD0iMTYiIGhlaWdodD0iMTYiIGZpbGw9ImN1cnJlbnRDb2xvciIgY2xhc3M9ImJpIGJpLXNob3AiIHZpZXdCb3g9IjAgMCAxNiAxNiI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgPHBhdGggZD0iTTIuOTcgMS4zNUExIDEgMCAwIDEgMy43MyAxaDguNTRhMSAxIDAgMCAxIC43Ni4zNWwyLjYwOSAzLjA0NEExLjUgMS41IDAgMCAxIDE2IDUuMzd2LjI1NWEyLjM3NSAyLjM3NSAwIDAgMS00LjI1IDEuNDU4QTIuMzcxIDIuMzcxIDAgMCAxIDkuODc1IDggMi4zNyAyLjM3IDAgMCAxIDggNy4wODMgMi4zNyAyLjM3IDAgMCAxIDYuMTI1IDhhMi4zNyAyLjM3IDAgMCAxLTEuODc1LS45MTdBMi4zNzUgMi4zNzUgMCAwIDEgMCA1LjYyNVY1LjM3YTEuNSAxLjUgMCAwIDEgLjM2MS0uOTc2bDIuNjEtMy4wNDV6bTEuNzggNC4yNzVhMS4zNzUgMS4zNzUgMCAwIDAgMi43NSAwIC41LjUgMCAwIDEgMSAwIDEuMzc1IDEuMzc1IDAgMCAwIDIuNzUgMCAuNS41IDAgMCAxIDEgMCAxLjM3NSAxLjM3NSAwIDEgMCAyLjc1IDBWNS4zN2EuNS41IDAgMCAwLS4xMi0uMzI1TDEyLjI3IDJIMy43M0wxLjEyIDUuMDQ1QS41LjUgMCAwIDAgMSA1LjM3di4yNTVhMS4zNzUgMS4zNzUgMCAwIDAgMi43NSAwIC41LjUgMCAwIDEgMSAwek0xLjUgOC41QS41LjUgMCAwIDEgMiA5djZoMXYtNWExIDEgMCAwIDEgMS0xaDNhMSAxIDAgMCAxIDEgMXY1aDZWOWEuNS41IDAgMCAxIDEgMHY2aC41YS41LjUgMCAwIDEgMCAxSC41YS41LjUgMCAwIDEgMC0xSDFWOWEuNS41IDAgMCAxIC41LS41ek00IDE1aDN2LTVINHY1em01LTVhMSAxIDAgMCAxIDEtMWgyYTEgMSAwIDAgMSAxIDF2M2ExIDEgMCAwIDEtMSAxaC0yYTEgMSAwIDAgMS0xLTF2LTN6bTMgMGgtMnYzaDJ2LTN6Ii8+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvc3ZnPgogICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiB2LWlmPSJ3aGF0c2FwcF9wcm9maWxlLmRlc2NyaXB0aW9uID09ICcnIj5EZXNjcmlwdGlvbjwvc3Bhbj4gICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIHYtZWxzZT57e3doYXRzYXBwX3Byb2ZpbGUuZGVzY3JpcHRpb259fTwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgPHN2ZyB2LWlmPSIhZWRpdF9hZGRyZXNzICYmICFlZGl0X2VtYWlsICYmICFlZGl0X3dlYnNpdGUiIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgd2lkdGg9IjE2IiBoZWlnaHQ9IjE2IiBmaWxsPSJjdXJyZW50Q29sb3IiIGNsYXNzPSJiaSBiaS1wZW5jaWwtZmlsbCIgdmlld0JveD0iMCAwIDE2IDE2IiBAY2xpY2s9ImVkaXRfZGVzY3JpcHRpb24gPSB0cnVlIiAgc3R5bGU9ImN1cnNvcjogcG9pbnRlcjsiPgogICAgICAgICAgICAgICAgICAgICAgICAgIDxwYXRoIGQ9Ik0xMi44NTQuMTQ2YS41LjUgMCAwIDAtLjcwNyAwTDEwLjUgMS43OTMgMTQuMjA3IDUuNWwxLjY0Ny0xLjY0NmEuNS41IDAgMCAwIDAtLjcwOGwtMy0zem0uNjQ2IDYuMDYxTDkuNzkzIDIuNSAzLjI5MyA5SDMuNWEuNS41IDAgMCAxIC41LjV2LjVoLjVhLjUuNSAwIDAgMSAuNS41di41aC41YS41LjUgMCAwIDEgLjUuNXYuNWguNWEuNS41IDAgMCAxIC41LjV2LjIwN2w2LjUtNi41em0tNy40NjggNy40NjhBLjUuNSAwIDAgMSA2IDEzLjVWMTNoLS41YS41LjUgMCAwIDEtLjUtLjVWMTJoLS41YS41LjUgMCAwIDEtLjUtLjVWMTFoLS41YS41LjUgMCAwIDEtLjUtLjVWMTBoLS41YS40OTkuNDk5IDAgMCAxLS4xNzUtLjAzMmwtLjE3OS4xNzhhLjUuNSAwIDAgMC0uMTEuMTY4bC0yIDVhLjUuNSAwIDAgMCAuNjUuNjVsNS0yYS41LjUgMCAwIDAgLjE2OC0uMTFsLjE3OC0uMTc4eiIvPgogICAgICAgICAgICAgICAgICAgICAgICA8L3N2Zz4gICAgICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImVkaXQtZGVzY3JpcHRpb24iIHYtaWY9ImVkaXRfZGVzY3JpcHRpb24iPgogICAgICAgICAgICAgICAgICAgICAgICA8c3ZnIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgd2lkdGg9IjE2IiBoZWlnaHQ9IjE2IiBmaWxsPSJjdXJyZW50Q29sb3IiIGNsYXNzPSJiaSBiaS1zaG9wIiB2aWV3Qm94PSIwIDAgMTYgMTYiPgogICAgICAgICAgICAgICAgICAgICAgICAgIDxwYXRoIGQ9Ik0yLjk3IDEuMzVBMSAxIDAgMCAxIDMuNzMgMWg4LjU0YTEgMSAwIDAgMSAuNzYuMzVsMi42MDkgMy4wNDRBMS41IDEuNSAwIDAgMSAxNiA1LjM3di4yNTVhMi4zNzUgMi4zNzUgMCAwIDEtNC4yNSAxLjQ1OEEyLjM3MSAyLjM3MSAwIDAgMSA5Ljg3NSA4IDIuMzcgMi4zNyAwIDAgMSA4IDcuMDgzIDIuMzcgMi4zNyAwIDAgMSA2LjEyNSA4YTIuMzcgMi4zNyAwIDAgMS0xLjg3NS0uOTE3QTIuMzc1IDIuMzc1IDAgMCAxIDAgNS42MjVWNS4zN2ExLjUgMS41IDAgMCAxIC4zNjEtLjk3NmwyLjYxLTMuMDQ1em0xLjc4IDQuMjc1YTEuMzc1IDEuMzc1IDAgMCAwIDIuNzUgMCAuNS41IDAgMCAxIDEgMCAxLjM3NSAxLjM3NSAwIDAgMCAyLjc1IDAgLjUuNSAwIDAgMSAxIDAgMS4zNzUgMS4zNzUgMCAxIDAgMi43NSAwVjUuMzdhLjUuNSAwIDAgMC0uMTItLjMyNUwxMi4yNyAySDMuNzNMMS4xMiA1LjA0NUEuNS41IDAgMCAwIDEgNS4zN3YuMjU1YTEuMzc1IDEuMzc1IDAgMCAwIDIuNzUgMCAuNS41IDAgMCAxIDEgMHpNMS41IDguNUEuNS41IDAgMCAxIDIgOXY2aDF2LTVhMSAxIDAgMCAxIDEtMWgzYTEgMSAwIDAgMSAxIDF2NWg2VjlhLjUuNSAwIDAgMSAxIDB2NmguNWEuNS41IDAgMCAxIDAgMUguNWEuNS41IDAgMCAxIDAtMUgxVjlhLjUuNSAwIDAgMSAuNS0uNXpNNCAxNWgzdi01SDR2NXptNS01YTEgMSAwIDAgMSAxLTFoMmExIDEgMCAwIDEgMSAxdjNhMSAxIDAgMCAxLTEgMWgtMmExIDEgMCAwIDEtMS0xdi0zem0zIDBoLTJ2M2gydi0zeiIvPgogICAgICAgICAgICAgICAgICAgICAgICA8L3N2Zz4gICAgICAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgICAgICAgICAgPHRleHRhcmVhIAogICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPSJpbnB1dCBtbC0xIiAKICAgICAgICAgICAgICAgICAgICAgICAgICB2LW1vZGVsPSJ3aGF0c2FwcF9wcm9maWxlLmRlc2NyaXB0aW9uIiAKICAgICAgICAgICAgICAgICAgICAgICAgICBwbGFjZWhvbGRlcj0iIERlc2NyaXB0aW9uIgogICAgICAgICAgICAgICAgICAgICAgICAgIGlkPSJ1c2VyX2Rlc2NyaXB0aW9uIgogICAgICAgICAgICAgICAgICAgICAgICAgIEBrZXlkb3duPSJleHBhbmRfdGV4dGJveCgnI3VzZXJfZGVzY3JpcHRpb24nKSIKICAgICAgICAgICAgICAgICAgICAgICAgICA+PC90ZXh0YXJlYT4KICAgICAgICAgICAgICAgICAgICAgICAgPHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIxNiIgaGVpZ2h0PSIyMiIgZmlsbD0iY3VycmVudENvbG9yIiBjbGFzcz0iYmkgYmktY2hlY2syIiB2aWV3Qm94PSIwIDAgMTYgMTYiICBAY2xpY2s9InVwZGF0ZV9wcm9maWxlX2RldGFpbHMoKSIgc3R5bGU9ImN1cnNvcjogcG9pbnRlcjt0b3A6MXZoICFpbXBvcnRhbnQ7cmlnaHQ6MCAhaW1wb3J0YW50OwogICAgICAgICAgICAgICAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTsiCiAgICAgICAgICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgICAgICAgICAgICA8cGF0aCBkPSJNMTMuODU0IDMuNjQ2YS41LjUgMCAwIDEgMCAuNzA4bC03IDdhLjUuNSAwIDAgMS0uNzA4IDBsLTMuNS0zLjVhLjUuNSAwIDEgMSAuNzA4LS43MDhMNi41IDEwLjI5M2w2LjY0Ni02LjY0N2EuNS41IDAgMCAxIC43MDggMHoiLz4KICAgICAgICAgICAgICAgICAgICAgICAgPC9zdmc+CiAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4gICAgICAgICAgICAgICAgICAgICAgCiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0id2Vic2l0ZS1kZXRhaWxzIG1iLTEiPgogICAgICAgICAgICAgICAgICAgICAgPGRpdiAgdi1pZj0iIWVkaXRfd2Vic2l0ZSI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIHYtaWY9IndoYXRzYXBwX3Byb2ZpbGUud2Vic2l0ZXMiPgogICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgdi1pZj0id2hhdHNhcHBfcHJvZmlsZS53ZWJzaXRlcy5sZW5ndGggPT0gMCIgY2xhc3M9IndlYnNpdGUiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIxNiIgaGVpZ2h0PSIxNiIgZmlsbD0iY3VycmVudENvbG9yIiBjbGFzcz0iYmkgYmktZ2xvYmUiIHZpZXdCb3g9IjAgMCAxNiAxNiI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwYXRoIGQ9Ik0wIDhhOCA4IDAgMSAxIDE2IDBBOCA4IDAgMCAxIDAgOHptNy41LTYuOTIzYy0uNjcuMjA0LTEuMzM1LjgyLTEuODg3IDEuODU1QTcuOTcgNy45NyAwIDAgMCA1LjE0NSA0SDcuNVYxLjA3N3pNNC4wOSA0YTkuMjY3IDkuMjY3IDAgMCAxIC42NC0xLjUzOSA2LjcgNi43IDAgMCAxIC41OTctLjkzM0E3LjAyNSA3LjAyNSAwIDAgMCAyLjI1NSA0SDQuMDl6bS0uNTgyIDMuNWMuMDMtLjg3Ny4xMzgtMS43MTguMzEyLTIuNUgxLjY3NGE2Ljk1OCA2Ljk1OCAwIDAgMC0uNjU2IDIuNWgyLjQ5ek00Ljg0NyA1YTEyLjUgMTIuNSAwIDAgMC0uMzM4IDIuNUg3LjVWNUg0Ljg0N3pNOC41IDV2Mi41aDIuOTlhMTIuNDk1IDEyLjQ5NSAwIDAgMC0uMzM3LTIuNUg4LjV6TTQuNTEgOC41YTEyLjUgMTIuNSAwIDAgMCAuMzM3IDIuNUg3LjVWOC41SDQuNTF6bTMuOTkgMFYxMWgyLjY1M2MuMTg3LS43NjUuMzA2LTEuNjA4LjMzOC0yLjVIOC41ek01LjE0NSAxMmMuMTM4LjM4Ni4yOTUuNzQ0LjQ2OCAxLjA2OC41NTIgMS4wMzUgMS4yMTggMS42NSAxLjg4NyAxLjg1NVYxMkg1LjE0NXptLjE4MiAyLjQ3MmE2LjY5NiA2LjY5NiAwIDAgMS0uNTk3LS45MzNBOS4yNjggOS4yNjggMCAwIDEgNC4wOSAxMkgyLjI1NWE3LjAyNCA3LjAyNCAwIDAgMCAzLjA3MiAyLjQ3MnpNMy44MiAxMWExMy42NTIgMTMuNjUyIDAgMCAxLS4zMTItMi41aC0yLjQ5Yy4wNjIuODkuMjkxIDEuNzMzLjY1NiAyLjVIMy44MnptNi44NTMgMy40NzJBNy4wMjQgNy4wMjQgMCAwIDAgMTMuNzQ1IDEySDExLjkxYTkuMjcgOS4yNyAwIDAgMS0uNjQgMS41MzkgNi42ODggNi42ODggMCAwIDEtLjU5Ny45MzN6TTguNSAxMnYyLjkyM2MuNjctLjIwNCAxLjMzNS0uODIgMS44ODctMS44NTUuMTczLS4zMjQuMzMtLjY4Mi40NjgtMS4wNjhIOC41em0zLjY4LTFoMi4xNDZjLjM2NS0uNzY3LjU5NC0xLjYxLjY1Ni0yLjVoLTIuNDlhMTMuNjUgMTMuNjUgMCAwIDEtLjMxMiAyLjV6bTIuODAyLTMuNWE2Ljk1OSA2Ljk1OSAwIDAgMC0uNjU2LTIuNUgxMi4xOGMuMTc0Ljc4Mi4yODIgMS42MjMuMzEyIDIuNWgyLjQ5ek0xMS4yNyAyLjQ2MWMuMjQ3LjQ2NC40NjIuOTguNjQgMS41MzloMS44MzVhNy4wMjQgNy4wMjQgMCAwIDAtMy4wNzItMi40NzJjLjIxOC4yODQuNDE4LjU5OC41OTcuOTMzek0xMC44NTUgNGE3Ljk2NiA3Ljk2NiAwIDAgMC0uNDY4LTEuMDY4QzkuODM1IDEuODk3IDkuMTcgMS4yODIgOC41IDEuMDc3VjRoMi4zNTV6Ii8+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3N2Zz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuPldlYnNpdGUgVXJsPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHN2ZyB2LWlmPSIhZWRpdF9hZGRyZXNzICYmICFlZGl0X2VtYWlsICYmICFlZGl0X2Rlc2NyaXB0aW9uIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIxNiIgaGVpZ2h0PSIxNiIgZmlsbD0iY3VycmVudENvbG9yIiBjbGFzcz0iYmkgYmktcGVuY2lsLWZpbGwiIHZpZXdCb3g9IjAgMCAxNiAxNiIgQGNsaWNrPSJlZGl0X3dlYnNpdGVfdmFsdWUoMCkiICBzdHlsZT0iY3Vyc29yOiBwb2ludGVyOyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwYXRoIGQ9Ik0xMi44NTQuMTQ2YS41LjUgMCAwIDAtLjcwNyAwTDEwLjUgMS43OTMgMTQuMjA3IDUuNWwxLjY0Ny0xLjY0NmEuNS41IDAgMCAwIDAtLjcwOGwtMy0zem0uNjQ2IDYuMDYxTDkuNzkzIDIuNSAzLjI5MyA5SDMuNWEuNS41IDAgMCAxIC41LjV2LjVoLjVhLjUuNSAwIDAgMSAuNS41di41aC41YS41LjUgMCAwIDEgLjUuNXYuNWguNWEuNS41IDAgMCAxIC41LjV2LjIwN2w2LjUtNi41em0tNy40NjggNy40NjhBLjUuNSAwIDAgMSA2IDEzLjVWMTNoLS41YS41LjUgMCAwIDEtLjUtLjVWMTJoLS41YS41LjUgMCAwIDEtLjUtLjVWMTFoLS41YS41LjUgMCAwIDEtLjUtLjVWMTBoLS41YS40OTkuNDk5IDAgMCAxLS4xNzUtLjAzMmwtLjE3OS4xNzhhLjUuNSAwIDAgMC0uMTEuMTY4bC0yIDVhLjUuNSAwIDAgMCAuNjUuNjVsNS0yYS41LjUgMCAwIDAgLjE2OC0uMTFsLjE3OC0uMTc4eiIvPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9zdmc+CiAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiB2LWVsc2Ugdi1mb3I9Iih3ZWJzaXRlLGluZGV4KSBpbiB3aGF0c2FwcF9wcm9maWxlLndlYnNpdGVzIgogICAgICAgICAgICAgICAgICAgICAgICAgIDprZXk9ImluZGV4IiBjbGFzcz0id2Vic2l0ZSBtYi0yIG10LTEiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIxNiIgaGVpZ2h0PSIxNiIgZmlsbD0iY3VycmVudENvbG9yIiBjbGFzcz0iYmkgYmktZ2xvYmUiIHZpZXdCb3g9IjAgMCAxNiAxNiI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwYXRoIGQ9Ik0wIDhhOCA4IDAgMSAxIDE2IDBBOCA4IDAgMCAxIDAgOHptNy41LTYuOTIzYy0uNjcuMjA0LTEuMzM1LjgyLTEuODg3IDEuODU1QTcuOTcgNy45NyAwIDAgMCA1LjE0NSA0SDcuNVYxLjA3N3pNNC4wOSA0YTkuMjY3IDkuMjY3IDAgMCAxIC42NC0xLjUzOSA2LjcgNi43IDAgMCAxIC41OTctLjkzM0E3LjAyNSA3LjAyNSAwIDAgMCAyLjI1NSA0SDQuMDl6bS0uNTgyIDMuNWMuMDMtLjg3Ny4xMzgtMS43MTguMzEyLTIuNUgxLjY3NGE2Ljk1OCA2Ljk1OCAwIDAgMC0uNjU2IDIuNWgyLjQ5ek00Ljg0NyA1YTEyLjUgMTIuNSAwIDAgMC0uMzM4IDIuNUg3LjVWNUg0Ljg0N3pNOC41IDV2Mi41aDIuOTlhMTIuNDk1IDEyLjQ5NSAwIDAgMC0uMzM3LTIuNUg4LjV6TTQuNTEgOC41YTEyLjUgMTIuNSAwIDAgMCAuMzM3IDIuNUg3LjVWOC41SDQuNTF6bTMuOTkgMFYxMWgyLjY1M2MuMTg3LS43NjUuMzA2LTEuNjA4LjMzOC0yLjVIOC41ek01LjE0NSAxMmMuMTM4LjM4Ni4yOTUuNzQ0LjQ2OCAxLjA2OC41NTIgMS4wMzUgMS4yMTggMS42NSAxLjg4NyAxLjg1NVYxMkg1LjE0NXptLjE4MiAyLjQ3MmE2LjY5NiA2LjY5NiAwIDAgMS0uNTk3LS45MzNBOS4yNjggOS4yNjggMCAwIDEgNC4wOSAxMkgyLjI1NWE3LjAyNCA3LjAyNCAwIDAgMCAzLjA3MiAyLjQ3MnpNMy44MiAxMWExMy42NTIgMTMuNjUyIDAgMCAxLS4zMTItMi41aC0yLjQ5Yy4wNjIuODkuMjkxIDEuNzMzLjY1NiAyLjVIMy44MnptNi44NTMgMy40NzJBNy4wMjQgNy4wMjQgMCAwIDAgMTMuNzQ1IDEySDExLjkxYTkuMjcgOS4yNyAwIDAgMS0uNjQgMS41MzkgNi42ODggNi42ODggMCAwIDEtLjU5Ny45MzN6TTguNSAxMnYyLjkyM2MuNjctLjIwNCAxLjMzNS0uODIgMS44ODctMS44NTUuMTczLS4zMjQuMzMtLjY4Mi40NjgtMS4wNjhIOC41em0zLjY4LTFoMi4xNDZjLjM2NS0uNzY3LjU5NC0xLjYxLjY1Ni0yLjVoLTIuNDlhMTMuNjUgMTMuNjUgMCAwIDEtLjMxMiAyLjV6bTIuODAyLTMuNWE2Ljk1OSA2Ljk1OSAwIDAgMC0uNjU2LTIuNUgxMi4xOGMuMTc0Ljc4Mi4yODIgMS42MjMuMzEyIDIuNWgyLjQ5ek0xMS4yNyAyLjQ2MWMuMjQ3LjQ2NC40NjIuOTguNjQgMS41MzloMS44MzVhNy4wMjQgNy4wMjQgMCAwIDAtMy4wNzItMi40NzJjLjIxOC4yODQuNDE4LjU5OC41OTcuOTMzek0xMC44NTUgNGE3Ljk2NiA3Ljk2NiAwIDAgMC0uNDY4LTEuMDY4QzkuODM1IDEuODk3IDkuMTcgMS4yODIgOC41IDEuMDc3VjRoMi4zNTV6Ii8+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3N2Zz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuID57e3dlYnNpdGV9fTwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzdmcgdi1pZj0iIWVkaXRfYWRkcmVzcyAmJiAhZWRpdF9lbWFpbCAmJiAhZWRpdF9kZXNjcmlwdGlvbiIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB3aWR0aD0iMTYiIGhlaWdodD0iMTYiIGZpbGw9ImN1cnJlbnRDb2xvciIgY2xhc3M9ImJpIGJpLXBlbmNpbC1maWxsIiB2aWV3Qm94PSIwIDAgMTYgMTYiIEBjbGljaz0iZWRpdF93ZWJzaXRlX3ZhbHVlKGluZGV4KSIgIHN0eWxlPSJjdXJzb3I6IHBvaW50ZXI7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHBhdGggZD0iTTEyLjg1NC4xNDZhLjUuNSAwIDAgMC0uNzA3IDBMMTAuNSAxLjc5MyAxNC4yMDcgNS41bDEuNjQ3LTEuNjQ2YS41LjUgMCAwIDAgMC0uNzA4bC0zLTN6bS42NDYgNi4wNjFMOS43OTMgMi41IDMuMjkzIDlIMy41YS41LjUgMCAwIDEgLjUuNXYuNWguNWEuNS41IDAgMCAxIC41LjV2LjVoLjVhLjUuNSAwIDAgMSAuNS41di41aC41YS41LjUgMCAwIDEgLjUuNXYuMjA3bDYuNS02LjV6bS03LjQ2OCA3LjQ2OEEuNS41IDAgMCAxIDYgMTMuNVYxM2gtLjVhLjUuNSAwIDAgMS0uNS0uNVYxMmgtLjVhLjUuNSAwIDAgMS0uNS0uNVYxMWgtLjVhLjUuNSAwIDAgMS0uNS0uNVYxMGgtLjVhLjQ5OS40OTkgMCAwIDEtLjE3NS0uMDMybC0uMTc5LjE3OGEuNS41IDAgMCAwLS4xMS4xNjhsLTIgNWEuNS41IDAgMCAwIC42NS42NWw1LTJhLjUuNSAwIDAgMCAuMTY4LS4xMWwuMTc4LS4xNzh6Ii8+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3N2Zz4KICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IHYtaWY9IndoYXRzYXBwX3Byb2ZpbGUud2Vic2l0ZXMubGVuZ3RoID09IDEgJiYgIXNlY29uZF93ZWJzaXRlIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJhZGQtYW5vdGhlci13ZWJzaXRlIiBAY2xpY2s9ImVkaXRfd2Vic2l0ZV92YWx1ZSgxKSI+QUREIEFOT1RIRVIgV0VCU0lURTwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJlZGl0LXdlYnNpdGUiIHYtaWY9ImVkaXRfd2Vic2l0ZSI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzdmcgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB3aWR0aD0iMTYiIGhlaWdodD0iMTYiIGZpbGw9ImN1cnJlbnRDb2xvciIgY2xhc3M9ImJpIGJpLWdsb2JlIiB2aWV3Qm94PSIwIDAgMTYgMTYiPgogICAgICAgICAgICAgICAgICAgICAgICAgIDxwYXRoIGQ9Ik0wIDhhOCA4IDAgMSAxIDE2IDBBOCA4IDAgMCAxIDAgOHptNy41LTYuOTIzYy0uNjcuMjA0LTEuMzM1LjgyLTEuODg3IDEuODU1QTcuOTcgNy45NyAwIDAgMCA1LjE0NSA0SDcuNVYxLjA3N3pNNC4wOSA0YTkuMjY3IDkuMjY3IDAgMCAxIC42NC0xLjUzOSA2LjcgNi43IDAgMCAxIC41OTctLjkzM0E3LjAyNSA3LjAyNSAwIDAgMCAyLjI1NSA0SDQuMDl6bS0uNTgyIDMuNWMuMDMtLjg3Ny4xMzgtMS43MTguMzEyLTIuNUgxLjY3NGE2Ljk1OCA2Ljk1OCAwIDAgMC0uNjU2IDIuNWgyLjQ5ek00Ljg0NyA1YTEyLjUgMTIuNSAwIDAgMC0uMzM4IDIuNUg3LjVWNUg0Ljg0N3pNOC41IDV2Mi41aDIuOTlhMTIuNDk1IDEyLjQ5NSAwIDAgMC0uMzM3LTIuNUg4LjV6TTQuNTEgOC41YTEyLjUgMTIuNSAwIDAgMCAuMzM3IDIuNUg3LjVWOC41SDQuNTF6bTMuOTkgMFYxMWgyLjY1M2MuMTg3LS43NjUuMzA2LTEuNjA4LjMzOC0yLjVIOC41ek01LjE0NSAxMmMuMTM4LjM4Ni4yOTUuNzQ0LjQ2OCAxLjA2OC41NTIgMS4wMzUgMS4yMTggMS42NSAxLjg4NyAxLjg1NVYxMkg1LjE0NXptLjE4MiAyLjQ3MmE2LjY5NiA2LjY5NiAwIDAgMS0uNTk3LS45MzNBOS4yNjggOS4yNjggMCAwIDEgNC4wOSAxMkgyLjI1NWE3LjAyNCA3LjAyNCAwIDAgMCAzLjA3MiAyLjQ3MnpNMy44MiAxMWExMy42NTIgMTMuNjUyIDAgMCAxLS4zMTItMi41aC0yLjQ5Yy4wNjIuODkuMjkxIDEuNzMzLjY1NiAyLjVIMy44MnptNi44NTMgMy40NzJBNy4wMjQgNy4wMjQgMCAwIDAgMTMuNzQ1IDEySDExLjkxYTkuMjcgOS4yNyAwIDAgMS0uNjQgMS41MzkgNi42ODggNi42ODggMCAwIDEtLjU5Ny45MzN6TTguNSAxMnYyLjkyM2MuNjctLjIwNCAxLjMzNS0uODIgMS44ODctMS44NTUuMTczLS4zMjQuMzMtLjY4Mi40NjgtMS4wNjhIOC41em0zLjY4LTFoMi4xNDZjLjM2NS0uNzY3LjU5NC0xLjYxLjY1Ni0yLjVoLTIuNDlhMTMuNjUgMTMuNjUgMCAwIDEtLjMxMiAyLjV6bTIuODAyLTMuNWE2Ljk1OSA2Ljk1OSAwIDAgMC0uNjU2LTIuNUgxMi4xOGMuMTc0Ljc4Mi4yODIgMS42MjMuMzEyIDIuNWgyLjQ5ek0xMS4yNyAyLjQ2MWMuMjQ3LjQ2NC40NjIuOTguNjQgMS41MzloMS44MzVhNy4wMjQgNy4wMjQgMCAwIDAtMy4wNzItMi40NzJjLjIxOC4yODQuNDE4LjU5OC41OTcuOTMzek0xMC44NTUgNGE3Ljk2NiA3Ljk2NiAwIDAgMC0uNDY4LTEuMDY4QzkuODM1IDEuODk3IDkuMTcgMS4yODIgOC41IDEuMDc3VjRoMi4zNTV6Ii8+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvc3ZnPiAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICA8dGV4dGFyZWEgCiAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3M9ImlucHV0IG1sLTEiCiAgICAgICAgICAgICAgICAgICAgICAgICAgdi1tb2RlbD0id2hhdHNhcHBfcHJvZmlsZS53ZWJzaXRlc1tpbmRleF91cGRhdGVdIiAKICAgICAgICAgICAgICAgICAgICAgICAgICBwbGFjZWhvbGRlcj0iV2Vic2l0ZSBVUkwiCiAgICAgICAgICAgICAgICAgICAgICAgICAgaWQ9ImJ1c2luZXNzX3dlYnNpdGVfdXJsIgogICAgICAgICAgICAgICAgICAgICAgICAgIEBrZXlkb3duPSJleHBhbmRfdGV4dGJveCgnI2J1c2luZXNzX3dlYnNpdGVfdXJsJykiICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgID48L3RleHRhcmVhPgogICAgICAgICAgICAgICAgICAgICAgICA8c3ZnIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgd2lkdGg9IjE2IiBoZWlnaHQ9IjIyIiBmaWxsPSJjdXJyZW50Q29sb3IiIGNsYXNzPSJiaSBiaS1jaGVjazIiIHZpZXdCb3g9IjAgMCAxNiAxNiIgIEBjbGljaz0idXBkYXRlX3Byb2ZpbGVfZGV0YWlscygpIiBzdHlsZT0iY3Vyc29yOiBwb2ludGVyO3RvcDoxdmggIWltcG9ydGFudDtyaWdodDowICFpbXBvcnRhbnQ7CiAgICAgICAgICAgICAgICAgICAgICAgICAgcG9zaXRpb246IGFic29sdXRlOyIKICAgICAgICAgICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgICAgICAgICAgIDxwYXRoIGQ9Ik0xMy44NTQgMy42NDZhLjUuNSAwIDAgMSAwIC43MDhsLTcgN2EuNS41IDAgMCAxLS43MDggMGwtMy41LTMuNWEuNS41IDAgMSAxIC43MDgtLjcwOEw2LjUgMTAuMjkzbDYuNjQ2LTYuNjQ3YS41LjUgMCAwIDEgLjcwOCAweiIvPgogICAgICAgICAgICAgICAgICAgICAgICA8L3N2Zz4KICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9IndlYmlzdGUtdmVydGljYWwtZGV0YWlscyBtYi0zIj4KICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9IndlYmlzdGUtdmVydGljYWwgZC1mbGV4IiBzdHlsZT0iIj4KICAgICAgICAgICAgICAgICAgICAgICAgPHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciICBzdHlsZT0ibWFyZ2luLXJpZ2h0OiAxcmVtOyIgd2lkdGg9IjE2IiBoZWlnaHQ9IjE2IiBmaWxsPSJjdXJyZW50Q29sb3IiIGNsYXNzPSJiaSBiaS10YWctZmlsbCIgdmlld0JveD0iMCAwIDE2IDE2Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICA8cGF0aCBkPSJNMiAxYTEgMSAwIDAgMC0xIDF2NC41ODZhMSAxIDAgMCAwIC4yOTMuNzA3bDcgN2ExIDEgMCAwIDAgMS40MTQgMGw0LjU4Ni00LjU4NmExIDEgMCAwIDAgMC0xLjQxNGwtNy03QTEgMSAwIDAgMCA2LjU4NiAxSDJ6bTQgMy41YTEuNSAxLjUgMCAxIDEtMyAwIDEuNSAxLjUgMCAwIDEgMyAweiIvPgogICAgICAgICAgICAgICAgICAgICAgICA8L3N2Zz4KICAgICAgICAgICAgICAgICAgICAgICAgPG11bHRpc2VsZWN0CiAgICAgICAgICAgICAgICAgICAgICAgICAgOm9wdGlvbnM9InZlcnRpY2FsX3R5cGVzIgogICAgICAgICAgICAgICAgICAgICAgICAgIHYtbW9kZWw9IndoYXRzYXBwX3Byb2ZpbGUudmVydGljYWwiCiAgICAgICAgICAgICAgICAgICAgICAgICAgOnNlYXJjaGFibGU9ImZhbHNlIgogICAgICAgICAgICAgICAgICAgICAgICAgIDphbGxvdy1lbXB0eT0iZmFsc2UiCiAgICAgICAgICAgICAgICAgICAgICAgICAgOnNob3ctbGFiZWxzPSJmYWxzZSIKICAgICAgICAgICAgICAgICAgICAgICAgICA6Y2xvc2Utb24tc2VsZWN0PSJ0cnVlIgogICAgICAgICAgICAgICAgICAgICAgICAgIHBsYWNlaG9sZGVyPSJQaWNrIGEgY2F0ZWdvcmllcyIKICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0id2lkdGg6IDgwJTt6LWluZGV4OjQwMDA7IgogICAgICAgICAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvbXVsdGlzZWxlY3Q+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzdmcgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB3aWR0aD0iMTYiIGhlaWdodD0iMjIiIGZpbGw9ImN1cnJlbnRDb2xvciIgY2xhc3M9ImJpIGJpLWNoZWNrMiIgdmlld0JveD0iMCAwIDE2IDE2IiAgQGNsaWNrPSJ1cGRhdGVfcHJvZmlsZV9kZXRhaWxzKCkiIHN0eWxlPSJjdXJzb3I6IHBvaW50ZXI7dG9wOjF2aCAhaW1wb3J0YW50O3JpZ2h0OjAgIWltcG9ydGFudDsKICAgICAgICAgICAgICAgICAgICAgICAgICBwb3NpdGlvbjogYWJzb2x1dGU7IgogICAgICAgICAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICAgICAgICAgICAgPHBhdGggZD0iTTEzLjg1NCAzLjY0NmEuNS41IDAgMCAxIDAgLjcwOGwtNyA3YS41LjUgMCAwIDEtLjcwOCAwbC0zLjUtMy41YS41LjUgMCAxIDEgLjcwOC0uNzA4TDYuNSAxMC4yOTNsNi42NDYtNi42NDdhLjUuNSAwIDAgMSAuNzA4IDB6Ii8+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvc3ZnPgogICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJhYm91dC1waG9uZSIgPgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1iLTQiPjxzcGFuIGNsYXNzPSJhYnQtcGhvbmUtdGl0bGUiPkFib3V0IGFuZCBQaG9uZSBOdW1iZXI8L3NwYW4+PC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0id2h0cy1hcHAtc3RhdHVzIj4KICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImQtZmxleCB3aHRzLXN0YXR1cyIgdi1pZj0iIWVkaXRfc3RhdHVzIj4KICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gdi1pZj0id2hhdHNhcHBfcHJvZmlsZS5hYm91dCA9PSAnJyI+e3tkZWZhdWx0X3doYXRzYXBwX3N0YXR1c319PC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiB2LWVsc2U+e3t3aGF0c2FwcF9wcm9maWxlLmFib3V0fX08L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzdmcgdi1pZj0iIWVkaXRfYWRkcmVzcyAmJiAhZWRpdF9lbWFpbCAmJiAhZWRpdF93ZWJzaXRlICYmICFlZGl0X2Rlc2NyaXB0aW9uIiB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIxNiIgaGVpZ2h0PSIxNiIgZmlsbD0iY3VycmVudENvbG9yIiBjbGFzcz0iYmkgYmktcGVuY2lsLWZpbGwiIHZpZXdCb3g9IjAgMCAxNiAxNiIgQGNsaWNrPSJlZGl0X3N0YXR1cyA9IHRydWUiICBzdHlsZT0iY3Vyc29yOiBwb2ludGVyOyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgPHBhdGggZD0iTTEyLjg1NC4xNDZhLjUuNSAwIDAgMC0uNzA3IDBMMTAuNSAxLjc5MyAxNC4yMDcgNS41bDEuNjQ3LTEuNjQ2YS41LjUgMCAwIDAgMC0uNzA4bC0zLTN6bS42NDYgNi4wNjFMOS43OTMgMi41IDMuMjkzIDlIMy41YS41LjUgMCAwIDEgLjUuNXYuNWguNWEuNS41IDAgMCAxIC41LjV2LjVoLjVhLjUuNSAwIDAgMSAuNS41di41aC41YS41LjUgMCAwIDEgLjUuNXYuMjA3bDYuNS02LjV6bS03LjQ2OCA3LjQ2OEEuNS41IDAgMCAxIDYgMTMuNVYxM2gtLjVhLjUuNSAwIDAgMS0uNS0uNVYxMmgtLjVhLjUuNSAwIDAgMS0uNS0uNVYxMWgtLjVhLjUuNSAwIDAgMS0uNS0uNVYxMGgtLjVhLjQ5OS40OTkgMCAwIDEtLjE3NS0uMDMybC0uMTc5LjE3OGEuNS41IDAgMCAwLS4xMS4xNjhsLTIgNWEuNS41IDAgMCAwIC42NS42NWw1LTJhLjUuNSAwIDAgMCAuMTY4LS4xMWwuMTc4LS4xNzh6Ii8+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvc3ZnPgogICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJlZGl0LXN0YXR1cyIgdi1pZj0iZWRpdF9zdGF0dXMiPgogICAgICAgICAgICAgICAgICAgICAgICA8dGV4dGFyZWEgCiAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3M9ImlucHV0IgogICAgICAgICAgICAgICAgICAgICAgICAgIHYtbW9kZWw9IndoYXRzYXBwX3Byb2ZpbGUuYWJvdXQiCiAgICAgICAgICAgICAgICAgICAgICAgICAgaWQ9IndodHNhcHBfc3RhdHVzIgogICAgICAgICAgICAgICAgICAgICAgICAgIEBrZXlkb3duPSJleHBhbmRfdGV4dGJveCgnI3dodHNhcHBfc3RhdHVzJykiICAKICAgICAgICAgICAgICAgICAgICAgICAgPjwvdGV4dGFyZWE+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzdmcgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB3aWR0aD0iMTYiIGhlaWdodD0iMjIiIGZpbGw9ImN1cnJlbnRDb2xvciIgY2xhc3M9ImJpIGJpLWNoZWNrMiIgdmlld0JveD0iMCAwIDE2IDE2IiAgQGNsaWNrPSJ1cGRhdGVfcHJvZmlsZV9kZXRhaWxzKCkiIHN0eWxlPSJjdXJzb3I6IHBvaW50ZXI7ICB0b3A6IDEuNnZoO3JpZ2h0OiAxNXB4OwogICAgICAgICAgICAgICAgICAgICAgICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTsiCiAgICAgICAgICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgICAgICAgICAgICA8cGF0aCBkPSJNMTMuODU0IDMuNjQ2YS41LjUgMCAwIDEgMCAuNzA4bC03IDdhLjUuNSAwIDAgMS0uNzA4IDBsLTMuNS0zLjVhLjUuNSAwIDEgMSAuNzA4LS43MDhMNi41IDEwLjI5M2w2LjY0Ni02LjY0N2EuNS41IDAgMCAxIC43MDggMHoiLz4KICAgICAgICAgICAgICAgICAgICAgICAgPC9zdmc+CiAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ3aHRzYXBwLW5vIG10LTMiPgogICAgICAgICAgICAgICAgICAgICAgPHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIxNiIgaGVpZ2h0PSIxNiIgZmlsbD0iY3VycmVudENvbG9yIiBjbGFzcz0iYmkgYmktdGVsZXBob25lLWZpbGwiIHZpZXdCb3g9IjAgMCAxNiAxNiIgc3R5bGU9ImNvbG9yOiM4Njk2YTA7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgPHBhdGggZmlsbC1ydWxlPSJldmVub2RkIiBkPSJNMS44ODUuNTExYTEuNzQ1IDEuNzQ1IDAgMCAxIDIuNjEuMTYzTDYuMjkgMi45OGMuMzI5LjQyMy40NDUuOTc0LjMxNSAxLjQ5NGwtLjU0NyAyLjE5YS42NzguNjc4IDAgMCAwIC4xNzguNjQzbDIuNDU3IDIuNDU3YS42NzguNjc4IDAgMCAwIC42NDQuMTc4bDIuMTg5LS41NDdhMS43NDUgMS43NDUgMCAwIDEgMS40OTQuMzE1bDIuMzA2IDEuNzk0Yy44MjkuNjQ1LjkwNSAxLjg3LjE2MyAyLjYxMWwtMS4wMzQgMS4wMzRjLS43NC43NC0xLjg0NiAxLjA2NS0yLjg3Ny43MDJhMTguNjM0IDE4LjYzNCAwIDAgMS03LjAxLTQuNDIgMTguNjM0IDE4LjYzNCAwIDAgMS00LjQyLTcuMDA5Yy0uMzYyLTEuMDMtLjAzNy0yLjEzNy43MDMtMi44NzdMMS44ODUuNTExeiIvPgogICAgICAgICAgICAgICAgICAgICAgPC9zdmc+CiAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzcz0ibWwtMyI+e3t3aGF0c2FwcF9wcm9maWxlLndoYXRzYXBwX3Bob25lX251bWJlcn19PC9zcGFuPgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPGRpdiBjbGFzcz0iY29sLXNtLTQgcC0wIiB2LXNob3c9ImlzX2NvbnRhY3RfbGlzdCI+CiAgICAgICAgICAgIDwhLS0gd2hhdHNhcHAgYWxsIGNvbnRhY3RzIC0tPgogICAgICAgICAgICA8ZGl2CiAgICAgICAgICAgICAgc3R5bGU9ImJvcmRlci1yaWdodDogMXB4IHNvbGlkIHJnYmEoMCwwLDAsMC4yKTthbGlnbi1pdGVtczogY2VudGVyOyBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47IGhlaWdodDogNTUwcHg7Ij4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJwcm9maWxlLXRvcCBkLWZsZXgiPgogICAgICAgICAgICAgICAgPHNwYW4gc3R5bGU9IiBtYXJnaW46MCAwIDEwcHggMTdweDtjdXJzb3I6IHBvaW50ZXI7IiBAY2xpY2s9InNob3dfYWxsX2NvbnRhY3RzIj48c3ZnCiAgICAgICAgICAgICAgICAgICAgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB3aWR0aD0iMzgiIGhlaWdodD0iMjIiIGZpbGw9ImN1cnJlbnRDb2xvciIKICAgICAgICAgICAgICAgICAgICBjbGFzcz0iYmkgYmktYXJyb3ctbGVmdCBsZWZ0LWFycm93IiB2aWV3Qm94PSIwIDAgMTYgMTYiPgogICAgICAgICAgICAgICAgICAgIDxwYXRoIGZpbGwtcnVsZT0iZXZlbm9kZCIKICAgICAgICAgICAgICAgICAgICAgIGQ9Ik0xNSA4YS41LjUgMCAwIDAtLjUtLjVIMi43MDdsMy4xNDctMy4xNDZhLjUuNSAwIDEgMC0uNzA4LS43MDhsLTQgNGEuNS41IDAgMCAwIDAgLjcwOGw0IDRhLjUuNSAwIDAgMCAuNzA4LS43MDhMMi43MDcgOC41SDE0LjVBLjUuNSAwIDAgMCAxNSA4eiIgLz4KICAgICAgICAgICAgICAgICAgPC9zdmc+CiAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICA8c3BhbiBzdHlsZT0ib3BhY2l0eToyO2ZvbnQtc2l6ZToxLjFyZW07bWFyZ2luOjAgMCA4cHggMTdweDsiPk5ldyBjaGF0PC9zcGFuPgogICAgICAgICAgICAgICAgPHNwYW4gc3R5bGU9Im1hcmdpbjogMCA1cHggOHB4IGF1dG87Ij4KICAgICAgICAgICAgICAgICAgPGJ1dHRvbiBzdHlsZT0iYm9yZGVyOiBub25lOyBjdXJzb3I6IHBvaW50ZXI7IiB0eXBlPSJidXR0b24iIGRhdGEtY29udGFpbmVyPSJib2R5IiBkYXRhLXRvZ2dsZT0icG9wb3ZlciIgZGF0YS1wbGFjZW1lbnQ9InJpZ2h0IiBkYXRhLXRyaWdnZXI9ImZvY3VzIj4KICAgICAgICAgICAgICAgICAgICA8aSBjbGFzcz0iZmEgZmEtcXVlc3Rpb24tY2lyY2xlIiA+PC9pPjwvYnV0dG9uPgo8L3NwYW4+CgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbnRhY3RzLWxpc3QgcHItMCI+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJzZWFyY2gtY29udGFjdCI+CiAgICAgICAgICAgICAgICAgIDxkaXY+CiAgICAgICAgICAgICAgICAgICAgPHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIxMiIgaGVpZ2h0PSIxMiIgZmlsbD0iY3VycmVudENvbG9yIiBjbGFzcz0iYmkgYmktc2VhcmNoIgogICAgICAgICAgICAgICAgICAgICAgdmlld0JveD0iMCAwIDE2IDE2Ij4KICAgICAgICAgICAgICAgICAgICAgIDxwYXRoCiAgICAgICAgICAgICAgICAgICAgICAgIGQ9Ik0xMS43NDIgMTAuMzQ0YTYuNSA2LjUgMCAxIDAtMS4zOTcgMS4zOThoLS4wMDFjLjAzLjA0LjA2Mi4wNzguMDk4LjExNWwzLjg1IDMuODVhMSAxIDAgMCAwIDEuNDE1LTEuNDE0bC0zLjg1LTMuODVhMS4wMDcgMS4wMDcgMCAwIDAtLjExNS0uMXpNMTIgNi41YTUuNSA1LjUgMCAxIDEtMTEgMCA1LjUgNS41IDAgMCAxIDExIDB6IiAvPgogICAgICAgICAgICAgICAgICAgIDwvc3ZnPgogICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJ0ZXh0IiBwbGFjZWhvbGRlcj0iU2VhcmNoIG9yIHN0YXJ0IG5ldyBjaGF0IiB2LW1vZGVsPSJzZWFyY2hfaW5fY29udGFjdF9saXN0Ij4KICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImFsbC1jb250YWN0LWxpc3QiICBAc2Nyb2xsPSJuZXdfY29udGFjdF9saXN0IiA+CiAgICAgICAgICAgICAgICAgIDx1bCB2LWlmPSJhbGxfY29udGFjdF9saXN0Lmxlbmd0aD4wIgogICAgICAgICAgICAgICAgICAgICAgaWQ9ImFsbF9jb250YWN0c19zY3JvbGwiIAogICAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICAgICAgPGxpIGNsYXNzPSJkLWZsZXgiCiAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0iY3Vyc29yOnBvaW50ZXI7IgogICAgICAgICAgICAgICAgICAgICAgQGNsaWNrPSJhZGRfbmV3X2NvbnRhY3RfbW9kYWwoKSIKICAgICAgICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgICAgICAgICAgPCEtLSA8ZGl2IHN0eWxlPSJ3aWR0aDogMTUlOyI+PGltZyBzcmM9Ii9pbWcvd2hhdHNhcHAtZHAucG5nIiBhbHQ9IiIKICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3M9InVzZXItcHJvZmlsZS1waWN0dXJlIHJvdW5kZWQtY2lyY2xlIj4KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+IC0tPgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJ1c2VyLW5hbWUiPgogICAgICAgICAgICAgICAgICAgICAgICAgIEFkZCBOZXcgQ29udGFjdAogICAgICAgICAgICAgICAgICAgICAgICAgIDwhLS0gPHNwYW4gdi1pZj0iY29udGFjdC5wcm9maWxlX25hbWUiPnt7IGNvbnRhY3QucHJvZmlsZV9uYW1lIH19PC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIHYtZWxzZT57eyBjb250YWN0LndoYXRzYXBwX3Bob25lX251bWJlciB9fTwvc3Bhbj4gLS0+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgPGxpIHYtZm9yPSIoY29udGFjdCwgaW5kZXgpIGluIGFsbF9jb250YWN0X2xpc3QiIAogICAgICAgICAgICAgICAgICAgIDprZXk9ImluZGV4IgogICAgICAgICAgICAgICAgICAgIGNsYXNzPSJkLWZsZXgiCiAgICAgICAgICAgICAgICAgICAgc3R5bGU9ImN1cnNvcjpwb2ludGVyOyIKICAgICAgICAgICAgICAgICAgICBAY2xpY2s9ImdldF9oaXN0b3J5X2RhdGEoY29udGFjdC53aGF0c2FwcF9waG9uZV9udW1iZXIsIGNvbnRhY3QucHJvZmlsZV9uYW1lLCAwLGNvbnRhY3QpIgogICAgICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgICAgICAgIDxkaXYgc3R5bGU9IndpZHRoOiAxNSU7Ij48aW1nIHNyYz0iL2ltZy93aGF0c2FwcC1kcC5wbmciIGFsdD0iIgogICAgICAgICAgICAgICAgICAgICAgY2xhc3M9InVzZXItcHJvZmlsZS1waWN0dXJlIHJvdW5kZWQtY2lyY2xlIj4KICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0idXNlci1uYW1lIj4KICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4+e3tnZXRfY29udGFjdF9kaXNwbGF5X25hbWUoY29udGFjdCl9fTwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgPCEtLSA8c3BhbiB2LWlmPSJjb250YWN0LmNvbnRhY3RfbmFtZSI+e3sgY29udGFjdC5jb250YWN0X25hbWUgfX08L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIHYtZWxzZS1pZj0iY29udGFjdC5wcm9maWxlX25hbWUiPnt7IGNvbnRhY3QucHJvZmlsZV9uYW1lIH19PC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiB2LWVsc2U+e3sgY29udGFjdC53aGF0c2FwcF9waG9uZV9udW1iZXIgfX08L3NwYW4+IC0tPgogICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb250YWN0LXZlcmlmaWVkLXN0YXR1cyBtbC1hdXRvIiA6Y2xhc3M9ImNvbnRhY3QudmVyaWZ5X3N0YXR1cyIgOnRpdGxlPSJjb250YWN0LnZlcmlmeV9zdGF0dXMiPgogICAgICAgICAgICAgICAgICAgICAgICAmI3gyNUNGOwogICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgPC91bD4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPGRpdiBjbGFzcz0iY29sLXNtLTggcC0wIiBzdHlsZT0iaGVpZ2h0OiA2MDBweDsgYmFja2dyb3VuZC1jb2xvcjogI2YwZjJmNSAhaW1wb3J0YW50OyI+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9InVzZXItaW5mby1wYWdlIiB2LXNob3c9Imhpc3RvcnkubGVuZ3RoID09IDAgJiYgIXN0YXJ0X25ld19jb252X2RhdGEuc3RhcnRfbmV3X2NvbnYiPgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNlbnNlLXdoYXRzYXBwLWltYWdlIiB2LXNob3c9IiFzaG93X3NwaW5uZXIiPgogICAgICAgICAgICAgICAgICA8aW1nIHNyYz0iL2ltZy9jZW5zZV9pbWFnZS5wbmciIGFsdD0iIiBjbGFzcz0iY2Vuc2UtaW1hZ2UiPgogICAgICAgICAgICAgICAgICA8aW1nIHNyYz0iQC9wb3J0YWwvYXNzZXRzL2ltZy9XaGF0c0FwcC1Mb2dvLVBORzYucG5nIiBhbHQ9IiIgY2xhc3M9IndoYXRzLWFwcC1pbWFnZSI+CiAgICAgICAgICAgICAgICAgIDxoND5XaGF0c2FwcC1XZWIgcG93ZXJlZCBieSBDZW5zZSBBSTwvaDQ+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtc20tMTIgZC1mbGV4IiB2LWlmPSJoaXN0b3J5Lmxlbmd0aCA+IDAiPgogICAgICAgICAgICAgIDxpbWcgc3JjPSIvaW1nL3doYXRzYXBwLWRwLnBuZyIgYWx0PSIiIGNsYXNzPSJuby1wcm9maWxlLWltYWdlLWNvbnYgcm91bmRlZC1jaXJjbGUgbXktMiIgaGVpZ2h0PSI0MHB4IiB3aWR0aD0iNDBweCI+CiAgICAgICAgICAgICAgPGRpdj4KICAgICAgICAgICAgICAgIDxwIHYtaWY9ImN1c3RvbWVyX25hbWUgIT0gJyciIGNsYXNzPSJtdC0zIG1sLTIgY3VzdG9tZXItbmFtZSI+e3sgY3VzdG9tZXJfbmFtZSB9fTwvcD4KICAgICAgICAgICAgICAgIDxwIHYtZWxzZSBjbGFzcz0ibXQtMyBtbC0yIj57eyBwaG9uZW5vIH19PC9wPgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1sLWF1dG8gbXQtMyBkLWZsZXgiPgogICAgICAgICAgICAgICAgPGRpdj4KICAgICAgICAgICAgICAgICAgPGxhYmVsIHN0eWxlPSJjdXJzb3I6cG9pbnRlcjsiPgogICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJmaWxlIiBoaWRkZW4gIG5hbWU9InNlbmRfYXR0YWNobWVudCIgaWQ9InNlbmRfYXR0YWNobWVudCIgOmFjY2VwdD0iZmlsZV9leHRlbnNpb25zLmFsbF9hbGxvd2VkX2ZpbGVfZXh0ZW5zaW9ucy50b1N0cmluZygpIiBAY2hhbmdlPSJwcm9jZXNzX2F0dGFjaG1lbnRfZmlsZSIgLz4KICAgICAgICAgICAgICAgICAgICAgIDxpIGNsYXNzPSJmYSBmYS1wYXBlcmNsaXAgbXItMiIgYXJpYS1oaWRkZW49InRydWUiPjwvaT4KICAgICAgICAgICAgICAgICAgICA8IS0tIFVwbG9hZCAtLT4KICAgICAgICAgICAgICAgICAgPC9sYWJlbD4KCiAgICAgICAgICAgICAgICAgICAgPCEtLSA8aW5wdXQgdHlwZT0iZmlsZSIgbmFtZT0ic2VuZF9hdHRhY2htZW50IiBpZD0ic2VuZF9hdHRhY2htZW50IiBAY2hhbmdlPSJwcm9jZXNzX2F0dGFjaG1lbnRfZmlsZSI+IC0tPgogICAgICAgICAgICAgICAgICAgIDwhLS0gPC9pPiAtLT4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImRyb3Bkb3duIj4KICAgICAgICAgICAgICAgIDxidXR0b24gY2xhc3M9ImJ0biBwLTAiIHR5cGU9ImJ1dHRvbiIgaWQ9ImRyb3Bkb3duTWVudUJ1dHRvbiIgZGF0YS10b2dnbGU9ImRyb3Bkb3duIiBhcmlhLWhhc3BvcHVwPSJ0cnVlIiBhcmlhLWV4cGFuZGVkPSJmYWxzZSI+CiAgICAgICAgICAgICAgICAgIDwhLS0gPGkgY2xhc3M9ImZhIGZhLXBhcGVyY2xpcCBtci0yIiBhcmlhLWhpZGRlbj0idHJ1ZSI+PC9pPiAtLT4KICAgICAgICAgICAgICAgICAgPHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIHdpZHRoPSIxNSIgaGVpZ2h0PSIxNSIgZmlsbD0iY3VycmVudENvbG9yIgogICAgICAgICAgICAgICAgICAgIGNsYXNzPSJiaSBiaS10aHJlZS1kb3RzLXZlcnRpY2FsIiB2aWV3Qm94PSIwIDAgMTYgMTYiPgogICAgICAgICAgICAgICAgICAgIDxwYXRoCiAgICAgICAgICAgICAgICAgICAgICBkPSJNOS41IDEzYTEuNSAxLjUgMCAxIDEtMyAwIDEuNSAxLjUgMCAwIDEgMyAwem0wLTVhMS41IDEuNSAwIDEgMS0zIDAgMS41IDEuNSAwIDAgMSAzIDB6bTAtNWExLjUgMS41IDAgMSAxLTMgMCAxLjUgMS41IDAgMCAxIDMgMHoiIC8+CiAgICAgICAgICAgICAgICAgIDwvc3ZnPgogICAgICAgICAgICAgICAgPC9idXR0b24+CiAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJkcm9wZG93bi1tZW51IiBhcmlhLWxhYmVsbGVkYnk9ImRyb3Bkb3duTWVudUJ1dHRvbiI+CiAgICAgICAgICAgICAgICAgIDxhIGNsYXNzPSJkcm9wZG93bi1pdGVtIiBocmVmPSJqYXZhc2NyaXB0OnZvaWQoMCk7IiBAY2xpY2s9Im9wZW5fc2VuZF90ZW1wbGF0ZV90b191c2VyIj5TZW5kIFRlbXBsYXRlPC9hPgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8IS0tIDxzcGFuIGNsYXNzPSJkLWZsZXgiPgogICAgICAgICAgICAgICAgICA8c3ZnIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgd2lkdGg9IjE1IiBoZWlnaHQ9IjE1IiBmaWxsPSJjdXJyZW50Q29sb3IiCiAgICAgICAgICAgICAgICAgICAgY2xhc3M9ImJpIGJpLXRocmVlLWRvdHMtdmVydGljYWwiIHZpZXdCb3g9IjAgMCAxNiAxNiI+CiAgICAgICAgICAgICAgICAgICAgPHBhdGgKICAgICAgICAgICAgICAgICAgICAgIGQ9Ik05LjUgMTNhMS41IDEuNSAwIDEgMS0zIDAgMS41IDEuNSAwIDAgMSAzIDB6bTAtNWExLjUgMS41IDAgMSAxLTMgMCAxLjUgMS41IDAgMCAxIDMgMHptMC01YTEuNSAxLjUgMCAxIDEtMyAwIDEuNSAxLjUgMCAwIDEgMyAweiIgLz4KICAgICAgICAgICAgICAgICAgPC9zdmc+CiAgICAgICAgICAgICAgICA8L3NwYW4+IC0tPgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPGRpdiBjbGFzcz0ibWVzc2FnZS1hcmVhIiB2LWlmPSJoaXN0b3J5Lmxlbmd0aCA+IDAgJiYgc2VuZF9hdHRhY2htZW50X2RldGFpbC5zaG93X3ByZXZpZXcgPT0gZmFsc2UiPiAKICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJtZXNzYWdlLXRhYmxlLXNjcm9sbCIgaWQ9InNjcm9sbGluZy1kaXYtd2hhdHNhcHAiIEBzY3JvbGw9ImNoYXRTY3JvbGxNZXNzYWdlcyI+CiAgICAgICAgICAgICAgICA8ZGl2IHYtaWY9InNjcm9sbF9zcGlubmVyX2NoYXQiPgogICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJsZHMtcmluZyI+CiAgICAgICAgICAgICAgICAgICAgPGRpdj48L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8ZGl2PjwvZGl2PgogICAgICAgICAgICAgICAgICAgIDxkaXY+PC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPGRpdj48L2Rpdj4KICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImQtZmxleCBmbGV4LWNvbHVtbiIgc3R5bGU9Im92ZXJmbG93OiBoaWRkZW47IHdpZHRoOiAxMDAlIj4KICAgICAgICAgICAgICAgICAgICA8ZGl2IHYtZm9yPSIoZGF0YSwgaW5kZXgpIGluIGhpc3RvcnkiIDprZXk9ImluZGV4Ij4KICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im0tMiIKICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9InRleHQtYWxpZ246IGNlbnRlcjsiIAogICAgICAgICAgICAgICAgICAgICAgICB2LWlmPSIhW251bGwsJyddLmluY2x1ZGVzKGRhdGEuYm90X3Jlc3BvbnNlX2RhdGUpICYmIGNoZWNrX3ByZXZpb3VzX21lc3NhZ2VfZGF0ZV9zYW1lKGluZGV4KSI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJjb252ZXJzYXRpb24tZGF0ZSI+e3sgZGF0YS5ib3RfcmVzcG9uc2VfZGF0ZX19PC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtc20tMTIiIHYtaWY9ImRhdGEuVXNlclF1ZXJ5IT09JyciPgogICAgICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3M9InB0LTIgcGwtMiBwYi0wIj4KICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iYmctd2hpdGUgbWItMCBzaGFkb3ctc20gdGV4dC1ibGFjayByb3VuZGVkIHVzZXItbXNnIiBzdHlsZT0id29yZC1icmVhazogYnJlYWstYWxsOyI+e3sgZGF0YS5Vc2VyUXVlcnkgfX08L3A+CiAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9InVzZXItbXNnLWZsYWciPjxzbWFsbD48L3NtYWxsPjwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0idGV4dC1ibGFjayB1c2VyLW1zZy10aW1lIHByLTIiPjxzbWFsbD57eyBmb3JtYXRVc2VyUXVlcnlUaW1lKGRhdGEuVXNlclF1ZXJ5X0RhdGVUaW1lKSB9fTwvc21hbGw+PC9wPgogICAgICAgICAgICAgICAgICAgICAgICA8L3RkPgogICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICA8ZGl2IHYtaWY9ImRhdGEuQk9UUmVzcG9uc2UubGVuZ3RoID4gMCI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9InJvdyBqdXN0aWZ5LWNvbnRlbnQtZW5kIiB2LWlmPSJkYXRhLkJPVFJlc3BvbnNlWzBdLnRleHQiPgogICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC1hdXRvIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC1zbSIgc3R5bGU9InBhZGRpbmctcmlnaHQ6IDI1cHg7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiB2LWZvcj0iKHRleHRzLCBpbmRleCkgaW4gZGF0YS5CT1RSZXNwb25zZSIgOmtleT0iaW5kZXgiIGNsYXNzPSJtYi0xIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iIG1iLTAgc2hhZG93LXNtIHRleHQtYmxhY2sgcHQtMiBwci0yIHBsLTMgYm90LXJlc3AtbXNnIiBzdHlsZT0id29yZC1icmVhazogYnJlYWstYWxsOyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7eyB0ZXh0cy50ZXh0IH19CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJ0ZXh0LWJsYWNrIGJvdC1yZXNwLXRpbWUgcHItMiI+PHNtYWxsPnt7IGZvcm1hdFVzZXJRdWVyeVRpbWUoZGF0YS5DaGF0X0RhdGV0aW1lKSB9fTwvc21hbGw+PC9wPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJib3QtcmVzcC1tc2ctZmxhZyI+PHNtYWxsPjwvc21hbGw+PC9wPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiB2LWlmPSJkYXRhLkJPVFJlc3BvbnNlWzBdLnByb2R1Y3RzIj4KICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJyb3cganVzdGlmeS1jb250ZW50LWVuZCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLTQgYm90LXJlc3AiPgogICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC1zbSIgdi1mb3I9Iihwcm9kdWN0LCBpbmRleCkgaW4gIHByb2R1Y3RfdmFyaWF0aW9uKGRhdGEuQk9UUmVzcG9uc2VbMF0ucHJvZHVjdHMucHJvZHVjdHNfbGlzdCkiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgOmtleT0iaW5kZXgiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY2FyZHMiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBjbGFzcz0iY2FyZHMtaW1nIiB2LWlmPSJwcm9kdWN0LmltZ191cmwgIT0gbnVsbCIgOnNyYz0iY2hlY2tfaW1hZ2VfdHlwZShwcm9kdWN0LmltZ191cmwpIi8+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW1nIGNsYXNzPSJjYXJkcy1pbWciIHYtZWxzZSBzcmM9Ii9pbWcvYmxhbmtfcHJvZHVjdF9pbWFnZS5wbmciCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFsdD0iTm8gUHJvZHVjdCBJbWFnZSIgLz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsYWJlbCBjbGFzcz0ibWItMCIgc3R5bGU9ImxpbmUtaGVpZ2h0OiAxLjU7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB7eyBwcm9kdWN0LnRpdGxlIH19CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxicj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGNsYXNzPSJtYi0wIiBzdHlsZT0ibGluZS1oZWlnaHQ6IDEuNTsiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt7IHByb2R1Y3QudmFyaWF0aW9uIH19CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxicj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGNsYXNzPSJtYi0wIiBzdHlsZT0ibGluZS1oZWlnaHQ6IDEuNTsiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt7IHByb2R1Y3QucHJpY2UgfX0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9sYWJlbD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9InRleHQtYmxhY2siIHN0eWxlPSJ0ZXh0LWFsaWduOiBlbmQgIWltcG9ydGFudDsgbWFyZ2luOiAwOyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzbWFsbD57eyBkYXRhLmJvdF9yZXNwb25zZV90aW1lIH19PC9zbWFsbD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgICA8IS0tIDwvZGl2PiAtLT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZC1mbGV4IiAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9Im1hcmdpbi10b3A6IDFweDsgbWF4LXdpZHRoOiAyMDVweCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0id2lkdGg6IDEwMCUiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzcz0icHJldmlldy1idXR0b24tZGl2IgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9InRleHQtYWxpZ246IGNlbnRlcjsiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3M9InByZXZpZXctYnV0dG9uIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA6aHJlZj0icHJvZHVjdC51cmwiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRhcmdldD0iX2JsYW5rIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjb2xvcj0iIzBiNjdhYSIgY2xhc3M9IiIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPjxzdmcKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgd2lkdGg9IjE3IgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhlaWdodD0iMTciCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmlld0JveD0iMCAwIDI0IDI0IgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZpbGw9Im5vbmUiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3Ryb2tlPSIjMGI2N2FhIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0cm9rZS13aWR0aD0iMiIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdHJva2UtbGluZWNhcD0icm91bmQiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3Ryb2tlLWxpbmVqb2luPSJyb3VuZCIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzcz0ibXItMiIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwYXRoCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkPSJNMTggMTN2NmEyIDIgMCAwIDEtMiAySDVhMiAyIDAgMCAxLTItMlY4YTIgMiAwIDAgMSAyLTJoNiIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA+PC9wYXRoPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwb2x5bGluZSBwb2ludHM9IjE1IDMgMjEgMyAyMSA5Ij48L3BvbHlsaW5lPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaW5lCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB4MT0iMTAiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB5MT0iMTQiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB4Mj0iMjEiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB5Mj0iMyIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA+PC9saW5lPjwvc3ZnCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPkJ1eSBOb3cKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9zcGFuPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9ImJvdC1yZXNwLW1zZy1mbGFnLWNhcmQiPjxzbWFsbD48L3NtYWxsPjwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgdi1pZj0iZGF0YS5CT1RSZXNwb25zZVswXS5jYXJkICE9IHVuZGVmaW5lZCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBkaXYgY2xhc3M9InJvdyBqdXN0aWZ5LWNvbnRlbnQtZW5kIj4KICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtNCBib3QtcmVzcCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC1zbSBjYXJvdXNlbF9jYXJkcyIgc3R5bGU9IiIgdi1mb3I9IihjYXJvdXNlbCwgaW5kZXgpIGluIGRhdGEuQk9UUmVzcG9uc2VbMF0uY2FyZCIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA6a2V5PSJpbmRleCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNhcmRzIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjYXJvdXNlbF9jYXJkX3NpbmdsZSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IHYtaWY9ImNhcm91c2VsLmltYWdlIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBjbGFzcz0iY2FyZHMtaW1nIiA6c3JjPWNhcm91c2VsLmltYWdlIGFsdD0iY2Fyb3VzZWwgSW1hZ2UiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IHYtaWY9ImNhcm91c2VsLnZpZGVvIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlmcmFtZSA6c3JjPSJjYXJvdXNlbC52aWRlbyIgYWxsb3dmdWxsc2NyZWVuIGFsbG93dHJhbnNwYXJlbmN5CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgYWxsb3c9ImF1dG9wbGF5Ij48L2lmcmFtZT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icGwtMSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwIHYtaWY9ImNhcm91c2VsLnRpdGxlIj57eyBjYXJvdXNlbC50aXRsZSB9fTwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IHYtaWY9ImNhcm91c2VsLnRleHQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHA+e3sgY2Fyb3VzZWwudGV4dCB9fTwvcD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJ0ZXh0LWJsYWNrIiBzdHlsZT0idGV4dC1hbGlnbjogZW5kICFpbXBvcnRhbnQ7IG1hcmdpbjogMDsiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c21hbGw+e3sgZGF0YS5ib3RfcmVzcG9uc2VfdGltZSB9fTwvc21hbGw+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3A+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgdi1mb3I9IihidG4sIGluZHgpIGluIGNhcm91c2VsLmJ1dHRvbnMiIDprZXk9ImluZHgiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzcz0iZC1mbGV4IiAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJtYXJnaW4tdG9wOiAxcHg7IG1heC13aWR0aDogMjA1cHgiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJldmlldy1idXR0b24tZGl2IiB2LWlmPSJCb29sZWFuKGJ0bi50aXRsZSkgJiYgQm9vbGVhbihidG4udmFsdWUpIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGEgY2xhc3M9InByZXZpZXctYnV0dG9uIiB0eXBlPSJidXR0b24iIEBjbGljaz0iY3VzdG9tX2J1dHRvbl9jbGljayhidG4sIGl0ZW0pIiA6a2V5PSJpbmRleCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAge3sgYnRuLnRpdGxlIH19CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJib3QtcmVzcC1tc2ctZmxhZy1jYXJkIj48c21hbGw+PC9zbWFsbD48L3A+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IHYtaWY9IkJvb2xlYW4oZGF0YS5CT1RSZXNwb25zZVswXS50ZW1wbGF0ZSkiPgogICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgZGl2IGNsYXNzPSJyb3cganVzdGlmeS1jb250ZW50LWVuZCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLTQgYm90LXJlc3AiPgogICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC1zbSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY2FyZHMiPgogICAgICAgICAgICAgICAgICAgICAgICA8IS0tIDxkaXYKICAgICAgICAgICAgICAgICAgICAgICAgICB2LWZvcj0iKGNvbXAsIG5hbWUsIGluZGV4KSBpbiBwcmV2aWV3X3RlbXBsYXRlX2RhdGEiCiAgICAgICAgICAgICAgICAgICAgICAgICAgOmtleT0iaW5kZXgiCiAgICAgICAgICAgICAgICAgICAgICAgID4gLS0+CiAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiB2LWlmPSJCb29sZWFuKGRhdGEuQk9UUmVzcG9uc2VbMF0udGVtcGxhdGVbJ0hFQURFUiddKSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IHYtaWY9ImRhdGEuQk9UUmVzcG9uc2VbMF0udGVtcGxhdGVbJ0hFQURFUiddLnR5cGUgPT0gJ0lNQUdFJyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgY2xhc3M9ImNhcmRzLWltZyIgOnNyYz0iZGF0YS5CT1RSZXNwb25zZVswXS50ZW1wbGF0ZVsnSEVBREVSJ10uYm9keSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgdi1lbHNlPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwPnt7ZGF0YS5CT1RSZXNwb25zZVswXS50ZW1wbGF0ZVsnSEVBREVSJ10uYm9keX19PC9wPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iIiB2LWlmPSJCb29sZWFuKGRhdGEuQk9UUmVzcG9uc2VbMF0udGVtcGxhdGVbJ0JPRFknXSkiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIHYtaWY9ImRhdGEuQk9UUmVzcG9uc2VbMF0udGVtcGxhdGVbJ0JPRFknXS50eXBlID09ICd0ZXh0JyIKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlPSJsaW5lLWhlaWdodDogMS41OyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt7IGRhdGEuQk9UUmVzcG9uc2VbMF0udGVtcGxhdGVbJ0JPRFknXS5ib2R5IH19CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2xhYmVsPgogICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgdi1pZj0iQm9vbGVhbihkYXRhLkJPVFJlc3BvbnNlWzBdLnRlbXBsYXRlWydGT09URVInXSkiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHYtaWY9ImRhdGEuQk9UUmVzcG9uc2VbMF0udGVtcGxhdGVbJ0ZPT1RFUiddLnR5cGUgPT0gJ3RleHQnIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0iZm9udC1zaXplOiAxMHB4OyBsaW5lLWhlaWdodDogMS41OyBmb250LXdlaWdodDogMzAwOyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt7ZGF0YS5CT1RSZXNwb25zZVswXS50ZW1wbGF0ZVsnRk9PVEVSJ10uYm9keX19CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9InRleHQtYmxhY2siIHN0eWxlPSJ0ZXh0LWFsaWduOiBlbmQgIWltcG9ydGFudDsgbWFyZ2luOiAwOyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c21hbGw+e3sgZGF0YS5ib3RfcmVzcG9uc2VfdGltZSB9fTwvc21hbGw+CiAgICAgICAgICAgICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICAgICAgICAgICAgICA8IS0tIDwvZGl2PiAtLT4KICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJkLWZsZXgiIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9Im1hcmdpbi10b3A6IDFweDsgbWF4LXdpZHRoOiAyMDVweCIgCiAgICAgICAgICAgICAgICAgICAgICAgICAgICB2LWlmPSJCb29sZWFuKGRhdGEuQk9UUmVzcG9uc2VbMF0udGVtcGxhdGVbJ0JVVFRPTiddKSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHYtZm9yPSIoYnRuLCBpbmRleDEpIGluIGRhdGEuQk9UUmVzcG9uc2VbMF0udGVtcGxhdGVbJ0JVVFRPTiddLmJvZHkiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDprZXk9ImluZGV4MSIgc3R5bGU9IndpZHRoOiAxMDAlIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdi1pZj0iYnRuWyd0eXBlJ10gPT09ICdRVUlDS19SRVBMWSciCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY2xhc3M9InByZXZpZXctYnV0dG9uLWRpdiIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0idGV4dC1hbGlnbjogY2VudGVyOyIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA6c3R5bGU9ImJ0blsndGV4dCddID09ICdZZXMnID8gJ21hcmdpbi1yaWdodDogMXB4OycgOiAnJyIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzcz0icHJldmlldy1idXR0b24iCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY29sb3I9InJnYmEoMTEsMTAzLDE3MCwxKSIgY2xhc3M9IiIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPnt7IGJ0blsndGV4dCddIH19CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHYtZWxzZS1pZj0iYnRuWyd0eXBlJ10gPT09ICdVUkwnIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPSJwcmV2aWV3LWJ1dHRvbi1kaXYiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU9InRleHQtYWxpZ246IGNlbnRlcjsiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgOmhyZWY9ImJ0bi51cmwiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0YXJnZXQ9Il9ibGFuayIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPSJwcmV2aWV3LWJ1dHRvbiIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c3BhbiBjb2xvcj0iIzBiNjdhYSIgY2xhc3M9IiIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPjxzdmcKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgd2lkdGg9IjE3IgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhlaWdodD0iMTciCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdmlld0JveD0iMCAwIDI0IDI0IgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZpbGw9Im5vbmUiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3Ryb2tlPSIjMGI2N2FhIgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN0cm9rZS13aWR0aD0iMiIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdHJva2UtbGluZWNhcD0icm91bmQiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3Ryb2tlLWxpbmVqb2luPSJyb3VuZCIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjbGFzcz0ibXItMiIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwYXRoCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBkPSJNMTggMTN2NmEyIDIgMCAwIDEtMiAySDVhMiAyIDAgMCAxLTItMlY4YTIgMiAwIDAgMSAyLTJoNiIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA+PC9wYXRoPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwb2x5bGluZSBwb2ludHM9IjE1IDMgMjEgMyAyMSA5Ij48L3BvbHlsaW5lPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaW5lCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB4MT0iMTAiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB5MT0iMTQiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB4Mj0iMjEiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB5Mj0iMyIKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA+PC9saW5lPjwvc3ZnCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgID57eyBidG5bJ3RleHQnXSB9fTwvc3BhbgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iYm90LXJlc3AtbXNnLWZsYWctY2FyZCI+PHNtYWxsPjwvc21hbGw+PC9wPgogICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiB2LWlmPSJpc19yZXNwb25zZV9pbWFnZShkYXRhLkJPVFJlc3BvbnNlWzBdKSIgY2xhc3M9InB0LTIgcGwtMiBwYi0wIj4KICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IHYtaWY9InR5cGVvZihkYXRhLkJPVFJlc3BvbnNlWzBdLmltYWdlKSA9PSAnc3RyaW5nJyIgPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBkaXYgY2xhc3M9InJvdyBqdXN0aWZ5LWNvbnRlbnQtZW5kIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLTYgYm90LXJlc3AiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC1zbSBjYXJvdXNlbF9jYXJkcyIgc3R5bGU9IiIgPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNhcmRzIGltYWdlLWN1c3RvbSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjYXJvdXNlbF9jYXJkX3NpbmdsZSIgQGNsaWNrPSJzaG93X2ltYWdlX2Z1bGxzY3JlZW4oZGF0YS5CT1RSZXNwb25zZVswXS5pbWFnZSkiIHN0eWxlPSJjdXJzb3I6cG9pbnRlcjsiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpbWcgY2xhc3M9ImNhcmRzLWltZyIgOnNyYz1kYXRhLkJPVFJlc3BvbnNlWzBdLmltYWdlIGFsdD0iY2Fyb3VzZWwgSW1hZ2UiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0idGV4dC1ibGFjayIgc3R5bGU9InRleHQtYWxpZ246IGVuZCAhaW1wb3J0YW50OyBtYXJnaW46IDA7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c21hbGw+e3sgZm9ybWF0VXNlclF1ZXJ5VGltZShkYXRhLkNoYXRfRGF0ZXRpbWUpIH19PC9zbWFsbD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9wPiAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IHYtaWY9InR5cGVvZihkYXRhLkJPVFJlc3BvbnNlWzBdLmltYWdlKSA9PSAnb2JqZWN0JyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGRpdiBjbGFzcz0icm93IGp1c3RpZnktY29udGVudC1lbmQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtNiBib3QtcmVzcCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLXNtIGNhcm91c2VsX2NhcmRzIiBzdHlsZT0iIiA+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY2FyZHMgaW1hZ2UtY3VzdG9tIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNhcm91c2VsX2NhcmRfc2luZ2xlIiBAY2xpY2s9InNob3dfaW1hZ2VfZnVsbHNjcmVlbihkYXRhLkJPVFJlc3BvbnNlWzBdLmltYWdlLmxpbmspIiBzdHlsZT0iY3Vyc29yOnBvaW50ZXI7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBjbGFzcz0iY2FyZHMtaW1nIiA6c3JjPWRhdGEuQk9UUmVzcG9uc2VbMF0uaW1hZ2UubGluayBhbHQ9ImNhcm91c2VsIEltYWdlIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9InRleHQtYmxhY2siIHN0eWxlPSJtYXJnaW46IDA7d29yZC1icmVhazogYnJlYWstYWxsOyIgdi1pZj0iZGF0YS5CT1RSZXNwb25zZVswXS5pbWFnZS5jYXB0aW9uIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt7ZGF0YS5CT1RSZXNwb25zZVswXS5pbWFnZS5jYXB0aW9ufX0KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0idGV4dC1ibGFjayIgc3R5bGU9InRleHQtYWxpZ246IGVuZCAhaW1wb3J0YW50OyBtYXJnaW46IDA7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c21hbGw+e3sgZm9ybWF0VXNlclF1ZXJ5VGltZShkYXRhLkNoYXRfRGF0ZXRpbWUpIH19PC9zbWFsbD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9wPiAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiB2LWlmPSJpc19yZXNwb25zZV9kb2N1bWVudChkYXRhLkJPVFJlc3BvbnNlWzBdKSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiB2LWlmPSJ0eXBlb2YoZGF0YS5CT1RSZXNwb25zZVswXS5hdHRhY2htZW50KSA9PSAnb2JqZWN0JyIgY2xhc3M9IiIgc3R5bGU9Im1hcmdpbi1ib3R0b206IDFyZW07Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgZGl2IGNsYXNzPSJyb3cganVzdGlmeS1jb250ZW50LWVuZCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNvbC02IGJvdC1yZXNwIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wtc20gY2Fyb3VzZWxfY2FyZHMiIHN0eWxlPSIiID4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNhcmRzIGltYWdlLWN1c3RvbSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwhLS0ge3tkYXRhLkJPVFJlc3BvbnNlWzBdLmF0dGFjaG1lbnQuZmlsZW5hbWV9fSAtLT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPCEtLSA8ZGl2IGNsYXNzPSJjYXJvdXNlbF9jYXJkX3NpbmdsZSIgQGNsaWNrPSJzaG93X2ltYWdlX2Z1bGxzY3JlZW4oZGF0YS5CT1RSZXNwb25zZVswXS5pbWFnZSkiIHN0eWxlPSJjdXJzb3I6cG9pbnRlcjsiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGltZyBjbGFzcz0iY2FyZHMtaW1nIiA6c3JjPWRhdGEuQk9UUmVzcG9uc2VbMF0uaW1hZ2UgYWx0PSJjYXJvdXNlbCBJbWFnZSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHAgY2xhc3M9InRleHQtYmxhY2siIHN0eWxlPSJ0ZXh0LWFsaWduOiBlbmQgIWltcG9ydGFudDsgbWFyZ2luOiAwOyI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c21hbGw+e3sgZGF0YS5ib3RfcmVzcG9uc2VfdGltZSB9fTwvc21hbGw+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9wPiAKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+IC0tPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJjYXJvdXNlbF9jYXJkcyIgc3R5bGU9IiI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImNhcm91c2VsX2NhcmRfc2luZ2xlIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aW1nIHN0eWxlPSJmaWx0ZXI6IGJsdXIoMi4ycHgpOyIgY2xhc3M9ImNhcmRzLWltZyIgc3JjPS9pbWcvcGRmLXBsYWNlaG9sZGVyLTIucG5nIGFsdD0iY2Fyb3VzZWwgSW1hZ2UiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPCEtLSA8ZGl2IHYtaWY9ImNhcm91c2VsLnZpZGVvIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8aWZyYW1lIDpzcmM9ImNhcm91c2VsLnZpZGVvIiBhbGxvd2Z1bGxzY3JlZW4gYWxsb3d0cmFuc3BhcmVuY3kKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFsbG93PSJhdXRvcGxheSI+PC9pZnJhbWU+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PiAtLT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icGwtMSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHAgdi1pZj0iZGF0YS5CT1RSZXNwb25zZVswXS5hdHRhY2htZW50LmZpbGVuYW1lIiBjbGFzcz0iZC1mbGV4Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxpIHN0eWxlPSJjdXJzb3I6IHBvaW50ZXI7IiBAY2xpY2s9ImRvd25sb2FkX2RvY3VtZW50KGRhdGEuQk9UUmVzcG9uc2VbMF0uYXR0YWNobWVudCkiIGNsYXNzPSJmYSBmYS0yeCBwdC0xIGZhLWFycm93LWNpcmNsZS1kb3duIiBhcmlhLWhpZGRlbj0idHJ1ZSI+PC9pPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9Im1sLWF1dG8gcHQtMSI+IHt7ZGF0YS5CT1RSZXNwb25zZVswXS5hdHRhY2htZW50LmZpbGVuYW1lfX08L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwhLS0gPGRpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgdi1pZj0iY2Fyb3VzZWwudGV4dCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxwPnt7IGNhcm91c2VsLnRleHQgfX08L3A+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4gLS0+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0idGV4dC1ibGFjayIgc3R5bGU9InRleHQtYWxpZ246IGVuZCAhaW1wb3J0YW50OyBtYXJnaW46IDA7Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8c21hbGw+e3sgZm9ybWF0VXNlclF1ZXJ5VGltZShkYXRhLkNoYXRfRGF0ZXRpbWUpIH19PC9zbWFsbD4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9wPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8IS0tIDxkaXYgdi1mb3I9IihidG4sIGluZHgpIGluIGNhcm91c2VsLmJ1dHRvbnMiIDprZXk9ImluZHgiCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPSJkLWZsZXgiIAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0ibWFyZ2luLXRvcDogMXB4OyBtYXgtd2lkdGg6IDIwNXB4Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0icHJldmlldy1idXR0b24tZGl2IiB2LWlmPSJCb29sZWFuKGJ0bi50aXRsZSkgJiYgQm9vbGVhbihidG4udmFsdWUpIj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBjbGFzcz0icHJldmlldy1idXR0b24iIHR5cGU9ImJ1dHRvbiIgQGNsaWNrPSJjdXN0b21fYnV0dG9uX2NsaWNrKGJ0biwgaXRlbSkiIDprZXk9ImluZGV4Ij4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHt7IGJ0bi50aXRsZSB9fQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4gLS0+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0iYm90LXJlc3AtbXNnLWZsYWctY2FyZCI+PHNtYWxsPjwvc21hbGw+PC9wPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2PgogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8IS0tIDxkaXYgY2xhc3M9ImQtZmxleCI+CiAgICAgICAgICAgICAgICAgIDxpbnB1dCBkaXNhYmxlZCB0eXBlPSJ0ZXh0IiBwbGFjZWhvbGRlcj0iVHlwZSBoZXJlIHRvIGNoYXQuLi4iIGNsYXNzPSJmb3JtLWNvbnRyb2wiIGlkPSJzZW5kX21lc3NhZ2Vfd2hhdHNhcHAiPgogICAgICAgICAgICAgICAgICA8YnV0dG9uCiAgICAgICAgICAgICAgICAgICAgY2xhc3M9ImJ0biIKICAgICAgICAgICAgICAgICAgICB0eXBlPSJidXR0b24iCiAgICAgICAgICAgICAgICAgICAgaWQ9InNlbmRfYnRuIgogICAgICAgICAgICAgICAgICAgIEBjbGljaz0ic2VuZF9tZXNzYWdlX3RvX3VzZXIiCiAgICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgICAgICA8c3ZnCiAgICAgICAgICAgICAgICAgICAgICB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciCiAgICAgICAgICAgICAgICAgICAgICBpZD0ic2VuZF9idXR0b24iCiAgICAgICAgICAgICAgICAgICAgICBzdHlsZT0iZmlsbDogIzhhOGE4YTYzIgogICAgICAgICAgICAgICAgICAgICAgd2lkdGg9IjQwIgogICAgICAgICAgICAgICAgICAgICAgaGVpZ2h0PSIyNSIKICAgICAgICAgICAgICAgICAgICAgIHZpZXdCb3g9IjAgMCAyNCAyNCIKICAgICAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICAgICAgICA8cGF0aCBkPSJNMi4wMSAyMUwyMyAxMiAyLjAxIDMgMiAxMGwxNSAyLTE1IDJ6IiAvPgogICAgICAgICAgICAgICAgICAgICAgPHBhdGggZD0iTTAgMGgyNHYyNEgweiIgZmlsbD0ibm9uZSIgLz4KICAgICAgICAgICAgICAgICAgICA8L3N2Zz4KICAgICAgICAgICAgICAgICAgPC9idXR0b24+CiAgICAgICAgICAgICAgICA8L2Rpdj4gLS0+CiAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgPCEtLSA8ZGl2IHYtZWxzZT4KICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0idGV4dC1jZW50ZXIiPgogICAgICAgICAgICAgICAgICAgIDxoMyBjbGFzcz0ibXQtMyI+V2VsY29tZSB0byBXaGF0c2FwcCBJbnRlcmZhY2Ugb2YgQ2Vuc2U8L2gzPgogICAgICAgICAgICAgICAgICAgIDxoNj5QbGVhc2Ugc2VsZWN0IGEgY29udGFjdCBvciBzdGFydCBhIG5ldyBjaGF0PC9oNj4KICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICA8L2Rpdj4gLS0+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJzdGFydC1uZXctY29udiIgdi1pZj0ic3RhcnRfbmV3X2NvbnZfZGF0YS5zdGFydF9uZXdfY29udiI+CiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY29sLXNtLTEyIGQtZmxleCI+CiAgICAgICAgICAgICAgICA8aW1nIHNyYz0iL2ltZy93aGF0c2FwcC1kcC5wbmciIGFsdD0iIiBjbGFzcz0ibm8tcHJvZmlsZS1pbWFnZS1jb252IHJvdW5kZWQtY2lyY2xlIG15LTIiIGhlaWdodD0iNDBweCIgd2lkdGg9IjQwcHgiPgogICAgICAgICAgICAgICAgPGRpdj4KICAgICAgICAgICAgICAgICAgPHAgdi1pZj0iY3VzdG9tZXJfbmFtZSAhPSAnJyIgY2xhc3M9Im10LTMgbWwtMiBjdXN0b21lci1uYW1lIj57eyBjdXN0b21lcl9uYW1lIH19PC9wPgogICAgICAgICAgICAgICAgICA8cCB2LWVsc2UgY2xhc3M9Im10LTMgbWwtMiI+e3sgcGhvbmVubyB9fTwvcD4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJtZXNzYWdlLWFyZWEiID4gCiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibWVzc2FnZS10YWJsZS1zY3JvbGwiIGlkPSJzY3JvbGxpbmctZGl2LXdoYXRzYXBwIiBAc2Nyb2xsPSJjaGF0U2Nyb2xsTWVzc2FnZXMiPgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICAKICAgICAgICAgICAgICA8IS0tIDxkaXYgY2xhc3M9InVzZXItaW5mbyBwYi0yIj4KICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJ3LTI1IGQtZmxleCI+CiAgICAgICAgICAgICAgICAgIDxpbWcgc3JjPSIvaW1nL3doYXRzYXBwLWRwLnBuZyIgYWx0PSIiIGNsYXNzPSJwcm9maWxlLWltYWdlIHJvdW5kZWQtY2lyY2xlIj4KICAgICAgICAgICAgICAgICAgPHNwYW4+CiAgICAgICAgICAgICAgICAgICAgPHAgdi1pZj0iY3VzdG9tZXJfbmFtZSAhPSAnJyIgY2xhc3M9Im10LTMgbWItMCBwbC0zIGN1c3RvbWVyLW5hbWUiPnt7IGN1c3RvbWVyX25hbWUgfX08L3A+CiAgICAgICAgICAgICAgICAgICAgPHAgdi1lbHNlIGNsYXNzPSJtdC0wIG1iLTEiPnt7IHBob25lbm8gfX08L3A+CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJ3LTc1Ij4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImZsb2F0LXJpZ2h0IGQtZmxleCB3LTI1IgogICAgICAgICAgICAgICAgICAgIHN0eWxlPSJhbGlnbi1pdGVtczogY2VudGVyO3BhZGRpbmctbGVmdDozcmVtO2p1c3RpZnktY29udGVudDogc3BhY2UtYXJvdW5kO21hcmdpbi10b3A6IDVweDsiPgogICAgICAgICAgICAgICAgICAgIDxzdmcgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiB3aWR0aD0iMTUiIGhlaWdodD0iMTUiIGZpbGw9ImN1cnJlbnRDb2xvciIKICAgICAgICAgICAgICAgICAgICAgIGNsYXNzPSJiaSBiaS10aHJlZS1kb3RzLXZlcnRpY2FsIG1yLTQiIHZpZXdCb3g9IjAgMCAxNiAxNiI+CiAgICAgICAgICAgICAgICAgICAgICA8cGF0aAogICAgICAgICAgICAgICAgICAgICAgICBkPSJNOS41IDEzYTEuNSAxLjUgMCAxIDEtMyAwIDEuNSAxLjUgMCAwIDEgMyAwem0wLTVhMS41IDEuNSAwIDEgMS0zIDAgMS41IDEuNSAwIDAgMSAzIDB6bTAtNWExLjUgMS41IDAgMSAxLTMgMCAxLjUgMS41IDAgMCAxIDMgMHoiIC8+CiAgICAgICAgICAgICAgICAgICAgPC9zdmc+CiAgICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICAgIDwvc3Bhbj4KICAgICAgICAgICAgICA8L2Rpdj4gLS0+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJkb2N1bWVudC1wcmV2aWV3IiB2LXNob3c9InNlbmRfYXR0YWNobWVudF9kZXRhaWwuc2hvd19wcmV2aWV3ID09IHRydWUgJiYgZmlsZV9leHRlbnNpb25zLmltYWdlX2ZpbGVfZXh0ZW5zaW9ucy5pbmNsdWRlcyhzZW5kX2F0dGFjaG1lbnRfZGV0YWlsLm1lZGlhX2NvbnRlbnRfdHlwZSkiPgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImltYWdlLXByZXZpZXctY29udGFpbmVyIj4KICAgICAgICAgICAgICAgPGRpdiBpZD0iaW1nLXByZXZpZXciPjwvZGl2PgogICAgICAgICAgICAgIDwvZGl2PiAgCiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgPGRpdiBjbGFzcz0iZG9jdW1lbnQtcHJldmlldyIgdi1zaG93PSJzZW5kX2F0dGFjaG1lbnRfZGV0YWlsLnNob3dfcHJldmlldyA9PSB0cnVlICYmIGZpbGVfZXh0ZW5zaW9ucy5kb2N1bWVudF9maWxlX2V4dGVuc2lvbnMuaW5jbHVkZXMoc2VuZF9hdHRhY2htZW50X2RldGFpbC5tZWRpYV9jb250ZW50X3R5cGUpIj4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJkb2N1bWVudC1wcmV2aWV3LWNvbnRhaW5lciI+CiAgICAgICAgICAgICAgIDwhLS0gPGRpdiBpZD0iaW1nLXByZXZpZXciPjwvZGl2PiAtLT4KICAgICAgICAgICAgICAgPCEtLSA8ZGl2IHN0eWxlPSJoZWlnaHQ6NTAwcHg7ZGlzcGxheTogZmxleDsiIHYtaWY9InNlbmRfYXR0YWNobWVudF9kZXRhaWwubWVkaWFfY29udGVudF90eXBlID09ICdhcHBsaWNhdGlvbi9wZGYnIj4gLS0+CiAgICAgICAgICAgICAgIDxkaXYgc3R5bGU9ImhlaWdodDo1MDBweDsiPgogICAgICAgICAgICAgICAgICAgPHNwYW4gYXJpYS1oaWRkZW49InRydWUiIHN0eWxlPSJmb250LXNpemU6IDJyZW07Y29sb3I6IGFsaWNlYmx1ZTsiPiZ0aW1lczs8L3NwYW4+CiAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImQtZmxleCI+ICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgICAgIDxpbWcgc3R5bGU9Im1heC1oZWlnaHQ6IDMwMHB4O3RleHQtYWxpZ246IGNlbnRlcjttYXJnaW4tbGVmdDogYXV0bzttYXJnaW4tcmlnaHQ6IGF1dG87IiBzcmM9Ii9pbWcvZG9jdW1lbnQtcGxhY2Vob2xkZXItMS5wbmciIGFsdD0iIj4KICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJ0ZXh0LWNlbnRlciBwdC00Ij57e3NlbmRfYXR0YWNobWVudF9kZXRhaWwubWVkaWFfZmlsZV9uYW1lfX08L3A+CiAgICAgICAgICAgICAgIDwvZGl2PgoKICAgICAgICAgICAgICA8L2Rpdj4gIAogICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPGRpdiBzdHlsZT0id2lkdGg6MTAwJSIgY2xhc3M9InNlbmQtbWVzc2FnZS10by11c2VyIGQtZmxleCIgdi1pZj0ic2hvd19zZW5kX21lc3NhZ2UgJiYgIXN0YXJ0X25ld19jb252X2RhdGEuc3RhcnRfbmV3X2NvbnYiPgogICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJ0ZXh0IiByZWY9Im1lc3NhZ2Vfc2VuZGluZ190ZXh0Ym94IiBzdHlsZT0icGFkZGluZzogMjFweCAhaW1wb3J0YW50OyIgY2xhc3M9ImZvcm0tY29udHJvbCIgOmRpc2FibGVkPSIhY29udGFjdF9saXN0W2N1cnJlbnRfY29udGFjdF9pbmRleF0uaXNfbWVzc2FnZV9zZW5kaW5nX2VuYWJsZWQiCiAgICAgICAgICAgICAgICA6cGxhY2Vob2xkZXI9Im1lc3NhZ2VfdGV4dF9ib3hfcGxhY2Vob2xkZXIiIHYtbW9kZWw9Im1lc3NhZ2VfdG9fc2VuZCIgQGtleXByZXNzLmVudGVyPSJzZW5kX21lc3NhZ2VfdG9fdXNlciI+CiAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz0iYnRuIiB0eXBlPSJidXR0b24iIGlkPSJzZW5kX2J0biIgQGNsaWNrPSJzZW5kX21lc3NhZ2VfdG9fdXNlciIgdi1pZj0iY29udGFjdF9saXN0W2N1cnJlbnRfY29udGFjdF9pbmRleF0uaXNfbWVzc2FnZV9zZW5kaW5nX2VuYWJsZWQiPgogICAgICAgICAgICAgICAgPHN2ZyB4bWxucz0iaHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmciIGlkPSJzZW5kX2J1dHRvbiIgc3R5bGU9ImZpbGw6ICM4YThhOGE2MyIgd2lkdGg9IjQwIiBoZWlnaHQ9IjI1IgogICAgICAgICAgICAgICAgICB2aWV3Qm94PSIwIDAgMjQgMjQiPgogICAgICAgICAgICAgICAgICA8cGF0aCBkPSJNMi4wMSAyMUwyMyAxMiAyLjAxIDMgMiAxMGwxNSAyLTE1IDJ6IiAvPgogICAgICAgICAgICAgICAgICA8cGF0aCBkPSJNMCAwaDI0djI0SDB6IiBmaWxsPSJub25lIiAvPgogICAgICAgICAgICAgICAgPC9zdmc+CiAgICAgICAgICAgICAgPC9idXR0b24+CiAgICAgICAgICAgICAgPGEgaHJlZj0iamF2YXNjcmlwdDp2b2lkKDApOyIgaWQ9ImVuYWJsZS1tZXNzYWdlLXNlbmRpbmciIEBjbGljaz0iZW5hYmxlX3NlbmRpbmdfbWVzc2FnZXNfZm9yX3VzZXIiIHYtaWY9IiFjb250YWN0X2xpc3RbY3VycmVudF9jb250YWN0X2luZGV4XS5pc19tZXNzYWdlX3NlbmRpbmdfZW5hYmxlZCI+RW5hYmxlIE1lc3NhZ2UgU2VuZGluZzwvYT4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgc3R5bGU9IndpZHRoOjEwMCUiIGNsYXNzPSJzZW5kLW1lc3NhZ2UtdG8tdXNlciBkLWZsZXgiIHYtaWY9InNob3dfc2VuZF9tZXNzYWdlICYmIHN0YXJ0X25ld19jb252X2RhdGEuc3RhcnRfbmV3X2NvbnYiID4KICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0idGV4dCIgcmVmPSJtZXNzYWdlX3NlbmRpbmdfdGV4dGJveCIgc3R5bGU9InBhZGRpbmc6IDIxcHggIWltcG9ydGFudDsiIGNsYXNzPSJmb3JtLWNvbnRyb2wiIDpkaXNhYmxlZD0iIXN0YXJ0X25ld19jb252X2RhdGEuaXNfbWVzc2FnZV9zZW5kaW5nX2VuYWJsZWQiCiAgICAgICAgICAgICAgICA6cGxhY2Vob2xkZXI9Im1lc3NhZ2VfdGV4dF9ib3hfcGxhY2Vob2xkZXIiIHYtbW9kZWw9Im1lc3NhZ2VfdG9fc2VuZCIgQGtleXByZXNzLmVudGVyPSJzZW5kX21lc3NhZ2VfdG9fdXNlciI+CiAgICAgICAgICAgICAgPGJ1dHRvbiBjbGFzcz0iYnRuIiB0eXBlPSJidXR0b24iIGlkPSJzZW5kX2J0biIgQGNsaWNrPSJzZW5kX21lc3NhZ2VfdG9fdXNlciIgdi1pZj0ic3RhcnRfbmV3X2NvbnZfZGF0YS5pc19tZXNzYWdlX3NlbmRpbmdfZW5hYmxlZCI+CiAgICAgICAgICAgICAgICA8c3ZnIHhtbG5zPSJodHRwOi8vd3d3LnczLm9yZy8yMDAwL3N2ZyIgaWQ9InNlbmRfYnV0dG9uIiBzdHlsZT0iZmlsbDogIzhhOGE4YTYzIiB3aWR0aD0iNDAiIGhlaWdodD0iMjUiCiAgICAgICAgICAgICAgICAgIHZpZXdCb3g9IjAgMCAyNCAyNCI+CiAgICAgICAgICAgICAgICAgIDxwYXRoIGQ9Ik0yLjAxIDIxTDIzIDEyIDIuMDEgMyAyIDEwbDE1IDItMTUgMnoiIC8+CiAgICAgICAgICAgICAgICAgIDxwYXRoIGQ9Ik0wIDBoMjR2MjRIMHoiIGZpbGw9Im5vbmUiIC8+CiAgICAgICAgICAgICAgICA8L3N2Zz4KICAgICAgICAgICAgICA8L2J1dHRvbj4KICAgICAgICAgICAgICA8YSBocmVmPSJqYXZhc2NyaXB0OnZvaWQoMCk7IiBpZD0iZW5hYmxlLW1lc3NhZ2Utc2VuZGluZyIgQGNsaWNrPSJlbmFibGVfc2VuZGluZ19tZXNzYWdlc19mb3JfdXNlciIgdi1pZj0iIXN0YXJ0X25ld19jb252X2RhdGEuaXNfbWVzc2FnZV9zZW5kaW5nX2VuYWJsZWQiPkVuYWJsZSBNZXNzYWdlIFNlbmRpbmc8L2E+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICAgIDwvZGl2PgogICAgPC9kaXY+CiAgICA8ZGl2CiAgICAgIGlkPSJzaG93SW1hZ2VNb2RhbCIKICAgICAgY2xhc3M9Im1vZGFsIGZhZGUgZGFzaC1tb2RhbCIKICAgICAgcm9sZT0iZGlhbG9nIgogICAgPgogICAgICA8ZGl2IGNsYXNzPSJtb2RhbC1kaWFsb2cgbW9kYWwtbGciPgogICAgICAgIDxkaXYgY2xhc3M9Im1vZGFsLWNvbnRlbnQiPgogICAgICAgIDxidXR0b24gdHlwZT0iYnV0dG9uIiBjbGFzcz0iY2xvc2UiIGRhdGEtZGlzbWlzcz0ibW9kYWwiPgogICAgICAgICAgPHNwYW4gYXJpYS1oaWRkZW49InRydWUiIHN0eWxlPSJmb250LXNpemU6IDJyZW07Y29sb3I6IGFsaWNlYmx1ZTsiPiZ0aW1lczs8L3NwYW4+CiAgICAgICAgPC9idXR0b24+CiAgICAgICAgPGltZyA6c3JjPSJjdXJyZW50X2Z1bGxzY3JlZW5faW1hZ2Vfc3JjIiA+CiAgICAgICAgPC9kaXY+CiAgICAgIDwvZGl2PgogICAgPC9kaXY+CiAgICA8ZGl2CiAgICAgIGlkPSJhZGRDb250YWN0TW9kYWwiCiAgICAgIGNsYXNzPSJtb2RhbCBmYWRlIGRhc2gtbW9kYWwiCiAgICAgIHJvbGU9ImRpYWxvZyIKICAgID4KICAgICAgPGRpdiBjbGFzcz0ibW9kYWwtZGlhbG9nIG1vZGFsLWxnIj4KICAgICAgICA8ZGl2IGNsYXNzPSJtb2RhbC1jb250ZW50Ij4KICAgICAgICA8ZGl2IGNsYXNzPSJtb2RhbC1oZWFkIGQtZmxleCBhbGlnbi1pdGVtcy1jZW50ZXIgbS0yIj4KICAgICAgICAgIDxkaXYgY2xhc3M9ImhlYWQtaWNuIj4KICAgICAgICAgICAgPGltZyBzcmM9Ii9pbWcvbXNnLWJsdWUucG5nIiBhbHQgLz4KICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPGgzPkFkZCBDb250YWN0PC9oMz4KICAgICAgICAgIDxidXR0b24gdHlwZT0iYnV0dG9uIiBjbGFzcz0iY2xvc2UiIGRhdGEtZGlzbWlzcz0ibW9kYWwiIHN0eWxlPSJ0b3A6IGluaXRpYWw7Ij4KICAgICAgICAgICAgPGltZyBzcmM9Ii9pbWcvY2xvc2UtaWNuLnBuZyIgYWx0IC8+CiAgICAgICAgICA8L2J1dHRvbj4KICAgICAgICA8L2Rpdj4KICAgICAgICA8ZGl2IGNsYXNzPSJtb2RhbC1ib2R5Ij4KICAgICAgICAgIDxkaXYgY2xhc3M9ImZvcm0tZ3JvdXAiPgogICAgICAgICAgICA8bGFiZWw+TnVtYmVyPC9sYWJlbD4KICAgICAgICAgICAgPCEtLSA8aW5wdXQKICAgICAgICAgICAgICB0eXBlPSJ0ZXh0IgogICAgICAgICAgICAgIHYtbW9kZWwudHJpbT0iYWRkX25ld19jb250YWN0LnBob25lX251bWJlciIKICAgICAgICAgICAgICBjbGFzcz0iZm9ybS1jb250cm9sIgogICAgICAgICAgICAgIHBsYWNlaG9sZGVyPSJFbnRlciBQaG9uZSBOdW1iZXIiCiAgICAgICAgICAgICAgaWQ9InBob25lX251bWJlciIKICAgICAgICAgICAgLz4gLS0+CiAgICAgICAgICAgIDx2dWUtcGhvbmUtbnVtYmVyLWlucHV0CiAgICAgICAgICAgICAgdi1tb2RlbD0iYWRkX25ld19jb250YWN0LmZvcm1hdHRlZE51bWJlciIKICAgICAgICAgICAgICA6bm8tdXNlLWJyb3dzZXItbG9jYWxlPSJ0cnVlIgogICAgICAgICAgICAgIGNvbG9yPSIjNTNiOWQwIgogICAgICAgICAgICAgIHZhbGlkLWNvbG9yPSIjY2NjIgogICAgICAgICAgICAgIEB1cGRhdGU9ImFkZF9uZXdfY29udGFjdC5waG9uZV9udW1iZXIgPSAkZXZlbnQuZm9ybWF0dGVkTnVtYmVyIgogICAgICAgICAgICA+CiAgICAgICAgICAgIDwvdnVlLXBob25lLW51bWJlci1pbnB1dD4KICAgICAgICAgICAgPGxhYmVsPk5hbWU8L2xhYmVsPgogICAgICAgICAgICA8aW5wdXQKICAgICAgICAgICAgICB0eXBlPSJ0ZXh0IgogICAgICAgICAgICAgIHYtbW9kZWwudHJpbT0iYWRkX25ld19jb250YWN0LmNvbnRhY3RfbmFtZSIKICAgICAgICAgICAgICBjbGFzcz0iZm9ybS1jb250cm9sIgogICAgICAgICAgICAgIHBsYWNlaG9sZGVyPSJFbnRlciBDb250YWN0IE5hbWUiCiAgICAgICAgICAgICAgaWQ9ImNvbnRhY3RfbmFtZSIKICAgICAgICAgICAgLz4KICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgICAgIDxkaXYgY2xhc3M9Im1vZGFsLWZvb3RlciI+CiAgICAgICAgICA8ZGl2IGNsYXNzPSJtci1hdXRvIiBAY2xpY2s9Im9wZW5faW1wb3J0X2Zyb21fY3N2X21vZGFsIiBzdHlsZT0iY3Vyc29yOnBvaW50ZXI7Ij4KICAgICAgICAgICAgPGkgY2xhc3M9ImZhIGZhLXBhcGVyY2xpcCBtci0yIiBhcmlhLWhpZGRlbj0idHJ1ZSI+PC9pPiBJbXBvcnQgZnJvbSBDU1YgRmlsZQogICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDxkaXYgY2xhc3M9ImJ0bi13cmFwIGNhcmQtYWN0IHRleHQtcmlnaHQgbXQtMCBweS0wIGJvcmRlci10b3AtMCI+CiAgICAgICAgICAgICAgPGJ1dHRvbgogICAgICAgICAgICAgICAgdHlwZT0iYnV0dG9uIgogICAgICAgICAgICAgICAgY2xhc3M9ImJ0biBidG4tbGluayIKICAgICAgICAgICAgICAgIGRhdGEtZGlzbWlzcz0ibW9kYWwiCiAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgQ2FuY2VsCiAgICAgICAgICAgICAgPC9idXR0b24+CiAgICAgICAgICAgICAgPGJ1dHRvbgogICAgICAgICAgICAgICAgdHlwZT0ic3VibWl0IgogICAgICAgICAgICAgICAgY2xhc3M9ImRhcmtibHVlLWJ0biIKICAgICAgICAgICAgICAgIGlkPSJyZXNfbl9pbnRfc2F2ZSIKICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICBTYXZlCiAgICAgICAgICAgICAgPC9idXR0b24+CiAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICAgIDwvZGl2PgogICAgPC9kaXY+CiAgICA8ZGl2CiAgICAgIGlkPSJzZW5kVGVtcGxhdGVNb2RhbCIKICAgICAgY2xhc3M9Im1vZGFsIGZhZGUgZGFzaC1tb2RhbCIKICAgICAgcm9sZT0iZGlhbG9nIgogICAgPgogICAgICA8ZGl2IGNsYXNzPSJtb2RhbC1kaWFsb2cgbW9kYWwtbGciPgogICAgICAgIDxkaXYgY2xhc3M9Im1vZGFsLWNvbnRlbnQiPgogICAgICAgIDxkaXYgY2xhc3M9Im1vZGFsLWhlYWQgZC1mbGV4IGFsaWduLWl0ZW1zLWNlbnRlciBtLTIiPgogICAgICAgICAgPGRpdiBjbGFzcz0iaGVhZC1pY24iPgogICAgICAgICAgICA8aW1nIHNyYz0iL2ltZy9tc2ctYmx1ZS5wbmciIGFsdCAvPgogICAgICAgICAgPC9kaXY+CiAgICAgICAgICA8aDM+U2VuZCBUZW1wbGF0ZTwvaDM+CiAgICAgICAgICA8YnV0dG9uIHR5cGU9ImJ1dHRvbiIgY2xhc3M9ImNsb3NlIiBkYXRhLWRpc21pc3M9Im1vZGFsIiBzdHlsZT0idG9wOiBpbml0aWFsOyI+CiAgICAgICAgICAgIDxpbWcgc3JjPSIvaW1nL2Nsb3NlLWljbi5wbmciIGFsdCAvPgogICAgICAgICAgPC9idXR0b24+CiAgICAgICAgPC9kaXY+CiAgICAgICAgPGRpdiBjbGFzcz0ibW9kYWwtYm9keSI+CiAgICAgICAgICA8ZGl2PgogICAgICAgICAgICA8aDY+IFNlbGVjdCBUZW1wbGF0ZTo8L2g2PgogICAgICAgICAgICAgIDx0YWJsZSBjbGFzcz0idGFibGUiIHN0eWxlPSJvdmVyZmxvdy15OiBhdXRvIj4KICAgICAgICAgICAgICAgIDx0cgogICAgICAgICAgICAgICAgICB2LWZvcj0iKHRlbXBsYXRlLCBpbmRleCkgaW4gd2hhdHNhcHBfdGVtcGxhdGVzLnRlbXBsYXRlc19saXN0IgogICAgICAgICAgICAgICAgICA6a2V5PSJpbmRleCIKICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgICAgPHRkIHNjb3BlPSJyb3ciIHN0eWxlPSJib3JkZXI6bm9uZTsgcGFkZGluZzowLjI1cmVtOyI+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZm9ybS1jaGVjayI+CiAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgIHR5cGU9InJhZGlvIiBuYW1lPSJkc2RmIiBpZD0iaW5kZXhhYiIgOnZhbHVlPSJ0ZW1wbGF0ZS50ZW1wbGF0ZV9pZCIgdi1tb2RlbD0id2hhdHNhcHBfdGVtcGxhdGVzLnNlbGVjdGVkX3RlbXBsYXRlIj4KICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGZvcj0iIiBjbGFzcz0ibWwtMyI+IHt7IHRlbXBsYXRlLnRlbXBsYXRlX25hbWUgfX08L2xhYmVsPgogICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICA8L3RkPgogICAgICAgICAgICAgICAgPC90cj4KICAgICAgICAgICAgICA8L3RhYmxlPgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJtb2RhbC1mb290ZXIiPgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImJ0bi13cmFwIGNhcmQtYWN0IHRleHQtcmlnaHQgbXQtMCBweS0wIGJvcmRlci10b3AtMCI+CiAgICAgICAgICAgICAgICA8YnV0dG9uCiAgICAgICAgICAgICAgICAgIHR5cGU9ImJ1dHRvbiIKICAgICAgICAgICAgICAgICAgY2xhc3M9ImJ0biBidG4tbGluayIKICAgICAgICAgICAgICAgICAgZGF0YS1kaXNtaXNzPSJtb2RhbCIKICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgICAgQ2FuY2VsCiAgICAgICAgICAgICAgICA8L2J1dHRvbj4KICAgICAgICAgICAgICAgIDxidXR0b24KICAgICAgICAgICAgICAgICAgdHlwZT0ic3VibWl0IgogICAgICAgICAgICAgICAgICBjbGFzcz0iZGFya2JsdWUtYnRuIgogICAgICAgICAgICAgICAgICBpZD0icmVzX25faW50X3NhdmUiCiAgICAgICAgICAgICAgICAgIEBjbGljaz0ic2VuZF90ZW1wbGF0ZV90b19jdXN0b21lcigpIgogICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgICBTZW5kCiAgICAgICAgICAgICAgICA8L2J1dHRvbj4KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgICA8L2Rpdj4KICAgIDwvZGl2PgogICAgPGRpdgogICAgICBpZD0iaW1wb3J0Q29udGFjdENTVk1vZGFsIgogICAgICBjbGFzcz0ibW9kYWwgZmFkZSBkYXNoLW1vZGFsIgogICAgICByb2xlPSJkaWFsb2ciCiAgICA+CiAgICAgIDxkaXYgY2xhc3M9Im1vZGFsLWRpYWxvZyBtb2RhbC1sZyI+CiAgICAgICAgPGRpdiBjbGFzcz0ibW9kYWwtY29udGVudCI+CiAgICAgICAgPGRpdiBjbGFzcz0ibW9kYWwtaGVhZCBkLWZsZXggYWxpZ24taXRlbXMtY2VudGVyIG0tMiI+CiAgICAgICAgICA8ZGl2IGNsYXNzPSJoZWFkLWljbiI+CiAgICAgICAgICAgIDxpbWcgc3JjPSIvaW1nL21zZy1ibHVlLnBuZyIgYWx0IC8+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDxoMz5JbXBvcnQgQ29udGFjdHMgZnJvbSBDU1Y8L2gzPgogICAgICAgICAgPGJ1dHRvbiB0eXBlPSJidXR0b24iIGNsYXNzPSJjbG9zZSIgZGF0YS1kaXNtaXNzPSJtb2RhbCIgc3R5bGU9InRvcDogaW5pdGlhbDsiPgogICAgICAgICAgICA8aW1nIHNyYz0iL2ltZy9jbG9zZS1pY24ucG5nIiBhbHQgLz4KICAgICAgICAgIDwvYnV0dG9uPgogICAgICAgIDwvZGl2PgogICAgICAgIDxkaXYgY2xhc3M9Im1vZGFsLWJvZHkiPgogICAgICAgICAgPGRpdj4KICAgICAgICAgICAgPGZvcm0gQHN1Ym1pdC5wcmV2ZW50PSJmaWxlX3N1Ym1pdF91cGxvYWRfY29udGFjdHMiPgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZvcm0tZ3JvdXAiPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iY3VzdG9tLWZpbGUiPgogICAgICAgICAgICAgICAgICA8aW5wdXQKICAgICAgICAgICAgICAgICAgICB0eXBlPSJmaWxlIgogICAgICAgICAgICAgICAgICAgIGFjY2VwdD0iLmNzdiIKICAgICAgICAgICAgICAgICAgICBjbGFzcz0iY3VzdG9tLWZpbGUtaW5wdXQiCiAgICAgICAgICAgICAgICAgICAgQGNoYW5nZT0iZmlsZV9pbnB1dF9jb250YWN0c19jc3YiCiAgICAgICAgICAgICAgICAgICAgaWQ9ImlucHV0R3JvdXBVcGxvYWRGaWxlY3N2IgogICAgICAgICAgICAgICAgICAgIGFyaWEtZGVzY3JpYmVkYnk9ImlucHV0R3JvdXBGaWxlQWRkb25jc3YiCiAgICAgICAgICAgICAgICAgIC8+CiAgICAgICAgICAgICAgICAgIDxsYWJlbAogICAgICAgICAgICAgICAgICAgIHN0eWxlPSJmb250LXdlaWdodDogNDAwOyBsaW5lLWhlaWdodDogMTVweCIKICAgICAgICAgICAgICAgICAgICBjbGFzcz0iY3VzdG9tLWZpbGUtbGFiZWwgZm9ybS1jb250cm9sIgogICAgICAgICAgICAgICAgICAgIGZvcj0iZmlsZSIKICAgICAgICAgICAgICAgICAgICA+e3tjb250YWN0X2Nzdi5maWxlX2xhYmVsfX08L2xhYmVsCiAgICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgPCEtLSA8cCBjbGFzcz0ibXQtMiIgc3R5bGU9ImNvbG9yOiAjZmEwMDAwOyBmb250LXNpemU6IDAuODVyZW0iPgogICAgICAgICAgICAgICAgICAqIFBsZWFzZSBOb3RlIHRoYXQgb25seSBSZXNwb25zZXMgd2l0aCBvbmx5IFRleHQgUmVzcG9uc2UgY2FuCiAgICAgICAgICAgICAgICAgIGJlIGFkZGVkIHZpYSBDU1YsIEFQSSBFbmRwb2ludHMgYW5kIFJlc3BvbnNlcyB3aXRoIEltYWdlIG5lZWQKICAgICAgICAgICAgICAgICAgdG8gYmUgYWRkZWQgZnJvbSB0aGUgcG9ydGFsLgogICAgICAgICAgICAgICAgPC9wPiAtLT4KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJidG4td3JhcCB0ZXh0LXJpZ2h0Ij4KICAgICAgICAgICAgICAgIDxhIGhyZWY9IiMiPgogICAgICAgICAgICAgICAgICBEb3dubG9hZCBTYW1wbGUgQ1NWIEZpbGUKICAgICAgICAgICAgICAgICAgPGkKICAgICAgICAgICAgICAgICAgICBjbGFzcz0iZmEgZmEtc3Bpbm5lciBmYS1zcGluIgogICAgICAgICAgICAgICAgICA+PC9pPgogICAgICAgICAgICAgICAgPC9hPgogICAgICAgICAgICAgICAgPGJ1dHRvbgogICAgICAgICAgICAgICAgICB0eXBlPSJidXR0b24iCiAgICAgICAgICAgICAgICAgIGNsYXNzPSJidG4gYnRuLWxpbmsiCiAgICAgICAgICAgICAgICAgIEBjbGljaz0iZW1wdHlfdXBsb2FkX2Nzdl9jb250YWN0cyIKICAgICAgICAgICAgICAgICAgZGF0YS1kaXNtaXNzPSJtb2RhbCIKICAgICAgICAgICAgICAgID4KICAgICAgICAgICAgICAgICAgQ2FuY2VsCiAgICAgICAgICAgICAgICA8L2J1dHRvbj4KICAgICAgICAgICAgICAgIDxidXR0b24gdHlwZT0ic3VibWl0IiBjbGFzcz0iZGFya2JsdWUtYnRuIj5TdWJtaXQ8L2J1dHRvbj4KICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9mb3JtPgogICAgICAgICAgICAgIAogICAgICAgICAgICA8IS0tIDxkaXYgY2xhc3M9Im1vZGFsLWZvb3RlciI+CiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iYnRuLXdyYXAgY2FyZC1hY3QgdGV4dC1yaWdodCBtdC0wIHB5LTAgYm9yZGVyLXRvcC0wIj4KICAgICAgICAgICAgICAgIDxidXR0b24KICAgICAgICAgICAgICAgICAgdHlwZT0iYnV0dG9uIgogICAgICAgICAgICAgICAgICBjbGFzcz0iYnRuIGJ0bi1saW5rIgogICAgICAgICAgICAgICAgICBkYXRhLWRpc21pc3M9Im1vZGFsIgogICAgICAgICAgICAgICAgPgogICAgICAgICAgICAgICAgICBDYW5jZWwKICAgICAgICAgICAgICAgIDwvYnV0dG9uPgogICAgICAgICAgICAgICAgPGJ1dHRvbgogICAgICAgICAgICAgICAgICB0eXBlPSJzdWJtaXQiCiAgICAgICAgICAgICAgICAgIGNsYXNzPSJkYXJrYmx1ZS1idG4iCiAgICAgICAgICAgICAgICAgIGlkPSJyZXNfbl9pbnRfc2F2ZSIKICAgICAgICAgICAgICAgICAgQGNsaWNrPSJzZW5kX3RlbXBsYXRlX3RvX2N1c3RvbWVyKCkiCiAgICAgICAgICAgICAgICA+CiAgICAgICAgICAgICAgICAgIFNlbmQKICAgICAgICAgICAgICAgIDwvYnV0dG9uPgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgIDwvZGl2PiAtLT4KICAgICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgICAgIDwvZGl2PgogICAgICA8L2Rpdj4KICAgIDwvZGl2PgogIDwvZGl2Pgo="},null]}