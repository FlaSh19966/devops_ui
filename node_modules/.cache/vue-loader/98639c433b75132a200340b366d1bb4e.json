{"remainingRequest":"/home/vimalesh/Elixir/chatbot-portal/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/vimalesh/Elixir/chatbot-portal/src/portal/Chatbot/Dashboard/Pages/PasswordValidator.vue?vue&type=style&index=0&id=11730ac7&lang=scss&scoped=true&","dependencies":[{"path":"/home/vimalesh/Elixir/chatbot-portal/src/portal/Chatbot/Dashboard/Pages/PasswordValidator.vue","mtime":1643027096176},{"path":"/home/vimalesh/Elixir/chatbot-portal/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vimalesh/Elixir/chatbot-portal/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/vimalesh/Elixir/chatbot-portal/node_modules/@vue/cli-service/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/vimalesh/Elixir/chatbot-portal/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vimalesh/Elixir/chatbot-portal/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vimalesh/Elixir/chatbot-portal/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKI3B3ZF92bGRfbXNnIHsKICAvLyBkaXNwbGF5OiBub25lOwogIGJhY2tncm91bmQ6ICNmZmY7CiAgY29sb3I6ICMwMDA7CiAgcG9zaXRpb246IHJlbGF0aXZlOwogIHBhZGRpbmc6IDIwcHg7CiAgbWFyZ2luLXRvcDogMTBweDsKfQoKLnZhbGlkIHsKICBjb2xvcjogZ3JlZW47Cn0KCi52YWxpZDpiZWZvcmUgewogIHBvc2l0aW9uOiByZWxhdGl2ZTsKICBsZWZ0OiAtMzVweDsKICBjb250ZW50OiAi4pyUIjsKfQoKLyogQWRkIGEgcmVkIHRleHQgY29sb3IgYW5kIGFuICJ4IiB3aGVuIHRoZSByZXF1aXJlbWVudHMgYXJlIHdyb25nICovCi5pbnZhbGlkIHsKICBjb2xvcjogcmVkOwp9CgouaW52YWxpZDpiZWZvcmUgewogIHBvc2l0aW9uOiByZWxhdGl2ZTsKICBsZWZ0OiAtMzVweDsKICBjb250ZW50OiAi4pyWIjsKfQouaXMtaW52YWxpZCB7CiAgY29sb3I6IHJlZDsKfQo="},{"version":3,"sources":["PasswordValidator.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"PasswordValidator.vue","sourceRoot":"src/portal/Chatbot/Dashboard/Pages","sourcesContent":["<template>\n  <div id=\"pwd_vld_msg\" v-show=\"show_password_validator\">\n    <h6>Password must contain the following:</h6>\n    <p id=\"letter\" :class=\"letter_class_list\" style=\"margin-left: 16%\">\n      A lower case letter\n    </p>\n    <p id=\"capital\" :class=\"capital_class_list\" style=\"margin-left: 16%\">\n      A capital (uppercase) letter\n    </p>\n    <p id=\"number\" :class=\"number_class_list\" style=\"margin-left: 16%\">\n      A number\n    </p>\n    <p id=\"special\" :class=\"special_class_list\" style=\"margin-left: 16%\">\n      A special character\n    </p>\n    <p id=\"length\" :class=\"length_class_list\" style=\"margin-left: 16%\">\n      Minimum 8 characters\n    </p>\n  </div>\n</template>\n<script>\nexport default {\n  name: \"PasswordValidator\",\n  data() {\n    return {\n      array: [],\n      correct_password: false,\n      show_password_validator: false,\n      letter_class_list: \"invalid\",\n      capital_class_list: \"invalid\",\n      number_class_list: \"invalid\",\n      special_class_list: \"invalid\",\n      length_class_list: \"invalid\",\n    };\n  },\n  props: {\n    testpassword: {\n      type: String,\n      default: \"\",\n    },\n  },\n  watch: {\n    testpassword() {\n      if (this.testpassword != \"\") {\n        this.show_password_validator = true;\n      } else {\n        this.show_password_validator = false;\n      }\n      var lowerCaseLetters = /[a-z]/g;\n      if (this.testpassword.match(lowerCaseLetters)) {\n        this.letter_class_list = \"valid\";\n        this.array[0] = 1;\n      } else {\n        this.letter_class_list = \"invalid\";\n        this.array[0] = 0;\n      }\n\n      // Validate capital letters\n      var upperCaseLetters = /[A-Z]/g;\n      if (this.testpassword.match(upperCaseLetters)) {\n        this.capital_class_list = \"valid\";\n        this.array[1] = 1;\n      } else {\n        this.capital_class_list = \"invalid\";\n        this.array[1] = 0;\n      }\n\n      // Validate numbers\n      var numbers = /[0-9]/g;\n      if (this.testpassword.match(numbers)) {\n        this.number_class_list = \"valid\";\n        this.array[2] = 1;\n      } else {\n        this.number_class_list = \"invalid\";\n        this.array[2] = 0;\n      }\n\n      // Special Character\n      // var specials = /[#@!%*?&$]/g;\n      var specials = /[#@!%*?&$^()+~|'{}:;.?~_+=<>/-]/g;\n      if (this.testpassword.match(specials)) {\n        this.special_class_list = \"valid\";\n        this.array[3] = 1;\n      } else {\n        this.special_class_list = \"invalid\";\n        this.array[3] = 0;\n      }\n      // Validate length\n      if (this.testpassword.length >= 8) {\n        this.length_class_list = \"valid\";\n        this.array[4] = 1;\n      } else {\n        this.length_class_list = \"invalid\";\n        this.array[4] = 0;\n      }\n      var sum =\n        this.array[0] +\n        this.array[1] +\n        this.array[2] +\n        this.array[3] +\n        this.array[4];\n      if (sum == 5 || sum == 0) {\n        this.show_password_validator = false;\n        this.correct_password = true;\n        this.$emit(\"correctPassword\", this.correct_password);\n        // console.log(this.correct_password);\n      } else {\n        this.show_password_validator = true;\n        this.correct_password = false;\n        this.$emit(\"correctPassword\", this.correct_password);\n        // console.log(this.correct_password);\n      }\n    },\n  },\n};\n</script>\n<style lang=\"scss\" scoped>\n#pwd_vld_msg {\n  // display: none;\n  background: #fff;\n  color: #000;\n  position: relative;\n  padding: 20px;\n  margin-top: 10px;\n}\n\n.valid {\n  color: green;\n}\n\n.valid:before {\n  position: relative;\n  left: -35px;\n  content: \"✔\";\n}\n\n/* Add a red text color and an \"x\" when the requirements are wrong */\n.invalid {\n  color: red;\n}\n\n.invalid:before {\n  position: relative;\n  left: -35px;\n  content: \"✖\";\n}\n.is-invalid {\n  color: red;\n}\n</style>"]}]}