{"remainingRequest":"/home/vimalesh/Learning/devops_ui/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/vimalesh/Learning/devops_ui/src/portal/Chatbot/Dashboard/User Management/CreateChatGroups.vue?vue&type=style&index=1&id=401c2c74&scoped=true&lang=css&","dependencies":[{"path":"/home/vimalesh/Learning/devops_ui/src/portal/Chatbot/Dashboard/User Management/CreateChatGroups.vue","mtime":1643027096184},{"path":"/home/vimalesh/Learning/devops_ui/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vimalesh/Learning/devops_ui/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/vimalesh/Learning/devops_ui/node_modules/@vue/cli-service/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/vimalesh/Learning/devops_ui/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vimalesh/Learning/devops_ui/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKdGQgPiAubXVsdGlzZWxlY3RfX3RhZyB7CiAgcGFkZGluZzogNHB4IDBweCA0cHggMTBweDsKfQoubXVsdGlzZWxlY3RfX29wdGlvbltkYXRhLXNlbGVjdD0iUHJlc3MgZW50ZXIgdG8gc2VsZWN0Il0gPiBzcGFuIHsKICBtYXJnaW4tbGVmdDogMTAlOwp9Cg=="},{"version":3,"sources":["CreateChatGroups.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAseA;AACA;AACA;AACA;AACA;AACA","file":"CreateChatGroups.vue","sourceRoot":"src/portal/Chatbot/Dashboard/User Management","sourcesContent":["<template>\n  <div>\n    <div class=\"spinner\" v-show=\"spinnerOn\"></div>\n    <div class=\"dash-cont\">\n      <div class=\"container-fluid\">\n        <div class=\"card dash-card\">\n          <div\n            class=\"card-header d-block d-sm-flex flex-wrap justify-content-between\"\n          >\n            <h4 class=\"mb-sm-0\">Chat Groups</h4>\n            <div class=\"card-act d-flex flex-wrap\">\n              <a\n                href=\"#\"\n                class=\"darkblue-btn\"\n                data-toggle=\"modal\"\n                data-target=\"#createchatmodal\"\n                style=\"height: 33px\"\n                id=\"chat_grp_btn\"\n              >\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  width=\"14\"\n                  height=\"13.997\"\n                  viewBox=\"0 0 14 13.997\"\n                >\n                  <path\n                    id=\"Union_13\"\n                    data-name=\"Union 13\"\n                    d=\"M-12684,2058v-5h-5a1,1,0,0,1-1-1,1,1,0,0,1,1-1h5v-5a1,1,0,0,1,1-1,1,1,0,0,1,1,1v5h5a1,1,0,0,1,1,1,1,1,0,0,1-1,1h-5v5a1,1,0,0,1-1,1A1,1,0,0,1-12684,2058Z\"\n                    transform=\"translate(12690.001 -2045.002)\"\n                    fill=\"#fff\"\n                  />\n                </svg>\n                Add Chat Group\n              </a>\n            </div>\n          </div>\n          <div class=\"card-body\">\n            <div class=\"table-box\">\n              <div class=\"table-responsive\">\n                <table class=\"table\">\n                  <thead>\n                    <tr>\n                      <th scope=\"col\" style=\"width: 5%\">ACTION</th>\n                      <th scope=\"col\" style=\"width: 20%\">GROUP NAME</th>\n                      <th scope=\"col\">USERS</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    <tr\n                      v-for=\"(chat_group, index) in chat_group_list\"\n                      :key=\"index\"\n                    >\n                      <td class=\"action\">\n                        <a href=\"#\" @click=\"edit_group(index)\">\n                          <svg\n                            xmlns=\"http://www.w3.org/2000/svg\"\n                            width=\"15.392\"\n                            height=\"15.392\"\n                            viewBox=\"0 0 15.392 15.392\"\n                            data-toggle=\"modal\"\n                            data-target=\"#createchatmodal\"\n                          >\n                            <path\n                              id=\"square-edit-outline\"\n                              d=\"M4.71,3A1.7,1.7,0,0,0,3,4.71V16.682a1.71,1.71,0,0,0,1.71,1.71H16.682a1.71,1.71,0,0,0,1.71-1.71V10.7h-1.71v5.986H4.71V4.71H10.7V3H4.71m10.928.855a.591.591,0,0,0-.41.171L14.185,5.061,16.322,7.2l1.043-1.035a.578.578,0,0,0,0-.812L16.04,4.026a.571.571,0,0,0-.4-.171M13.578,5.668l-6.3,6.311v2.138H9.413l6.3-6.311Z\"\n                              transform=\"translate(-3 -3)\"\n                              fill=\"#9499ae\"\n                            />\n                          </svg>\n                        </a>\n                        <a href=\"#\" @click=\"delete_single(index)\">\n                          <svg\n                            xmlns=\"http://www.w3.org/2000/svg\"\n                            width=\"13.682\"\n                            height=\"15.392\"\n                            viewBox=\"0 0 13.682 15.392\"\n                          >\n                            <path\n                              id=\"trash-can-outline\"\n                              d=\"M8.276,3v.855H4v1.71h.855V16.682a1.71,1.71,0,0,0,1.71,1.71h8.551a1.71,1.71,0,0,0,1.71-1.71V5.565h.855V3.855H13.406V3H8.276M6.565,5.565h8.551V16.682H6.565V5.565m1.71,1.71v7.7h1.71v-7.7H8.276m3.42,0v7.7h1.71v-7.7Z\"\n                              transform=\"translate(-4 -3)\"\n                              fill=\"#f23d3d\"\n                            />\n                          </svg>\n                        </a>\n                      </td>\n                      <td style=\"text-align: center\">\n                        {{ chat_group.group_name }}\n                      </td>\n                      <td>\n                        <span\n                          class=\"multiselect__tag\"\n                          v-for=\"(user, userindex) in chat_group.users_list\"\n                          :key=\"userindex\"\n                          >{{ user }} &nbsp;</span\n                        >\n                      </td>\n                    </tr>\n                  </tbody>\n                </table>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div\n      class=\"modal fade dash-modal\"\n      id=\"createchatmodal\"\n      tabindex=\"-1\"\n      role=\"dialog\"\n      aria-labelledby=\"createchatmodaltitle\"\n      aria-hidden=\"true\"\n    >\n      <div class=\"modal-dialog modal-dialog-centered\" role=\"document\">\n        <div class=\"modal-content\">\n          <div class=\"modal-body\">\n            <div class=\"modal-head d-flex align-items-center\">\n              <div class=\"head-icn\">\n                <img src=\"/img/msg-blue.png\" alt style=\"width: auto\" />\n              </div>\n              <h6>Kindly select the chat group name</h6>\n            </div>\n            <button\n              type=\"button\"\n              class=\"close\"\n              data-dismiss=\"modal\"\n              aria-label=\"Close\"\n            >\n              <img src=\"/img/close-icn.png\" alt />\n            </button>\n            <form @submit=\"submit_new_group\">\n              <div class=\"form-group\">\n                <label>Group Name</label>\n                <input\n                  class=\"form-control\"\n                  placeholder=\"Enter the group name\"\n                  v-model=\"group_name\"\n                  id=\"group_name_id\"\n                />\n              </div>\n              <div class=\"form-group\">\n                <label>Users</label>\n                <multiselect\n                  id=\"multiselect_id\"\n                  :close-on-select=\"false\"\n                  :taggable=\"true\"\n                  :multiple=\"true\"\n                  @select=\"user_selected\"\n                  @remove=\"remove_user\"\n                  :options=\"selected_users_list\"\n                  placeholder=\"Select Users\"\n                  track-by=\"user\"\n                  label=\"user\"\n                  v-model=\"selected_users\"\n                ></multiselect>\n              </div>\n              <div class=\"btn-wrap text-right\">\n                <button type=\"button\" class=\"btn btn-link\" data-dismiss=\"modal\">\n                  Cancel\n                </button>\n                <button\n                  type=\"submit\"\n                  class=\"darkblue-btn\"\n                  id=\"create_grp_save_btn\"\n                >\n                  Save\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n<script>\nimport axios from \"axios\";\nimport api_calls from \"@/portal/api_calls\";\nimport Multiselect from \"vue-multiselect\";\nimport Swal from \"sweetalert2\";\nexport default {\n  data() {\n    return {\n      chat_group_list: [],\n      group_name: \"\",\n      new_users_selected: [],\n      selected_users_list: [],\n      companyname: \"\",\n      companyid: \"\",\n      users_list: [],\n      selected_users: [],\n      isEdit: false,\n      spinnerOn: false,\n      admin_login_token: this.$session.get(\"GroupChatLoginToken\"),\n    };\n  },\n  created() {\n    this.load_chatgroup();\n  },\n  mounted() {\n    var vm = this;\n    $(\"#createchatmodal\").on(\"hidden.bs.modal\", () => {\n      vm.clear_fields();\n    });\n  },\n  components: {\n    Multiselect,\n  },\n  methods: {\n    load_chatgroup(){\n      if (\n        !this.$session.has(\"CompanyId\") &&\n        this.$session.get(\"UserInformation\").role == \"SuperAdmin\"\n      ) {\n        toastr.warning(\"Please select a company name from the dropdown\");\n      }\n      if (this.$session.get(\"UserInformation\").role == \"SuperAdmin\") {\n        if (this.$session.has(\"CompanyId\")) {\n          this.companyid = this.$session.get(\"CompanyId\");\n          this.companyname = this.$session.get(\"CompanyName\");\n        } else {\n          toastr.warning(\"Please select a company name from the dropdown\");\n        }\n      } else {\n        this.companyid = this.$session.get(\"UserInformation\").company_id;\n        this.companyname = this.$session.get(\"UserInformation\").company_name;\n      }\n      axios\n        .get(api_calls.chat_user_get_groups_url(), {\n          params: {\n            username: this.$session.get(\"UserInformation\").email,\n            token: this.$session.get(\"GroupChatLoginToken\"),\n          },\n        })\n        .then((response) => {\n          if (response.data.error == \"you need to log in\") {\n          } else {\n            for (var i in response.data) {\n              if (!response.data[i].includes(\"|\")) {\n                this.get_users_list(i, response.data[i]);\n              }\n            }\n          }\n        });\n      axios\n        .post(\n          api_calls.load_users_url(),\n          {\n            companyid: this.companyid,\n            companyname: this.companyname,\n            license_key: this.$session.get(\"UserInformation\").license_key,\n            email: this.$session.get(\"UserInformation\").email,\n            token: this.$session.get(\"UserInformation\").tokens,\n            page_no: 1,\n            per_page: 5,\n          },\n          {\n            headers: {\n              Authorization: `Bearer ${this.$session.get(\"at\")}`,\n            },\n          }\n        )\n        .then((response) => {\n          for (var i in response.data[0]) {\n            this.selected_users_list.push({\n              user: response.data[0][i],\n            });\n          }\n        })\n        .catch((e) => {\n          if (\n            e.response.status === 410 ||\n            e.response.status === 440 ||\n            e.response.status === 409\n          ) {\n            this.$root.$emit(\"Session_Expired\", e.response.data);\n          }\n        });\n    },\n    get_users_list(index, group_name) {\n      axios\n        .get(api_calls.chat_admin_get_group_members_url(), {\n          params: {\n            username: this.$session.get(\"UserInformation\").email,\n            group_name: group_name,\n            token: this.admin_login_token,\n          },\n        })\n        .then((response) => {\n          if (response.data.error == \"you need to log in\") {\n          } else {\n            this.chat_group_list = [];\n            this.chat_group_list.push({\n              group_name: group_name,\n              users_list: response.data,\n            });\n          }\n        });\n    },\n    submit_new_group() {\n      event.preventDefault();\n      if (this.isEdit === false && this.group_name != \"\") {\n        axios\n          .post(api_calls.chat_admin_create_group_url(), {\n            group_name: this.group_name,\n            join_me: true,\n            token: this.admin_login_token,\n          })\n          .then((response) => {\n            var memberlist = [];\n            for (var i in this.selected_users) {\n              memberlist.push(this.selected_users[i].user);\n            }\n            if (response.data.created == true) {\n              toastr.success(\"Your group has been created successfully.\");\n              axios\n                .post(api_calls.chat_admin_add_member_url(), {\n                  token: this.admin_login_token,\n                  group_name: this.group_name,\n                  members_ids: memberlist,\n                })\n                .then((resp) => {\n                  var added = resp.data.filter((resp) => {\n                    return resp.added == true;\n                  });\n                  if (added.length == resp.data.length) {\n                    Swal({\n                      text:\n                        \"New members have been added to the group successfully.\",\n                      showConfirmButton: true,\n                      timer: 3000,\n                    }).then((result) => {\n                      if (result.value) {\n                        this.load_chatgroup();\n                      }\n                    });\n                  }\n                });\n            }\n          });\n      } else if (this.group_name == \"\") {\n        toastr.error(\"Please enter the required fields.\");\n      } else if (\n        this.isEdit === true &&\n        this.group_name != \"\" &&\n        this.new_users_selected.length > 0\n      ) {\n        var memberlist = [];\n        for (var i in this.new_users_selected) {\n          memberlist.push(this.new_users_selected[i].user);\n        }\n        axios\n          .post(api_calls.chat_admin_add_member_url(), {\n            token: this.admin_login_token,\n            group_name: this.group_name,\n            members_ids: memberlist,\n          })\n          .then((response) => {\n            var added = response.data.filter((response) => {\n              return response.added == true;\n            });\n            if (added.length == response.data.length) {\n              Swal({\n                text: \"New members have been added to the group successfully.\",\n                showConfirmButton: true,\n                timer: 3000,\n              }).then((result) => {\n                if (result.value) {\n                  this.load_chatgroup();\n                }\n              });\n            }\n          });\n      }\n    },\n    user_selected(selectedUser, id) {\n      if (this.isEdit == true) {\n        this.new_users_selected.push(selectedUser);\n      }\n    },\n    new_user_removed(removeduser) {\n      var removed_index = this.new_users_selected.indexOf(removeduser);\n      if (removed_index == -1 && this.isEdit == true) {\n        return false;\n      } else {\n        return true;\n      }\n    },\n    remove_user(removeduser, id) {\n      if (this.new_user_removed(removeduser) == false) {\n        Swal.fire({\n          title:\n            \"Are you sure about removing the user \" +\n            removeduser.user +\n            \" from this group?\",\n          text: \"You won't be able to revert this!\",\n          type: \"warning\",\n          showCancelButton: true,\n          confirmButtonColor: \"#3085d6\",\n          cancelButtonColor: \"#d33\",\n          confirmButtonText: \"Yes, delete!!\",\n        }).then((result) => {\n          if (result.value) {\n            var users = [];\n            users.push(removeduser.user);\n            axios\n              .post(api_calls.chat_admin_remove_member_url(), {\n                token: this.admin_login_token,\n                group_name: this.group_name,\n                members_ids: users,\n              })\n              .then((response) => {\n                if (response.data[0].deleted == true) {\n                  toastr.success(\"The member has been removed from the group.\");\n                  this.load_chatgroup();\n                }\n              })\n              .catch((e) => {\n                this.spinnerOn = false;\n              });\n          } else if (!result.value) {\n            this.selected_users.push(removeduser);\n          }\n        });\n      }\n    },\n    clear_fields() {\n      this.selected_users = [];\n      this.group_name = \"\";\n      this.isEdit = false;\n      this.new_users_selected = [];\n    },\n    delete_single(index) {\n      event.preventDefault();\n      var grouplist = [];\n      grouplist.push(this.chat_group_list[index].group_name);\n      this.delete_group_api(this.chat_group_list[index].group_name);\n    },\n    delete_group_api(grouplist) {\n      Swal.fire({\n        title: \"Are you sure?\",\n        text: \"You won't be able to revert this!\",\n        type: \"warning\",\n        showCancelButton: true,\n        confirmButtonColor: \"#3085d6\",\n        cancelButtonColor: \"#d33\",\n        confirmButtonText: \"Yes, delete!!\",\n      }).then((result) => {\n        if (result.value) {\n          axios\n            .delete(api_calls.chat_admin_delete_group_url(), {\n              params: {\n                token: this.admin_login_token,\n                group_name: grouplist,\n              },\n            })\n            .then((response) => {\n              if (response.data.deleted == true) {\n                toastr.success(\"The group has been deleted.\");\n                this.load_chatgroup();\n              }\n            })\n            .catch((e) => {\n              this.spinnerOn = false;\n            });\n        }\n      });\n    },\n    edit_group(index) {\n      event.preventDefault();\n      this.isEdit = true;\n      this.group_name = this.chat_group_list[index].group_name;\n      var list = [];\n      for (var i in this.chat_group_list[index].users_list) {\n        list.push({ user: this.chat_group_list[index].users_list[i] });\n      }\n      this.selected_users = list;\n    },\n  },\n};\n</script>\n<style src=\"vue-multiselect/dist/vue-multiselect.min.css\">\n</style>\n<style scoped>\ntd > .multiselect__tag {\n  padding: 4px 0px 4px 10px;\n}\n.multiselect__option[data-select=\"Press enter to select\"] > span {\n  margin-left: 10%;\n}\n</style>"]}]}