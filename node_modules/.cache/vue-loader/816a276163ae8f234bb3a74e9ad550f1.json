{"remainingRequest":"/home/vimalesh/CENSE/chatbot-portal/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/vimalesh/CENSE/chatbot-portal/src/portal/Chatbot/Dashboard/Settings/Miscellaneous.vue?vue&type=style&index=1&id=35797f37&scoped=true&lang=css&","dependencies":[{"path":"/home/vimalesh/CENSE/chatbot-portal/src/portal/Chatbot/Dashboard/Settings/Miscellaneous.vue","mtime":1655807120965},{"path":"/home/vimalesh/CENSE/chatbot-portal/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vimalesh/CENSE/chatbot-portal/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/vimalesh/CENSE/chatbot-portal/node_modules/@vue/cli-service/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/vimalesh/CENSE/chatbot-portal/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vimalesh/CENSE/chatbot-portal/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKQG1lZGlhIChtYXgtd2lkdGg6IDE0MDBweCkgewogIC5taXNjZWxsYW5lb3VzLWN1c3RvbS1maWxlLWlucHV0IHsKICAgIHBhZGRpbmc6IDE1cHggMjVweCAxNXB4IDYwcHg7CiAgfQp9Ci8qIC52ciB7CiAgYm9yZGVyLWxlZnQ6IDFweCBzb2xpZCAjRTlFOUU5OwogIG1hcmdpbi10b3A6IDUlOwogIG1hcmdpbi1ib3R0b206IDUlOyAqLwovKiB9ICovCi5oY2xhc3M2IHsKICBmb250LXdlaWdodDogMTAwOwp9CgouY29udGFjdC1pbmZvIHsKICBwYWRkaW5nLWxlZnQ6IDBweDsKfQouZGFya2JsdWUtYnRuMSB7CiAgbWFyZ2luLWxlZnQ6IDMlOwogIGZvbnQtc2l6ZTogMTRweDsKICBjb2xvcjogI2ZmZjsKICBiYWNrZ3JvdW5kOiAjMjczNjc5OwogIGJvcmRlcjogc29saWQgMXB4ICMyNzM2Nzk7CiAgcGFkZGluZzogOXB4IDE4cHg7CiAgZm9udC13ZWlnaHQ6IDQwMDsKICBsaW5lLWhlaWdodDogMjBweDsKICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7CiAgYm9yZGVyLXJhZGl1czogNHB4OwogIGN1cnNvcjogcG9pbnRlcjsKICB3aWR0aDogMzAlOwogIHRleHQtYWxpZ246IGNlbnRlcjsKfQouYnV0dG9uX2Rpc2FibGVkIHsKICBib3JkZXI6IDJweCBzb2xpZCByZ2IoMjMwLCAyMzAsIDIzMCk7CiAgYmFja2dyb3VuZDogcmdiKDI0NywgMjQ4LCAyNTEpOwp9Ci5idXR0b25fZGlzYWJsZWQgc3ZnIHsKICBvcGFjaXR5OiAwOwp9Ci5idXR0b25fZW5hYmxlZCB7CiAgYm9yZGVyOiAxcHggc29saWQgcmdiKDM5LCA1NCwgMTIxKTsKICBiYWNrZ3JvdW5kOiByZ2IoMjQ3LCAyNDgsIDI1MSk7Cn0KLmJ1dHRvbl9lbmFibGVkIHN2ZyB7CiAgb3BhY2l0eTogMTsKfQouY3VzdG9tLWZpbGUgPiBpbnB1dDo6LXdlYmtpdC1pbnB1dC1wbGFjZWhvbGRlciB7CiAgbWFyZ2luLWxlZnQ6IDIwMHB4Owp9CiNzZWxlY3RfY291bnRyeV9uYW1lX21pc2MgewogIGNvbG9yOiAjOTQ5OWFlOwp9Ci5zYXZlX25vZGVfYnV0dG9uIHsKICBmb250LXNpemU6IDE0cHg7CiAgY29sb3I6ICNmZmY7CiAgYmFja2dyb3VuZDogIzI3MzY3OTsKICBib3JkZXI6IHNvbGlkIDFweCAjMjczNjc5OwogIHBhZGRpbmc6IDZweCAxNXB4OwogIGZvbnQtd2VpZ2h0OiA0MDA7CiAgbGluZS1oZWlnaHQ6IDIwcHg7CiAgLyogZGlzcGxheTogaW5saW5lLWJsb2NrOyAqLwogIGJvcmRlci1yYWRpdXM6IDRweDsKICBjdXJzb3I6IHBvaW50ZXI7CiAgZmxvYXQ6IHJpZ2h0Owp9Ci5jdXN0b20tZmlsZSB7CiAgbWluLWhlaWdodDogNDBweCAhaW1wb3J0YW50Owp9CkBtZWRpYSAobWF4LXdpZHRoOiAxNDAwcHgpIHsKICAuY3VzdG9tLWZpbGUtbGFiZWwgewogICAgcGFkZGluZzogMTVweCAyNXB4IDE1cHggMTVweCAhaW1wb3J0YW50OwogIH0KfQoKLmN1c3RvbS1idXR0b24tYm94IHsKICBib3JkZXI6IDAuNXB4IHNvbGlkICNjY2M7Cn0KCi50YWJsZS1ib3ggdGQsCi50YWJsZS1ib3ggdGggewogIHBhZGRpbmc6IDVweCAhaW1wb3J0YW50OwogIGZvbnQtc2l6ZTogMTRweCAhaW1wb3J0YW50OwogIHdpZHRoOiAwcHggIWltcG9ydGFudDsKfQoudGFibGUtYm94IHRkOmZpcnN0LWNoaWxkLAoudGFibGUtYm94IHRoOmZpcnN0LWNoaWxkIHsKICB0ZXh0LWFsaWduOiBsZWZ0ICFpbXBvcnRhbnQ7CiAgd2lkdGg6IDBweCAhaW1wb3J0YW50Owp9Cg=="},{"version":3,"sources":["Miscellaneous.vue"],"names":[],"mappingsimEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Miscellaneous.vue","sourceRoot":"src/portal/Chatbot/Dashboard/Settings","sourcesContent":["<template>\n  <div class=\"dash-cont\">\n    <div class=\"spinner\" id=\"spinner\" v-show=\"big_spinner\"></div>\n    <div class=\"container-fluid\">\n      <div class=\"card dash-card\">\n        <div\n          class=\"\n            card-header\n            d-block d-sm-flex\n            flex-wrap\n            justify-content-between\n          \"\n        ></div>\n        <div class=\"card-body\" style=\"margin-top: -2%\">\n          <ul class=\"nav nav-tabs mb-3\" id=\"myTab\" role=\"tablist\" :style=\"top_navbar_disable()\">\n            <li class=\"nav-item\">\n              <a\n                class=\"nav-link pl-4 pr-4 active\"\n                id=\"others-tab\"\n                data-toggle=\"tab\"\n                href=\"#others\"\n                role=\"tab\"\n                aria-controls=\"others\"\n                aria-selected=\"true\"\n                @click=\"view_component_name = 'others'\"\n                >{{tlt('general_tab_name')}}</a\n              >\n            </li>\n            <li class=\"nav-item\">\n              <a\n                class=\"nav-link pl-4 pr-4\"\n                id=\"integrations-tab\"\n                data-toggle=\"tab\"\n                href=\"#integrations\"\n                role=\"tab\"\n                aria-controls=\"integrations\"\n                aria-selected=\"false\"\n                @click=\"view_component_name = 'integrations'\"\n                >{{tlt('integration_tab_name')}}</a\n              >\n            </li>\n            <li class=\"nav-item\">\n              <a\n                class=\"nav-link pl-4 pr-4\"\n                id=\"models-tab\"\n                data-toggle=\"tab\"\n                href=\"#models\"\n                role=\"tab\"\n                aria-controls=\"models\"\n                aria-selected=\"false\"\n                @click=\"view_component_name = 'models'\"\n                >{{tlt('models_tab_name')}}</a\n              >\n            </li>\n            <li class=\"nav-item\">\n              <a\n                class=\"nav-link pl-4 pr-4\"\n                id=\"accounts-tab\"\n                data-toggle=\"tab\"\n                href=\"#accounts\"\n                role=\"tab\"\n                aria-controls=\"accounts\"\n                aria-selected=\"false\"\n                @click=\"view_component_name = 'accounts'\"\n                >{{tlt('accounts_tab_name')}}</a\n              >\n            </li>\n            <li class=\"nav-item\">\n              <a\n                class=\"nav-link pl-4 pr-4\"\n                id=\"suggestions-tab\"\n                data-toggle=\"tab\"\n                href=\"#suggestions\"\n                role=\"tab\"\n                aria-controls=\"suggestions\"\n                aria-selected=\"false\"\n                @click=\"view_component_name = 'suggestions'\"\n                >{{tlt('suggestions_tab_name')}}</a\n              >\n            </li>\n            <li class=\"nav-item\">\n              <a\n                class=\"nav-link pl-4 pr-4\"\n                id=\"social-media\"\n                data-toggle=\"tab\"\n                href=\"#socialmedia\"\n                role=\"tab\"\n                aria-controls=\"socialmedia\"\n                aria-selected=\"false\"\n                @click=\"view_component_name = 'socialmedia'\"\n                >{{tlt('social_media_tab_name')}}</a\n              >\n            </li>\n          </ul>\n          <div class=\"tab-content\" id=\"myTabContent\">\n            <div\n              class=\"tab-pane fade\"\n              id=\"accounts\"\n              role=\"tabpanel\"\n              aria-labelledby=\"accounts-tab\"\n            >\n              <template v-if=\"view_component_name === 'accounts'\">\n                <billing />\n              </template>\n            </div>\n            <div\n              class=\"tab-pane fade\"\n              id=\"suggestions\"\n              role=\"tabpanel\"\n              aria-labelledby=\"suggestions-tab\"\n            >\n              <template v-if=\"view_component_name === 'suggestions'\">\n                <feedback />\n              </template>\n            </div>\n            <div\n              class=\"tab-pane fade\"\n              id=\"integrations\"\n              role=\"tabpanel\"\n              aria-labelledby=\"integrations-tab\"\n            >\n              <template v-if=\"view_component_name === 'integrations'\">\n                <integration-layout />\n              </template>\n            </div>\n            <div\n              class=\"tab-pane fade\"\n              id=\"socialmedia\"\n              role=\"tabpanel\"\n              aria-labelledby=\"social-media\"\n            >\n              <template v-if=\"view_component_name === 'socialmedia'\">\n                <social-media-links />\n              </template>\n            </div>\n            <div\n              class=\"tab-pane fade active show\"\n              id=\"others\"\n              role=\"tabpanel\"\n              aria-labelledby=\"others-tab\"\n            >\n              <div class=\"col-sm-12 d-flex mt-5\">\n                <div\n                  class=\"col-sm-6\"\n                  style=\"\n                    border-right: 1px solid rgb(234, 234, 234);\n                    margin-bottom: 1rem;\n                  \"\n                >\n                  <div style=\"width: auto\">\n                    <h5 class=\"mb-sm-0\" style=\"display: inline\">\n                      {{tlt('license_key_label')}}\n                      <i\n                        class=\"far fa-copy\"\n                        style=\"cursor: pointer\"\n                        id=\"copy_licnse_key_tooltip\"\n                        data-toggle=\"tooltip\"\n                        data-placement=\"top\"\n                        title=\"Copied to clipboard!\"\n                        @click=\"copy_license_key\"\n                      ></i>\n                    </h5>\n                    <!-- <a\n                      href=\"#\"\n                      style=\"font-size: 16px; margin-left: 5%\"\n                      @click=\"download_sdk('license_key')\"\n                      >Download Here</a\n                    >\n                    <i class=\"fa fa-spinner fa-spin\" v-show=\"spinnerOn1\"></i> -->\n                  </div>\n                  <textarea\n                    class=\"form-control\"\n                    ref=\"license_key_textarea\"\n                    name=\"license_key\"\n                    id=\"license_key\"\n                    v-model=\"current_license_key\"\n                    readonly\n                    style=\"width: 100%; padding: 10px 15px\"\n                    rows=\"3\"\n                  ></textarea>\n                  <!-- <div contenteditable=\"true\">{{current_license_key}} </div> -->\n                </div>\n                <div class=\"col-sm-6\">\n                  <h5 class=\"mb-sm-0\">\n                    {{tlt('download_bot_label')}}\n                    <i class=\"fa fa-spinner fa-spin\" v-show=\"spinnerOn2\"></i>\n                  </h5>\n                  <a\n                    id=\"download_sdk_android\"\n                    href=\"#\"\n                    style=\"margin-top: 2%; margin-left: 3%\"\n                    class=\"darkblue-btn1\"\n                    @click=\"download_sdk('Android')\"\n                  >\n                    <svg\n                      style=\"fill: #fff\"\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      width=\"24\"\n                      height=\"24\"\n                      viewBox=\"0 0 24 24\"\n                    >\n                      <path d=\"M0 0h24v24H0z\" fill=\"#273679\" />\n                      <path\n                        d=\"M6 18c0 .55.45 1 1 1h1v3.5c0 .83.67 1.5 1.5 1.5s1.5-.67 1.5-1.5V19h2v3.5c0 .83.67 1.5 1.5 1.5s1.5-.67 1.5-1.5V19h1c.55 0 1-.45 1-1V8H6v10zM3.5 8C2.67 8 2 8.67 2 9.5v7c0 .83.67 1.5 1.5 1.5S5 17.33 5 16.5v-7C5 8.67 4.33 8 3.5 8zm17 0c-.83 0-1.5.67-1.5 1.5v7c0 .83.67 1.5 1.5 1.5s1.5-.67 1.5-1.5v-7c0-.83-.67-1.5-1.5-1.5zm-4.97-5.84l1.3-1.3c.2-.2.2-.51 0-.71-.2-.2-.51-.2-.71 0l-1.48 1.48C13.85 1.23 12.95 1 12 1c-.96 0-1.86.23-2.66.63L7.85.15c-.2-.2-.51-.2-.71 0-.2.2-.2.51 0 .71l1.31 1.31C6.97 3.26 6 5.01 6 7h12c0-1.99-.97-3.75-2.47-4.84zM10 5H9V4h1v1zm5 0h-1V4h1v1z\"\n                      />\n                    </svg>\n                    <span style=\"margin-left: 3%\">{{tlt('download_on_android_label')}}</span>\n                  </a>\n                  <a\n                    href=\"#\"\n                    class=\"darkblue-btn1\"\n                    @click=\"download_sdk('Ios')\"\n                    id=\"download_sdk_IOS\"\n                  >\n                    <svg\n                      style=\"fill: #fff; margin-left: -10px; margin-top: -1px\"\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      viewBox=\"0 0 170 170\"\n                      width=\"24\"\n                      version=\"1.1\"\n                      height=\"24\"\n                    >\n                      <path d=\"M0 0h24v24H0z\" fill=\"#273679\" />\n                      <path\n                        d=\"m150.37 130.25c-2.45 5.66-5.35 10.87-8.71 15.66-4.58 6.53-8.33 11.05-11.22 13.56-4.48 4.12-9.28 6.23-14.42 6.35-3.69 0-8.14-1.05-13.32-3.18-5.197-2.12-9.973-3.17-14.34-3.17-4.58 0-9.492 1.05-14.746 3.17-5.262 2.13-9.501 3.24-12.742 3.35-4.929 0.21-9.842-1.96-14.746-6.52-3.13-2.73-7.045-7.41-11.735-14.04-5.032-7.08-9.169-15.29-12.41-24.65-3.471-10.11-5.211-19.9-5.211-29.378 0-10.857 2.346-20.221 7.045-28.068 3.693-6.303 8.606-11.275 14.755-14.925s12.793-5.51 19.948-5.629c3.915 0 9.049 1.211 15.429 3.591 6.362 2.388 10.447 3.599 12.238 3.599 1.339 0 5.877-1.416 13.57-4.239 7.275-2.618 13.415-3.702 18.445-3.275 13.63 1.1 23.87 6.473 30.68 16.153-12.19 7.386-18.22 17.731-18.1 31.002 0.11 10.337 3.86 18.939 11.23 25.769 3.34 3.17 7.07 5.62 11.22 7.36-0.9 2.61-1.85 5.11-2.86 7.51zm-31.26-123.01c0 8.1021-2.96 15.667-8.86 22.669-7.12 8.324-15.732 13.134-25.071 12.375-0.119-0.972-0.188-1.995-0.188-3.07 0-7.778 3.386-16.102 9.399-22.908 3.002-3.446 6.82-6.3113 11.45-8.597 4.62-2.2516 8.99-3.4968 13.1-3.71 0.12 1.0831 0.17 2.1663 0.17 3.2409z\"\n                      />\n                    </svg>\n                    <span style=\"margin-left: 3%\">{{tlt('download_on_ios_label')}}</span>\n                  </a>\n\n                  <a\n                    href=\"https://cense.ai/documentation/docs_web\"\n                    class=\"darkblue-btn1\"\n                    id=\"download_sdk_web\"\n                    target=\"_blank\"\n                  >\n                    <svg\n                      style=\"fill: #fff; margin-left: -10px; margin-top: -1px\"\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      width=\"24\"\n                      height=\"24\"\n                      viewBox=\"0 0 24 24\"\n                    >\n                      <path d=\"M0 0h24v24H0z\" fill=\"#273679\" />\n                      <path\n                        d=\"M21 2H3c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h7l-2 3v1h8v-1l-2-3h7c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm0 12H3V4h18v10z\"\n                      />\n                    </svg>\n                    <span style=\"margin-left: 4%\">{{tlt('download_on_web_label')}}</span>\n                  </a>\n                </div>\n              </div>\n              <hr />\n              <div class=\"col-sm-12 d-flex\">\n                <div class=\"form-group col-sm-6\">\n                  <label\n                    style=\"\n                      margin-top: 1rem;\n                      font-size: 1.21rem;\n                      font-weight: 500;\n                      font-family: 'Fira Sans', sans-serif;\n                    \"\n                    >{{tlt('upload_logo_text')}}</label\n                  >\n                  <label class=\"form-text text-muted\">\n                    {{tlt('upload_logo_help_text')}}</label\n                  >\n                  <div class=\"custom-file\">\n                    <input\n                      type=\"file\"\n                      class=\"custom-file-input\"\n                      @change=\"fileinput\"\n                      id=\"input_company_file\"\n                    />\n                    <label\n                      style=\"\n                        font-weight: 400;\n                        padding-left: 15px;\n                        overflow: hidden;\n                        white-space: nowrap;\n                        line-height: 10px;\n                        width: 97%;\n                      \"\n                      class=\"custom-file-label form-control\"\n                      for=\"file\"\n                      >{{ file_label }}</label\n                    >\n                  </div>\n                  <div class=\"card-act btn-wrap mt-3 pt-3 pb-3\">\n                    <button\n                      class=\"darkblue-btn\"\n                      @click=\"upload_company_logo_file\"\n                    >\n                      {{tlt('other_upload_logo_btn')}}\n                    </button>\n                  </div>\n                  <hr /> \n                  <div class=\"form-group\" v-show=\"!is_retail\">\n                    <form @submit.prevent=\"configure_sender_email('email')\">\n                      <div class=\"form-group\">\n                        <label><strong style=\"font-size: 1.21rem;font-weight: 500;font-family: 'Fira Sans', sans-serif;\">{{tlt('sender_email_label')}}</strong></label>\n                          <label> {{tlt('sender_email_text')}}</label>\n                        <input\n                          v-model=\"email_details\"\n                          type=\"email\"\n                          class=\"form-control mt-2\"\n                          placeholder=\"Enter the email-id from where the mails will be sent\"\n                          style=\"padding: 5px \"\n                          :disabled=\"(email_disable == true || disable_btn_expired)\"\n                          required\n                        />\n                      </div>\n                      <div>\n                        <p class=\"label1\" v-if=\"email_disable == true\">\n                          <strong>{{tlt('verify_status_label')}}:</strong>\n                          <span :style=\"verification_status == 'Success'?'color:#9acd32':'color:#d9534f'\"\n                          >\n                            {{ verification_status }}\n                          </span>&nbsp;\n                          <img\n                            title=\"Check Email Verification Status\"\n                            :src=\"reset_icon_path\"\n                            alt=\"\"\n                            style=\"float: inherit; cursor: pointer; padding-left: 5px;\"\n                            @click=\"load_product_settings()\"\n                          />\n                        </p>\n                      </div>\n                      <div class=\"dash-modal\">\n                        <div\n                          class=\"card-act btn-wrap text-right mt-0 pt-0 pb-3 border-top-0\"\n                        >\n                          <button\n                            id=\"product_setting_email_remove_btn\"\n                            type=\"button\"\n                            class=\"btn btn-danger\"\n                            style=\"display: text-center !important;\"\n                            v-if=\"email_disable == true\"\n                            @click=\"configure_sender_email('email_remove')\"\n                          >\n                            {{tlt('setting_remove_btn')}}\n                          </button>\n                          <button\n                            id=\"product_setting_email_save_btn\"\n                            type=\"submit\"\n                            style=\"display: inherit !important;\"\n                            class=\"darkblue-btn\"\n                            v-else\n                          >\n                            {{tlt('setting_save_btn')}}\n                          </button>\n                        </div>\n                      </div>\n                    </form>\n                  </div>\n                </div>\n                <div\n                  class=\"form-group contact-info col-sm-6\"\n                  v-show=\"!is_retail\"\n                >\n                  <label\n                    class=\"mb-sm-6 mt-4\"\n                    style=\"\n                      margin-top: 1.1rem !important;\n                      font-family: 'Fira Sans', sans-serif;\n                      font-size: 1.2rem;\n                      font-weight: 500;\n                    \"\n                    ><strong style=\"font-weight: 500\"\n                      >{{tlt('contact_email_label')}}</strong\n                    > </label\n                  ><br />\n                  <label> {{tlt('contact_email_note')}} </label>\n                  <input\n                    v-model.trim=\"contact_us_email\"\n                    type=\"email\"\n                    class=\"form-control\"\n                    placeholder=\"Enter the email-id\"\n                    style=\"padding: 5px\"\n                    required\n                  />\n                  <div\n                    class=\"is-invalid\"\n                    style=\"color: red; padding-top: 5px\"\n                    v-if=\"validEmail != true && contact_us_email != ''\"\n                  >\n                    {{ validEmail }}\n                  </div>\n                  <hr style=\"\" />\n                  <label\n                    class=\"mb-sm-6 mt-4\"\n                    style=\"\n                      margin-top: 0.3rem !important;\n                      font-family: 'Fira Sans', sans-serif;\n                      font-size: 1.2rem;\n                      font-weight: 500;\n                    \"\n                    ><strong style=\"font-weight: 500\"\n                      >{{tlt('contact_phone_no_label')}}</strong\n                    > </label\n                  ><br />\n                  <label>\n                    {{tlt('contact_phone_no_note')}}\n                  </label>\n                  <vue-phone-number-input\n                    style=\"margin-bottom: 1.1rem\"\n                    v-model=\"contact_us_phone_number\"\n                    :no-use-browser-locale=\"true\"\n                    @update=\"phoneNumber = $event\"\n                  >\n                  </vue-phone-number-input>\n                  <hr />\n                  <div\n                    class=\"card-act btn-wrap mt-2 pt-0 pb-3 border-top-0\"\n                    style=\"margin-bottom: 0.4rem\"\n                  >\n                    <button\n                      type=\"submit\"\n                      style=\"display: text-center !important\"\n                      class=\"darkblue-btn\"\n                      @click=\"configure_product_settings\"\n                    >\n                      {{tlt('setting_save_btn1')}}\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n            <div\n              class=\"tab-pane fade\"\n              id=\"models\"\n              role=\"tabpanel\"\n              aria-labelledby=\"models-tab\"\n            >\n              <div\n                id=\"trained_intent_models_radio\"\n                class=\"col-sm-12 d-flex mt-4\"\n                style=\"padding-left: 0px\"\n              >\n                <div\n                  class=\"col-sm-4\"\n                  style=\"\n                    border-right: 1px solid rgb(234, 234, 234);\n                    padding-left: 0px;\n                  \"\n                >\n                  <div style=\"width: auto\">\n                    <h5 class=\"mb-sm-0 text-center\" style=\"\">\n                      {{tlt('intent_model_header')}}\n                    </h5> \n                    <div class=\"table-box text-center\">\n                      <div\n                        class=\"table-responsive\"\n                        v-if=\"\n                          Boolean(trained_intent_models) &&\n                          trained_intent_models.length > 0\n                        \"\n                      >\n                        <table\n                          class=\"table\"\n                          style=\"border: 1px solid #dbe2e8; margin-top: 1%\"\n                        >\n                          <tr>\n                            <th scope=\"col\">#</th>\n                            <th scope=\"col\" style=\"text-align: left\">\n                              {{tlt('intent_model_name_label')}}\n                            </th>\n                            <th scope=\"col\" style=\"text-align: left\">\n                              {{tlt('intent_trained_on_label')}}\n                            </th>\n                            <th scope=\"col\" style=\"text-align: center\">\n                              {{tlt('intent_in_use_label')}}\n                            </th>\n                            <!-- <th\n                            scope=\"col\"\n                            style=\"text-align: center; width: 14%\"\n                          >\n                            Use\n                          </th> -->\n                          </tr>\n                          <tr\n                            v-for=\"(model, index) in trained_intent_models\"\n                            :key=\"index\"\n                          >\n                            <td>{{ index + 1 }}</td>\n                            <td\n                              :title=\"\n                                companyname +\n                                ' V' +\n                                (trained_intent_models.length - index)\n                              \"\n                              style=\"text-align: left; cursor: pointer\"\n                            >\n                              <!-- {{ companyname }} V{{\n                                trained_intent_models.length - index\n                              }} -->\n                              {{ trim_model_name(companyname) }}V{{\n                                trained_intent_models.length - index\n                              }}\n                            </td>\n                            <td style=\"text-align: left\">\n                              {{ model.created_at }}\n                            </td>\n                            <td class=\"text-center\">\n                              <div\n                                class=\"radio\"\n                                @click=\"select_trained_intent_model(index)\"\n                              >\n                                <label style=\"vertical-align: text-top\">\n                                  <input\n                                    type=\"radio\"\n                                    :checked=\"model.active\"\n                                    :name=\"index + 'intent'\"\n                                    disabled\n                                  />\n                                  <span class=\"icn\" id=\"radio_intent\"></span>\n                                </label>\n                              </div>\n                            </td>\n                            <!-- <td>\n                            <button\n                              :disabled=\"model.active\"\n                              class=\"darkblue-btn\"\n                              @click=\"select_trained_intent_model(index)\"\n                            >\n                              Use\n                            </button>\n                          </td> -->\n                          </tr>\n                        </table>\n                      </div>\n                      <h6\n                        v-else-if=\"\n                          Boolean(trained_intent_models) &&\n                          trained_intent_models.length === 0\n                        \"\n                      >\n                        {{tlt('no_trained_intent_text')}}\n                      </h6>\n                    </div>\n                  </div>\n                </div>\n                <div\n                  class=\"col-sm-4\"\n                  style=\"border-right: 1px solid rgb(234, 234, 234)\"\n                >\n                  <div style=\"width: auto\">\n                    <h5 class=\"mb-sm-0 text-center\" style=\"\">\n                      {{tlt('dialog_model_header')}}\n                    </h5>\n                    <div class=\"table-box\"\n                     style=\"text-align: center;\"\n                    >\n                      <div\n                        class=\"table-responsive\"\n                        v-if=\"\n                          Boolean(trained_dialogue_models) &&\n                          trained_dialogue_models.length > 0\n                        \"\n                      >\n                        <table\n                          class=\"table\"\n                          style=\"border: 1px solid #dbe2e8; margin-top: 1%\"\n                        >\n                          <tr>\n                            <th scope=\"col\" style=\"text-align: left\">#</th>\n                            <th scope=\"col\" style=\"text-align: left\">\n                              {{tlt('dialog_model_name_label')}}\n                            </th>\n                            <th scope=\"col\" style=\"text-align: left\">\n                              {{tlt('dialog_trained_on_label')}}\n                            </th>\n                            <th scope=\"col\" style=\"text-align: center\">\n                              {{tlt('dialog_in_use_label')}}\n                            </th>\n                            <!-- <th\n                            scope=\"col\"\n                            style=\"text-align: center; width: 14%\"\n                          >\n                            Use\n                          </th> -->\n                          </tr>\n                          <tr\n                            v-for=\"(model, index) in trained_dialogue_models\"\n                            :key=\"index\"\n                          >\n                            <td>{{ index + 1 }}</td>\n                            <td\n                              :title=\"\n                                companyname +\n                                ' V' +\n                                (trained_dialogue_models.length - index)\n                              \"\n                              style=\"cursor: pointer\"\n                            >\n                              {{ trim_model_name(companyname) }}V{{\n                                trained_dialogue_models.length - index\n                              }}\n                            </td>\n                            <td>{{ model.created_at }}</td>\n                            <td class=\"text-center\">\n                              <div\n                                class=\"radio\"\n                                @click=\"select_trained_dialogue_model(index)\"\n                              >\n                                <label style=\"vertical-align: text-top\">\n                                  <input\n                                    type=\"radio\"\n                                    :checked=\"model.active\"\n                                    :name=\"index + 'dialogue'\"\n                                    disabled\n                                  />\n                                  <span\n                                    class=\"icn\"\n                                    :id=\"index + 'radio'\"\n                                  ></span>\n                                </label>\n                              </div>\n                            </td>\n                            <!-- <td>\n                            <button\n                              :disabled=\"model.active\"\n                              class=\"darkblue-btn\"\n                              @click=\"select_trained_dialogue_model(index)\"\n                            >\n                              Use\n                            </button>\n                          </td> -->\n                          </tr>\n                        </table>\n                      </div>\n                      <h6\n                        v-else-if=\"\n                          Boolean(trained_dialogue_models) &&\n                          trained_dialogue_models.length === 0\n                        \"\n                      >\n                        {{tlt('no_trained_dialog_text')}}\n                      </h6>\n                    </div>\n                  </div>\n                </div>\n                <div class=\"col-sm-4\">\n                  <div style=\"width: auto\">\n                    <h5 class=\"mb-sm-0 text-center\" style=\"\">\n                      {{tlt('ner_model_header')}}\n                    </h5>\n                    <div class=\"table-box\"\n                    style=\"text-align: center;\"\n                    >\n                      <div\n                        class=\"table-responsive\"\n                        v-if=\"\n                          Boolean(trained_ner_models) &&\n                          trained_ner_models.length > 0\n                        \"\n                      >\n                        <table\n                          class=\"table\"\n                          style=\"border: 1px solid #dbe2e8; margin-top: 1%\"\n                        >\n                          <tr>\n                            <th scope=\"col\" style=\"text-align: left\">#</th>\n                            <th scope=\"col\" style=\"text-align: left\">\n                              {{tlt('ner_model_name_label')}}\n                            </th>\n                            <th scope=\"col\" style=\"text-align: left\">\n                              {{tlt('ner_trained_on_label')}}\n                            </th>\n                            <th scope=\"col\" style=\"text-align: center\">\n                              {{tlt('ner_in_use_label')}}\n                            </th>\n                            <!-- <th\n                            scope=\"col\"\n                            style=\"text-align: center; width: 14%\"\n                          >\n                            Use\n                          </th> -->\n                          </tr>\n                          <tr\n                            v-for=\"(model, index) in trained_ner_models\"\n                            :key=\"index\"\n                          >\n                            <td>{{ index + 1 }}</td>\n                            <td\n                              :title=\"\n                                companyname +\n                                ' V' +\n                                (trained_ner_models.length - index)\n                              \"\n                              style=\"cursor: pointer\"\n                            >\n                              {{ trim_model_name(companyname) }}V{{\n                                trained_ner_models.length - index\n                              }}\n                            </td>\n                            <td>{{ model.created_at }}</td>\n                            <td class=\"text-center\">\n                              <div\n                                class=\"radio\"\n                                @click=\"select_trained_ner_model(index)\"\n                              >\n                                <label style=\"vertical-align: text-top\">\n                                  <input\n                                    type=\"radio\"\n                                    :checked=\"model.active\"\n                                    :name=\"index + 'ner'\"\n                                    disabled\n                                  />\n                                  <span\n                                    class=\"icn\"\n                                    :id=\"index + 'radio'\"\n                                  ></span>\n                                </label>\n                              </div>\n                            </td>\n                            <!-- <td>\n                            <button\n                              :disabled=\"model.active\"\n                              class=\"darkblue-btn\"\n                              @click=\"select_trained_dialogue_model(index)\"\n                            >\n                              Use\n                            </button>\n                          </td> -->\n                          </tr>\n                        </table>\n                      </div>\n                      <h6\n                        v-else-if=\"\n                          Boolean(trained_ner_models) &&\n                          trained_ner_models.length === 0\n                        \"\n                      >\n                        {{tlt('no_trained_ner_text')}}\n                      </h6>\n                    </div>\n                  </div>\n                </div>\n              </div>\n            </div>\n            <div class=\"row\">\n              <div class=\"col-md-7\"></div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Vue from \"vue\";\nimport JsonExcel from \"vue-json-excel\";\nimport axios from \"axios\";\nimport Swal from \"sweetalert2\";\nimport { setTimeout } from \"timers\";\nimport api_calls from \"@/portal/api_calls\";\nimport Multiselect from \"vue-multiselect\";\nimport VoerroTagsInput from \"@voerro/vue-tagsinput\";\nimport \"@voerro/vue-tagsinput/dist/style.css\";\nimport moment from \"moment\";\nimport Billing from \"../Account/Billing.vue\";\nimport swal from \"sweetalert2\";\nimport Feedback from \"./Feedback.vue\";\nimport IntegrationLayout from \"../Integrations/IntegrationLayout.vue\";\nimport { freeze_portal,show_subscription_expired_swal } from \"@/portal/mixins\";\nimport VuePhoneNumberInput from 'vue-phone-number-input';\nimport 'vue-phone-number-input/dist/vue-phone-number-input.css';\nimport SocialMediaLinks from \"../Integrations/SocialMediaLinks.vue\";\nimport { bus } from \"@/portal/main\";\n\nVue.component(\"downloadExcel\", JsonExcel);\nexport default {\n  name: \"MiscellaneousPage\",\n  mixins: [freeze_portal, show_subscription_expired_swal],\n  components: {\n    Multiselect,\n    \"tags-input\": VoerroTagsInput,\n    Billing,\n    Feedback,\n    IntegrationLayout,\n    VuePhoneNumberInput,\n    SocialMediaLinks\n  },\n  data() {\n    return {\n      view_component_name: \"others\",\n      // start_greetings: \"\",\n      // end_greetings: \"\",\n      title: \"\",\n      image_file: null,\n      file_label: \"Choose file\",\n      sender: null,\n      subject: null,\n      email_body: null,\n      companyid: null,\n      companyname: null,\n      multiple_language_list: [],\n      phoneNumber: null,\n      contact_us_phone_number: null,\n      contact_us_email: \"\",\n      email_validity:\n        /^([0-9a-zA-Z]([-.\\w]*[0-9a-zA-Z])*@([0-9a-zA-Z][-\\w]*[0-9a-zA-Z]\\.)+[a-zA-Z]{2,9})$/,\n      is_retail: false,\n      old_image_name: null,\n      spinnerOn1: false,\n      spinnerOn2: false,\n      big_spinner: false,\n      trained_dialogue_models: null,\n      trained_intent_models: null,\n      current_license_key: this.$session.get(\"UserInformation\").license_key,\n      trained_ner_models: null,\n      disable_btn_expired:false,\n      retail_web_framework : this.$session.get(\"retail_web_framework\"),\n      email_details : null,\n      email_disable : false,\n      verification_status: null,\n      reset_icon_path: require(\"@/portal/assets/img/reset_icon.svg\"),\n      disable_sidebar: false,\n    };\n  },\n  created() {\n    if (this.$session.get(\"UserInformation\").role == \"SuperAdmin\") {\n      this.companyid = this.$session.get(\"CompanyId\");\n      this.companyname = this.$session.get(\"CompanyName\");\n    } else {\n      this.companyid = this.$session.get(\"UserInformation\").company_id;\n      this.companyname = this.$session.get(\"UserInformation\").company_name;\n    }\n    // axios\n    //   .post(\n    //     api_calls.twilio_greetings(),\n    //     {\n    //       companyname: this.companyname,\n    //       companyid: this.companyid,\n    //       email: this.$session.get(\"UserInformation\").email,\n    //       license_key: this.$session.get(\"UserInformation\").license_key,\n    //       token: this.$session.get(\"UserInformation\").tokens,\n    //       isShow: true\n    //     },\n    //     {\n    //       headers: {\n    //         Authorization: `Bearer ${this.$session.get(\"at\")}`\n    //       }\n    //     }\n    //   )\n    //   .then(response => {\n    //     this.start_greetings = response.data.greeting;\n    //     this.end_greetings = response.data.busy;\n    //   })\n    //   .catch(e => {\n    //     if (\n    //       e.response.status === 410 ||\n    //       e.response.status === 440 ||\n    //       e.response.status === 409\n    //     ) {\n    //       this.$root.$emit(\"Session_Expired\", e.response.data);\n    //     }\n    //   });\n  },\n  mounted() {\n    this.$session.set(\"CurrentActiveTabForHelp\", this.view_component_name)\n    if (this.$session.get(\"SettingTopnavbarDisable\") == true) {\n      this.disable_sidebar = true;\n    }\n    //console.log(this.view_component_name,\"comp name\");\n      bus.$on(\"CurrentActiveTab\", (data) => {\n        if(data === this.$route.fullPath) {\n          //console.log(\"Hello\",this.$route);\n          return this.view_component_name;\n          // bus.$emit(\"CurrrentActiveTabResponse\", this.view_component_name)\n        }\n      });\n    if(this.is_retail != true){\n      this.load_product_settings();\n    }\n    let bot_templates_data = this.$session.get(\"BotTemplates\");\n    for (let i = 0; i < bot_templates_data.length; i++) {\n      if (\n        bot_templates_data[i].domain === \"Retail\" &&\n        bot_templates_data[i].subscribed === true\n      ) {\n        this.is_retail = true;\n      }\n    }\n    setTimeout(() => {\n      this.freeze_portal();\n    }, 1000);\n    this.$root.$on(\"MiscellaneousPageDisabled\", (data) => {\n      if(data===true){\n        this.disable_btn_expired = true;\n      }\n    });\n    this.$root.$on(\"accountPage\", (data) => {\n      if(data===true){\n         $(\"#accounts-tab\").click();\n        this.view_component_name = \"accounts\";\n      }\n    });\n    this.initialize_tooltips();\n    var vm = this;\n    this.get_trained_dialogue_models();\n    this.get_trained_intent_models();\n    this.get_trained_ner_models();\n    this.get_company_logo();\n  \n    if (this.$route.params.Subscription === true) {\n      $(\"#accounts-tab\").click();\n      this.view_component_name = \"accounts\";\n      this.$root.$emit(\"change_sidebar_main_menu\", \"Settings\");\n    }\n    this.retail_web_framework = this.$session.get(\"retail_web_framework\");\n    if (this.$route.query.Subscription == \"true\") {\n      $(\"#accounts-tab\").click();\n      this.view_component_name = \"accounts\";\n    }\n  },\n  computed: {\n    validEmail() {\n      if (this.contact_us_email != null) {\n        if (this.email_validity.test(this.contact_us_email)) {\n          return true;\n        } else {\n          return this.tlt('other_enter_valid_email_msg');\n        }\n      }\n  }\n},\n  watch: {\n    view_component_name(newVal) {\n        this.$session.set(\"CurrentActiveTabForHelp\", newVal)\n      },\n    bot_background_type(newVal, oldVal) {\n      if (newVal === \"none\") {\n        this.file_label_3 = \"Choose File\";\n        this.image_file_3 = null;\n        this.is_bg_image_changed = true;\n        // this.old_image_name_3 = null;\n        document.getElementById(\"inputGroupFile03\").value = \"\";\n      }\n    },\n    email_details() {\n      if (this.email_details == null || this.email_details == \"\") {\n        this.email_disable = false;\n      }\n    }\n  },\n  methods: {\n    generateUUID() {\n      // Public Domain/MIT\n      var d = new Date().getTime(); //Timestamp\n      var d2 =\n        (performance && performance.now && performance.now() * 1000) || 0; //Time in microseconds since page-load or 0 if unsupported\n      return \"xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx\".replace(\n        /[xy]/g,\n        function (c) {\n          var r = Math.random() * 16; //random number between 0 and 16\n          if (d > 0) {\n            //Use timestamp until depleted\n            r = (d + r) % 16 | 0;\n            d = Math.floor(d / 16);\n          } else {\n            //Use microseconds since page-load if supported\n            r = (d2 + r) % 16 | 0;\n            d2 = Math.floor(d2 / 16);\n          }\n          return (c === \"x\" ? r : (r & 0x3) | 0x8).toString(16);\n        }\n      );\n    },\n    trim_model_name(val1) {\n      if (val1.length > 6) {\n        let str1 = val1.substring(0, 3) + \"...\";\n        return str1;\n      }\n      return val1;\n    },\n    load_product_settings() {\n      this.big_spinner = true;\n      axios\n        .post(\n          api_calls.product_settings(),\n          {\n            company_name: this.companyname,\n            company_id: this.companyid,\n            email: this.$session.get(\"UserInformation\").email,\n            license_key: this.$session.get(\"UserInformation\").license_key,\n            token: this.$session.get(\"UserInformation\").tokens,\n            is_get: true,\n          },\n          {\n            headers: {\n              Authorization: `Bearer ${this.$session.get(\"at\")}`,\n            },\n          }\n        )\n        .then((response) => {\n          this.big_spinner = false; \n          var webframework = this.retail_web_framework;\n          if (webframework === null || webframework === undefined ){\n            webframework = undefined;\n          }\n          if (\n            response.data != \"\" &&\n            response.data != null &&\n            response.data != \"Internal server Error\" &&\n            response.data.msg !== \"NO DATA AVAILABLE\"\n          ) {\n            this.contact_us_email = webframework === undefined ? response.data.details.contact_help_email : response.data[webframework + '_details'].contact_help_email;\n            this.contact_us_phone_number = webframework === undefined  ? response.data.details.contact_us_phone_number: response.data[webframework + '_details'].contact_us_phone_number;\n            this.email_details = webframework === undefined ? response.data.details.sender_email : response.data[webframework + '_details'].sender_email;\n            this.email_verification_status();\n          }\n        })\n        .catch((e) => {\n          this.big_spinner = false;\n          toastr.error(this.tlt('other_error_occur_msg'));\n          if (\n            e.response.status === 410 ||\n            e.response.status === 440 ||\n            e.response.status === 409\n          ) {\n            this.$root.$emit(\"Session_Expired\", e.response.data);\n          }\n        });\n    },\n    get_company_logo() {\n      axios\n        .post(\n          api_calls.upload_company_logo(),\n          {\n            company_name: this.companyname,\n            company_id: this.companyid,\n            email: this.$session.get(\"UserInformation\").email,\n            license_key: this.$session.get(\"UserInformation\").license_key,\n            token: this.$session.get(\"UserInformation\").tokens,\n            is_get: true,\n          },\n          {\n            headers: {\n              Authorization: `Bearer ${this.$session.get(\"at\")}`,\n            },\n          }\n        )\n        .then((response) => {\n          this.file_label = response.data.company_image_url\n            .split(\"/\")\n            .reverse()[0];\n          this.file_label = decodeURI(this.file_label);\n          this.old_image_name = this.file_label;\n          if (this.file_label == \"\") {\n            this.file_label = \"Choose file\";\n          }\n        })\n        .catch((e) => {\n          console.log(e);\n          this.file_label = \"Choose file\";\n          document.getElementById(\"input_company_file\").value = \"\";\n          if (\n            e.response.status === 410 ||\n            e.response.status === 440 ||\n            e.response.status === 409\n          ) {\n            this.$root.$emit(\"Session_Expired\", e.response.data);\n          }\n        });\n    },\n    upload_company_logo_file() {\n      if (\n        this.file_label == this.old_image_name ||\n        document.getElementById(\"input_company_file\").value == \"\"\n      ) {\n        swal({\n          text: this.tlt('other_select_file_msg'),\n          type: \"error\",\n          timer: 2500,\n        });\n      } else {\n        this.big_spinner = true;\n        axios\n          .post(\n            api_calls.upload_company_logo(),\n            {\n              company_id: this.$session.get(\"UserInformation\").company_id,\n              company_name: this.$session.get(\"UserInformation\").company_name,\n              email: this.$session.get(\"UserInformation\").email,\n              license_key: this.$session.get(\"UserInformation\").license_key,\n              token: this.$session.get(\"UserInformation\").tokens,\n              image_name: this.file_label,\n              company_logo_file: this.image_file,\n              is_image_edit:\n                this.file_label != this.old_image_name ? true : false,\n              old_image_name:\n                this.old_image_name == \"Choose File\"\n                  ? null\n                  : this.old_image_name,\n            },\n            {\n              headers: {\n                Authorization: `Bearer ${this.$session.get(\"at\")}`,\n              },\n            }\n          )\n          .then((response) => {\n            this.big_spinner = false;\n            this.get_company_logo();\n            if (response.data.MSG == \"Duplicate image\") {\n              document.getElementById(\"input_company_file\").value = \"\";\n              // toastr.error(\n              //   \"Image already found. Please upload another image or rename it.\"\n              // );\n              swal({\n                text: this.tlt('other_img_already_found_msg'),\n                type: \"error\",\n                timer: 3000,\n              });\n            } else if (\n              response.data.MSG == \"Company Logo Uploaded Successfully\"\n            ) {\n              swal({\n                text: this.tlt('other_logo_upload_successful_msg'),\n                type: \"success\",\n                timer: 2500,\n              });\n            } else {\n              document.getElementById(\"input_company_file\").value = \"\";\n              swal({\n                text: this.tlt('other_error_occur_msg2'),\n                type: \"error\",\n                timer: 2500,\n              });\n            }\n          })\n          .catch((e) => {\n            swal({\n              text: this.tlt('other_error_occur_msg3'),\n              type: \"error\",\n              timer: 2500,\n            });\n            this.get_company_logo();\n            this.big_spinner = false;\n            if (\n              e.response.status === 410 ||\n              e.response.status === 440 ||\n              e.response.status === 409\n            ) {\n              this.$root.$emit(\"Session_Expired\", e.response.data);\n            }\n          });\n      }\n    },\n    configure_product_settings() {\n      event.preventDefault();\n      if (this.validEmail != true && !Boolean(this.phoneNumber) ) {\n        swal({\n          text: this.tlt('other_valid_email_or_number_msg'),\n          type: \"warning\",\n          timer: 3000,\n        });\n        return;\n      }\n      // if (!Boolean(this.phoneNumber)) {\n      //   swal({\n      //     text: \"Please enter a valid Phone Number\",\n      //     type: \"warning\",\n      //     timer: 3000,\n      //   });\n      //   return;\n      // else if (this.phoneNumber.isValid != true) {\n      //   swal({\n      //     text: \"Please enter a valid Phone Number\",\n      //     type: \"warning\",\n      //     timer: 3000,\n      //   });\n      //   return;\n      // }\n      this.big_spinner = true;\n      axios\n        .post(\n          api_calls.product_settings(),\n          {\n            company_name: this.companyname,\n            company_id: this.companyid,\n            email: this.$session.get(\"UserInformation\").email,\n            license_key: this.$session.get(\"UserInformation\").license_key,\n            token: this.$session.get(\"UserInformation\").tokens,\n            is_email_required: true,\n            email_required: {\n              contact_help_email: this.contact_us_email,\n              contact_us_phone_number: (Boolean(this.phoneNumber) && this.phoneNumber.isValid == true) ? this.phoneNumber.formattedNumber : null,\n            },\n          },\n          {\n            headers: {\n              Authorization: `Bearer ${this.$session.get(\"at\")}`,\n            },\n          }\n        )\n        .then((response) => {\n          this.big_spinner = false;\n          if (response.data == \"Query Executed Successfully\") {\n            swal({\n              text: this.tlt('other_changes_saved_msg'),\n              type: \"success\",\n              timer: 4000,\n            });\n            this.empty_variable();\n            this.load_product_settings();\n          } else {\n            swal({\n              text: this.tlt('other_internal_server_msg2'),\n              type: \"error\",\n              timer: 2000,\n            });\n          }\n        })\n        .catch((e) => {\n          this.big_spinner = false;\n          toastr.error(this.tlt('other_error_occur_msg4'));\n          if (\n            e.response.status === 410 ||\n            e.response.status === 440 ||\n            e.response.status === 409\n          ) {\n            this.$root.$emit(\"Session_Expired\", e.response.data);\n          }\n        });\n    },\n    button_class(index) {\n      if (this.multiple_language_list.length != 0) {\n        if (this.multiple_language_list[index].Enabled == true) {\n          return \"button_enabled\";\n        } else if (this.multiple_language_list[index].Enabled == false) {\n          return \"button_disabled\";\n        }\n      } else {\n        return \"button_disabled\";\n      }\n    },\n    multiple_language_style() {},\n    multiple_language_api(language, index) {\n      let button_class;\n      if (language != \"all\") {\n        button_class = document.getElementById(language + \"_button\").classList;\n        if (button_class.contains(\"button_disabled\")) {\n          button_class.remove(\"button_disabled\");\n          button_class.add(\"button_enabled\");\n          this.multiple_language_list[index].Enabled = true;\n          this.language_support_api();\n        } else if (button_class.contains(\"button_enabled\")) {\n          button_class.remove(\"button_enabled\");\n          button_class.add(\"button_disabled\");\n          this.multiple_language_list[index].Enabled = false;\n          this.language_support_api();\n        }\n      } else if (language == \"all\") {\n        if (event.target.checked) {\n          document\n            .getElementById(\"english_button\")\n            .classList.add(\"button_enabled\");\n          document\n            .getElementById(\"english_button\")\n            .classList.remove(\"button_disabled\");\n          document\n            .getElementById(\"hindi_button\")\n            .classList.add(\"button_enabled\");\n          document\n            .getElementById(\"hindi_button\")\n            .classList.remove(\"button_disabled\");\n          if (\n            this.multiple_language_list[0].Enabled &&\n            this.multiple_language_list[1].Enabled\n          ) {\n          } else {\n            for (var i in this.multiple_language_list) {\n              this.multiple_language_list[i].Enabled = true;\n            }\n            this.language_support_api();\n          }\n        } else if (!event.target.checked) {\n          document\n            .getElementById(\"english_button\")\n            .classList.remove(\"button_enabled\");\n          document\n            .getElementById(\"english_button\")\n            .classList.add(\"button_disabled\");\n          document\n            .getElementById(\"hindi_button\")\n            .classList.remove(\"button_enabled\");\n          document\n            .getElementById(\"hindi_button\")\n            .classList.add(\"button_disabled\");\n          if (\n            !this.multiple_language_list[0].Enabled &&\n            !this.multiple_language_list[1].Enabled\n          ) {\n          } else {\n            for (var i in this.multiple_language_list) {\n              this.multiple_language_list[i].Enabled = false;\n            }\n            this.language_support_api();\n          }\n        }\n      }\n    },\n    select_trained_dialogue_model(index) {\n      if(!this.disable_btn_expired){\n        let call_api = true;\n        for (let i = 0; i < this.trained_dialogue_models.length; i++) {\n          if (this.trained_dialogue_models[index].active) {\n            call_api = false;\n            break;\n          }\n        }\n        if (call_api) {\n          Swal.fire({\n            title: this.tlt('trained_dialog_swal_alert_msg'),\n            text:\n              this.tlt('trained_dialog_swal_set_msg') +\n              this.tlt('trained_dialog_swal_companyname_msg') +\n              \" V\" +\n              (this.tlt('trained_dialog_model_swal_msg').length - index) +\n              this.tlt('trained_dialog_current_model_msg'),\n            type: \"question\",\n            showCancelButton: true,\n            confirmButtonColor: \"#3085d6\",\n            cancelButtonColor: \"#d33\",\n            confirmButtonText: this.tlt('trained_dialog_swal_confirm_msg'),\n            allowOutsideClick: false,\n            allowEscapeKey: false,\n          }).then((result) => {\n            if (result.value) {\n              this.spinnerOn = true;\n              this.big_spinner = true;\n              // Swal.fire({\n              //   text: \"Please wait while we submit your request\",\n              //   toast: true,\n              //   type: \"info\",\n              //   showCancelButton: false,\n              //   showConfirmButton: false,\n              // });\n              axios\n                .post(\n                  api_calls.revert_models(),\n                  {\n                    email: this.$session.get(\"UserInformation\").email,\n                    license_key: this.$session.get(\"UserInformation\").license_key,\n                    token: this.$session.get(\"UserInformation\").tokens,\n                    subscription:\n                      this.$session.get(\"UserInformation\").subscription,\n                    company_details: {\n                      company_id: this.$session.get(\"UserInformation\").company_id,\n                      company_name:\n                        this.$session.get(\"UserInformation\").company_name,\n                    },\n                    model_file: this.trained_dialogue_models[index].FileName,\n                  },\n                  {\n                    headers: {\n                      Authorization: `Bearer ${this.$session.get(\"at\")}`,\n                    },\n                  }\n                )\n                .then((response) => {\n                  this.big_spinner = false;\n                  if (response.data.status === \"Success\") {\n                    Swal.fire({\n                      title: this.tlt('trained_dialog_model_updated_msg'),\n                      type: \"success\",\n                      allowOutsideClick: false,\n                      allowEscapeKey: false,\n                      timer: 2000,\n                    }).then((result_success) => {\n                      if (result_success.value) {\n                        this.big_spinner = true;\n                        this.get_trained_dialogue_models();\n                      }\n                    });\n                  } else {\n                    Swal.fire({\n                      title: this.tlt('trained_dialog_error_occur_msg'),\n                      type: \"error\",\n                      timer: 2500,\n                    });\n                  }\n                  // console.log(response);\n                })\n                .catch((e) => {\n                  this.big_spinner = false;\n                  if (\n                    e.response.status === 410 ||\n                    e.response.status === 440 ||\n                    e.response.status === 409\n                  ) {\n                    this.$root.$emit(\"Session_Expired\", e.response.data);\n                  }\n                });\n            }\n          });\n        }\n      }else{\n        this.show_subscription_expired_swal(true);\n      }\n    },  \n    select_trained_intent_model(index) {\n      if(!this.disable_btn_expired){\n        let call_api = true;\n        for (let i = 0; i < this.trained_intent_models.length; i++) {\n          if (this.trained_intent_models[index].active) {\n            call_api = false;\n            break;\n          }\n        }\n        if (call_api) {\n          Swal.fire({\n            title: this.tlt('trained_intent_swal_alert_msg'),\n            text:\n              this.tlt('trained_intent_swal_set_msg') +\n              this.tlt('trained_intent_swal_companyname_msg') +\n              \" V\" +\n              (this.tlt('trained_intent_model_swal_msg').length - index) +\n              this.tlt('trained_intent_current_model_msg'),\n            type: \"question\",\n            showCancelButton: true,\n            confirmButtonColor: \"#3085d6\",\n            cancelButtonColor: \"#d33\",\n            confirmButtonText: this.tlt('trained_intent_swal_confirm_msg'),\n            allowOutsideClick: false,\n            allowEscapeKey: false,\n          }).then((result) => {\n            if (result.value) {\n              this.spinnerOn = true;\n              this.big_spinner = true;\n              // Swal.fire({\n              //   text: \"Please wait while we submit your request\",\n              //   toast: true,\n              //   type: \"info\",\n              //   showCancelButton: false,\n              //   showConfirmButton: false,\n              // });\n              axios\n                .post(\n                  api_calls.train_intent_model(),\n                  {\n                    company_name: this.companyname,\n                    company_id: this.companyid,\n                    email: this.$session.get(\"UserInformation\").email,\n                    license_key: this.$session.get(\"UserInformation\").license_key,\n                    token: this.$session.get(\"UserInformation\").tokens,\n                    FileName: this.trained_intent_models[index].FileName,\n                    isChangeModelVersion: true,\n                  },\n                  {\n                    headers: {\n                      Authorization: `Bearer ${this.$session.get(\"at\")}`,\n                    },\n                  }\n                )\n                .then((response) => {\n                  this.big_spinner = false;\n                  if (response.data.status === \"Success\") {\n                    this.get_trained_intent_models();\n                    Swal.fire({\n                      title: this.tlt('trained_intent_model_updated_msg'),\n                      type: \"success\",\n                      allowOutsideClick: false,\n                      allowEscapeKey: false,\n                      timer: 2000,\n                    });\n                  } else {\n                    Swal.fire({\n                      title: this.tlt('trained_intent_error_occur_msg'),\n                      type: \"error\",\n                      timer: 2500,\n                    });\n                  }\n                  // console.log(response);\n                })\n                .catch((e) => {\n                  this.big_spinner = false;\n                  if (\n                    e.response.status === 410 ||\n                    e.response.status === 440 ||\n                    e.response.status === 409\n                  ) {\n                    this.$root.$emit(\"Session_Expired\", e.response.data);\n                  }\n                });\n            }\n          });\n        }\n      }else{\n        this.show_subscription_expired_swal(true);\n      }\n    },\n    select_trained_ner_model(index) {\n      if(!this.disable_btn_expired){\n        let call_api = true;\n        for (let i = 0; i < this.trained_ner_models.length; i++) {\n          if (this.trained_ner_models[index].active) {\n            call_api = false;\n            break;\n          }\n        }\n        if (call_api) {\n          Swal.fire({\n            title: this.tlt('trained_ner_swal_alert_msg'),\n            text:\n              this.tlt('trained_ner_swal_set_msg') +\n              this.tlt('trained_ner_swal_companyname_msg') +\n              \" V\" +\n              (this.tlt('trained_ner_model_swal_msg').length - index) +\n              this.tlt('trained_ner_current_model_msg'),\n            type: \"question\",\n            showCancelButton: true,\n            confirmButtonColor: \"#3085d6\",\n            cancelButtonColor: \"#d33\",\n            confirmButtonText: this.tlt('trained_ner_swal_confirm_msg'),\n            allowOutsideClick: false,\n            allowEscapeKey: false,\n          }).then((result) => {\n            if (result.value) {\n              this.spinnerOn = true;\n              this.big_spinner = true;\n              // Swal.fire({\n              //   text: \"Please wait while we submit your request\",\n              //   toast: true,\n              //   type: \"info\",\n              //   showCancelButton: false,\n              //   showConfirmButton: false,\n              // });\n              axios\n                .post(\n                  api_calls.revert_ner_models(),\n                  {\n                    company_name: this.companyname,\n                    company_id: this.companyid,\n                    email: this.$session.get(\"UserInformation\").email,\n                    license_key: this.$session.get(\"UserInformation\").license_key,\n                    token: this.$session.get(\"UserInformation\").tokens,\n                    company_details: {\n                      company_id: this.companyid,\n                      company_name: this.companyname,\n                    },\n                    model_file: this.trained_ner_models[index].FileName,\n                  },\n                  {\n                    headers: {\n                      Authorization: `Bearer ${this.$session.get(\"at\")}`,\n                    },\n                  }\n                )\n                .then((response) => {\n                  this.big_spinner = false;\n                  if (response.data === \"Revert Successful\") {\n                    Swal.fire({\n                      title: this.tlt('trained_ner_model_updated_msg'),\n                      type: \"success\",\n                      allowOutsideClick: false,\n                      allowEscapeKey: false,\n                      timer: 2000,\n                    }).then((result_success) => {\n                      // if (result_success.value) {\n                      this.big_spinner = true;\n                      this.get_trained_ner_models();\n                      // }\n                    });\n                  } else {\n                    Swal.fire({\n                      title: this.tlt('trained_ner_error_occur_msg'),\n                      type: \"error\",\n                      timer: 2500,\n                    });\n                  }\n                  // console.log(response);\n                })\n                .catch((e) => {\n                  this.big_spinner = false;\n                  if (\n                    e.response.status === 410 ||\n                    e.response.status === 440 ||\n                    e.response.status === 409\n                  ) {\n                    this.$root.$emit(\"Session_Expired\", e.response.data);\n                  }\n                });\n            }\n          });\n        }\n      }else{\n        this.show_subscription_expired_swal(true);\n      }\n    },\n    get_trained_dialogue_models() {\n      this.big_spinner = true;\n      axios\n        .post(\n          api_calls.use_model(),\n          {\n            email: this.$session.get(\"UserInformation\").email,\n            token: this.$session.get(\"UserInformation\").tokens,\n            company_name: this.$session.get(\"UserInformation\").company_name,\n            company_id: this.$session.get(\"UserInformation\").company_id,\n            license_key: this.$session.get(\"UserInformation\").license_key,\n            isShow: true,\n          },\n          {\n            headers: {\n              Authorization: `Bearer ${this.$session.get(\"at\")}`,\n            },\n          }\n        )\n        .then(({ data }) => {\n          this.big_spinner = false;\n          this.trained_dialogue_models = data.models.map((model) => {\n            model.created_at = moment\n              .unix(model.created_at)\n              .format(\"Do MMM YY\");\n            return model;\n          });\n        })\n        .catch((e) => {\n          console.log(e);\n          this.big_spinner = false;\n          if (\n            e.response.status === 410 ||\n            e.response.status === 440 ||\n            e.response.status === 409\n          ) {\n            this.$root.$emit(\"Session_Expired\", e.response.data);\n          }\n        });\n    },\n    get_trained_ner_models() {\n      this.big_spinner = true;\n      axios\n        .get(\n          api_calls.revert_ner_models(),\n          {\n            params: {\n              email: this.$session.get(\"UserInformation\").email,\n              token: this.$session.get(\"UserInformation\").tokens,\n              company_name: this.$session.get(\"UserInformation\").company_name,\n              company_id: this.$session.get(\"UserInformation\").company_id,\n              license_key: this.$session.get(\"UserInformation\").license_key,\n              revert_company_id:\n                this.$session.get(\"UserInformation\").company_id,\n              revert_company_name:\n                this.$session.get(\"UserInformation\").company_name,\n              isShow: true,\n            },\n          },\n          {\n            headers: {\n              Authorization: `Bearer ${this.$session.get(\"at\")}`,\n            },\n          }\n        )\n        .then(({ data }) => {\n          this.big_spinner = false;\n          this.trained_ner_models = data.model_data.map((model) => {\n            model.created_at = moment(\n              model.created_at,\n              \"YYYYMMDDHHmmss\"\n            ).format(\"Do MMM YY\");\n            return model;\n          });\n        })\n        .catch((e) => {\n          console.log(e);\n          this.big_spinner = false;\n          if (\n            e.response.status === 410 ||\n            e.response.status === 440 ||\n            e.response.status === 409\n          ) {\n            this.$root.$emit(\"Session_Expired\", e.response.data);\n          }\n        });\n    },\n    get_trained_intent_models() {\n      this.big_spinner = true;\n      axios\n        .post(\n          api_calls.train_intent_model(),\n          {\n            company_name: this.companyname,\n            company_id: this.companyid,\n            email: this.$session.get(\"UserInformation\").email,\n            license_key: this.$session.get(\"UserInformation\").license_key,\n            token: this.$session.get(\"UserInformation\").tokens,\n            isGetModels: true,\n          },\n          {\n            headers: {\n              Authorization: `Bearer ${this.$session.get(\"at\")}`,\n            },\n          }\n        )\n        .then(({ data }) => {\n          this.big_spinner = false;\n          // console.log(response.data);\n          this.trained_intent_models = data.models.map((model) => {\n            model.created_at = moment(\n              model.created_at,\n              \"YYYYMMDDHHmmss\"\n            ).format(\"Do MMM YY\");\n            return model;\n          });\n        })\n        .catch((e) => {\n          console.log(e);\n          this.big_spinner = false;\n          if (\n            e.response.status === 410 ||\n            e.response.status === 440 ||\n            e.response.status === 409\n          ) {\n            this.$root.$emit(\"Session_Expired\", e.response.data);\n          }\n        });\n    },\n    // add_mail() {\n    //   event.preventDefault();\n    //   axios\n    //     .post(\n    //       api_calls.notify_superadmin_url(),\n    //       {\n    //         companyname: this.companyname,\n    //         companyid: this.companyid,\n    //         sendto: this.sender,\n    //         email: this.$session.get(\"UserInformation\").email,\n    //         body: this.email_body,\n    //         subject: this.subject,\n    //         bindemail: \"False\",\n    //         license_key: this.$session.get(\"UserInformation\").license_key,\n    //         token: this.$session.get(\"UserInformation\").tokens\n    //       },\n    //       {\n    //         headers: {\n    //           Authorization: `Bearer ${this.$session.get(\"at\")}`\n    //         }\n    //       }\n    //     )\n    //     .then(response => {\n    //       toastr.success(response.data);\n    //     })\n    //     .catch(e => {\n    //       if (\n    //         e.response.status === 410 ||\n    //         e.response.status === 440 ||\n    //         e.response.status === 409\n    //       ) {\n    //         this.$root.$emit(\"Session_Expired\", e.response.data);\n    //       }\n    //     });\n    // },\n    language_support_api() {\n      axios\n        .post(api_calls.multiple_language_support_url(), {\n          companyname: this.companyname,\n          companyid: this.companyid,\n          email: this.$session.get(\"UserInformation\").email,\n          license_key: this.$session.get(\"UserInformation\").license_key,\n          token: this.$session.get(\"UserInformation\").tokens,\n          language_support: this.multiple_language_list,\n        })\n        .then((response) => {\n          if (response.data == \"Query Executed Successfully\") {\n          } else {\n            this.$router.go();\n          }\n        });\n    },\n    fileinput(e) {\n      let files = e.target.files || e.dataTransfer.files;\n      if (files[0].size > 2097152) {\n        swal({\n          text: this.tlt('other_upload_company_logo_msg'),\n          toast: true,\n          position: \"top-end\",\n          type: \"error\",\n          showConfirmButton: false,\n          timer: 10000,\n        });\n        return;\n      }\n      if (files[0].type === \"image/png\" || files[0].type === \"image/jpeg\") {\n        if (!files.length) return;\n        this.old_image_name = this.file_label;\n        this.file_label = files[0].name;\n        this.createImage(files[0]);\n      } else {\n        swal({\n          text: this.tlt('other_select_img_type_msg'),\n          type: \"error\",\n          timer: 2500,\n        });\n      }\n    },\n    createImage(file, type) {\n      let reader = new FileReader();\n\n      reader.onload = (e) => {\n        this.image_file = e.target.result.split(\"base64,\")[1];\n      };\n      reader.readAsDataURL(file);\n    },\n    download_sdk(data_type) {\n      if (data_type == \"license_key\") {\n        this.spinnerOn1 = true;\n        axios({\n          method: \"post\",\n          url: api_calls.get_license_key(),\n          responseType: \"blob\",\n          data: {\n            companyid: this.$session.get(\"UserInformation\").company_id,\n            companyname: this.$session.get(\"UserInformation\").company_name,\n            license_key: this.$session.get(\"UserInformation\").license_key,\n            token: this.$session.get(\"UserInformation\").tokens,\n            email: this.$session.get(\"UserInformation\").email,\n          },\n          headers: {\n            Authorization: `Bearer ${this.$session.get(\"at\")}`,\n          },\n        })\n          .then((response) => {\n            var url = window.URL.createObjectURL(new Blob([response.data]));\n            var link = document.createElement(\"a\");\n            link.href = url;\n            link.setAttribute(\"download\", data_type + \".txt\");\n            document.body.appendChild(link);\n            link.click();\n            this.spinnerOn1 = false;\n          })\n          .catch((e) => {\n            if (\n              e.response.status === 410 ||\n              e.response.status === 440 ||\n              e.response.status === 409\n            ) {\n              this.$root.$emit(\"Session_Expired\", e.response.data);\n            }\n          });\n      } else {\n        this.spinnerOn2 = true;\n        axios({\n          method: \"post\",\n          url: api_calls.file_download_url(),\n          responseType: \"blob\",\n          data: {\n            download_sdk_type: data_type,\n            companyid: this.$session.get(\"UserInformation\").company_id,\n            companyname: this.$session.get(\"UserInformation\").company_name,\n            license_key: this.$session.get(\"UserInformation\").license_key,\n            token: this.$session.get(\"UserInformation\").tokens,\n            email: this.$session.get(\"UserInformation\").email,\n          },\n          headers: {\n            Authorization: `Bearer ${this.$session.get(\"at\")}`,\n          },\n        })\n          .then((response) => {\n            this.spinnerOn2 = false;\n            if (response.data.message == \"Not able to download file\") {\n              toastr.error(\n                this.tlt('other_internal_error_msg1')\n              );\n            } else {\n              var url = window.URL.createObjectURL(new Blob([response.data]));\n              var link = document.createElement(\"a\");\n              link.href = url;\n              link.setAttribute(\"download\", data_type + \"_SDK.zip\");\n              document.body.appendChild(link);\n              link.click();\n            }\n          })\n          .catch((e) => {\n            this.spinnerOn2 = false;\n            toastr.error(\n              this.tlt('other_internal_error_msg2')\n            );\n            if (\n              e.response.status === 410 ||\n              e.response.status === 440 ||\n              e.response.status === 409\n            ) {\n              this.$root.$emit(\"Session_Expired\", e.response.data);\n            }\n          });\n      }\n    },\n    copy_widget_code() {\n      this.$refs.widget_textarea.select();\n      document.execCommand(\"copy\");\n      $(\"#copy_code_tooltip\").tooltip(\"show\");\n      setTimeout(() => {\n        $(\"#copy_code_tooltip\").tooltip(\"dispose\");\n        this.initialize_tooltips();\n      }, 5000);\n    },\n    copy_uuid_code() {\n      this.$refs.uuid_textarea1.select();\n      this.$refs.uuid_textarea2.select();\n      document.execCommand(\"copy\");\n      setTimeout(() => {\n        $(\"#copy_code_tooltip\").tooltip(\"dispose\");\n        this.initialize_tooltips();\n      }, 5000);\n    },\n    initialize_tooltips() {\n      $('[data-tooltip=\"tooltip\"]').tooltip({\n        trigger: \"manual\",\n      });\n    },\n    copy_license_key() {\n      this.$refs.license_key_textarea.select();\n      this.$refs.license_key_textarea.setSelectionRange(0, 99999);\n      document.execCommand(\"copy\");\n      $(\"#copy_licnse_key_tooltip\").tooltip(\"show\");\n      setTimeout(() => {\n        $(\"#copy_licnse_key_tooltip\").tooltip(\"dispose\");\n        this.initialize_tooltips();\n      }, 5000);\n    },\n    empty_variable() {},\n    configure_sender_email(value){\n      if (value == \"email\") {\n        Swal.fire({\n          title: this.tlt('other_configure_email_swal_msg'),\n          text:\n            this.tlt('other_verification_link_msg'),\n          type: \"question\",\n          showCancelButton: true,\n          confirmButtonColor: \"#3085d6\",\n          cancelButtonColor: \"#d33\",\n          confirmButtonText: this.tlt('other_swal_proceed_msg')\n        }).then(result => {\n          if (result.value) {\n            this.big_spinner = true;\n            axios\n              .post(\n                api_calls.product_settings(),\n                {\n                  company_name: this.companyname,\n                  company_id: this.companyid,\n                  email: this.$session.get(\"UserInformation\").email,\n                  license_key: this.$session.get(\"UserInformation\").license_key,\n                  token: this.$session.get(\"UserInformation\").tokens,\n                  is_email: true,\n                  email_id: this.email_details\n                },\n                {\n                  headers: {\n                    Authorization: `Bearer ${this.$session.get(\"at\")}`\n                  }\n                }\n              )\n              .then(response => {\n                this.big_spinner = false;\n                if (response.data == \"Query Executed Successfully\") {\n                  swal({\n                    text:\n                      this.tlt('other_email_send_to_msg') +\n                      \" \" +\n                      this.tlt('other_user_email_details_msg') +\n                      this.tlt('other_check_your_email_msg'),\n                    type: \"success\",\n                    title: this.tlt('other_success_swal_btn1'),\n                    allowOutsideClick: false,\n                    allowEscapeKey: false\n                  });\n                  this.email_disable = true;\n                  this.email_verification_status();\n                  this.load_product_settings();\n                } else {\n                  swal({\n                    text: this.tlt('other_internal_server_msg'),\n                    type: \"error\",\n                    timer: 2000\n                  });\n                }\n              })\n              .catch(e => {\n                this.big_spinner = false;\n                toastr.error(this.tlt('other_error_occur_msg'));\n                if (\n                  e.response.status === 410 ||\n                  e.response.status === 440 ||\n                  e.response.status === 409\n                ) {\n                  this.$root.$emit(\"Session_Expired\", e.response.data);\n                }\n              });\n          }\n        });\n      }else if (value == \"email_remove\") {\n        Swal.fire({\n          title: this.tlt('other_swal_alert_msg1'),\n          text:\n            this.tlt('other_removed_saved_email_msg'),\n          type: \"question\",\n          showCancelButton: true,\n          confirmButtonColor: \"#3085d6\",\n          cancelButtonColor: \"#d33\",\n          confirmButtonText: this.tlt('other_swal_remove_msg')\n        }).then(result => {\n          if (result.value) {\n            this.big_spinner = true;\n            axios\n              .post(\n                api_calls.product_settings(),\n                {\n                  company_name: this.companyname,\n                  company_id: this.companyid,\n                  email: this.$session.get(\"UserInformation\").email,\n                  license_key: this.$session.get(\"UserInformation\").license_key,\n                  token: this.$session.get(\"UserInformation\").tokens,\n                  is_remove_email: true,\n                  email_id: this.email_details\n                },\n                {\n                  headers: {\n                    Authorization: `Bearer ${this.$session.get(\"at\")}`\n                  }\n                }\n              )\n              .then(response => {\n                this.big_spinner = false;\n                if (response.data == \"Query Executed Successfully\") {\n                  swal({\n                    text: this.tlt('other_email_removed_swal_msg'),\n                    type: \"success\",\n                    timer: 5000,\n                    title: this.tlt('other_success_swal_btn2')\n                  });\n                  this.email_disable = false;\n                  this.email_details = null;\n                  this.empty_variable();\n                  this.load_product_settings();\n                } else {\n                  swal({\n                    text: this.tlt('other_internal_server_msg2'),\n                    type: \"error\",\n                    timer: 2000\n                  });\n                }\n              })\n              .catch(e => {\n                this.big_spinner = false;\n                toastr.error(this.tlt('other_error_occur_msg2'));\n                if (\n                  e.response.status === 410 ||\n                  e.response.status === 440 ||\n                  e.response.status === 409\n                ) {\n                  this.$root.$emit(\"Session_Expired\", e.response.data);\n                }\n              });\n          }\n        });\n      } \n    },\n    email_verification_status() {\n      if (this.email_details != null && this.email_details != \"\") {\n        this.email_disable = true;\n        this.big_spinner = true;\n        axios\n          .post(\n            api_calls.product_settings(),\n            {\n              company_name: this.companyname,\n              company_id: this.companyid,\n              email: this.$session.get(\"UserInformation\").email,\n              license_key: this.$session.get(\"UserInformation\").license_key,\n              token: this.$session.get(\"UserInformation\").tokens,\n              is_email_verification_status: true,\n              email_id: this.email_details\n            },\n            {\n              headers: {\n                Authorization: `Bearer ${this.$session.get(\"at\")}`\n              }\n            }\n          )\n          .then(response => {\n            this.big_spinner = false;\n            if (\n              response.data != \"\" &&\n              response.data != null &&\n              response.data != \"Internal server Error\"\n            ) {\n              var status = response.data.verification_status;\n              this.verification_status =\n                status == \"Success\"\n                  ? \"Success\"\n                  : status == \"Pending\"\n                  ? this.tlt('other_pending_verify_email_msg')\n                  : status +\n                    this.tlt('other_link_expired_msg');\n            }\n          })\n          .catch(e => {\n            this.big_spinner = false;\n            if (\n              e.response.status === 410 ||\n              e.response.status === 440 ||\n              e.response.status === 409\n            ) {\n              this.$root.$emit(\"Session_Expired\", e.response.data);\n            }\n          });\n      }\n    },\n    top_navbar_disable(){\n      if (this.disable_sidebar === true) {\n        return 'pointer-events:none;'    \n      }else{\n        return ''\n      }\n    }\n  },\n};\n</script>\n<style>\n.third-party-logo {\n  width: 150px;\n  height: 75px;\n  object-fit: contain;\n}\n.form-control.tags-input {\n  padding: 5px !important;\n}\n.tags-input-badge {\n  line-height: 1.5 !important;\n}\n.tags-input-remove:before,\n.tags-input-remove:after {\n  background: #9799ae !important;\n}\n</style>\n\n<style scoped>\n@media (max-width: 1400px) {\n  .miscellaneous-custom-file-input {\n    padding: 15px 25px 15px 60px;\n  }\n}\n/* .vr {\n  border-left: 1px solid #E9E9E9;\n  margin-top: 5%;\n  margin-bottom: 5%; */\n/* } */\n.hclass6 {\n  font-weight: 100;\n}\n\n.contact-info {\n  padding-left: 0px;\n}\n.darkblue-btn1 {\n  margin-left: 3%;\n  font-size: 14px;\n  color: #fff;\n  background: #273679;\n  border: solid 1px #273679;\n  padding: 9px 18px;\n  font-weight: 400;\n  line-height: 20px;\n  display: inline-block;\n  border-radius: 4px;\n  cursor: pointer;\n  width: 30%;\n  text-align: center;\n}\n.button_disabled {\n  border: 2px solid rgb(230, 230, 230);\n  background: rgb(247, 248, 251);\n}\n.button_disabled svg {\n  opacity: 0;\n}\n.button_enabled {\n  border: 1px solid rgb(39, 54, 121);\n  background: rgb(247, 248, 251);\n}\n.button_enabled svg {\n  opacity: 1;\n}\n.custom-file > input::-webkit-input-placeholder {\n  margin-left: 200px;\n}\n#select_country_name_misc {\n  color: #9499ae;\n}\n.save_node_button {\n  font-size: 14px;\n  color: #fff;\n  background: #273679;\n  border: solid 1px #273679;\n  padding: 6px 15px;\n  font-weight: 400;\n  line-height: 20px;\n  /* display: inline-block; */\n  border-radius: 4px;\n  cursor: pointer;\n  float: right;\n}\n.custom-file {\n  min-height: 40px !important;\n}\n@media (max-width: 1400px) {\n  .custom-file-label {\n    padding: 15px 25px 15px 15px !important;\n  }\n}\n\n.custom-button-box {\n  border: 0.5px solid #ccc;\n}\n\n.table-box td,\n.table-box th {\n  padding: 5px !important;\n  font-size: 14px !important;\n  width: 0px !important;\n}\n.table-box td:first-child,\n.table-box th:first-child {\n  text-align: left !important;\n  width: 0px !important;\n}\n</style>\n\n<style src=\"vue-multiselect/dist/vue-multiselect.min.css\"></style>\n"]}]}