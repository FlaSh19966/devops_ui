{"remainingRequest":"/home/vimalesh/CENSE/chatbot-portal/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/vimalesh/CENSE/chatbot-portal/src/portal/Chatbot/Dashboard/Data Inputs/AddIntent.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/vimalesh/CENSE/chatbot-portal/src/portal/Chatbot/Dashboard/Data Inputs/AddIntent.vue","mtime":1660042032563},{"path":"/home/vimalesh/CENSE/chatbot-portal/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vimalesh/CENSE/chatbot-portal/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/vimalesh/CENSE/chatbot-portal/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vimalesh/CENSE/chatbot-portal/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["AddIntent.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwfile":"AddIntent.vue","sourceRoot":"src/portal/Chatbot/Dashboard/Data Inputs","sourcesContent":["<template>\n  <!-- TODO Remove the company_id prefix for intents -->\n  <div>\n    <div class=\"dash-cont\">\n      <div class=\"spinner\" id=\"spinner\" v-show=\"spinnerOn\"></div>\n      <div class=\"container-fluid\">\n        <div class=\"card dash-card\">\n          <div\n            class=\"card-header d-block d-sm-flex flex-wrap justify-content-between\"\n          >\n            <h4 class=\"mb-sm-0\">Intents</h4>\n            <div class=\"card-act d-flex flex-wrap\">\n              <!-- for search -harsh -->\n              <input\n                class=\"form-control search-bar\"\n                id=\"search_bar\"\n                placeholder=\"Search here\"\n                v-model=\"search_name\"\n                v-on:keyup=\"callsearch\"\n              />\n              <a type=\"button\" v-if=\"isVisibleSearchClear\" class=\"btn bg-transparent mt-auto mb-auto py-0\" @click=\"clear_search_name\" style=\"margin-left: -40px; z-index: 10;\">\n                <img src=\"/img/close-icn.png\" alt />\n              </a>\n              <a\n                href=\"javascript:void(0)\"\n                class=\"darkblue-btn\"\n                @click=\"search_intent\"\n                id=\"search_btn\"\n              >\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  xmlns:xlink=\"http://www.w3.org/1999/xlink\"\n                  width=\"14\"\n                  height=\"14\"\n                >\n                  <path\n                    d=\"M13.809011327100071,12.965505435601472 L9.30910012117823,8.49330664854199 C10.007392079586584,7.596111589605521 10.38512817619458,6.499157170138106 10.38512817619458,5.345374656726532 c0,-1.3810948891881802 -0.5423458634784514,-2.676086605733705 -1.523073527148749,-3.6524965835014083 c-0.9807276636702976,-0.9764099777677033 -2.287209392305289,-1.5136937750578685 -3.6751296371814526,-1.5136937750578685 s-2.6944019735111544,0.5390058607430178 -3.6751296371814526,1.5136937750578685 C0.5293349766245179,2.667565987539975 -0.011278152465820316,3.9642797675383576 -0.011278152465820316,5.345374656726532 c0,1.3793728257353273 0.5423458634784514,2.6778086691865575 1.523073527148749,3.6524965835014083 C2.492523038353222,9.974281217995648 3.7972720326001044,10.51156501528581 5.18692501186438,10.51156501528581 c1.160932040033745,0 2.2629511108717475,-0.37540983272197437 3.165705727077092,-1.0676793407689171 l4.499911205921844,4.470476723606628 a0.1420842198250257,0.14120920313395363 0 0 0 0.20099718902076805,0 l0.7554721932159904,-0.7490976019910955 a0.1420842198250257,0.14120920313395363 0 0 0 0,-0.19975936053095905 zM7.931576282630728,8.073123166045836 C7.196896902072058,8.80155600660269 6.2231001759542055,9.20279679111746 5.18692501186438,9.20279679111746 s-2.0099718902076775,-0.4012407845147706 -2.744651270766347,-1.1296736250716286 C1.709327094927478,7.342968262036121 1.3055999824978375,6.37516860153268 1.3055999824978375,5.345374656726532 s0.4037271124296458,-1.99931566876244 1.1366737586002036,-2.727748509319298 C3.1769531216567026,1.8891933068503817 4.150749847774562,1.4879525223356067 5.18692501186438,1.4879525223356067 s2.0117046245957884,0.3995187210619175 2.744651270766347,1.1296736250716286 S9.06825004123093,4.315580711920385 9.06825004123093,5.345374656726532 s-0.4037271124296458,1.99931566876244 -1.1366737586002036,2.727748509319298 z\"\n                    fill=\"#fff\"\n                  />\n                </svg>\n              </a>\n              <a\n                href=\"#\"\n                class=\"darkblue-btn\"\n                data-toggle=\"modal\"\n                data-target=\"#intentmodel\"\n                id=\"add_intent_btn\"\n              >\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  width=\"14\"\n                  height=\"13.997\"\n                  viewBox=\"0 0 14 13.997\"\n                >\n                  <path\n                    id=\"Union_13\"\n                    data-name=\"Union 13\"\n                    d=\"M-12684,2058v-5h-5a1,1,0,0,1-1-1,1,1,0,0,1,1-1h5v-5a1,1,0,0,1,1-1,1,1,0,0,1,1,1v5h5a1,1,0,0,1,1,1,1,1,0,0,1-1,1h-5v5a1,1,0,0,1-1,1A1,1,0,0,1-12684,2058Z\"\n                    transform=\"translate(12690.001 -2045.002)\"\n                    fill=\"#fff\"\n                  />\n                </svg>\n                Add Intent\n              </a>\n              <a\n                href=\"#\"\n                class=\"darkblue-btn\"\n                id=\"save_edit\"\n                v-if=\"isGlobalEdit\"\n                @click=\"add_intents\"\n              >\n                Save\n              </a>\n              <a\n                href=\"javascript:void(0)\"\n                class=\"red-btn\"\n                @click=\"delete_selected\"\n                id=\"delete_intent\"\n              >\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  width=\"14\"\n                  height=\"14\"\n                  viewBox=\"0 0 14 14\"\n                >\n                  <path\n                    d=\"M8.375,3v.778H4V5.333h.875V15.444A1.661,1.661,0,0,0,6.625,17h8.75a1.661,1.661,0,0,0,1.75-1.556V5.333H18V3.778H13.625V3H8.375M6.625,5.333h8.75V15.444H6.625V5.333m1.75,1.556v7h1.75v-7H8.375m3.5,0v7h1.75v-7Z\"\n                    transform=\"translate(-4 -3)\"\n                    fill=\"#fff\"\n                  />\n                </svg>\n                Delete\n              </a>\n            </div>\n          </div>\n          <div class=\"card-body\" id=\"page\">\n            <div class=\"table-box\">\n              <div class=\"table-responsive\">\n                <table class=\"table\">\n                  <thead>\n                    <tr>\n                      <th scope=\"col\">\n                        <div class=\"form-check checkbox checkbox-success\">\n                          <label class=\"form-check-label\">\n                            <input\n                              class=\"form-check-input\"\n                              id=\"selectall\"\n                              type=\"checkbox\"\n                              @change=\"selected_intents('all')\"\n                            />\n                            <span class=\"icn\"></span>\n                          </label>\n                        </div>\n                      </th>\n                      <th\n                        scope=\"col\"\n                        style=\"\n                          width: auto;\n                          display: flex;\n                          justify-content: space-evenly;\n                        \"\n                      >\n                        ACTION\n                        <a\n                          href=\"#\"\n                          @click=\"isGlobalEdit = !isGlobalEdit\"\n                          id=\"global_edit_intent_icn\"\n                        >\n                          <svg\n                            xmlns=\"http://www.w3.org/2000/svg\"\n                            width=\"15.392\"\n                            height=\"15.392\"\n                            viewBox=\"0 0 15.392 15.392\"\n                          >\n                            <path\n                              id=\"square-edit-outline\"\n                              d=\"M4.71,3A1.7,1.7,0,0,0,3,4.71V16.682a1.71,1.71,0,0,0,1.71,1.71H16.682a1.71,1.71,0,0,0,1.71-1.71V10.7h-1.71v5.986H4.71V4.71H10.7V3H4.71m10.928.855a.591.591,0,0,0-.41.171L14.185,5.061,16.322,7.2l1.043-1.035a.578.578,0,0,0,0-.812L16.04,4.026a.571.571,0,0,0-.4-.171M13.578,5.668l-6.3,6.311v2.138H9.413l6.3-6.311Z\"\n                              transform=\"translate(-3 -3)\"\n                              fill=\"#9499ae\"\n                            />\n                          </svg>\n                        </a>\n                      </th>\n                      <th scope=\"col\">INTENT</th>\n                      <th scope=\"col\">EMAIL ADDRESS</th>\n                      <th scope=\"col\">CREATED ON</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    <tr v-for=\"(intents, index) in intentlist\" :key=\"index\">\n                      <th scope=\"col\">\n                        <div class=\"form-check checkbox-success\">\n                          <label\n                            class=\"form-check-label checkbox checkbox-success\"\n                          >\n                            <input\n                              class=\"form-check-input\"\n                              type=\"checkbox\"\n                              @change=\"selected_intents(intents.intent)\"\n                            />\n                            <span class=\"icn\"></span>\n                          </label>\n                        </div>\n                      </th>\n                      <td class=\"action\">\n                        <a\n                          href=\"#\"\n                          @click=\"edit_intent(index)\"\n                          id=\"edit_intent_icn\"\n                        >\n                          <svg\n                            xmlns=\"http://www.w3.org/2000/svg\"\n                            width=\"15.392\"\n                            height=\"15.392\"\n                            viewBox=\"0 0 15.392 15.392\"\n                            data-toggle=\"modal\"\n                            data-target=\"#intentmodel\"\n                          >\n                            <path\n                              id=\"square-edit-outline\"\n                              d=\"M4.71,3A1.7,1.7,0,0,0,3,4.71V16.682a1.71,1.71,0,0,0,1.71,1.71H16.682a1.71,1.71,0,0,0,1.71-1.71V10.7h-1.71v5.986H4.71V4.71H10.7V3H4.71m10.928.855a.591.591,0,0,0-.41.171L14.185,5.061,16.322,7.2l1.043-1.035a.578.578,0,0,0,0-.812L16.04,4.026a.571.571,0,0,0-.4-.171M13.578,5.668l-6.3,6.311v2.138H9.413l6.3-6.311Z\"\n                              transform=\"translate(-3 -3)\"\n                              fill=\"#9499ae\"\n                            />\n                          </svg>\n                        </a>\n                        <a\n                          href=\"#\"\n                          @click=\"delete_intent(index)\"\n                          id=\"single_delete_intent_id\"\n                        >\n                          <svg\n                            xmlns=\"http://www.w3.org/2000/svg\"\n                            width=\"13.682\"\n                            height=\"15.392\"\n                            viewBox=\"0 0 13.682 15.392\"\n                          >\n                            <path\n                              d=\"M8.276,3v.855H4v1.71h.855V16.682a1.71,1.71,0,0,0,1.71,1.71h8.551a1.71,1.71,0,0,0,1.71-1.71V5.565h.855V3.855H13.406V3H8.276M6.565,5.565h8.551V16.682H6.565V5.565m1.71,1.71v7.7h1.71v-7.7H8.276m3.42,0v7.7h1.71v-7.7Z\"\n                              transform=\"translate(-4 -3)\"\n                              fill=\"#f23d3d\"\n                            />\n                          </svg>\n                        </a>\n                      </td>\n                      <td>\n                        <template v-if=\"!isGlobalEdit\">{{\n                          intents.intent\n                        }}</template>\n                        <template v-else-if=\"isGlobalEdit\">\n                          <input\n                            class=\"w-100 form-control edit-column\"\n                            placeholder=\"Intent\"\n                            v-model=\"global_intents_edit_list[index]\"\n                        /></template>\n                      </td>\n                      <td class=\"text-center\">{{ intents.email }}</td>\n                      <td class=\"text-center\">{{ intents.created }}</td>\n                    </tr>\n                  </tbody>\n                </table>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div\n      class=\"modal fade dash-modal\"\n      id=\"intentmodel\"\n      tabindex=\"-1\"\n      role=\"dialog\"\n      aria-labelledby=\"intentmodeltitle\"\n      aria-hidden=\"true\"\n    >\n      <div class=\"modal-dialog modal-dialog-centered\" role=\"document\">\n        <div class=\"modal-content\">\n          <div class=\"modal-body\">\n            <div class=\"modal-head d-flex align-items-center\">\n              <div class=\"head-icn\">\n                <img src=\"/img/msg-blue.png\" alt />\n              </div>\n              <h3>Add Intent</h3>\n            </div>\n            <button\n              type=\"button\"\n              @click=\"clear_fields\"\n              class=\"close\"\n              data-dismiss=\"modal\"\n              aria-label=\"Close\"\n            >\n              <img src=\"/img/close-icn.png\" alt />\n            </button>\n            <form @submit.prevent=\"add_intents\">\n              <div v-if=\"edit == 'False'\">\n                <label>Add Intent</label>\n                <div\n                  v-for=\"(newintents, index) in add_intents_list\"\n                  :key=\"index\"\n                  class=\"form-group\"\n                >\n                  <span\n                    v-if=\"index != 0\"\n                    style=\"float: right; cursor: pointer\"\n                    @click=\"add_to_intent_list('remove', index)\"\n                  >\n                    <i style=\"font-size: 16px\" class=\"fa\">&#xf00d;</i>\n                  </span>\n                  <input\n                    type=\"text\"\n                    v-model.trim=\"add_intents_list[index]\"\n                    class=\"form-control\"\n                    placeholder=\"Enter intent\"\n                    :id=\"`enter_intent_id_${index}`\"\n                  />\n                </div>\n              </div>\n              <div v-if=\"edit == 'True'\" class=\"form-group\">\n                <label>Add Intent</label>\n                <input\n                  type=\"text\"\n                  v-model.trim=\"new_intents\"\n                  class=\"form-control\"\n                  placeholder=\"Enter intent\"\n                  id=\"enter_intent_id\"\n                />\n              </div>\n              <div\n                v-if=\"edit == 'False'\"\n                class=\"form-group\"\n                style=\"float: left\"\n              >\n                <a\n                  href=\"#\"\n                  class=\"darkblue-btn\"\n                  style=\"padding: 5px 10px\"\n                  @click=\"add_to_intent_list('add')\"\n                >\n                  <svg\n                    xmlns=\"http://www.w3.org/2000/svg\"\n                    width=\"14\"\n                    height=\"13.997\"\n                    viewBox=\"0 0 14 13.997\"\n                  >\n                    <path\n                      id=\"Union_13\"\n                      data-name=\"Union 13\"\n                      d=\"M-12684,2058v-5h-5a1,1,0,0,1-1-1,1,1,0,0,1,1-1h5v-5a1,1,0,0,1,1-1,1,1,0,0,1,1,1v5h5a1,1,0,0,1,1,1,1,1,0,0,1-1,1h-5v5a1,1,0,0,1-1,1A1,1,0,0,1-12684,2058Z\"\n                      transform=\"translate(12690.001 -2045.002)\"\n                      fill=\"#fff\"\n                    />\n                  </svg>\n                  Add Intent\n                </a>\n              </div>\n              <br />\n              <div class=\"btn-wrap text-right\">\n                <button\n                  type=\"button\"\n                  class=\"btn btn-link\"\n                  @click=\"clear_fields\"\n                  data-dismiss=\"modal\"\n                >\n                  Cancel\n                </button>\n                <button type=\"submit\" class=\"darkblue-btn\" id=\"save_intent\">\n                  Save\n                </button>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <div class=\"pagin-table\" style=\"margin-top: 2%\">\n      <nav aria-label=\"Page navigation example\">\n        <ul class=\"pagination justify-content-center\">\n          <li class=\"page-item\">\n            <a class=\"page-link\" href=\"#\" @click=\"page_require(page_no - 1)\">\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"8.667\"\n                height=\"15.204\"\n                viewBox=\"0 0 8.667 15.204\"\n              >\n                <g\n                  id=\"arrow-point-to-left\"\n                  transform=\"translate(105.806 15.204) rotate(180)\"\n                >\n                  <path\n                    id=\"Path_1136\"\n                    data-name=\"Path 1136\"\n                    d=\"M105.493,8.354l-6.537,6.537a1.065,1.065,0,1,1-1.506-1.506L103.235,7.6,97.45,1.817A1.065,1.065,0,0,1,98.956.312l6.537,6.537a1.065,1.065,0,0,1,0,1.505Z\"\n                    transform=\"translate(0 0)\"\n                    fill=\"#9499ae\"\n                  />\n                </g>\n              </svg>\n            </a>\n          </li>\n          <li\n            :class=\"'page-item ' + pagination_class(pageno)\"\n            v-for=\"pageno in page_array\"\n            :key=\"pageno\"\n          >\n            <a\n              v-if=\"pageno == '...s' || pageno == '...l'\"\n              class=\"page-link\"\n              href=\"#\"\n              @click=\"page_require(pageno)\"\n              >...</a\n            >\n            <a\n              v-if=\"pageno != '...s' && pageno != '...l'\"\n              class=\"page-link\"\n              href=\"#\"\n              @click=\"page_require(pageno)\"\n              >{{ pageno }}</a\n            >\n          </li>\n          <li class=\"page-item\">\n            <a class=\"page-link\" href=\"#\" @click=\"page_require(page_no + 1)\">\n              <svg\n                xmlns=\"http://www.w3.org/2000/svg\"\n                width=\"8.667\"\n                height=\"15.204\"\n                viewBox=\"0 0 8.667 15.204\"\n              >\n                <g id=\"arrow-point-to-right\" transform=\"translate(-97.139 0)\">\n                  <path\n                    id=\"Path_1136\"\n                    data-name=\"Path 1136\"\n                    d=\"M105.493,8.354l-6.537,6.537a1.065,1.065,0,1,1-1.506-1.506L103.235,7.6,97.45,1.817A1.065,1.065,0,0,1,98.956.312l6.537,6.537a1.065,1.065,0,0,1,0,1.505Z\"\n                    transform=\"translate(0 0)\"\n                    fill=\"#9499ae\"\n                  />\n                </g>\n              </svg>\n            </a>\n          </li>\n        </ul>\n      </nav>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\nimport Swal from \"sweetalert2\";\nimport api_calls from \"@/portal/api_calls\";\nimport { setTimeout } from \"timers\";\nexport default {\n  name: \"add-intent\",\n  data() {\n    return {\n      isVisibleSearchClear:false,\n      spinnerOn: false,\n      checked_list: [],\n      total_pages: null,\n      page_no: 1,\n      per_page: 20,\n      new_intent_list: [],\n      new_intents: \"\",\n      intentlist: [],\n      companyname: \"\",\n      companyid: \"\",\n      number_of_rows: null,\n      edit: \"False\",\n      old_intent_data: [],\n      new_intent_data: [],\n      search_name: \"\",\n      page_array: [],\n      add_intents_list: [\"\"],\n      isGlobalEdit: false,\n      global_intents_edit_list: [],\n      // search_by: '',\n      // searchby: '',\n    };\n  },\n  watch: {\n    isGlobalEdit(newVal) {\n      if (Boolean(newVal)) {\n        this.global_intents_edit_list = this.intentlist.map(\n          ({ intent }) => intent\n        );\n      }\n    },\n  },\n  created() {\n    if (this.$session.get(\"UserInformation\").role == \"SuperAdmin\") {\n      if (this.$session.has(\"CompanyId\")) {\n        this.companyid = this.$session.get(\"CompanyId\");\n        this.companyname = this.$session.get(\"CompanyName\");\n      } else {\n        this.companyid = this.$session.get(\"UserInformation\").company_id;\n        this.companyname = this.$session.get(\"UserInformation\").company_name;\n        toastr.warning(this.tlt('select_company_name_text'));\n      }\n    } else {\n      this.companyid = this.$session.get(\"UserInformation\").company_id;\n      this.companyname = this.$session.get(\"UserInformation\").company_name;\n    }\n    this.load_intents();\n  },\n  mounted() {\n    var vm = this;\n    $(\"#selectall\").click(function () {\n      if ($(this).is(\":checked\")) {\n        $(\"input:checkbox\").prop(\"checked\", true);\n      } else {\n        $(\"input:checkbox\").prop(\"checked\", false);\n        vm.checked_list = [];\n      }\n    });\n    $(\"#intentmodel\").on(\"hidden.bs.modal\", function (e) {\n      $(\"input:checkbox\").prop(\"checked\", false);\n      vm.checked_list = [];\n    });\n    if(this.$route.params.modal_open_switch_tab){\n      $(\"#intentmodel\").modal(\"show\");\n    }\n    // $(\"#from_datepicker\").datepicker({\n    //   dateFormat: \"yy-mm-dd\",\n    //   onClose: (dateText, inst) => {\n    //     this.search_name=dateText;\n    //   },\n    //   onSelect: function(dateText, inst) {\n    //   }\n    // });\n  },\n  watch:{\n        search_name(){\n          if (this.search_name === \"\"){\n          this.load_intents();\n          this.isVisibleSearchClear = false;\n          }\n          else if (this.search_name !== \"\"){\n            this.isVisibleSearchClear = true;\n          }\n        },\n  },\n  methods: {\n    clear_search_name(){\n      this.search_name = \"\";\n    },\n    load_intents() {\n      this.spinnerOn = true;\n      this.intentlist = [];\n      axios\n        .post(\n          api_calls.add_intent_url(),\n          {\n            company_name: this.companyname,\n            company_id: this.companyid,\n            email: this.$session.get(\"UserInformation\").email,\n            license_key: this.$session.get(\"UserInformation\").license_key,\n            token: this.$session.get(\"UserInformation\").tokens,\n            subscription: this.$session.get(\"UserInformation\").subscription,\n            showintent: \"True\",\n            page_no: this.page_no,\n            per_page: this.per_page,\n          },\n          {\n            headers: {\n              Authorization: `Bearer ${this.$session.get(\"at\")}`,\n            },\n          }\n        )\n        .then((response) => {\n          this.spinnerOn = false;\n          if (response.data != \"token invalid\") {\n            this.number_of_rows = response.data[3].number_of_rows;\n            this.total_pages = Math.ceil(this.number_of_rows / this.per_page);\n            for (var i in response.data[0]) {\n              this.intentlist.push({\n                intent: response.data[0][i].replace(`${this.companyid}_`, \"\"),\n                email: response.data[1][i],\n                created: response.data[2][i],\n              });\n            }\n          }\n          this.setpagination(this.page_no);\n        })\n        .catch((e) => {\n          if (\n            e.response.status === 410 ||\n            e.response.status === 440 ||\n            e.response.status === 409\n          ) {\n            this.$root.$emit(\"Session_Expired\", e.response.data);\n          }\n        });\n    },\n    callsearch() {\n      if (event.keyCode === 13) {\n        this.search_intent();\n      }\n    },\n    search_intent() {\n      if (this.search_name != \"\") {\n        this.spinnerOn = true;\n        axios\n          .post(\n            api_calls.add_intent_url(),\n            {\n              company_id: this.$session.get(\"UserInformation\").company_id,\n              company_name: this.$session.get(\"UserInformation\").company_name,\n              license_key: this.$session.get(\"UserInformation\").license_key,\n              email: this.$session.get(\"UserInformation\").email,\n              token: this.$session.get(\"UserInformation\").tokens,\n              issearch: true,\n              key: this.search_name,\n              per_page: this.per_page,\n              page_no: 1,\n            },\n            {\n              headers: {\n                Authorization: `Bearer ${this.$session.get(\"at\")}`,\n              },\n            }\n          )\n          .then((response) => {\n            this.spinnerOn = false;\n            if (\n              response.data.MSG != \"Internal Server Error\" &&\n              response.data.MSG != \"No Intents Found\"\n            ) {\n              this.intentlist = [];\n              this.page_no = 1;\n              if (response.data != \"token invalid\") {\n                this.number_of_rows = response.data.intentlist.length;\n                this.total_pages = response.data.pagecount;\n                for (let i = 0; i < response.data.intentlist.length; i++) {\n                  this.intentlist.push({\n                    intent: response.data.intentlist[i].Intent.replace(\n                      this.companyid + \"_\",\n                      \"\"\n                    ),\n                    email: response.data.intentlist[i].CreatedBy,\n                    created: response.data.intentlist[i].CreatedDate,\n                  });\n                }\n                this.setpagination(this.page_no);\n              }\n            } else if (response.data.MSG == \"No Intents Found\") {\n              toastr.error(\"No intent found\");\n            } else if (response.data.MSG == \"Intrnal Server Error\") {\n              toastr.error(\"Intrnal Server Error\");\n              // setTimeout(() => {\n              //   this.$router.go();\n              // }, 2500);\n              this.load_intents();\n            }\n          })\n          .catch((e) => {\n            if (\n              e.response.status === 410 ||\n              e.response.status === 440 ||\n              e.response.status === 409\n            ) {\n              this.$root.$emit(\"Session_Expired\", e.response.data);\n            }\n          });\n      } else {\n        toastr.error(\"Enter proper data for searching\");\n      }\n    },\n    selected_intents(intent) {\n      if (intent == \"all\") {\n        if (event.target.checked) {\n          var temp = this.intentlist;\n          this.checked_list = temp;\n        } else if (!event.target.checked) {\n          this.checked_list = [];\n        }\n      } else {\n        if (event.target.checked == true) {\n          let val_index = this.checked_list.filter((intents) => {\n            return intents.intent == intent;\n          });\n          if (val_index.length == 0) {\n            this.checked_list.push(intent);\n          }\n        } else if (event.target.checked == false) {\n          var selectall = document.querySelector(\"#selectall\");\n          if (selectall.checked == true) {\n            selectall.checked = false;\n          }\n          let temp = this.checked_list.filter((intents) => {\n            return intents != intent;\n          });\n          this.checked_list = temp;\n        }\n      }\n    },\n    page_change(page_no) {\n      this.spinnerOn = true;\n      axios\n        .post(\n          api_calls.add_intent_url(),\n          {\n            intent: this.companyid + \"_\" + this.new_intents,\n            company_name: this.companyname,\n            company_id: this.companyid,\n            email: this.$session.get(\"UserInformation\").email,\n            license_key: this.$session.get(\"UserInformation\").license_key,\n            token: this.$session.get(\"UserInformation\").tokens,\n            subscription: this.$session.get(\"UserInformation\").subscription,\n            showintent: \"True\",\n            page_no: this.page_no,\n            per_page: this.per_page,\n          },\n          {\n            headers: {\n              Authorization: `Bearer ${this.$session.get(\"at\")}`,\n            },\n          }\n        )\n        .then((response) => {\n          this.spinnerOn = false;\n          this.number_of_rows = response.data[3].number_of_rows;\n          for (var i in response.data[0]) {\n            this.intentlist.push({\n              intent: response.data[0][i].replace(this.companyid + \"_\", \"\"),\n              email: response.data[1][i],\n              created: response.data[2][i],\n            });\n          }\n        })\n        .catch((e) => {\n          if (\n            e.response.status === 410 ||\n            e.response.status === 440 ||\n            e.response.status === 409\n          ) {\n            this.$root.$emit(\"Session_Expired\", e.response.data);\n          }\n        });\n    },\n    edit_intent(index) {\n      this.new_intents = this.intentlist[index].intent;\n      this.old_intent_data.push(\n        `${this.companyid}_${this.intentlist[index].intent}`\n      );\n      this.edit = \"True\";\n    },\n    delete_selected() {\n      if (this.checked_list.length == 0) {\n        Swal.fire(\"No intent selected!\", \"\", \"error\");\n      } else if (this.checked_list.length > 0) {\n        for (var i in this.checked_list) {\n          this.new_intent_list.push(\n            this.companyid + \"_\" + this.checked_list[i]\n          );\n        }\n        Swal.fire({\n          title: \"Are you sure?\",\n          text: \"You won't be able to revert this!\",\n          type: \"warning\",\n          showCancelButton: true,\n          confirmButtonColor: \"#3085d6\",\n          cancelButtonColor: \"#d33\",\n          confirmButtonText: \"Yes, delete!!\",\n        }).then((result) => {\n          if (result.value) {\n            this.spinnerOn = true;\n            axios\n              .post(\n                api_calls.delete_intent_url(),\n                {\n                  intent_list: this.new_intent_list,\n                  company_name: this.companyname,\n                  company_id: this.companyid,\n                  email: this.$session.get(\"UserInformation\").email,\n                  license_key: this.$session.get(\"UserInformation\").license_key,\n                  token: this.$session.get(\"UserInformation\").tokens,\n                  subscription: this.$session.get(\"UserInformation\")\n                    .subscription,\n                },\n                {\n                  headers: {\n                    Authorization: `Bearer ${this.$session.get(\"at\")}`,\n                  },\n                }\n              )\n              .then((response) => {\n                this.spinnerOn = false;\n                if (response.data == \"INTENTS DELETED\") {\n                  Swal({\n                    type: \"success\",\n                    text: \"Your Intent(s) have been deleted.\",\n                    timer:2000,\n                  }).then((result) => {\n                    if (result.value) {\n                      this.load_intents();\n                    }\n                  });\n                } else if (response.data == \"Nothing to delete!\") {\n                  toastr.error(\n                    \"You have not selected any intent to be deleted.\"\n                  );\n                } else if (\n                  response.data ==\n                  \"Trained intent deletion is currently disabled!\"\n                ) {\n                  toastr.error(\n                    \"Deletion of trained/configured intent is disabled. A Codearray Admin will get in contact with you\"\n                  );\n                }\n              })\n              .catch((e) => {\n                if (\n                  e.response.status === 410 ||\n                  e.response.status === 440 ||\n                  e.response.status === 409\n                ) {\n                  this.$root.$emit(\"Session_Expired\", e.response.data);\n                }\n              });\n          }\n        });\n      }\n    },\n    delete_intent(index) {\n      this.new_intent_list[0] =\n        this.companyid + \"_\" + this.intentlist[index].intent;\n      Swal.fire({\n        title: \"Are you sure?\",\n        text: \"You won't be able to revert this!\",\n        type: \"warning\",\n        showCancelButton: true,\n        confirmButtonColor: \"#3085d6\",\n        cancelButtonColor: \"#d33\",\n        confirmButtonText: \"Yes, delete it!\",\n      }).then((result) => {\n        if (result.value) {\n          this.spinnerOn = true;\n          axios\n            .post(\n              api_calls.delete_intent_url(),\n              {\n                intent_list: this.new_intent_list,\n                company_name: this.companyname,\n                company_id: this.companyid,\n                email: this.$session.get(\"UserInformation\").email,\n                license_key: this.$session.get(\"UserInformation\").license_key,\n                token: this.$session.get(\"UserInformation\").tokens,\n                subscription: this.$session.get(\"UserInformation\").subscription,\n              },\n              {\n                headers: {\n                  Authorization: `Bearer ${this.$session.get(\"at\")}`,\n                },\n              }\n            )\n            .then((response) => {\n              this.spinnerOn = false;\n              if (response.data == \"INTENTS DELETED\") {\n                Swal({\n                  type: \"success\",\n                  text: \"Your Intent(s) have been deleted.\",\n                  timer:2000,\n                  allowOutsideClick: false,\n                  allowEscapeKey: false,\n                }).then((result) => {\n                  if (result.value) {\n                    this.load_intents();\n                  }\n                });\n              } else if (\n                response.data ==\n                \"Trained intent deletion is currently disabled!\"\n              ) {\n                toastr.error(\n                  \"Deletion of trained/configured intent is disabled. A Codearray Admin will get in contact with you\"\n                );\n              }\n            })\n            .catch((e) => {\n              if (\n                e.response.status === 410 ||\n                e.response.status === 440 ||\n                e.response.status === 409\n              ) {\n                this.$root.$emit(\"Session_Expired\", e.response.data);\n              }\n            });\n        }\n      });\n    },\n    page_require(page) {\n      if (page == 0 || page == this.total_pages + 1) {\n      } else {\n        if (this.search_name == \"\") {\n          if (page == \"...s\") {\n            this.page_no = Math.ceil((1 + this.page_no) / 2);\n          } else if (page == \"...l\") {\n            this.page_no = Math.ceil((this.total_pages + this.page_no) / 2);\n          } else {\n            this.page_no = page;\n          }\n          $(\"input:checkbox\").prop(\"checked\", false);\n          this.spinnerOn = true;\n          axios\n            .post(\n              api_calls.add_intent_url(),\n              {\n                intent: this.new_intents,\n                company_name: this.companyname,\n                company_id: this.companyid,\n                email: this.$session.get(\"UserInformation\").email,\n                license_key: this.$session.get(\"UserInformation\").license_key,\n                token: this.$session.get(\"UserInformation\").tokens,\n                subscription: this.$session.get(\"UserInformation\").subscription,\n                showintent: \"True\",\n                page_no: this.page_no,\n                per_page: this.per_page,\n              },\n              {\n                headers: {\n                  Authorization: `Bearer ${this.$session.get(\"at\")}`,\n                },\n              }\n            )\n            .then((response) => {\n              this.spinnerOn = false;\n              this.intentlist = [];\n              for (var i in response.data[0]) {\n                this.intentlist.push({\n                  intent: response.data[0][i].replace(this.companyid + \"_\", \"\"),\n                  email: response.data[1][i],\n                  created: response.data[2][i],\n                });\n              }\n              this.setpagination(this.page_no);\n            })\n            .catch((e) => {\n              if (\n                e.response.status === 410 ||\n                e.response.status === 440 ||\n                e.response.status === 409\n              ) {\n                this.$root.$emit(\"Session_Expired\", e.response.data);\n              }\n            });\n        } else {\n          // if(this.search_by=='Email Address'){\n          //   this.searchby='CreatedBy';\n          // }\n          // else{\n          //   this.searchby=this.search_by;\n          // }\n          $(\"input:checkbox\").prop(\"checked\", false);\n          if (pageno == \"...s\") {\n            this.page_no = Math.ceil((1 + this.page_no) / 2);\n          } else if (pageno == \"...l\") {\n            this.page_no = Math.ceil((this.total_pages + this.page_no) / 2);\n          } else {\n            this.page_no = pageno;\n          }\n          this.spinnerOn = true;\n          axios\n            .post(\n              api_calls.add_intent_url(),\n              {\n                company_id: this.$session.get(\"UserInformation\").company_id,\n                company_name: this.$session.get(\"UserInformation\").company_name,\n                license_key: this.$session.get(\"UserInformation\").license_key,\n                email: this.$session.get(\"UserInformation\").email,\n                token: this.$session.get(\"UserInformation\").tokens,\n                issearch: true,\n                // searchby: this.searchby,\n                key: this.search_name,\n                per_page: this.per_page,\n                page_no: this.page_no,\n              },\n              {\n                headers: {\n                  Authorization: `Bearer ${this.$session.get(\"at\")}`,\n                },\n              }\n            )\n            .then((response) => {\n              this.spinnerOn = false;\n              this.intentlist = [];\n              if (response.data.intentlist.length) {\n                if (response.data != \"token invalid\") {\n                  this.number_of_rows = response.data.intentlist.length;\n                  this.total_pages = response.data.pagecount;\n                  for (let i = 0; i < response.data.intentlist.length; i++) {\n                    this.intentlist.push({\n                      intent: response.data.intentlist[i].Intent.replace(\n                        this.companyid + \"_\",\n                        \"\"\n                      ),\n                      email: response.data.intentlist[i].CreatedBy,\n                      created: response.data.intentlist[i].CreatedDate,\n                    });\n                  }\n                  this.setpagination(this.page_no);\n                }\n              } else if (response.data.MSG == \"No Intents Found\") {\n                toastr.error(\"No intent found\");\n              } else if (response.data.MSG == \"Intrnal Server Error\") {\n                toastr.error(\"Internal Server Error\");\n                // setTimeout(() => {\n                //   this.$router.go();\n                // }, 2500);\n                this.load_intents();\n              } else {\n                toastr.error(\"Internal Server Error\");\n                // setTimeout(() => {\n                //   this.$router.go();\n                // }, 2500);\n                this.load_intents();\n              }\n            })\n            .catch((e) => {\n              if (\n                e.response.status === 410 ||\n                e.response.status === 440 ||\n                e.response.status === 409\n              ) {\n                this.$root.$emit(\"Session_Expired\", e.response.data);\n              }\n            });\n        }\n      }\n    },\n    add_intents() {\n      if (this.isGlobalEdit) {\n        this.spinnerOn = true;\n        var result1 = [];\n        var result2 = [];\n        var intents_map = this.intentlist.map(({ intent }) => intent);\n\n        for (var i = 0; i < intents_map.length; i++) {\n          if (this.global_intents_edit_list.indexOf(intents_map[i]) === -1) {\n            result1.push(intents_map[i]);\n          }\n        }\n\n        for (i = 0; i < this.global_intents_edit_list.length; i++) {\n          if (intents_map.indexOf(this.global_intents_edit_list[i]) === -1) {\n            result2.push(this.global_intents_edit_list[i]);\n          }\n        }\n\n        if (result2.some((val, i) => result2.indexOf(val) !== i)) {\n          toastr.error(\n            \"You have entered some intents more than once, ensure unique values\"\n          );\n        } else {\n          let old_intent_data = result1.map(\n            (intent) => `${this.companyid}_${intent}`\n          );\n          let new_intent_data = result2.map(\n            (intent) => `${this.companyid}_${intent}`\n          );\n\n          this.edit_intent_api(old_intent_data, new_intent_data);\n        }\n      } else if (this.edit == \"False\") {\n        if (this.add_intents_list.includes(\"\")) {\n          toastr.error(\"Please Enter the Intent\");\n        } else {\n          // this.spinnerOn = true;\n          this.new_intent_list = this.add_intents_list.map(\n            (intent) => `${this.companyid}_${intent}`\n          );\n          this.spinnerOn = true;\n          axios\n            .post(\n              api_calls.add_intent_url(),\n              {\n                intent: this.new_intent_list,\n                company_name: this.companyname,\n                company_id: this.companyid,\n                email: this.$session.get(\"UserInformation\").email,\n                license_key: this.$session.get(\"UserInformation\").license_key,\n                token: this.$session.get(\"UserInformation\").tokens,\n                subscription: this.$session.get(\"UserInformation\").subscription,\n                showintent: \"False\",\n              },\n              {\n                headers: {\n                  Authorization: `Bearer ${this.$session.get(\"at\")}`,\n                },\n              }\n            )\n            .then((response) => {\n              this.new_intent_list = [];\n              this.add_intents_list = [\"\"];\n              this.spinnerOn = false;\n              if (response.data == \"User Role Set\") {\n                Swal({\n                  type: \"success\",\n                  text: \"Feedback added successfully\",\n                  timer:2000,\n                  allowOutsideClick: false,\n                  allowEscapeKey: false,\n                }).then((result) => {\n                  if (result.value) {\n                    this.load_intents();\n                  }\n                });\n              } else if (response.data.status == \"Failure\") {\n                var myhtml = document.createElement(\"div\");\n                var p = document.createElement(\"p\");\n                p.style.textAlign = \"center\";\n                // p.style.marginLeft = '5%';\n                p.innerHTML = \"The following intent(s) already exist:\";\n                myhtml.appendChild(p);\n                var ul = document.createElement(\"ul\");\n                ul.style.marginLeft = \"10%\";\n                ul.setAttribute(\"id\", \"proList\");\n                var productList = response.data.failed_intents;\n                productList = productList.map((intent) =>\n                  intent.split(this.companyid + \"_\").pop()\n                );\n                myhtml.appendChild(ul);\n                productList.forEach(renderProductList);\n                function renderProductList(element, index, arr) {\n                  var li = document.createElement(\"li\");\n                  li.setAttribute(\"class\", \"item\");\n                  ul.appendChild(li);\n                  li.innerHTML = li.innerHTML + element;\n                }\n                ul.style.listStyle = \"initial\";\n                ul.style.textAlign = \"left\";\n                if (response.data.failed_intents.length > 0) {\n                  Swal({\n                    html: myhtml,\n                    type: \"warning\",\n                    // title: \"The following intents already exist:\"\n                  });\n                } else {\n                  Swal({\n                    type: \"warning\",\n                    title: \"The following intents already exist:\",\n                    timer:2500,\n                  });\n                }\n              } else if (response.data.status == \"Error\") {\n                Swal({\n                  type: \"error\",\n                  text: \"There was an internal server error. Please try again.\",\n                  timer:2500,\n                });\n              } else if (response.data == \"Question Limit Already Exceeded!\") {\n                Swal({\n                  type: \"warning\",\n                  text:\n                    \"Your capacity to add questions has exceeded. Please upgrade your plans.\",\n                  timer:3000,\n                });\n              }\n            })\n            .catch((e) => {\n              if (\n                e.response.status === 410 ||\n                e.response.status === 440 ||\n                e.response.status === 409\n              ) {\n                this.$root.$emit(\"Session_Expired\", e.response.data);\n              }\n            });\n          // this.spinnerOn = false;\n          $(\"#intentmodel\").modal(\"hide\");\n        }\n      } else if (this.edit == \"True\") {\n        if (this.new_intents == \"\") {\n          Swal({\n            text: \"Please enter the required fields\",\n            type: \"warning\",\n            timer:2500,\n          });\n        } else {\n          this.new_intent_data.push(`${this.companyid}_${this.new_intents}`);\n          this.edit_intent_api(this.old_intent_data, this.new_intent_data);\n        }\n      }\n    },\n    edit_intent_api(old_intent_data, new_intent_data) {\n      this.spinnerOn = true;\n      $(\"#intentmodel\").modal(\"hide\");\n      axios\n        .post(\n          api_calls.add_intent_url(),\n          {\n            old_intent_data: old_intent_data,\n            new_intent_data: new_intent_data,\n            company_name: this.companyname,\n            company_id: this.companyid,\n            email: this.$session.get(\"UserInformation\").email,\n            license_key: this.$session.get(\"UserInformation\").license_key,\n            token: this.$session.get(\"UserInformation\").tokens,\n            subscription: this.$session.get(\"UserInformation\").subscription,\n            editintent: \"True\",\n          },\n          {\n            headers: {\n              Authorization: `Bearer ${this.$session.get(\"at\")}`,\n            },\n          }\n        )\n        .then((response) => {\n          this.spinnerOn = false;\n          this.edit == \"False\";\n          this.isGlobalEdit = false;\n          // $(\"#intentmodel\").modal(\"hide\");\n          // response.data.message == \"Failed to edit intent(s)\" ||\n          this.clear_fields();\n          console.log(response.data.failed_intents);       \n          if (response.data.status == \"Failure\") {\n            Swal({\n              type: \"error\",\n              text: \"Intent(s) are not updated, due to some technical issues.\",\n              timer:2500,\n            });\n          } else if (response.data.status == \"Success\") {\n            Swal({\n              type: \"success\",\n              text: \"Intent(s) Updated Successfully\",\n              allowOutsideClick: false,\n              allowEscapeKey: false,\n            }).then((result) => {\n              if (result.value) {\n                // this.$router.go();\n                this.load_intents();\n              }\n            });\n          } else if (response.data.message == \"Internal Server Error\") {\n            Swal({\n              type: \"error\",\n              text: \"There was an internal server error. Please try again.\",\n              timer:2500,\n            });\n          }\n        })\n        .catch((e) => {\n          if (\n            e.response.status === 410 ||\n            e.response.status === 440 ||\n            e.response.status === 409\n          ) {\n            this.$root.$emit(\"Session_Expired\", e.response.data);\n          }\n        });\n    },\n    clear_fields() {\n      this.new_intents = [];\n      this.new_intent_data = [];\n      this.old_intent_data = [];\n      this.add_intents_list = [\"\"];\n      this.edit = \"False\";\n    },\n    setpagination(page_no) {\n      this.page_array = [];\n      if (this.total_pages <= 7) {\n        for (let i = 0; i < this.total_pages; i++) {\n          this.page_array.push(i + 1);\n        }\n      } else if (page_no == 1) {\n        for (let i = 0; i < 4; i++) {\n          this.page_array.push(i + 1);\n        }\n        this.page_array.push(\"...l\");\n        this.page_array.push(this.total_pages);\n      } else if (page_no == this.total_pages) {\n        this.page_array.push(1);\n        this.page_array.push(\"...s\");\n        for (let i = this.total_pages - 4; i < this.total_pages; i++) {\n          this.page_array.push(i + 1);\n        }\n      } else if (page_no <= 4) {\n        for (let i = 0; i < page_no + 3; i++) {\n          this.page_array.push(i + 1);\n        }\n        this.page_array.push(\"...l\");\n        this.page_array.push(this.total_pages);\n      } else if (page_no >= this.total_pages - 4) {\n        this.page_array.push(1);\n        this.page_array.push(\"...s\");\n        for (let i = page_no - 4; i < this.total_pages; i++) {\n          this.page_array.push(i + 1);\n        }\n      } else {\n        this.page_array.push(1);\n        this.page_array.push(\"...s\");\n        for (let i = page_no - 3; i <= page_no + 3; i++) {\n          this.page_array.push(i);\n        }\n        this.page_array.push(\"...l\");\n        this.page_array.push(this.total_pages);\n      }\n    },\n    // resetpagenumber(){\n    //   this.page_no=1;\n    // },\n    pagination_class(index) {\n      if (index == this.page_no) {\n        return \" active\";\n      } else {\n        return \"\";\n      }\n    },\n    add_to_intent_list(type, index) {\n      if (type == \"add\") {\n        this.add_intents_list.push(\"\");\n      } else if (type == \"remove\") {\n        this.add_intents_list.splice(index, 1);\n      }\n    },\n  },\n};\n</script>\n<style scoped>\ntr td {\n  height: 50px;\n}\n.edit-column {\n  height: 29px !important;\n}\n</style>\n"]}]}