{"remainingRequest":"/home/vimalesh/Elixir/chatbot-portal/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/vimalesh/Elixir/chatbot-portal/src/portal/Chatbot/Dashboard/End User Response/VerifyResponsesUserFeedback.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/vimalesh/Elixir/chatbot-portal/src/portal/Chatbot/Dashboard/End User Response/VerifyResponsesUserFeedback.vue","mtime":1643027096172},{"path":"/home/vimalesh/Elixir/chatbot-portal/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vimalesh/Elixir/chatbot-portal/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/vimalesh/Elixir/chatbot-portal/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/vimalesh/Elixir/chatbot-portal/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["VerifyResponsesUserFeedback.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAsfile":"VerifyResponsesUserFeedback.vue","sourceRoot":"src/portal/Chatbot/Dashboard/End User Response","sourcesContent":["<template>\n  <div>\n    <div class=\"spinner\" id=\"spinner\" v-show=\"show_loader\"></div>\n    <div class=\"table-box\">\n      <div class=\"table-responsive mb-0\" style=\"overflow :visible;\">\n        <table class=\"table\">\n          <thead>\n            <tr>\n              <th scope=\"col\">\n                <div class=\"form-check checkbox checkbox-success\">\n                  <label class=\"form-check-label\">\n                    <input\n                      class=\"form-check-input\"\n                      id=\"selectall\"\n                      type=\"checkbox\"\n                      @change=\"question_selected('all')\"\n                    />\n                    <span class=\"icn\"></span>\n                  </label>\n                </div>\n              </th>\n              <th scope=\"col\" style=\"width: 5%\">ACTION</th>\n              <th scope=\"col\">QUESTIONS</th>\n              <th scope=\"col\">PREDICTED INTENT</th>\n              <th scope=\"col\">NEW INTENT</th>\n              <!-- <th scope=\"col\" style=\"width: 2%\">SOURCES</th> -->\n              <th scope=\"col\">USER RESPONSES\n                <i\n                              class=\"fa fa-filter \"\n                              aria-hidden=\"true\"\n                              data-toggle=\"dropdown\"\n                              style=\"cursor: pointer;\"\n                            ></i>\n                <ul class=\"dropdown-menu p-0\" style=\"margin-top: .6rem;\">\n                              <table style=\"width: 100%\">\n                                <tr\n                                  v-for=\"(status, index) in user_list\"\n                                  :key=\"index\"\n                                >\n                                  <td\n                                    style=\"\n                                      display: flex;\n                                      width: auto;\n                                      text-align: center;\n                                    \"\n                                  >\n                                    <input\n                                      v-model=\"selected_user_list\"\n                                      type=\"checkbox\"\n                                      :id=\"\n                                        status.replace(/\\s/g, '') + '_checkbox'\n                                      \"\n                                      :value=\"status\"\n                                      style=\"\n                                        margin-top: auto;\n                                        margin-bottom: auto;\n                                      \"\n                                    />\n                                    <label\n                                      :for=\"\n                                        status.replace(/\\s/g, '') + '_checkbox'\n                                      \"\n                                      :title=\"status\"\n                                      style=\"margin: auto\"\n                                    >\n                                      {{ status }}</label\n                                    >\n                                  </td>\n                                </tr>\n                              </table>\n                            </ul>\n              </th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr\n              v-for=\"(row, index) in unanswered_list\"\n              :key=\"index\"\n              id=\"list-group\"\n            >\n              <template v-if=\"row.user_feedback !== null\">\n                <th scope=\"col\" class=\"table-col_1\">\n                  <div class=\"form-check checkbox checkbox-success\">\n                    <label class=\"form-check-label\">\n                      <input\n                        class=\"form-check-input checking\"\n                        id=\"checking\"\n                        @change=\"question_selected(index)\"\n                        type=\"checkbox\"\n                      />\n                      <span class=\"icn\"></span>\n                    </label>\n                  </div>\n                </th>\n                <td class=\"action\">\n                  <a href=\"#\" @click=\"edit_item(index)\">\n                    <svg\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      width=\"15.392\"\n                      height=\"15.392\"\n                      viewBox=\"0 0 15.392 15.392\"\n                      data-toggle=\"modal\"\n                      data-target=\"#exampleModalCenter\"\n                    >\n                      <path\n                        id=\"square-edit-outline\"\n                        d=\"M4.71,3A1.7,1.7,0,0,0,3,4.71V16.682a1.71,1.71,0,0,0,1.71,1.71H16.682a1.71,1.71,0,0,0,1.71-1.71V10.7h-1.71v5.986H4.71V4.71H10.7V3H4.71m10.928.855a.591.591,0,0,0-.41.171L14.185,5.061,16.322,7.2l1.043-1.035a.578.578,0,0,0,0-.812L16.04,4.026a.571.571,0,0,0-.4-.171M13.578,5.668l-6.3,6.311v2.138H9.413l6.3-6.311Z\"\n                        transform=\"translate(-3 -3)\"\n                        fill=\"#9499ae\"\n                      />\n                    </svg>\n                  </a>\n                  <a href=\"#\" @click=\"delete_single(index)\">\n                    <svg\n                      xmlns=\"http://www.w3.org/2000/svg\"\n                      width=\"13.682\"\n                      height=\"15.392\"\n                      viewBox=\"0 0 13.682 15.392\"\n                    >\n                      <path\n                        id=\"trash-can-outline\"\n                        d=\"M8.276,3v.855H4v1.71h.855V16.682a1.71,1.71,0,0,0,1.71,1.71h8.551a1.71,1.71,0,0,0,1.71-1.71V5.565h.855V3.855H13.406V3H8.276M6.565,5.565h8.551V16.682H6.565V5.565m1.71,1.71v7.7h1.71v-7.7H8.276m3.42,0v7.7h1.71v-7.7Z\"\n                        transform=\"translate(-4 -3)\"\n                        fill=\"#f23d3d\"\n                      />\n                    </svg>\n                  </a>\n                </td>\n                <td>{{ row.question }}</td>\n                <td>{{ row.intent }}</td>\n                <td style=\"width: 20%;\">\n                  <div class=\"form-group\">\n                    <multiselect\n                      v-model=\"row.new_intent\"\n                      :searchable=\"true\"\n                      :close-on-select=\"true\"\n                      :show-labels=\"false\"\n                      :options=\"intent_list\"\n                    >\n                      <span>{{ row.new_intent }}</span>\n                    </multiselect>\n                  </div>\n                </td>\n                <!-- <td>{{ row.source }}</td> -->\n                <td class=\"text-center\">\n                  <a v-if=\"row.user_feedback == 'like'\" >\n                        <strong>Yes</strong>\n                      </a>\n                  <a v-else-if=\"row.user_feedback == 'dislike'\">\n                        <strong>No</strong>\n                      </a>\n                  <!-- <img\n                    :src=\"thumbs_down_icon\"\n                    v-if=\"row.user_feedback == 'dislike'\"\n                  />\n                  <img\n                    :src=\"thumbs_up_icon\"\n                    v-else-if=\"row.user_feedback == 'like'\"\n                  /> -->\n                </td>\n              </template>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n      <div class=\"pagin-table\" style=\"margin-top: 0%\">\n        <nav aria-label=\"Page navigation example\">\n          <ul class=\"pagination justify-content-center\">\n            <li class=\"page-item\">\n              <a class=\"page-link\" href=\"#\" @click=\"page_require(page_no - 1)\">\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  width=\"8.667\"\n                  height=\"15.204\"\n                  viewBox=\"0 0 8.667 15.204\"\n                >\n                  <g\n                    id=\"arrow-point-to-left\"\n                    transform=\"translate(105.806 15.204) rotate(180)\"\n                  >\n                    <path\n                      id=\"Path_1136\"\n                      data-name=\"Path 1136\"\n                      d=\"M105.493,8.354l-6.537,6.537a1.065,1.065,0,1,1-1.506-1.506L103.235,7.6,97.45,1.817A1.065,1.065,0,0,1,98.956.312l6.537,6.537a1.065,1.065,0,0,1,0,1.505Z\"\n                      transform=\"translate(0 0)\"\n                      fill=\"#9499ae\"\n                    />\n                  </g>\n                </svg>\n              </a>\n            </li>\n            <li\n              :class=\"'page-item ' + pagination_class(pageno)\"\n              v-for=\"pageno in page_array\"\n              :key=\"pageno\"\n            >\n              <a\n                v-if=\"pageno == '...s' || pageno == '...l'\"\n                class=\"page-link\"\n                href=\"#\"\n                @click=\"page_require(pageno)\"\n                >...</a\n              >\n              <a\n                v-if=\"pageno != '...s' && pageno != '...l'\"\n                class=\"page-link\"\n                href=\"#\"\n                @click=\"page_require(pageno)\"\n                >{{ pageno }}</a\n              >\n              <!-- <a class=\"page-link\" href=\"#\" @click=\"page_require(pageno)\">{{pageno}}</a> -->\n            </li>\n            <li class=\"page-item\">\n              <a class=\"page-link\" href=\"#\" @click=\"page_require(page_no + 1)\">\n                <svg\n                  xmlns=\"http://www.w3.org/2000/svg\"\n                  width=\"8.667\"\n                  height=\"15.204\"\n                  viewBox=\"0 0 8.667 15.204\"\n                >\n                  <g id=\"arrow-point-to-right\" transform=\"translate(-97.139 0)\">\n                    <path\n                      id=\"Path_1136\"\n                      data-name=\"Path 1136\"\n                      d=\"M105.493,8.354l-6.537,6.537a1.065,1.065,0,1,1-1.506-1.506L103.235,7.6,97.45,1.817A1.065,1.065,0,0,1,98.956.312l6.537,6.537a1.065,1.065,0,0,1,0,1.505Z\"\n                      transform=\"translate(0 0)\"\n                      fill=\"#9499ae\"\n                    />\n                  </g>\n                </svg>\n              </a>\n            </li>\n          </ul>\n        </nav>\n      </div>\n    </div>\n    <div\n        class=\"modal fade dash-modal\"\n        id=\"exampleModalCenter\"\n        tabindex=\"-1\"\n        role=\"dialog\"\n        aria-labelledby=\"exampleModalCenterTitle\"\n        aria-hidden=\"true\"\n      >\n        <div class=\"modal-dialog modal-dialog-centered\" role=\"document\">\n          <div class=\"modal-content\">\n            <div class=\"modal-body\">\n              <div class=\"modal-head d-flex align-items-center\">\n                <div class=\"head-icn\">\n                  <img src=\"/img/msg-blue.png\" alt />\n                </div>\n                <h3>Edit Question</h3>\n              </div>\n              <button\n                type=\"button\"\n                class=\"close\"\n                data-dismiss=\"modal\"\n                aria-label=\"Close\"\n              >\n                <img src=\"/img/close-icn.png\" alt />\n              </button>\n              <form @submit=\"submit_question\">\n                <div class=\"form-group\">\n                  <label>Your Question</label>\n                  <input\n                    type=\"text\"\n                    class=\"form-control\"\n                    placeholder=\"Enter your question\"\n                    v-model=\"old_question\"\n                    id=\"add_question_question\"\n                  />\n                </div>\n                <!-- <div class=\"form-group\">\n                  <label>Select Intent</label>\n                  <multiselect\n                    v-model=\"old_intent\"\n                    id=\"qus_n_int_intent\"\n                    :options=\"intent_list\"\n                    :searchable=\"true\"\n                    :close-on-select=\"true\"\n                    :show-labels=\"false\"\n                  >\n                    <span>{{ old_intent }}</span>\n                  </multiselect>\n                </div> -->\n                <div class=\"btn-wrap text-right\">\n                  <button\n                    type=\"button\"\n                    class=\"btn btn-link\"\n                    data-dismiss=\"modal\"\n                  >\n                    Cancel\n                  </button>\n                  <button\n                    type=\"submit\"\n                    class=\"darkblue-btn\"\n                    id=\"add_quesn_save\"\n                  >\n                    Save\n                  </button>\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\nimport swal from \"sweetalert2\";\nimport Swal from \"sweetalert2\";\nimport api_calls from \"@/portal/api_calls\";\nimport { setTimeout } from \"timers\";\nimport Multiselect from \"vue-multiselect\";\n\nexport default {\n    name: 'VerifyResponsesUserFeedback',\n    components: {\n        Multiselect,\n    },\n    watch: {\n    selected_user_list(newVal, oldVal) {\n      if (newVal.length === 0) {\n        setTimeout(() => {\n          this.selected_user_list = [\"No\"];\n        }, 200);\n      } else {\n        this.page_no = 1;\n        $(\"#selectall\").prop(\"checked\", false);\n        this.load_verify_responses_user_feedback();\n      }\n    },\n  },\n    data() {\n        return {\n        unanswered_list: [],\n        user_role: this.$session.get(\"UserInformation\").role,\n        companyname: this.$session.get(\"UserInformation\").company_name,\n        companyid: this.$session.get(\"UserInformation\").company_id,\n        intent_list: [],\n        checked_list: [],\n        user_list: [\"Yes\", \"No\"],\n        selected_user_list: [\"No\"],\n        intentlist: \"\",\n        per_page: 10,\n        page_no: 1,\n        total_pages: 0,\n        show_loader: false,\n        number_of_rows: null,\n        search_name: \"\",\n        page_array: [],\n        old_question: \"\",\n        old_intent: \"\",\n        new_intent_list: [],\n        old_data: { question: null, intent: null },\n        thumbs_down_icon: require(\"@/portal/assets/img/Group 61.svg\"),\n        thumbs_up_icon: require(\"@/portal/assets/img/Group 71.svg\"),\n        // view_component_name: \"unanswered_questions\",\n        };\n    },\n    mounted() {\n        var vm = this;\n        $(\"#selectall\").click(function () {\n        if ($(this).is(\":checked\")) {\n            $(\".checking\").prop(\"checked\", true);\n        } else {\n            vm.checked_list = [];\n            $(\".checking\").prop(\"checked\", false);\n        }\n        });\n        this.$root.$on(\"add_questions_user_responses\", (data) => {\n            this.add_questions();\n        });\n        this.$root.$on(\"search_user_responses\", (data) => {\n            this.search_name = data;\n            this.search_question();\n        });\n        this.$root.$on(\"delete_multiple_user_responses\", (data) => {\n            this.delete_multiple();\n        });\n        this.$root.$on(\"load_verify_responses_user_feedback\", (data) => {\n            this.load_verify_responses_user_feedback();\n        });\n    },\n     beforeDestroy() {\n        this.$root.$off(\"add_questions_user_responses\");\n        this.$root.$off(\"search_user_responses\");\n        this.$root.$off(\"delete_multiple_user_responses\");\n        this.$root.$off(\"load_verify_responses_user_feedback\");\n    },\n    created() {\n      this.load_verify_responses_user_feedback();\n    },\n    methods: {\n        load_verify_responses_user_feedback(){\n        this.checked_list = [];\n        $(\"input:checkbox\").prop(\"checked\", false);\n        this.show_loader = true;\n        this.unanswered_list = [];\n        this.intent_list = [];\n        this.new_intent_list = [];\n        this.search_name = \"\";\n        if (this.user_role == \"SuperAdmin\") {\n        if (this.$session.has(\"CompanyId\")) {\n            this.companyid = this.$session.get(\"CompanyId\");\n            this.companyname = this.$session.get(\"CompanyName\");\n        } else {\n            this.companyid = this.$session.get(\"UserInformation\").company_id;\n            this.companyname = this.$session.get(\"UserInformation\").company_name;\n        }\n        } else {\n        this.companyid = this.$session.get(\"UserInformation\").company_id;\n        this.companyname = this.$session.get(\"UserInformation\").company_name;\n        }\n        if (this.companyname !== undefined) {\n        axios\n            .post(\n            api_calls.get_unanswered_url(),\n            {\n                companyname: this.companyname,\n                companyid: this.companyid,\n                email: this.$session.get(\"UserInformation\").email,\n                isDelete: \"False\",\n                license_key: this.$session.get(\"UserInformation\").license_key,\n                token: this.$session.get(\"UserInformation\").tokens,\n                page_no: this.page_no,\n                per_page: this.per_page,\n                is_get_user_response: true,\n                status: this.selected_user_list\n\n            },\n            {\n                headers: {\n                Authorization: `Bearer ${this.$session.get(\"at\")}`,\n                },\n            }\n            )\n            .then((response) => {\n            this.number_of_rows = response.data[0].length;\n            this.total_pages = response.data[4].pagecount;\n            var data = response.data;\n            this.unanswered_list = [];\n            for (var i in data[0]) {\n                let temp_int = \"\";\n                // console.log(data[2][i]);\n                if (Boolean(data[2][i])) {\n                // temp_int = data[2][i].replace(this.companyid + \"_\", \"\");\n                temp_int = data[2][i];\n                }\n                // console.log(temp_int);\n                this.unanswered_list.push({\n                question: data[0][i],\n                intent: temp_int,\n                new_intent: \"\",\n                source: data[1][i],\n                user_response: data[2][i],\n                user_feedback: data[3][i],\n                edit: false,\n                });\n            }\n            this.setpagination(this.page_no);\n            this.show_loader = false;\n            })\n            .catch((e) => {\n            if (\n                e.response.status === 410 ||\n                e.response.status === 440 ||\n                e.response.status === 409\n            ) {\n                this.$root.$emit(\"Session_Expired\", e.response.data);\n            } else {\n                toastr.error(e.message);\n            }\n            this.show_loader = false;\n            });\n        }\n        axios\n        .post(\n            api_calls.get_unanswered_url(),\n            {\n            companyid: this.companyid,\n            companyname: this.companyname,\n            isDropdown: \"True\",\n            email: this.$session.get(\"UserInformation\").email,\n            license_key: this.$session.get(\"UserInformation\").license_key,\n            token: this.$session.get(\"UserInformation\").tokens,\n            },\n            {\n            headers: {\n                Authorization: `Bearer ${this.$session.get(\"at\")}`,\n            },\n            }\n        )\n        .then((response) => {\n            // for (var i in response.data[0]) {\n            // this.intent_list.push(\n            //     response.data[0][i].replace(this.companyid + \"_\", \"\")\n            // );\n            // this.new_intent_list.push(\n            //     response.data[0][i].replace(this.companyid + \"_\", \"\")\n            // );\n            // }\n            for (var i in response.data[0]) {\n            this.intent_list.push(\n                response.data[0][i]\n            );\n            this.new_intent_list.push(\n                response.data[0][i]\n            );\n            }\n        })\n        .catch((e) => {\n            if (\n            e.response.status === 410 ||\n            e.response.status === 440 ||\n            e.response.status === 409\n            ) {\n            this.$root.$emit(\"Session_Expired\", e.response.data);\n            }\n        });\n        },\n        setpagination(page_no) {\n        this.page_array = [];\n        if (this.total_pages <= 7) {\n            for (let i = 0; i < this.total_pages; i++) {\n            this.page_array.push(i + 1);\n            }\n        } else if (page_no == 1) {\n            for (let i = 0; i < 4; i++) {\n            this.page_array.push(i + 1);\n            }\n            this.page_array.push(\"...l\");\n            this.page_array.push(this.total_pages);\n        } else if (page_no == this.total_pages) {\n            this.page_array.push(1);\n            this.page_array.push(\"...s\");\n            for (let i = this.total_pages - 4; i < this.total_pages; i++) {\n            this.page_array.push(i + 1);\n            }\n        } else if (page_no <= 4) {\n            for (let i = 0; i < page_no + 3; i++) {\n            this.page_array.push(i + 1);\n            }\n            this.page_array.push(\"...l\");\n            this.page_array.push(this.total_pages);\n        } else if (page_no >= this.total_pages - 4) {\n            this.page_array.push(1);\n            this.page_array.push(\"...s\");\n            for (let i = page_no - 4; i < this.total_pages; i++) {\n            this.page_array.push(i + 1);\n            }\n        } else {\n            this.page_array.push(1);\n            this.page_array.push(\"...s\");\n            for (let i = page_no - 3; i <= page_no + 3; i++) {\n            this.page_array.push(i);\n            }\n            this.page_array.push(\"...l\");\n            this.page_array.push(this.total_pages);\n        }\n        },\n        page_require(page) {\n        this.checked_list = [];\n        $(\"input:checkbox\").prop(\"checked\", false);\n        if (page == 0 || page == this.total_pages + 1) {\n        } else {\n            $(\".checking\").prop(\"checked\", false);\n            $(\"#selectall\").prop(\"checked\", false);\n            if (page == \"...s\") {\n            this.page_no = Math.ceil((1 + this.page_no) / 2);\n            } else if (page == \"...l\") {\n            this.page_no = Math.ceil((this.total_pages + this.page_no) / 2);\n            } else {\n            this.page_no = page;\n            }\n            if (this.search_name == \"\") {\n            this.show_loader = true;\n            axios\n                .post(\n                api_calls.get_unanswered_url(),\n                {\n                    companyname: this.companyname,\n                    companyid: this.companyid,\n                    email: this.$session.get(\"UserInformation\").email,\n                    license_key: this.$session.get(\"UserInformation\").license_key,\n                    token: this.$session.get(\"UserInformation\").tokens,\n                    subscription: this.$session.get(\"UserInformation\").subscription,\n                    isDelete: \"False\",\n                    page_no: this.page_no,\n                    per_page: this.per_page,\n                    is_get_user_response: true,\n                    status: this.selected_user_list\n                },\n                {\n                    headers: {\n                    Authorization: `Bearer ${this.$session.get(\"at\")}`,\n                    },\n                }\n                )\n                .then((response) => {\n                this.show_loader = false;\n                this.unanswered_list = [];\n                for (var i in response.data[0]) {\n                  let temp_int = \"\";\n                  if (Boolean(response.data[2][i])) {\n                  // temp_int = response.data[2][i].replace(this.companyid + \"_\", \"\");\n                  temp_int = response.data[2][i];\n                  }\n                  this.unanswered_list.push({\n                  question: response.data[0][i],\n                  intent: temp_int,\n                  source: response.data[1][i],\n                  user_response: response.data[2][i],\n                  user_feedback: response.data[3][i],\n                  edit: false,\n                  });\n                }\n                this.setpagination(this.page_no);\n                })\n                .catch((e) => {\n                if (\n                    e.response.status === 410 ||\n                    e.response.status === 440 ||\n                    e.response.status === 409\n                ) {\n                    this.$root.$emit(\"Session_Expired\", e.response.data);\n                }\n                });\n            } else {\n            this.show_loader = true;\n            axios\n                .post(\n                api_calls.get_unanswered_url(),\n                {\n                    companyid: this.$session.get(\"UserInformation\").company_id,\n                    companyname: this.$session.get(\"UserInformation\").company_name,\n                    license_key: this.$session.get(\"UserInformation\").license_key,\n                    email: this.$session.get(\"UserInformation\").email,\n                    token: this.$session.get(\"UserInformation\").tokens,\n                    issearch: true,\n                    // searchby: this.search_by,\n                    key: this.search_name,\n                    per_page: this.per_page,\n                    page_no: this.page_no,\n                    is_get_user_response: true,\n                    status: this.selected_user_list\n                },\n                {\n                    headers: {\n                    Authorization: `Bearer ${this.$session.get(\"at\")}`,\n                    },\n                }\n                )\n                .then((response) => {\n                this.show_loader = false;\n                if (response.data[4].pagecount != undefined) {\n                    this.page_no = page;\n                    this.unanswered_list = [];\n                    this.number_of_rows = response.data[0].length;\n                    this.total_pages = response.data[4].pagecount;\n                    var data = response.data;\n                    for (var i in response.data[0]) {\n                    let temp_int = \"\";\n                    if (Boolean(data[2][i])) {\n                      // temp_int = data[2][i].replace(this.companyid + \"_\", \"\");\n                      temp_int = data[2][i];\n                    }\n                    this.unanswered_list.push({\n                        question: response.data[0][i],\n                        intent: temp_int,\n                        source: response.data[1][i],\n                        user_response: response.data[2][i],\n                        user_feedback: response.data[3][i],\n                        edit: false,\n                    });\n                    }\n                    this.setpagination(this.page_no);\n                } else {\n                    toastr.error(\"Internal Server Error\");\n                    // setTimeout(() => {\n                    // this.$router.go();\n                    // }, 2500);\n                    this.load_verify_responses_user_feedback();\n                }\n                })\n                .catch((e) => {\n                if (\n                    e.response.status === 410 ||\n                    e.response.status === 440 ||\n                    e.response.status === 409\n                ) {\n                    this.$root.$emit(\"Session_Expired\", e.response.data);\n                }\n                });\n            }\n        }\n        },\n        question_selected(value) {\n            if (event.target.checked) {\n                if (value == \"all\") {\n                  this.checked_list = [];\n                  for (var i in this.unanswered_list) {\n                      this.checked_list.push(this.unanswered_list[i]);\n                }\n                } else {\n                  this.checked_list.push(this.unanswered_list[value]);\n                }\n            } else if (!event.target.checked) {\n                if (value != \"all\") {\n                  var selectall = document.querySelector(\"#selectall\");\n                  if (selectall.checked) {\n                      selectall.checked = false;\n                  }\n                  var temp = this.checked_list.filter((question) => {\n                      return question !== this.unanswered_list[value];\n                  });\n                  this.checked_list = temp;\n                }\n            }\n        },\n        delete_single(index) {\n            let questionlist = [];\n            Swal.fire({\n                title: \"Are you sure?\",\n                text: \" You want to Delete this Question?\",\n                type: \"question\",\n                showCancelButton: true,\n                confirmButtonColor: \"#3085d6\",\n                cancelButtonColor: \"#d33\",\n                confirmButtonText: \"Yes, Confirm!\",\n            }).then((result) => {\n                // console.log(result.value);\n                if (result.value) {\n                // console.log(\"deleted\");\n                questionlist.push(this.unanswered_list[index].question);\n                this.delete_questions_api(questionlist);\n                }\n            });\n        },\n        delete_multiple() {\n            if (this.checked_list.length == 0) {\n                Swal.fire({\n                title:\"No question selected!\",\n                text:\"\",\n                type:\"error\",\n                timer:2000,\n                });\n            } else if (this.checked_list.length > 0) {\n                let questionlist = [];\n                Swal.fire({\n                title: \"Are you sure?\",\n                text: \" You want to Delete this Questions?\",\n                type: \"question\",\n                showCancelButton: true,\n                confirmButtonColor: \"#3085d6\",\n                cancelButtonColor: \"#d33\",\n                confirmButtonText: \"Yes, Confirm!\",\n                }).then((result) => {\n                if (result.value) {\n                    for (var i in this.checked_list) {\n                    questionlist.push(this.checked_list[i].question);\n                    }\n                    this.delete_questions_api(questionlist);\n                }\n                });\n            }\n        },\n        delete_questions_api(questionlist) {\n        this.show_loader = true;\n        axios\n            .post(\n            api_calls.get_unanswered_url(),\n            {\n                companyid: this.companyid,\n                companyname: this.companyname,\n                questionlist: questionlist,\n                isDelete: \"True\",\n                email: this.$session.get(\"UserInformation\").email,\n                license_key: this.$session.get(\"UserInformation\").license_key,\n                token: this.$session.get(\"UserInformation\").tokens,\n            },\n            {\n                headers: {\n                Authorization: `Bearer ${this.$session.get(\"at\")}`,\n                },\n            }\n            )\n            .then((response) => {\n            this.show_loader = false;\n            if (response.data == \"Deleted Successfully\") {\n                // console.log(\"deleted successfully\");\n                this.checked_list = [];\n                this.number_of_rows = response.data[2].number_of_rows;\n                this.total_pages = Math.ceil(this.number_of_rows / this.per_page);\n                toastr.success(\"Deleted Successfully\");\n                // setTimeout(() => {\n                // this.$router.go();\n                // }, 1500);\n                if(questionlist.length === this.unanswered_list.length && \n                    this.page_no >1){\n                    this.page_no = this.page_no - 1;\n                }\n                while(this.page_no > 1 && this.page_no > this.total_pages){\n                    this.page_no = this.page_no - 1;\n                }\n                this.load_verify_responses_user_feedback();\n            }\n            this.show_loader = false;\n            })\n            .catch((e) => {\n            if (\n                e.response.status === 410 ||\n                e.response.status === 440 ||\n                e.response.status === 409\n            ) {\n                this.$root.$emit(\"Session_Expired\", e.response.data);\n            } else {\n                toastr.error(e.message);\n            }\n            this.show_loader = false;\n            });\n        },\n        edit_item(index) {\n            this.unanswered_list[index].edit = !this.unanswered_list[index].edit;\n            this.old_question = this.unanswered_list[index].question;\n            // this.old_intent = this.unanswered_list[index].intent;\n            this.old_data.question = this.old_question;\n            // this.old_data.intent = this.companyid + \"_\" + this.old_intent;\n            // this.question = question.question;\n            // this.intent = question.intent;\n            // console.log(this.old_data);\n            // console.log(this.old_question);\n        },\n        submit_question() {\n            // console.log(\"submit\");\n            // console.log(\"question\", this.old_question);\n            // console.log(\"intent\", this.old_intent);\n            // console.log(\"intent\", this.isedit);\n            event.preventDefault();\n            if (this.old_question == \"\") {\n                toastr.error(\"Please enter all the fields.\");\n            } else {\n\t\t$(\"#exampleModalCenter\").modal('hide');\n                this.show_loader = true;\n                axios\n                .post(\n                    api_calls.get_unanswered_url(),\n                    {\n                    is_Edit: \"True\",\n                    question: this.old_question,\n                    // intent: this.companyid + \"_\" + this.old_intent,\n                    companyname: this.companyname,\n                    companyid: this.companyid,\n                    old_question_data: this.old_data,\n                    email: this.$session.get(\"UserInformation\").email,\n                    license_key: this.$session.get(\"UserInformation\").license_key,\n                    token: this.$session.get(\"UserInformation\").tokens,\n                    subscription: this.$session.get(\"UserInformation\").subscription,\n                    },\n                    {\n                    headers: {\n                        Authorization: `Bearer ${this.$session.get(\"at\")}`,\n                    },\n                    }\n                )\n                .then((response) => {\n                    this.show_loader = false;\n                    if (response.data == \"Internal Server Error\") {\n                    toastr.error(\"Internal Server Error\");\n                    } else if (response.data == \"Edited Successfully\") {\n                    Swal({\n                        type: \"success\",\n                        text: \"Your question has been edited successfully\",\n                        timer:2500,\n                    }).then((result) => {\n                        // if (result.value) {\n                        // // this.$router.go();\n                        // }\n                        this.load_verify_responses_user_feedback();\n\n                    });\n                    } \n                    // else if (response.data == \"Question Intent Updated\") {\n                    // Swal({\n                    //     type: \"success\",\n                    //     text: \"Your question has been updated successfully\",\n                    //     timer:2000,\n                    // }).then((result) => {\n                    //     // if (result.value) {\n                    //     // this.$router.go();\n                    //     // }\n                    //     this.load_verify_responses_user_feedback();\n                    // });\n                    // }\n                })\n                .catch((e) => {\n                    if (\n                    e.response.status === 410 ||\n                    e.response.status === 440 ||\n                    e.response.status === 409\n                    ) {\n                    this.$root.$emit(\"Session_Expired\", e.response.data);\n                    } else {\n                    toastr.error(\"Internal Server Error\");\n                    }\n                });\n            }\n        },\n        pagination_class(index) {\n            if (index == this.page_no) {\n                return \" active\";\n            } else {\n                return \"\";\n            }\n        },\n        add_questions() {\n            this.show_loader = true;\n            var questionlist = [];\n            var temp_list = [];\n            var empty = this.unanswered_list.filter((unanswered) => {\n                return unanswered.new_intent == \"\";\n            });\n            for (var i in this.unanswered_list) {\n                if (this.unanswered_list[i].new_intent != \"\") {\n                temp_list.push(\n                    this.unanswered_list[i].question,\n                    // this.companyid + \"_\" + this.unanswered_list[i].new_intent\n                    this.unanswered_list[i].new_intent\n                );\n                questionlist.push(temp_list);\n                }\n                temp_list = [];\n            }\n            if (questionlist.length > 0) {\n                this.show_loader = true;\n                axios\n                .post(\n                    api_calls.get_unanswered_url(),\n                    {\n                    companyname: this.companyname,\n                    companyid: this.companyid,\n                    isAdd: \"True\",\n                    questionintent: questionlist,\n                    email: this.$session.get(\"UserInformation\").email,\n                    license_key: this.$session.get(\"UserInformation\").license_key,\n                    token: this.$session.get(\"UserInformation\").tokens,\n                    },\n                    {\n                    headers: {\n                        Authorization: `Bearer ${this.$session.get(\"at\")}`,\n                    },\n                    }\n                )\n                .then((response) => {\n                    this.show_loader = false;\n                    if (response.data == \"Added Successfully\") {\n                      swal({\n                          text: \"Added Successfully\",\n                          type: \"success\",\n                          timer: 2000,\n                      });\n                      if(questionlist.length === this.unanswered_list.length && \n                            this.page_no >1){\n                            this.page_no = this.page_no - 1;\n                        }\n                      this.load_verify_responses_user_feedback();\n                    }\n                })\n                .catch((e) => {\n                    this.show_loader = false;\n                    if (\n                    e.response.status === 410 ||\n                    e.response.status === 440 ||\n                    e.response.status === 409\n                    ) {\n                    this.$root.$emit(\"Session_Expired\", e.response.data);\n                    }\n                });\n            } else {\n                toastr.error(\"No question to add. Please add some questions.\");\n            }\n            this.show_loader = false;\n        },\n        search_question() {\n            // if(this.search_by!=''){\n            // console.log(\"hey\");\n            if (this.search_name != \"\") {\n                this.checked_list = [];\n                $(\"input:checkbox\").prop(\"checked\", false);\n                this.show_loader = true;\n                axios\n                .post(\n                    api_calls.get_unanswered_url(),\n                    {\n                    companyid: this.$session.get(\"UserInformation\").company_id,\n                    companyname: this.$session.get(\"UserInformation\").company_name,\n                    license_key: this.$session.get(\"UserInformation\").license_key,\n                    email: this.$session.get(\"UserInformation\").email,\n                    token: this.$session.get(\"UserInformation\").tokens,\n                    issearch: true,\n                    // searchby: this.search_by,\n                    key: this.search_name,\n                    per_page: this.per_page,\n                    page_no: 1,\n                    is_get_user_response: true,\n                    status: this.selected_user_list\n                    },\n                    {\n                    headers: {\n                        Authorization: `Bearer ${this.$session.get(\"at\")}`,\n                    },\n                    }\n                )\n                .then((response) => {\n                    this.show_loader = false;\n                    if (response.data.MSG == \"No Questions Found\") {\n                    toastr.error(\"No Question Found\");\n                    // setTimeout(() => {\n                    //     this.$router.go();\n                    // }, 2500);\n                    this.load_verify_responses_user_feedback();\n                    } else if (response.data[4].pagecount != undefined) {\n                    this.page_no = 1;\n                    this.unanswered_list = [];\n                    this.number_of_rows = response.data[0].length;\n                    this.total_pages = response.data[4].pagecount;\n                    var data = response.data;\n                    for (var i in response.data[0]) {\n                      let temp_int = \"\";\n                      if (Boolean(data[2][i])) {\n                        // temp_int = data[2][i].replace(this.companyid + \"_\", \"\");\n                        temp_int = data[2][i];\n                      }\n                      this.unanswered_list.push({\n                      question: data[0][i],\n                      intent: temp_int,\n                      source: data[1][i],\n                      user_response: data[2][i],\n                      user_feedback: data[3][i],\n                      edit: false,\n                      });\n                    }\n                    // console.log(this.unanswered_list);\n                    this.setpagination(this.page_no);\n                    }\n                    // else if (response.data.MSG == \"No Questions Found\") {\n                    //   toastr.error(\"No Question Found\");\n                    //   setTimeout(() => {\n                    //     this.$router.go();\n                    //   }, 2500);\n                    // }\n                    else {\n                    toastr.error(\"Internal Server Error\");\n                    // setTimeout(() => {\n                    //     this.$router.go();\n                    //   }, 2500);\n                    this.load_verify_responses_user_feedback();\n                    }\n                })\n                .catch((e) => {\n                  console.log(e);\n                    if (\n                    e.response.status === 410 ||\n                    e.response.status === 440 ||\n                    e.response.status === 409\n                    ) {\n                    this.$root.$emit(\"Session_Expired\", e.response.data);\n                    }\n                });\n            } else {\n                toastr.error(\"Enter proper data for searching\");\n            }\n            // }else{\n            //   toastr.error(\"Select header for searching\");\n            // }\n        },\n    }\n}\n</script>\n<style scoped>\n/* .table-responsive {\n  min-height: 400px;\n} */\n.form-group{\n    margin: 0 0 -5px;\n    top:-2px;\n  }\n  .table-col_1{\n    padding-top: 15px;\n  }\n\ni[aria-expanded=\"true\"]{\n  color: #192765;\n}\ni:hover{\n  color: #192765;\n}\n@media (max-width: 1400px){\n  .form-group{\n    margin: 0 0 -5px;\n    top:-2px;\n  }\n}\n@media (max-width: 1180px){\n  .multiselect__tags{\n    /* max-height: 42px !important;\n    height: 42px; */\n    padding: 0 40px 0 8px;\n  }\n/* .multiselect__placeholder{\n  padding-top: 0px !important;\n  margin-bottom: 0px !important;\n} */\n\n}\n\n</style>"]}]}